name: coverage

on:
  workflow_call:

env:
  DENO_DIR: /tmp/deno

jobs:
  coverage:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      # TODO: Caching dependencies
      - uses: taiki-e/install-action@nextest
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: actions/cache@v4
        id: vendor-cache
        with:
          path: |
            vendor/bin
            vendor/include
            vendor/lib
            vendor/share
          key: ${{ runner.os }}-${{ hashFiles('vendor/Makefile', 'vendor/src/llvm/llvm-project/llvm/CMakeLists.txt') }}
      - name: Build vendor
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: make vendor
      - name: Generate code coverage
        run: |
          make coverage LLVM_COV_ARGS='--codecov --output-path=codecov.json' TEST262_ARGS=''
      - uses: codecov/codecov-action@v4
        with:
          token: '${{ secrets.CODECOV_TOKEN }}'
          files: codecov.json
          fail_ci_if_error: true
