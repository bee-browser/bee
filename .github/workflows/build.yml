name: build

on:
  workflow_call:
    inputs:
      runner:
        default: ubuntu-latest
        required: false
        type: string
      rust:
        default: stable
        required: false
        type: string
  workflow_dispatch:
    inputs:
      runner:
        default: ubuntu-latest
        required: false
        type: choice
        options:
          - ubuntu-latest
          - macos-latest
      rust:
        default: stable
        required: false
        type: choice
        options:
          - stable
          - nightly

env:
  DENO_DIR: /tmp/deno

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install ninja-build
        run: |
          sudo apt-get install -y ninja-build
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.rust }}
          components: 'clippy, rustfmt'
      - uses: Swatinem/rust-cache@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: taiki-e/install-action@nextest
      - uses: actions/cache@v4
        id: vendor-cache
        with:
          path: |
            vendor/bin
            vendor/include
            vendor/lib
            vendor/share
          key: ${{ runner.os }}-${{ hashFiles('vendor/Makefile', 'vendor/src/llvm/llvm-project/llvm/CMakeLists.txt') }}
      - name: Build vendor
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: make vendor
      - name: Check
        run: make check
      - name: Build
        run: make build
      - name: Build (release)
        run: make release-build
      - name: Run tests
        run: make test
      - name: Run tc39/test262
        run: make test262 ARGS=
