# Multiple goal symbols defined in the ECMA-262 specification are defined in
# this YAML file.  Each goal symbol is defined with a list of tokens and
# generates a separate DFA.

# Tokens in `Keyword` cannot be used as identifiers.
Keyword: &Keyword
  - BREAK
  - CASE
  - CATCH
  - CLASS
  - CONST
  - CONTINUE
  - DEBUGGER
  - DEFAULT
  - DELETE
  - DO
  - ELSE
  - ENUM
  - EXPORT
  - EXTENDS
  - 'FALSE'
  - FINALLY
  - FOR
  - FUNCTION
  - IF
  - IMPORT
  - IN
  - INSTANCEOF
  - NEW
  - 'NULL'
  - RETURN
  - SUPER
  - SWITCH
  - THIS
  - THROW
  - 'TRUE'
  - TRY
  - TYPEOF
  - VAR
  - VOID
  - WHILE
  - WITH

# Tokens in `ContextualKeyword` can be used as identifiers in particular syntactic contexts.
# See `IdentifierReference`, `BindingIdentifier` and `LabelIdentifier` in the syntactic grammar.
ContextualKeyword: &ContextualKeyword
  - AWAIT
  - YIELD

# Tokens in `KeywordInStrictMode` cannot be used as identifiers in the strict mode.
KeywordInStrictMode: &KeywordInStrictMode
  - LET
  - STATIC
  - IMPLEMENTS
  - INTERFACE
  - PACKAGE
  - PRIVATE
  - PROTECTED
  - PUBLIC

# Tokens in `UnreservedKeyword` can be used as identifiers, but appear as keywords in particular
# syntactic contexts.
UnreservedKeyword: &UnreservedKeyword
  - AS
  - ASYNC
  - FROM
  - GET
  - META
  - OF
  - SET
  - TARGET

Punctuator: &Punctuator
  - OPTIONAL_CHAINING
  - LBRACE
  - LPAREN
  - RPAREN
  - LBRACK
  - RBRACK
  - DOT
  - ELLIPSIS
  - SEMI_COLON
  - COMMA
  - LT
  - GT
  - LTE
  - GTE
  - EQ
  - NE
  - EQ_STRICT
  - NE_STRICT
  - ADD
  - SUB
  - MUL
  - MOD
  - EXP
  - INC
  - DEC
  - SHL
  - SAR
  - SHR
  - BIT_AND
  - BIT_OR
  - BIT_XOR
  - NOT
  - BIT_NOT
  - AND
  - OR
  - NULLISH
  - CONDITIONAL
  - COLON
  - ASSIGN
  - ADD_ASSIGN
  - SUB_ASSIGN
  - MUL_ASSIGN
  - MOD_ASSIGN
  - EXP_ASSIGN
  - SHL_ASSIGN
  - SAR_ASSIGN
  - SHR_ASSIGN
  - BIT_AND_ASSIGN
  - BIT_OR_ASSIGN
  - BIT_XOR_ASSIGN
  - AND_ASSIGN
  - OR_ASSIGN
  - NULLISH_ASSIGN
  - ARROW

DivPunctuator: &DivPunctuator
  - DIV
  - DIV_ASSIGN

RightBracePunctuator: &RightBracePunctuator
  - RBRACE

# As described in https://github.com/yaml/yaml/issues/35,
# YAML doesn't support merging a list referred by an alias at this point.
#
# As a workaround, we expand a list referred by an alias inside a list element.
# This makes a nested list but we can flatten it by using a function provided by
# a tool or script language.  In our case, `jq flatten` is used before using a
# token list.

CommonToken: &CommonToken
  # reserved keywords
  - *Keyword
  - *ContextualKeyword
  # additional keywords
  - *KeywordInStrictMode
  - *UnreservedKeyword
  - IdentifierName
  - PrivateIdentifier
  - *Punctuator
  - NumericLiteral
  - StringLiteral
  - NoSubstitutionTemplate
  - TemplateHead

goals:
  # For simplifying Makefile, we convert the goal symbols to snake case.
  - name: input_element_div
    tokens:
      # For efficiency, we replace WhiteSpace with WhiteSpaceSequence.
      # TODO: Should we ignore WhiteSpace in the lexer for further efficiency?
      - WhiteSpaceSequence
      # For efficiency, we replace LineTerminator with LineTerminatorSequence.
      # The parser has to recognize LineTerminatorSequence in order to handle
      # `[no LineTerminator here]` properly.
      # TODO: We can simple use LineTerminator if we don't provide a source location.
      - LineTerminatorSequence
      - Comment
      - *CommonToken
      - *DivPunctuator
      - *RightBracePunctuator
  - name: input_element_reg_exp
    tokens:
      - WhiteSpaceSequence
      - LineTerminatorSequence
      - Comment
      - *CommonToken
      - *RightBracePunctuator
      - RegularExpressionLiteral
  - name: input_element_reg_exp_or_template_tail
    tokens:
      - WhiteSpaceSequence
      - LineTerminatorSequence
      - Comment
      - *CommonToken
      - RegularExpressionLiteral
      - TemplateMiddle
      - TemplateTail
  - name: input_element_template_tail
    tokens:
      - WhiteSpaceSequence
      - LineTerminatorSequence
      - Comment
      - *CommonToken
      - *DivPunctuator
      - TemplateMiddle
      - TemplateTail
