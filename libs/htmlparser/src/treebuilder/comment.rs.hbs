// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated with:
// template: {{@template}}

use super::*;

impl<T> TreeBuilder<T>
where
    T: DomTreeBuilder,
{
    pub fn handle_comment(&mut self, comment: Comment<'_>) -> Control {
        self.ignore_lf = false;
        loop {
            logger::debug!(mode = ?self.mode);
            match self.mode {
                {{#each tokens.comment}}
                mode!({{join modes ', '}}) => {
                    {{#if run}}
                    let ctrl = {
                        {{{run}}}
                    };
                    match ctrl {
                        Control::Reprocess => continue,
                        _ => return ctrl,
                    }
                    {{else}}
                    unreachable!();
                    {{/if}}
                }
                {{/each}}
            }
        }
    }

    fn append_comment_to_document_element(&mut self, comment: &Comment<'_>) {
        self.append_text_if_exists();
        let node = self.inner.create_comment(comment.data);
        let parent = self.context_stack[1].open_element.node;
        self.inner.append_child(parent, node);
    }

    fn append_comment_to_document(&mut self, comment: &Comment<'_>) {
        self.append_text_if_exists();
        let node = self.inner.create_comment(comment.data);
        let document = self.inner.get_document();
        self.inner.append_child(document, node);
    }
}
