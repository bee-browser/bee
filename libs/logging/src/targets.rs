// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated by:
// codegen.js --input-stdin --no-escape src/targets.rs.hbs

use super::Target;

/// The target ID for `bee::estree`.
pub const ESTREE: Target = Target(0);

/// The target ID for `bee::jsparser::lexer`.
pub const JSPARSER_LEXER: Target = Target(1);

/// The target ID for `bee::jsparser::parser`.
pub const JSPARSER_PARSER: Target = Target(2);

// Use `const fn len()` instead of `const LEN` in order to avoid conflicts between target symbols.
// The `len` package might be created in the future.
#[inline(always)]
pub const fn len() -> usize {
    3
}

#[inline(always)]
pub const fn name(id: usize) -> &'static str {
    const NAMES: [&'static str; 3] = [
        "bee::estree",
        "bee::jsparser::lexer",
        "bee::jsparser::parser",
    ];
    NAMES[id]
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_estree() {
        const NAME: &'static str = ESTREE.name();
        assert_eq!(NAME, "bee::estree");
    }

    #[test]
    fn test_jsparser_lexer() {
        const NAME: &'static str = JSPARSER_LEXER.name();
        assert_eq!(NAME, "bee::jsparser::lexer");
    }

    #[test]
    fn test_jsparser_parser() {
        const NAME: &'static str = JSPARSER_PARSER.name();
        assert_eq!(NAME, "bee::jsparser::parser");
    }
}
