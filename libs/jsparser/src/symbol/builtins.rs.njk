// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated with:
// template: {{ template }}

use super::Symbol;
use super::SymbolRegistry;

impl Symbol {
    {%- for symbol in data %}
    pub const {{ symbol | upper }}: Self = Self({{ loop.index0 + 1 }});
    {%- endfor %}
}

impl SymbolRegistry {
    pub(super) fn register_builtin_symbols(&mut self) {
        {%- for symbol in data %}
        self.register_builtin_symbol(Symbol::{{ symbol | upper }}, "{{ symbol }}");
        {%- endfor %}
    }

    fn register_builtin_symbol(&mut self, symbol: Symbol, value: &str) {
        let utf16: Vec<u16> = value.encode_utf16().collect();
        let (index, inserted) = self.symbols.insert_full(utf16);
        debug_assert_eq!(Symbol(index as u32), symbol, "{value}");
        debug_assert!(inserted, "{value}");
    }
}
