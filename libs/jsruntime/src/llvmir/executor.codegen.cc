// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated with:
// template: libs/jsruntime/src/llvmir/executor.codegen.cc.njk

#include "executor.hh"

#include <cmath>
#include <limits>

#include "runtime.hh"

static llvm::ExitOnError ExitOnErr;

extern "C" bool to_boolean(const Value* value) {
  switch (value->kind) {
    case ValueKind::Undefined:
      return false;
    case ValueKind::Boolean:
      return value->holder.boolean;
    case ValueKind::Number:
      if (value->holder.number == 0.0) {
        return false;
      }
      if (std::isnan(value->holder.number)) {
        return false;
      }
      return true;
    default:
      return false;
  }
}

extern "C" double to_numeric(const Value* value) {
  switch (value->kind) {
    case ValueKind::Undefined:
      return std::numeric_limits<double>::quiet_NaN();
    case ValueKind::Boolean:
      return value->holder.boolean ? 1.0 : 0.0;
    case ValueKind::Number:
      return value->holder.number;
    default:
      return std::numeric_limits<double>::quiet_NaN();
  }
}

void Executor::RegisterRuntime(const Runtime* runtime) {
  llvm::orc::SymbolMap symbols;
  symbols[exec_session().intern("to_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(to_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("to_numeric")] = {
      llvm::orc::ExecutorAddr::fromPtr(to_numeric),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_immutable")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_immutable),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_immutable_undefined")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_immutable_undefined),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_immutable_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_immutable_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_immutable_number")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_immutable_number),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_mutable")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_mutable),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_mutable_undefined")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_mutable_undefined),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_mutable_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_mutable_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_mutable_number")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_mutable_number),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_declare_function")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->declare_function),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_get_binding")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->get_binding),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_get_binding_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->get_binding_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_get_binding_number")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->get_binding_number),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_put_binding")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->put_binding),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_put_binding_undefined")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->put_binding_undefined),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_put_binding_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->put_binding_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_put_binding_number")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->put_binding_number),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_push_argument")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->push_argument),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_push_argument_undefined")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->push_argument_undefined),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_push_argument_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->push_argument_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_push_argument_number")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->push_argument_number),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_call")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->call),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_return_value")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->return_value),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_return_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->return_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_return_number")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->return_number),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_allocate_bindings")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->allocate_bindings),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_release_bindings")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->release_bindings),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_inspect")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->inspect),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_inspect_boolean")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->inspect_boolean),
      llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("runtime_inspect_number")] = {
      llvm::orc::ExecutorAddr::fromPtr(runtime->inspect_number),
      llvm::JITSymbolFlags::Exported,
  };
  ExitOnErr(main_jd().define(llvm::orc::absoluteSymbols(std::move(symbols))));
}
