#!/usr/bin/env -S deno run -A --unstable

'use strict';

import { Handlebars } from '../deps.js';
import { parseCommand } from '../lib/cli.js';

DEFAULT_LAYOUT = undefined;
DEFAULT_LAYOUTS_DIR = 'layouts';
DEFAULT_PARTIALS_DIR = 'partials';

const DOC = `
Generate a source file from a Handlebars template file.

Usage:
  bee-tools-codegen [options] <template> [<context>]
  bee-tools-codegen -h | --help

Options:

Arguments:
  <template>
    Path to the template file to use.

  <context>
    JSON string used as an input object for a template function compiled from <template>.

    Read JSON string from STDIN if the <context> is not specified.
`.trim();

const { options, args } = await parseCommand({
  doc: DOC,
});

Deno.exit(await run(args, options));

async function run(args, options) {
  const src = await loadTemplateSource(args.template);
  const context = await loadContext(args.context);
  const template = Handlebars.compile(src);
  console.log(template(context));
}

async function loadTemplateSource(file) {
  return await Deno.readTextFile(file)
}

async function loadContext(context) {
  if (context) {
    return JSON.parse(context);
  }
  return JSON.parse(await readAllText(Deno.stdin));
}

// Local Variables:
// mode: js
// End:
