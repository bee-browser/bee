// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated by using lalr/lexical_goal.rs.hbs.

use crate::lexer::Goal;

pub const TABLE: [Goal; 3929] = [
    // State#0:
    //   [Script -> () .]*
    //   [^ -> . Script]*
    Goal::InputElementRegExp,
    // State#1:
    //   [UnaryExpression -> ADD . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#2:
    //   [IdentifierNameButNotReservedWord -> AS .]*
    Goal::InputElementTemplateTail,
    // State#3:
    //   [AsyncArrowFunction_In -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionDeclaration -> ASYNC . FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration -> ASYNC . FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#4:
    //   [BindingIdentifier -> AWAIT .]*
    //   [IdentifierReference -> AWAIT .]*
    //   [LabelIdentifier -> AWAIT .]*
    Goal::InputElementDiv,
    // State#5:
    //   [UnaryExpression -> BIT_NOT . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#6:
    //   [BreakStatement -> BREAK . SEMI_COLON]*
    //   [BreakStatement -> BREAK . LabelIdentifier SEMI_COLON]*
    Goal::InputElementDiv,
    // State#7:
    //   [ClassDeclaration -> CLASS . BindingIdentifier ClassTail]*
    Goal::InputElementDiv,
    // State#8:
    //   [LetOrConst -> CONST .]*
    Goal::InputElementDiv,
    // State#9:
    //   [ContinueStatement -> CONTINUE . SEMI_COLON]*
    //   [ContinueStatement -> CONTINUE . LabelIdentifier SEMI_COLON]*
    Goal::InputElementDiv,
    // State#10:
    //   [DebuggerStatement -> DEBUGGER . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#11:
    //   [UpdateExpression -> DEC . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#12:
    //   [UnaryExpression -> DELETE . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#13:
    //   [DoWhileStatement -> DO . Statement WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#14:
    //   [BooleanLiteral -> FALSE .]*
    Goal::InputElementTemplateTail,
    // State#15:
    //   [ForInOfStatement -> FOR . LPAREN VAR ForBinding IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR . LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR . LPAREN ForDeclaration IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR . LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR . LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR . LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#16:
    //   [IdentifierNameButNotReservedWord -> FROM .]*
    Goal::InputElementTemplateTail,
    // State#17:
    //   [FunctionDeclaration -> FUNCTION . BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    //   [GeneratorDeclaration -> FUNCTION . MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#18:
    //   [IdentifierNameButNotReservedWord -> GET .]*
    Goal::InputElementTemplateTail,
    // State#19:
    //   [IfStatement -> IF . LPAREN Expression_In RPAREN Statement ELSE Statement]*
    //   [IfStatement -> IF . LPAREN Expression_In RPAREN Statement !~[ELSE]]*
    Goal::InputElementDiv,
    // State#20:
    //   [IdentifierNameButNotReservedWord -> IMPLEMENTS .]*
    Goal::InputElementTemplateTail,
    // State#21:
    //   [ImportCall -> IMPORT . LPAREN AssignmentExpression_In RPAREN]*
    //   [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // State#22:
    //   [UpdateExpression -> INC . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#23:
    //   [IdentifierNameButNotReservedWord -> INTERFACE .]*
    Goal::InputElementTemplateTail,
    // State#24:
    //   [IdentifierNameButNotReservedWord -> IdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#25:
    //   [Block -> LBRACE . RBRACE]*
    //   [Block -> LBRACE . StatementList RBRACE]*
    Goal::InputElementRegExp,
    // State#26:
    //   [ArrayLiteral -> LBRACK . RBRACK]*
    //   [ArrayLiteral -> LBRACK . ElementList COMMA RBRACK]*
    //   [ArrayLiteral -> LBRACK . ElementList COMMA Elision RBRACK]*
    //   [ArrayLiteral -> LBRACK . ElementList RBRACK]*
    //   [ArrayLiteral -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // State#27:
    //   [LetOrConst -> LET .]*
    Goal::InputElementDiv,
    // State#28:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . ELLIPSIS BindingIdentifier RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . ELLIPSIS BindingPattern RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In COMMA ELLIPSIS BindingIdentifier RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In COMMA ELLIPSIS BindingPattern RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In RPAREN]*
    Goal::InputElementRegExp,
    // State#29:
    //   [IdentifierNameButNotReservedWord -> META .]*
    Goal::InputElementTemplateTail,
    // State#30:
    //   [MemberExpression -> NEW . MemberExpression Arguments]*
    //   [NewExpression -> NEW . NewExpression]*
    //   [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // State#31:
    //   [UnaryExpression -> NOT . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#32:
    //   [NullLiteral -> NULL .]*
    Goal::InputElementTemplateTail,
    // State#33:
    //   [TemplateLiteral -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#34:
    //   [Literal -> NumericLiteral .]*
    Goal::InputElementTemplateTail,
    // State#35:
    //   [IdentifierNameButNotReservedWord -> OF .]*
    Goal::InputElementTemplateTail,
    // State#36:
    //   [IdentifierNameButNotReservedWord -> PACKAGE .]*
    Goal::InputElementTemplateTail,
    // State#37:
    //   [IdentifierNameButNotReservedWord -> PRIVATE .]*
    Goal::InputElementTemplateTail,
    // State#38:
    //   [IdentifierNameButNotReservedWord -> PROTECTED .]*
    Goal::InputElementTemplateTail,
    // State#39:
    //   [IdentifierNameButNotReservedWord -> PUBLIC .]*
    Goal::InputElementTemplateTail,
    // State#40:
    //   [RelationalExpression_In -> PrivateIdentifier . IN ShiftExpression]*
    Goal::InputElementDiv,
    // State#41:
    //   [PrimaryExpression -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // State#42:
    //   [EmptyStatement -> SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#43:
    //   [IdentifierNameButNotReservedWord -> SET .]*
    Goal::InputElementTemplateTail,
    // State#44:
    //   [IdentifierNameButNotReservedWord -> STATIC .]*
    Goal::InputElementTemplateTail,
    // State#45:
    //   [UnaryExpression -> SUB . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#46:
    //   [SuperCall -> SUPER . Arguments]*
    //   [SuperProperty -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty -> SUPER . LBRACK Expression_In RBRACK]*
    Goal::InputElementDiv,
    // State#47:
    //   [SwitchStatement -> SWITCH . LPAREN Expression_In RPAREN CaseBlock]*
    Goal::InputElementDiv,
    // State#48:
    //   [Literal -> StringLiteral .]*
    Goal::InputElementTemplateTail,
    // State#49:
    //   [IdentifierNameButNotReservedWord -> TARGET .]*
    Goal::InputElementTemplateTail,
    // State#50:
    //   [PrimaryExpression -> THIS .]*
    Goal::InputElementTemplateTail,
    // State#51:
    //   [ThrowStatement -> THROW . Expression_In SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#52:
    //   [BooleanLiteral -> TRUE .]*
    Goal::InputElementTemplateTail,
    // State#53:
    //   [TryStatement -> TRY . Block Catch]*
    //   [TryStatement -> TRY . Block Catch Finally]*
    //   [TryStatement -> TRY . Block Finally]*
    Goal::InputElementDiv,
    // State#54:
    //   [UnaryExpression -> TYPEOF . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#55:
    //   [SubstitutionTemplate -> TemplateHead . Expression_In TemplateSpans]*
    Goal::InputElementRegExp,
    // State#56:
    //   [VariableStatement -> VAR . VariableDeclarationList_In SEMI_COLON]*
    Goal::InputElementDiv,
    // State#57:
    //   [UnaryExpression -> VOID . UnaryExpression]*
    Goal::InputElementRegExp,
    // State#58:
    //   [WhileStatement -> WHILE . LPAREN Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#59:
    //   [WithStatement -> WITH . LPAREN Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#60:
    //   [BindingIdentifier -> YIELD .]*
    //   [IdentifierReference -> YIELD .]*
    //   [LabelIdentifier -> YIELD .]*
    Goal::InputElementDiv,
    // State#61:
    //   [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    //   [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    //   [ShiftExpression -> AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // State#62:
    //   [PrimaryExpression -> ArrayLiteral .]*
    Goal::InputElementTemplateTail,
    // State#63:
    //   [AssignmentExpression_In -> ArrowFunction_In .]*
    Goal::InputElementTemplateTail,
    // State#64:
    //   [ArrowFunction_In -> ArrowParameters . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // State#65:
    //   [Expression_In -> AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#66:
    //   [AssignmentExpression_In -> AsyncArrowFunction_In .]*
    Goal::InputElementTemplateTail,
    // State#67:
    //   [HoistableDeclaration -> AsyncFunctionDeclaration .]*
    Goal::InputElementRegExp,
    // State#68:
    //   [HoistableDeclaration -> AsyncGeneratorDeclaration .]*
    Goal::InputElementRegExp,
    // State#69:
    //   [ArrowParameters -> BindingIdentifier .]*
    Goal::InputElementDiv,
    // State#70:
    //   [BitwiseANDExpression_In -> BitwiseANDExpression_In . BIT_AND EqualityExpression_In]*
    //   [BitwiseXORExpression_In -> BitwiseANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#71:
    //   [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    //   [CoalesceExpressionHead_In -> BitwiseORExpression_In .]*
    //   [LogicalANDExpression_In -> BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#72:
    //   [BitwiseORExpression_In -> BitwiseXORExpression_In .]*
    //   [BitwiseXORExpression_In -> BitwiseXORExpression_In . BIT_XOR BitwiseANDExpression_In]*
    Goal::InputElementTemplateTail,
    // State#73:
    //   [BlockStatement -> Block .]*
    Goal::InputElementRegExp,
    // State#74:
    //   [Statement -> BlockStatement .]*
    Goal::InputElementRegExp,
    // State#75:
    //   [Literal -> BooleanLiteral .]*
    Goal::InputElementTemplateTail,
    // State#76:
    //   [Statement -> BreakStatement .]*
    Goal::InputElementRegExp,
    // State#77:
    //   [Statement -> BreakableStatement .]*
    Goal::InputElementRegExp,
    // State#78:
    //   [CallExpression -> CallExpression . DOT PrivateIdentifier]*
    //   [CallExpression -> CallExpression . DOT KeywordOrIdentifierName]*
    //   [CallExpression -> CallExpression . LBRACK Expression_In RBRACK]*
    //   [CallExpression -> CallExpression . Arguments]*
    //   [CallExpression -> CallExpression . TemplateLiteral_Tagged]*
    //   [LeftHandSideExpression -> CallExpression .]*
    //   [OptionalExpression -> CallExpression . OptionalChain]*
    Goal::InputElementTemplateTail,
    // State#79:
    //   [Declaration -> ClassDeclaration .]*
    Goal::InputElementRegExp,
    // State#80:
    //   [CoalesceExpression_In -> CoalesceExpressionHead_In . NULLISH BitwiseORExpression_In]*
    Goal::InputElementDiv,
    // State#81:
    //   [CoalesceExpressionHead_In -> CoalesceExpression_In .]*
    //   [ShortCircuitExpression_In -> CoalesceExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#82:
    //   [AssignmentExpression_In -> ConditionalExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#83:
    //   [Statement -> ContinueStatement .]*
    Goal::InputElementRegExp,
    // State#84:
    //   [AsyncArrowFunction_In -> CoverCallExpressionAndAsyncArrowHead . ARROW AsyncConciseBody_In]*
    //   [CallExpression -> CoverCallExpressionAndAsyncArrowHead .]*
    Goal::InputElementTemplateTail,
    // State#85:
    //   [ArrowParameters -> CoverParenthesizedExpressionAndArrowParameterList .]*
    //   [PrimaryExpression -> CoverParenthesizedExpressionAndArrowParameterList .]*
    Goal::InputElementTemplateTail,
    // State#86:
    //   [Statement -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // State#87:
    //   [StatementListItem -> Declaration .]*
    Goal::InputElementRegExp,
    // State#88:
    //   [IterationStatement -> DoWhileStatement .]*
    Goal::InputElementRegExp,
    // State#89:
    //   [Statement -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // State#90:
    //   [BitwiseANDExpression_In -> EqualityExpression_In .]*
    //   [EqualityExpression_In -> EqualityExpression_In . EQ RelationalExpression_In]*
    //   [EqualityExpression_In -> EqualityExpression_In . EQ_STRICT RelationalExpression_In]*
    //   [EqualityExpression_In -> EqualityExpression_In . NE RelationalExpression_In]*
    //   [EqualityExpression_In -> EqualityExpression_In . NE_STRICT RelationalExpression_In]*
    Goal::InputElementTemplateTail,
    // State#91:
    //   [MultiplicativeExpression -> ExponentiationExpression .]*
    Goal::InputElementTemplateTail,
    // State#92:
    //   [Statement -> ExpressionStatement .]*
    Goal::InputElementRegExp,
    // State#93:
    //   [ExpressionStatement -> Expression_In . SEMI_COLON]*
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#94:
    //   [IterationStatement -> ForInOfStatement .]*
    Goal::InputElementRegExp,
    // State#95:
    //   [IterationStatement -> ForStatement .]*
    Goal::InputElementRegExp,
    // State#96:
    //   [HoistableDeclaration -> FunctionDeclaration .]*
    Goal::InputElementRegExp,
    // State#97:
    //   [HoistableDeclaration -> GeneratorDeclaration .]*
    Goal::InputElementRegExp,
    // State#98:
    //   [Declaration -> HoistableDeclaration .]*
    Goal::InputElementRegExp,
    // State#99:
    //   [BindingIdentifier -> Identifier .]*
    //   [IdentifierReference -> Identifier .]*
    //   [LabelIdentifier -> Identifier .]*
    Goal::InputElementDiv,
    // State#100:
    //   [Identifier -> IdentifierNameButNotReservedWord .]*
    Goal::InputElementTemplateTail,
    // State#101:
    //   [PrimaryExpression -> IdentifierReference .]*
    Goal::InputElementTemplateTail,
    // State#102:
    //   [Statement -> IfStatement .]*
    Goal::InputElementRegExp,
    // State#103:
    //   [CallExpression -> ImportCall .]*
    Goal::InputElementTemplateTail,
    // State#104:
    //   [MetaProperty -> ImportMeta .]*
    Goal::InputElementTemplateTail,
    // State#105:
    //   [BreakableStatement -> IterationStatement .]*
    Goal::InputElementRegExp,
    // State#106:
    //   [LabelledStatement -> LabelIdentifier . COLON LabelledItem]*
    Goal::InputElementDiv,
    // State#107:
    //   [Statement -> LabelledStatement .]*
    Goal::InputElementRegExp,
    // State#108:
    //   [AssignmentExpression_In -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression_In]*
    //   [AssignmentExpression_In -> LeftHandSideExpression . ASSIGN AssignmentExpression_In]*
    //   [AssignmentExpression_In -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression_In]*
    //   [AssignmentExpression_In -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression_In]*
    //   [AssignmentExpression_In -> LeftHandSideExpression . AssignmentOperator AssignmentExpression_In]*
    //   [UpdateExpression -> LeftHandSideExpression .]*
    //   [UpdateExpression -> LeftHandSideExpression . DEC]*
    //   [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementTemplateTail,
    // State#109:
    //   [LexicalDeclaration_In -> LetOrConst . BindingList_In SEMI_COLON]*
    Goal::InputElementDiv,
    // State#110:
    //   [Declaration -> LexicalDeclaration_In .]*
    Goal::InputElementRegExp,
    // State#111:
    //   [PrimaryExpression -> Literal .]*
    Goal::InputElementTemplateTail,
    // State#112:
    //   [LogicalANDExpression_In -> LogicalANDExpression_In . AND BitwiseORExpression_In]*
    //   [LogicalORExpression_In -> LogicalANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#113:
    //   [LogicalORExpression_In -> LogicalORExpression_In . OR LogicalANDExpression_In]*
    //   [ShortCircuitExpression_In -> LogicalORExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#114:
    //   [CoverCallExpressionAndAsyncArrowHead -> MemberExpression . Arguments]*
    //   [MemberExpression -> MemberExpression . DOT PrivateIdentifier]*
    //   [MemberExpression -> MemberExpression . DOT KeywordOrIdentifierName]*
    //   [MemberExpression -> MemberExpression . LBRACK Expression_In RBRACK]*
    //   [MemberExpression -> MemberExpression . TemplateLiteral_Tagged]*
    //   [NewExpression -> MemberExpression .]*
    //   [OptionalExpression -> MemberExpression . OptionalChain]*
    Goal::InputElementTemplateTail,
    // State#115:
    //   [MemberExpression -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // State#116:
    //   [AdditiveExpression -> MultiplicativeExpression .]*
    //   [MultiplicativeExpression -> MultiplicativeExpression . MultiplicativeOperator ExponentiationExpression]*
    Goal::InputElementTemplateTail,
    // State#117:
    //   [LeftHandSideExpression -> NewExpression .]*
    Goal::InputElementTemplateTail,
    // State#118:
    //   [MetaProperty -> NewTarget .]*
    Goal::InputElementTemplateTail,
    // State#119:
    //   [Literal -> NullLiteral .]*
    Goal::InputElementTemplateTail,
    // State#120:
    //   [LeftHandSideExpression -> OptionalExpression .]*
    //   [OptionalExpression -> OptionalExpression . OptionalChain]*
    Goal::InputElementTemplateTail,
    // State#121:
    //   [MemberExpression -> PrimaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#122:
    //   [EqualityExpression_In -> RelationalExpression_In .]*
    //   [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // State#123:
    //   [^ -> Script .]*
    Goal::InputElementDiv,
    // State#124:
    //   [Script -> ScriptBody .]*
    Goal::InputElementDiv,
    // State#125:
    //   [RelationalExpression_In -> ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#126:
    //   [ConditionalExpression_In -> ShortCircuitExpression_In .]*
    //   [ConditionalExpression_In -> ShortCircuitExpression_In . CONDITIONAL AssignmentExpression_In COLON AssignmentExpression_In]*
    Goal::InputElementTemplateTail,
    // State#127:
    //   [StatementListItem -> Statement .]*
    Goal::InputElementRegExp,
    // State#128:
    //   [ScriptBody -> StatementList .]*
    //   [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // State#129:
    //   [StatementList -> StatementListItem .]*
    Goal::InputElementRegExp,
    // State#130:
    //   [TemplateLiteral -> SubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#131:
    //   [CallExpression -> SuperCall .]*
    Goal::InputElementTemplateTail,
    // State#132:
    //   [MemberExpression -> SuperProperty .]*
    Goal::InputElementTemplateTail,
    // State#133:
    //   [BreakableStatement -> SwitchStatement .]*
    Goal::InputElementRegExp,
    // State#134:
    //   [PrimaryExpression -> TemplateLiteral .]*
    Goal::InputElementTemplateTail,
    // State#135:
    //   [Statement -> ThrowStatement .]*
    Goal::InputElementRegExp,
    // State#136:
    //   [Statement -> TryStatement .]*
    Goal::InputElementRegExp,
    // State#137:
    //   [ExponentiationExpression -> UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#138:
    //   [ExponentiationExpression -> UpdateExpression . EXP ExponentiationExpression]*
    //   [UnaryExpression -> UpdateExpression .]*
    Goal::InputElementTemplateTail,
    // State#139:
    //   [Statement -> VariableStatement .]*
    Goal::InputElementRegExp,
    // State#140:
    //   [IterationStatement -> WhileStatement .]*
    Goal::InputElementRegExp,
    // State#141:
    //   [Statement -> WithStatement .]*
    Goal::InputElementRegExp,
    // State#142:
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#143:
    //   [IdentifierReference -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // State#144:
    //   [ClassExpression -> CLASS . BindingIdentifier ClassTail]*
    //   [ClassExpression -> CLASS . ClassTail]*
    Goal::InputElementDiv,
    // State#145:
    //   [FunctionExpression -> FUNCTION . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    //   [FunctionExpression -> FUNCTION . BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    //   [GeneratorExpression -> FUNCTION . MUL LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    //   [GeneratorExpression -> FUNCTION . MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#146:
    //   [ObjectLiteral -> LBRACE . RBRACE]*
    //   [ObjectLiteral -> LBRACE . PropertyDefinitionList COMMA RBRACE]*
    //   [ObjectLiteral -> LBRACE . PropertyDefinitionList RBRACE]*
    Goal::InputElementDiv,
    // State#147:
    //   [IdentifierReference -> YIELD .]*
    Goal::InputElementTemplateTail,
    // State#148:
    //   [PrimaryExpression -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#149:
    //   [PrimaryExpression -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#150:
    //   [PrimaryExpression -> ClassExpression .]*
    Goal::InputElementTemplateTail,
    // State#151:
    //   [CallExpression -> CoverCallExpressionAndAsyncArrowHead .]*
    Goal::InputElementTemplateTail,
    // State#152:
    //   [PrimaryExpression -> CoverParenthesizedExpressionAndArrowParameterList .]*
    Goal::InputElementTemplateTail,
    // State#153:
    //   [PrimaryExpression -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#154:
    //   [PrimaryExpression -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#155:
    //   [IdentifierReference -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#156:
    //   [UpdateExpression -> LeftHandSideExpression .]*
    //   [UpdateExpression -> LeftHandSideExpression . DEC]*
    //   [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementTemplateTail,
    // State#157:
    //   [PrimaryExpression -> ObjectLiteral .]*
    Goal::InputElementTemplateTail,
    // State#158:
    //   [UnaryExpression -> ADD UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#159:
    //   [UnaryExpression -> UpdateExpression .]*
    Goal::InputElementTemplateTail,
    // State#160:
    //   [BindingIdentifier_Await -> AWAIT .]*
    Goal::InputElementDiv,
    // State#161:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION . BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION . MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#162:
    //   [BindingIdentifier_Await -> YIELD .]*
    Goal::InputElementDiv,
    // State#163:
    //   [AsyncArrowFunction_In -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#164:
    //   [AsyncArrowBindingIdentifier -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // State#165:
    //   [BindingIdentifier_Await -> Identifier .]*
    Goal::InputElementDiv,
    // State#166:
    //   [UnaryExpression -> BIT_NOT UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#167:
    //   [LabelIdentifier -> AWAIT .]*
    Goal::InputElementDiv,
    // State#168:
    //   [BreakStatement -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#169:
    //   [LabelIdentifier -> YIELD .]*
    Goal::InputElementDiv,
    // State#170:
    //   [LabelIdentifier -> Identifier .]*
    Goal::InputElementDiv,
    // State#171:
    //   [BreakStatement -> BREAK LabelIdentifier . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#172:
    //   [BindingIdentifier -> AWAIT .]*
    Goal::InputElementDiv,
    // State#173:
    //   [BindingIdentifier -> YIELD .]*
    Goal::InputElementDiv,
    // State#174:
    //   [ClassDeclaration -> CLASS BindingIdentifier . ClassTail]*
    Goal::InputElementDiv,
    // State#175:
    //   [BindingIdentifier -> Identifier .]*
    Goal::InputElementDiv,
    // State#176:
    //   [ContinueStatement -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#177:
    //   [ContinueStatement -> CONTINUE LabelIdentifier . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#178:
    //   [DebuggerStatement -> DEBUGGER SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#179:
    //   [UpdateExpression -> DEC UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#180:
    //   [UnaryExpression -> DELETE UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#181:
    //   [AsyncArrowFunction_In -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#182:
    //   [DoWhileStatement -> DO Statement . WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#183:
    //   [ForInOfStatement -> FOR LPAREN . VAR ForBinding IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN . VAR ForBinding OF AssignmentExpression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN . ForDeclaration IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN . ForDeclaration OF AssignmentExpression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN . LeftHandSideExpression IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN . LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . LexicalDeclaration SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#184:
    //   [GeneratorDeclaration -> FUNCTION MUL . BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#185:
    //   [FunctionDeclaration -> FUNCTION BindingIdentifier . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#186:
    //   [IfStatement -> IF LPAREN . Expression_In RPAREN Statement ELSE Statement]*
    //   [IfStatement -> IF LPAREN . Expression_In RPAREN Statement !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#187:
    //   [ImportMeta -> IMPORT DOT . META]*
    Goal::InputElementDiv,
    // State#188:
    //   [ImportCall -> IMPORT LPAREN . AssignmentExpression_In RPAREN]*
    Goal::InputElementRegExp,
    // State#189:
    //   [UpdateExpression -> INC UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#190:
    //   [Block -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#191:
    //   [Block -> LBRACE StatementList . RBRACE]*
    //   [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // State#192:
    //   [AsyncArrowFunction_In -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#193:
    //   [BindingIdentifier -> AWAIT .]*
    //   [IdentifierReference -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // State#194:
    //   [Elision -> COMMA .]*
    Goal::InputElementRegExp,
    // State#195:
    //   [SpreadElement -> ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#196:
    //   [ArrayLiteral -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#197:
    //   [BindingIdentifier -> YIELD .]*
    //   [IdentifierReference -> YIELD .]*
    Goal::InputElementTemplateTail,
    // State#198:
    //   [ElementList -> AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#199:
    //   [ArrayLiteral -> LBRACK ElementList . COMMA RBRACK]*
    //   [ArrayLiteral -> LBRACK ElementList . COMMA Elision RBRACK]*
    //   [ArrayLiteral -> LBRACK ElementList . RBRACK]*
    //   [ElementList -> ElementList . COMMA AssignmentExpression_In]*
    //   [ElementList -> ElementList . COMMA Elision AssignmentExpression_In]*
    //   [ElementList -> ElementList . COMMA Elision SpreadElement]*
    //   [ElementList -> ElementList . COMMA SpreadElement]*
    Goal::InputElementDiv,
    // State#200:
    //   [ArrayLiteral -> LBRACK Elision . RBRACK]*
    //   [ElementList -> Elision . AssignmentExpression_In]*
    //   [ElementList -> Elision . SpreadElement]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#201:
    //   [BindingIdentifier -> Identifier .]*
    //   [IdentifierReference -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#202:
    //   [ElementList -> SpreadElement .]*
    Goal::InputElementDiv,
    // State#203:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS . BindingIdentifier RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS . BindingPattern RPAREN]*
    Goal::InputElementDiv,
    // State#204:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#205:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . COMMA ELLIPSIS BindingIdentifier RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . COMMA ELLIPSIS BindingPattern RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . RPAREN]*
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#206:
    //   [NewTarget -> NEW DOT . TARGET]*
    Goal::InputElementDiv,
    // State#207:
    //   [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // State#208:
    //   [SuperProperty -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty -> SUPER . LBRACK Expression_In RBRACK]*
    Goal::InputElementDiv,
    // State#209:
    //   [MemberExpression -> NEW MemberExpression . Arguments]*
    //   [MemberExpression -> MemberExpression . DOT PrivateIdentifier]*
    //   [MemberExpression -> MemberExpression . DOT KeywordOrIdentifierName]*
    //   [MemberExpression -> MemberExpression . LBRACK Expression_In RBRACK]*
    //   [MemberExpression -> MemberExpression . TemplateLiteral_Tagged]*
    //   [NewExpression -> MemberExpression .]*
    Goal::InputElementTemplateTail,
    // State#210:
    //   [NewExpression -> NEW NewExpression .]*
    Goal::InputElementTemplateTail,
    // State#211:
    //   [UnaryExpression -> NOT UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#212:
    //   [RelationalExpression_In -> PrivateIdentifier IN . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#213:
    //   [UnaryExpression -> SUB UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#214:
    //   [SuperProperty -> SUPER DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#215:
    //   [SuperProperty -> SUPER LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // State#216:
    //   [Arguments -> LPAREN . RPAREN]*
    //   [Arguments -> LPAREN . ArgumentList COMMA RPAREN]*
    //   [Arguments -> LPAREN . ArgumentList RPAREN]*
    Goal::InputElementRegExp,
    // State#217:
    //   [SuperCall -> SUPER Arguments .]*
    Goal::InputElementTemplateTail,
    // State#218:
    //   [SwitchStatement -> SWITCH LPAREN . Expression_In RPAREN CaseBlock]*
    Goal::InputElementRegExp,
    // State#219:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ThrowStatement -> THROW Expression_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#220:
    //   [TryStatement -> TRY Block . Catch]*
    //   [TryStatement -> TRY Block . Catch Finally]*
    //   [TryStatement -> TRY Block . Finally]*
    Goal::InputElementDiv,
    // State#221:
    //   [UnaryExpression -> TYPEOF UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#222:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [SubstitutionTemplate -> TemplateHead Expression_In . TemplateSpans]*
    Goal::InputElementTemplateTail,
    // State#223:
    //   [ObjectBindingPattern -> LBRACE . RBRACE]*
    //   [ObjectBindingPattern -> LBRACE . BindingPropertyList COMMA RBRACE]*
    //   [ObjectBindingPattern -> LBRACE . BindingPropertyList COMMA BindingRestProperty RBRACE]*
    //   [ObjectBindingPattern -> LBRACE . BindingPropertyList RBRACE]*
    //   [ObjectBindingPattern -> LBRACE . BindingRestProperty RBRACE]*
    Goal::InputElementDiv,
    // State#224:
    //   [ArrayBindingPattern -> LBRACK . RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . BindingElementList COMMA RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . BindingElementList COMMA BindingRestElement RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . BindingElementList COMMA Elision RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . BindingElementList COMMA Elision BindingRestElement RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . BindingElementList RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . BindingRestElement RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . Elision RBRACK]*
    //   [ArrayBindingPattern -> LBRACK . Elision BindingRestElement RBRACK]*
    Goal::InputElementDiv,
    // State#225:
    //   [BindingPattern -> ArrayBindingPattern .]*
    Goal::InputElementDiv,
    // State#226:
    //   [VariableDeclaration_In -> BindingIdentifier .]*
    //   [VariableDeclaration_In -> BindingIdentifier . Initializer_In]*
    Goal::InputElementDiv,
    // State#227:
    //   [VariableDeclaration_In -> BindingPattern . Initializer_In]*
    Goal::InputElementDiv,
    // State#228:
    //   [BindingPattern -> ObjectBindingPattern .]*
    Goal::InputElementDiv,
    // State#229:
    //   [VariableDeclarationList_In -> VariableDeclarationList_In . COMMA VariableDeclaration_In]*
    //   [VariableStatement -> VAR VariableDeclarationList_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#230:
    //   [VariableDeclarationList_In -> VariableDeclaration_In .]*
    Goal::InputElementDiv,
    // State#231:
    //   [UnaryExpression -> VOID UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // State#232:
    //   [WhileStatement -> WHILE LPAREN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#233:
    //   [WithStatement -> WITH LPAREN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#234:
    //   [AdditiveExpression -> AdditiveExpression ADD . MultiplicativeExpression]*
    Goal::InputElementRegExp,
    // State#235:
    //   [AdditiveExpression -> AdditiveExpression SUB . MultiplicativeExpression]*
    Goal::InputElementRegExp,
    // State#236:
    //   [ArrowFunction_In -> ArrowParameters ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // State#237:
    //   [BitwiseANDExpression_In -> BitwiseANDExpression_In BIT_AND . EqualityExpression_In]*
    Goal::InputElementRegExp,
    // State#238:
    //   [BitwiseORExpression_In -> BitwiseORExpression_In BIT_OR . BitwiseXORExpression_In]*
    Goal::InputElementRegExp,
    // State#239:
    //   [BitwiseXORExpression_In -> BitwiseXORExpression_In BIT_XOR . BitwiseANDExpression_In]*
    Goal::InputElementRegExp,
    // State#240:
    //   [CallExpression -> CallExpression DOT . PrivateIdentifier]*
    //   [CallExpression -> CallExpression DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#241:
    //   [CallExpression -> CallExpression LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // State#242:
    //   [TemplateLiteral_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#243:
    //   [OptionalChain -> OPTIONAL_CHAINING . LBRACK Expression_In RBRACK]*
    //   [OptionalChain -> OPTIONAL_CHAINING . PrivateIdentifier]*
    //   [OptionalChain -> OPTIONAL_CHAINING . Arguments]*
    //   [OptionalChain -> OPTIONAL_CHAINING . KeywordOrIdentifierName]*
    //   [OptionalChain -> OPTIONAL_CHAINING . TemplateLiteral_Tagged]*
    Goal::InputElementDiv,
    // State#244:
    //   [SubstitutionTemplate_Tagged -> TemplateHead . Expression_In TemplateSpans_Tagged]*
    Goal::InputElementRegExp,
    // State#245:
    //   [CallExpression -> CallExpression Arguments .]*
    Goal::InputElementTemplateTail,
    // State#246:
    //   [OptionalChain -> OptionalChain . DOT PrivateIdentifier]*
    //   [OptionalChain -> OptionalChain . DOT KeywordOrIdentifierName]*
    //   [OptionalChain -> OptionalChain . LBRACK Expression_In RBRACK]*
    //   [OptionalChain -> OptionalChain . Arguments]*
    //   [OptionalChain -> OptionalChain . TemplateLiteral_Tagged]*
    //   [OptionalExpression -> CallExpression OptionalChain .]*
    Goal::InputElementTemplateTail,
    // State#247:
    //   [TemplateLiteral_Tagged -> SubstitutionTemplate_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#248:
    //   [CallExpression -> CallExpression TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#249:
    //   [CoalesceExpression_In -> CoalesceExpressionHead_In NULLISH . BitwiseORExpression_In]*
    Goal::InputElementRegExp,
    // State#250:
    //   [AsyncArrowFunction_In -> CoverCallExpressionAndAsyncArrowHead ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#251:
    //   [EqualityExpression_In -> EqualityExpression_In EQ . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // State#252:
    //   [EqualityExpression_In -> EqualityExpression_In EQ_STRICT . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // State#253:
    //   [EqualityExpression_In -> EqualityExpression_In NE . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // State#254:
    //   [EqualityExpression_In -> EqualityExpression_In NE_STRICT . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // State#255:
    //   [Expression_In -> Expression_In COMMA . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#256:
    //   [ExpressionStatement -> Expression_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#257:
    //   [LabelledStatement -> LabelIdentifier COLON . LabelledItem]*
    Goal::InputElementRegExp,
    // State#258:
    //   [AssignmentOperator -> ADD_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#259:
    //   [AssignmentExpression_In -> LeftHandSideExpression AND_ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#260:
    //   [AssignmentExpression_In -> LeftHandSideExpression ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#261:
    //   [AssignmentOperator -> BIT_AND_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#262:
    //   [AssignmentOperator -> BIT_OR_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#263:
    //   [AssignmentOperator -> BIT_XOR_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#264:
    //   [UpdateExpression -> LeftHandSideExpression DEC .]*
    Goal::InputElementTemplateTail,
    // State#265:
    //   [AssignmentOperator -> DIV_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#266:
    //   [AssignmentOperator -> EXP_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#267:
    //   [UpdateExpression -> LeftHandSideExpression INC .]*
    Goal::InputElementTemplateTail,
    // State#268:
    //   [AssignmentOperator -> MOD_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#269:
    //   [AssignmentOperator -> MUL_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#270:
    //   [AssignmentExpression_In -> LeftHandSideExpression NULLISH_ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#271:
    //   [AssignmentExpression_In -> LeftHandSideExpression OR_ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#272:
    //   [AssignmentOperator -> SAR_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#273:
    //   [AssignmentOperator -> SHL_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#274:
    //   [AssignmentOperator -> SHR_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#275:
    //   [AssignmentOperator -> SUB_ASSIGN .]*
    Goal::InputElementRegExp,
    // State#276:
    //   [AssignmentExpression_In -> LeftHandSideExpression AssignmentOperator . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#277:
    //   [LexicalBinding_In -> BindingIdentifier .]*
    //   [LexicalBinding_In -> BindingIdentifier . Initializer_In]*
    Goal::InputElementDiv,
    // State#278:
    //   [BindingList_In -> BindingList_In . COMMA LexicalBinding_In]*
    //   [LexicalDeclaration_In -> LetOrConst BindingList_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#279:
    //   [LexicalBinding_In -> BindingPattern . Initializer_In]*
    Goal::InputElementDiv,
    // State#280:
    //   [BindingList_In -> LexicalBinding_In .]*
    Goal::InputElementDiv,
    // State#281:
    //   [LogicalANDExpression_In -> LogicalANDExpression_In AND . BitwiseORExpression_In]*
    Goal::InputElementRegExp,
    // State#282:
    //   [LogicalORExpression_In -> LogicalORExpression_In OR . LogicalANDExpression_In]*
    Goal::InputElementRegExp,
    // State#283:
    //   [MemberExpression -> MemberExpression DOT . PrivateIdentifier]*
    //   [MemberExpression -> MemberExpression DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#284:
    //   [MemberExpression -> MemberExpression LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // State#285:
    //   [CoverCallExpressionAndAsyncArrowHead -> MemberExpression Arguments .]*
    Goal::InputElementTemplateTail,
    // State#286:
    //   [OptionalChain -> OptionalChain . DOT PrivateIdentifier]*
    //   [OptionalChain -> OptionalChain . DOT KeywordOrIdentifierName]*
    //   [OptionalChain -> OptionalChain . LBRACK Expression_In RBRACK]*
    //   [OptionalChain -> OptionalChain . Arguments]*
    //   [OptionalChain -> OptionalChain . TemplateLiteral_Tagged]*
    //   [OptionalExpression -> MemberExpression OptionalChain .]*
    Goal::InputElementTemplateTail,
    // State#287:
    //   [MemberExpression -> MemberExpression TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#288:
    //   [MultiplicativeOperator -> DIV .]*
    Goal::InputElementRegExp,
    // State#289:
    //   [MultiplicativeOperator -> MOD .]*
    Goal::InputElementRegExp,
    // State#290:
    //   [MultiplicativeOperator -> MUL .]*
    Goal::InputElementRegExp,
    // State#291:
    //   [MultiplicativeExpression -> MultiplicativeExpression MultiplicativeOperator . ExponentiationExpression]*
    Goal::InputElementRegExp,
    // State#292:
    //   [OptionalChain -> OptionalChain . DOT PrivateIdentifier]*
    //   [OptionalChain -> OptionalChain . DOT KeywordOrIdentifierName]*
    //   [OptionalChain -> OptionalChain . LBRACK Expression_In RBRACK]*
    //   [OptionalChain -> OptionalChain . Arguments]*
    //   [OptionalChain -> OptionalChain . TemplateLiteral_Tagged]*
    //   [OptionalExpression -> OptionalExpression OptionalChain .]*
    Goal::InputElementTemplateTail,
    // State#293:
    //   [RelationalExpression_In -> RelationalExpression_In GT . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#294:
    //   [RelationalExpression_In -> RelationalExpression_In GTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#295:
    //   [RelationalExpression_In -> RelationalExpression_In IN . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#296:
    //   [RelationalExpression_In -> RelationalExpression_In INSTANCEOF . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#297:
    //   [RelationalExpression_In -> RelationalExpression_In LT . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#298:
    //   [RelationalExpression_In -> RelationalExpression_In LTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#299:
    //   [ShiftExpression -> ShiftExpression SAR . AdditiveExpression]*
    Goal::InputElementRegExp,
    // State#300:
    //   [ShiftExpression -> ShiftExpression SHL . AdditiveExpression]*
    Goal::InputElementRegExp,
    // State#301:
    //   [ShiftExpression -> ShiftExpression SHR . AdditiveExpression]*
    Goal::InputElementRegExp,
    // State#302:
    //   [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL . AssignmentExpression_In COLON AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#303:
    //   [StatementList -> StatementList StatementListItem .]*
    Goal::InputElementRegExp,
    // State#304:
    //   [ExponentiationExpression -> UpdateExpression EXP . ExponentiationExpression]*
    Goal::InputElementRegExp,
    // State#305:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC FUNCTION . BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION . MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION . MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#306:
    //   [ClassHeritage -> EXTENDS . LeftHandSideExpression]*
    Goal::InputElementRegExp,
    // State#307:
    //   [ClassTail -> LBRACE . RBRACE]*
    //   [ClassTail -> LBRACE . ClassBody RBRACE]*
    Goal::InputElementDiv,
    // State#308:
    //   [ClassExpression -> CLASS BindingIdentifier . ClassTail]*
    Goal::InputElementDiv,
    // State#309:
    //   [ClassTail -> ClassHeritage . LBRACE RBRACE]*
    //   [ClassTail -> ClassHeritage . LBRACE ClassBody RBRACE]*
    Goal::InputElementDiv,
    // State#310:
    //   [ClassExpression -> CLASS ClassTail .]*
    Goal::InputElementTemplateTail,
    // State#311:
    //   [FormalParameters -> () .]*
    //   [FunctionExpression -> FUNCTION LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#312:
    //   [GeneratorExpression -> FUNCTION MUL . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    //   [GeneratorExpression -> FUNCTION MUL . BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#313:
    //   [FunctionExpression -> FUNCTION BindingIdentifier . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#314:
    //   [IdentifierNameButNotReservedWord -> AS .]*
    //   [KeywordOrIdentifierName -> AS .]*
    Goal::InputElementDiv,
    // State#315:
    //   [AsyncGeneratorMethod -> ASYNC . MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncMethod -> ASYNC . ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [KeywordOrIdentifierName -> ASYNC .]*
    Goal::InputElementDiv,
    // State#316:
    //   [IdentifierReference -> AWAIT .]*
    //   [KeywordOrIdentifierName -> AWAIT .]*
    Goal::InputElementDiv,
    // State#317:
    //   [KeywordOrIdentifierName -> BREAK .]*
    Goal::InputElementTemplateTail,
    // State#318:
    //   [KeywordOrIdentifierName -> CASE .]*
    Goal::InputElementTemplateTail,
    // State#319:
    //   [KeywordOrIdentifierName -> CATCH .]*
    Goal::InputElementTemplateTail,
    // State#320:
    //   [KeywordOrIdentifierName -> CLASS .]*
    Goal::InputElementTemplateTail,
    // State#321:
    //   [KeywordOrIdentifierName -> CONST .]*
    Goal::InputElementTemplateTail,
    // State#322:
    //   [KeywordOrIdentifierName -> CONTINUE .]*
    Goal::InputElementTemplateTail,
    // State#323:
    //   [KeywordOrIdentifierName -> DEBUGGER .]*
    Goal::InputElementTemplateTail,
    // State#324:
    //   [KeywordOrIdentifierName -> DEFAULT .]*
    Goal::InputElementTemplateTail,
    // State#325:
    //   [KeywordOrIdentifierName -> DELETE .]*
    Goal::InputElementTemplateTail,
    // State#326:
    //   [KeywordOrIdentifierName -> DO .]*
    Goal::InputElementTemplateTail,
    // State#327:
    //   [PropertyDefinition -> ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#328:
    //   [KeywordOrIdentifierName -> ELSE .]*
    Goal::InputElementTemplateTail,
    // State#329:
    //   [KeywordOrIdentifierName -> ENUM .]*
    Goal::InputElementTemplateTail,
    // State#330:
    //   [KeywordOrIdentifierName -> EXPORT .]*
    Goal::InputElementTemplateTail,
    // State#331:
    //   [KeywordOrIdentifierName -> EXTENDS .]*
    Goal::InputElementTemplateTail,
    // State#332:
    //   [KeywordOrIdentifierName -> FALSE .]*
    Goal::InputElementTemplateTail,
    // State#333:
    //   [KeywordOrIdentifierName -> FINALLY .]*
    Goal::InputElementTemplateTail,
    // State#334:
    //   [KeywordOrIdentifierName -> FOR .]*
    Goal::InputElementTemplateTail,
    // State#335:
    //   [IdentifierNameButNotReservedWord -> FROM .]*
    //   [KeywordOrIdentifierName -> FROM .]*
    Goal::InputElementDiv,
    // State#336:
    //   [KeywordOrIdentifierName -> FUNCTION .]*
    Goal::InputElementTemplateTail,
    // State#337:
    //   [IdentifierNameButNotReservedWord -> GET .]*
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition -> GET . ClassElementName LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#338:
    //   [KeywordOrIdentifierName -> IF .]*
    Goal::InputElementTemplateTail,
    // State#339:
    //   [IdentifierNameButNotReservedWord -> IMPLEMENTS .]*
    //   [KeywordOrIdentifierName -> IMPLEMENTS .]*
    Goal::InputElementDiv,
    // State#340:
    //   [KeywordOrIdentifierName -> IMPORT .]*
    Goal::InputElementTemplateTail,
    // State#341:
    //   [KeywordOrIdentifierName -> IN .]*
    Goal::InputElementTemplateTail,
    // State#342:
    //   [KeywordOrIdentifierName -> INSTANCEOF .]*
    Goal::InputElementTemplateTail,
    // State#343:
    //   [IdentifierNameButNotReservedWord -> INTERFACE .]*
    //   [KeywordOrIdentifierName -> INTERFACE .]*
    Goal::InputElementDiv,
    // State#344:
    //   [IdentifierNameButNotReservedWord -> IdentifierName .]*
    //   [KeywordOrIdentifierName -> IdentifierName .]*
    Goal::InputElementDiv,
    // State#345:
    //   [ComputedPropertyName -> LBRACK . AssignmentExpression_In RBRACK]*
    Goal::InputElementRegExp,
    // State#346:
    //   [KeywordOrIdentifierName -> LET .]*
    Goal::InputElementTemplateTail,
    // State#347:
    //   [IdentifierNameButNotReservedWord -> META .]*
    //   [KeywordOrIdentifierName -> META .]*
    Goal::InputElementDiv,
    // State#348:
    //   [GeneratorMethod -> MUL . ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#349:
    //   [KeywordOrIdentifierName -> NEW .]*
    Goal::InputElementTemplateTail,
    // State#350:
    //   [KeywordOrIdentifierName -> NULL .]*
    Goal::InputElementTemplateTail,
    // State#351:
    //   [LiteralPropertyName -> NumericLiteral .]*
    Goal::InputElementDiv,
    // State#352:
    //   [IdentifierNameButNotReservedWord -> OF .]*
    //   [KeywordOrIdentifierName -> OF .]*
    Goal::InputElementDiv,
    // State#353:
    //   [IdentifierNameButNotReservedWord -> PACKAGE .]*
    //   [KeywordOrIdentifierName -> PACKAGE .]*
    Goal::InputElementDiv,
    // State#354:
    //   [IdentifierNameButNotReservedWord -> PRIVATE .]*
    //   [KeywordOrIdentifierName -> PRIVATE .]*
    Goal::InputElementDiv,
    // State#355:
    //   [IdentifierNameButNotReservedWord -> PROTECTED .]*
    //   [KeywordOrIdentifierName -> PROTECTED .]*
    Goal::InputElementDiv,
    // State#356:
    //   [IdentifierNameButNotReservedWord -> PUBLIC .]*
    //   [KeywordOrIdentifierName -> PUBLIC .]*
    Goal::InputElementDiv,
    // State#357:
    //   [ClassElementName -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // State#358:
    //   [ObjectLiteral -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#359:
    //   [KeywordOrIdentifierName -> RETURN .]*
    Goal::InputElementTemplateTail,
    // State#360:
    //   [IdentifierNameButNotReservedWord -> SET .]*
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition -> SET . ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#361:
    //   [IdentifierNameButNotReservedWord -> STATIC .]*
    //   [KeywordOrIdentifierName -> STATIC .]*
    Goal::InputElementDiv,
    // State#362:
    //   [KeywordOrIdentifierName -> SUPER .]*
    Goal::InputElementTemplateTail,
    // State#363:
    //   [KeywordOrIdentifierName -> SWITCH .]*
    Goal::InputElementTemplateTail,
    // State#364:
    //   [LiteralPropertyName -> StringLiteral .]*
    Goal::InputElementDiv,
    // State#365:
    //   [IdentifierNameButNotReservedWord -> TARGET .]*
    //   [KeywordOrIdentifierName -> TARGET .]*
    Goal::InputElementDiv,
    // State#366:
    //   [KeywordOrIdentifierName -> THIS .]*
    Goal::InputElementTemplateTail,
    // State#367:
    //   [KeywordOrIdentifierName -> THROW .]*
    Goal::InputElementTemplateTail,
    // State#368:
    //   [KeywordOrIdentifierName -> TRUE .]*
    Goal::InputElementTemplateTail,
    // State#369:
    //   [KeywordOrIdentifierName -> TRY .]*
    Goal::InputElementTemplateTail,
    // State#370:
    //   [KeywordOrIdentifierName -> TYPEOF .]*
    Goal::InputElementTemplateTail,
    // State#371:
    //   [KeywordOrIdentifierName -> VAR .]*
    Goal::InputElementTemplateTail,
    // State#372:
    //   [KeywordOrIdentifierName -> VOID .]*
    Goal::InputElementTemplateTail,
    // State#373:
    //   [KeywordOrIdentifierName -> WHILE .]*
    Goal::InputElementTemplateTail,
    // State#374:
    //   [KeywordOrIdentifierName -> WITH .]*
    Goal::InputElementTemplateTail,
    // State#375:
    //   [IdentifierReference -> YIELD .]*
    //   [KeywordOrIdentifierName -> YIELD .]*
    Goal::InputElementDiv,
    // State#376:
    //   [MethodDefinition -> AsyncGeneratorMethod .]*
    Goal::InputElementDiv,
    // State#377:
    //   [MethodDefinition -> AsyncMethod .]*
    Goal::InputElementDiv,
    // State#378:
    //   [MethodDefinition -> ClassElementName . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#379:
    //   [PropertyName -> ComputedPropertyName .]*
    Goal::InputElementDiv,
    // State#380:
    //   [PropertyDefinition -> CoverInitializedName .]*
    Goal::InputElementDiv,
    // State#381:
    //   [MethodDefinition -> GeneratorMethod .]*
    Goal::InputElementDiv,
    // State#382:
    //   [CoverInitializedName -> IdentifierReference . Initializer_In]*
    //   [PropertyDefinition -> IdentifierReference .]*
    Goal::InputElementDiv,
    // State#383:
    //   [LiteralPropertyName -> KeywordOrIdentifierName .]*
    Goal::InputElementDiv,
    // State#384:
    //   [PropertyName -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // State#385:
    //   [PropertyDefinition -> MethodDefinition .]*
    Goal::InputElementDiv,
    // State#386:
    //   [PropertyDefinitionList -> PropertyDefinition .]*
    Goal::InputElementDiv,
    // State#387:
    //   [ObjectLiteral -> LBRACE PropertyDefinitionList . COMMA RBRACE]*
    //   [ObjectLiteral -> LBRACE PropertyDefinitionList . RBRACE]*
    //   [PropertyDefinitionList -> PropertyDefinitionList . COMMA PropertyDefinition]*
    Goal::InputElementDiv,
    // State#388:
    //   [ClassElementName -> PropertyName .]*
    //   [PropertyDefinition -> PropertyName . COLON AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#389:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL . BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#390:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#391:
    //   [AsyncArrowFunction_In -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#392:
    //   [BreakStatement -> BREAK LabelIdentifier SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#393:
    //   [ClassDeclaration -> CLASS BindingIdentifier ClassTail .]*
    Goal::InputElementRegExp,
    // State#394:
    //   [ContinueStatement -> CONTINUE LabelIdentifier SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#395:
    //   [DoWhileStatement -> DO Statement WHILE . LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#396:
    //   [AsyncArrowFunction -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#397:
    //   [ForStatement -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#398:
    //   [ForInOfStatement -> FOR LPAREN VAR . ForBinding IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN VAR . ForBinding OF AssignmentExpression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#399:
    //   [AssignmentExpression -> ArrowFunction .]*
    Goal::InputElementDiv,
    // State#400:
    //   [ArrowFunction -> ArrowParameters . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // State#401:
    //   [Expression -> AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#402:
    //   [AssignmentExpression -> AsyncArrowFunction .]*
    Goal::InputElementDiv,
    // State#403:
    //   [BitwiseANDExpression -> BitwiseANDExpression . BIT_AND EqualityExpression]*
    //   [BitwiseXORExpression -> BitwiseANDExpression .]*
    Goal::InputElementDiv,
    // State#404:
    //   [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    //   [CoalesceExpressionHead -> BitwiseORExpression .]*
    //   [LogicalANDExpression -> BitwiseORExpression .]*
    Goal::InputElementDiv,
    // State#405:
    //   [BitwiseORExpression -> BitwiseXORExpression .]*
    //   [BitwiseXORExpression -> BitwiseXORExpression . BIT_XOR BitwiseANDExpression]*
    Goal::InputElementDiv,
    // State#406:
    //   [CoalesceExpressionHead -> CoalesceExpression .]*
    //   [ShortCircuitExpression -> CoalesceExpression .]*
    Goal::InputElementDiv,
    // State#407:
    //   [CoalesceExpression -> CoalesceExpressionHead . NULLISH BitwiseORExpression]*
    Goal::InputElementDiv,
    // State#408:
    //   [AssignmentExpression -> ConditionalExpression .]*
    Goal::InputElementDiv,
    // State#409:
    //   [AsyncArrowFunction -> CoverCallExpressionAndAsyncArrowHead . ARROW AsyncConciseBody]*
    //   [CallExpression -> CoverCallExpressionAndAsyncArrowHead .]*
    Goal::InputElementDiv,
    // State#410:
    //   [BitwiseANDExpression -> EqualityExpression .]*
    //   [EqualityExpression -> EqualityExpression . EQ RelationalExpression]*
    //   [EqualityExpression -> EqualityExpression . EQ_STRICT RelationalExpression]*
    //   [EqualityExpression -> EqualityExpression . NE RelationalExpression]*
    //   [EqualityExpression -> EqualityExpression . NE_STRICT RelationalExpression]*
    Goal::InputElementDiv,
    // State#411:
    //   [Expression -> Expression . COMMA AssignmentExpression]*
    //   [ForStatement -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#412:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration . IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration . OF AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#413:
    //   [AssignmentExpression -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . AssignmentOperator AssignmentExpression]*
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression . IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression . OF AssignmentExpression_In RPAREN Statement]*
    //   [UpdateExpression -> LeftHandSideExpression .]*
    //   [UpdateExpression -> LeftHandSideExpression . DEC]*
    //   [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementDiv,
    // State#414:
    //   [ForDeclaration -> LetOrConst . ForBinding]*
    //   [LexicalDeclaration -> LetOrConst . BindingList SEMI_COLON]*
    Goal::InputElementDiv,
    // State#415:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration . SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#416:
    //   [LogicalANDExpression -> LogicalANDExpression . AND BitwiseORExpression]*
    //   [LogicalORExpression -> LogicalANDExpression .]*
    Goal::InputElementDiv,
    // State#417:
    //   [LogicalORExpression -> LogicalORExpression . OR LogicalANDExpression]*
    //   [ShortCircuitExpression -> LogicalORExpression .]*
    Goal::InputElementDiv,
    // State#418:
    //   [EqualityExpression -> RelationalExpression .]*
    //   [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // State#419:
    //   [RelationalExpression -> ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // State#420:
    //   [ConditionalExpression -> ShortCircuitExpression .]*
    //   [ConditionalExpression -> ShortCircuitExpression . CONDITIONAL AssignmentExpression_In COLON AssignmentExpression]*
    Goal::InputElementDiv,
    // State#421:
    //   [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#422:
    //   [FormalParameters -> () .]*
    //   [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#423:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [IfStatement -> IF LPAREN Expression_In . RPAREN Statement ELSE Statement]*
    //   [IfStatement -> IF LPAREN Expression_In . RPAREN Statement !~[ELSE]]*
    Goal::InputElementDiv,
    // State#424:
    //   [ImportMeta -> IMPORT DOT META .]*
    Goal::InputElementTemplateTail,
    // State#425:
    //   [ImportCall -> IMPORT LPAREN AssignmentExpression_In . RPAREN]*
    Goal::InputElementDiv,
    // State#426:
    //   [Block -> LBRACE StatementList RBRACE .]*
    Goal::InputElementRegExp,
    // State#427:
    //   [SpreadElement -> ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#428:
    //   [ArrayLiteral -> LBRACK ElementList COMMA . RBRACK]*
    //   [ArrayLiteral -> LBRACK ElementList COMMA . Elision RBRACK]*
    //   [ElementList -> ElementList COMMA . AssignmentExpression_In]*
    //   [ElementList -> ElementList COMMA . Elision AssignmentExpression_In]*
    //   [ElementList -> ElementList COMMA . Elision SpreadElement]*
    //   [ElementList -> ElementList COMMA . SpreadElement]*
    Goal::InputElementRegExp,
    // State#429:
    //   [ArrayLiteral -> LBRACK ElementList RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#430:
    //   [Elision -> Elision COMMA .]*
    Goal::InputElementRegExp,
    // State#431:
    //   [ArrayLiteral -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#432:
    //   [ElementList -> Elision AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#433:
    //   [ElementList -> Elision SpreadElement .]*
    Goal::InputElementDiv,
    // State#434:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingIdentifier . RPAREN]*
    Goal::InputElementDiv,
    // State#435:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingPattern . RPAREN]*
    Goal::InputElementDiv,
    // State#436:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA . ELLIPSIS BindingIdentifier RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA . ELLIPSIS BindingPattern RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA . RPAREN]*
    //   [Expression_In -> Expression_In COMMA . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#437:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#438:
    //   [NewTarget -> NEW DOT TARGET .]*
    Goal::InputElementTemplateTail,
    // State#439:
    //   [MemberExpression -> NEW MemberExpression Arguments .]*
    Goal::InputElementTemplateTail,
    // State#440:
    //   [RelationalExpression_In -> PrivateIdentifier IN ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#441:
    //   [KeywordOrIdentifierName -> AS .]*
    Goal::InputElementTemplateTail,
    // State#442:
    //   [KeywordOrIdentifierName -> ASYNC .]*
    Goal::InputElementTemplateTail,
    // State#443:
    //   [KeywordOrIdentifierName -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // State#444:
    //   [KeywordOrIdentifierName -> FROM .]*
    Goal::InputElementTemplateTail,
    // State#445:
    //   [KeywordOrIdentifierName -> GET .]*
    Goal::InputElementTemplateTail,
    // State#446:
    //   [KeywordOrIdentifierName -> IMPLEMENTS .]*
    Goal::InputElementTemplateTail,
    // State#447:
    //   [KeywordOrIdentifierName -> INTERFACE .]*
    Goal::InputElementTemplateTail,
    // State#448:
    //   [KeywordOrIdentifierName -> IdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#449:
    //   [KeywordOrIdentifierName -> META .]*
    Goal::InputElementTemplateTail,
    // State#450:
    //   [KeywordOrIdentifierName -> OF .]*
    Goal::InputElementTemplateTail,
    // State#451:
    //   [KeywordOrIdentifierName -> PACKAGE .]*
    Goal::InputElementTemplateTail,
    // State#452:
    //   [KeywordOrIdentifierName -> PRIVATE .]*
    Goal::InputElementTemplateTail,
    // State#453:
    //   [KeywordOrIdentifierName -> PROTECTED .]*
    Goal::InputElementTemplateTail,
    // State#454:
    //   [KeywordOrIdentifierName -> PUBLIC .]*
    Goal::InputElementTemplateTail,
    // State#455:
    //   [KeywordOrIdentifierName -> SET .]*
    Goal::InputElementTemplateTail,
    // State#456:
    //   [KeywordOrIdentifierName -> STATIC .]*
    Goal::InputElementTemplateTail,
    // State#457:
    //   [KeywordOrIdentifierName -> TARGET .]*
    Goal::InputElementTemplateTail,
    // State#458:
    //   [KeywordOrIdentifierName -> YIELD .]*
    Goal::InputElementTemplateTail,
    // State#459:
    //   [SuperProperty -> SUPER DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#460:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [SuperProperty -> SUPER LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // State#461:
    //   [ArgumentList -> ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#462:
    //   [Arguments -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#463:
    //   [ArgumentList -> ArgumentList . COMMA ELLIPSIS AssignmentExpression_In]*
    //   [ArgumentList -> ArgumentList . COMMA AssignmentExpression_In]*
    //   [Arguments -> LPAREN ArgumentList . COMMA RPAREN]*
    //   [Arguments -> LPAREN ArgumentList . RPAREN]*
    Goal::InputElementDiv,
    // State#464:
    //   [ArgumentList -> AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#465:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [SwitchStatement -> SWITCH LPAREN Expression_In . RPAREN CaseBlock]*
    Goal::InputElementDiv,
    // State#466:
    //   [ThrowStatement -> THROW Expression_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#467:
    //   [Catch -> CATCH . LPAREN CatchParameter RPAREN Block]*
    //   [Catch -> CATCH . Block]*
    Goal::InputElementDiv,
    // State#468:
    //   [Finally -> FINALLY . Block]*
    Goal::InputElementDiv,
    // State#469:
    //   [TryStatement -> TRY Block Catch .]*
    //   [TryStatement -> TRY Block Catch . Finally]*
    Goal::InputElementRegExp,
    // State#470:
    //   [TryStatement -> TRY Block Finally .]*
    Goal::InputElementRegExp,
    // State#471:
    //   [TemplateMiddleList -> TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // State#472:
    //   [TemplateSpans -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#473:
    //   [TemplateMiddleList -> TemplateMiddleList . TemplateMiddle Expression_In]*
    //   [TemplateSpans -> TemplateMiddleList . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#474:
    //   [SubstitutionTemplate -> TemplateHead Expression_In TemplateSpans .]*
    Goal::InputElementTemplateTail,
    // State#475:
    //   [BindingIdentifier -> AWAIT .]*
    //   [KeywordOrIdentifierName -> AWAIT .]*
    Goal::InputElementDiv,
    // State#476:
    //   [BindingRestProperty -> ELLIPSIS . BindingIdentifier]*
    Goal::InputElementDiv,
    // State#477:
    //   [IdentifierNameButNotReservedWord -> GET .]*
    //   [KeywordOrIdentifierName -> GET .]*
    Goal::InputElementDiv,
    // State#478:
    //   [ObjectBindingPattern -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // State#479:
    //   [IdentifierNameButNotReservedWord -> SET .]*
    //   [KeywordOrIdentifierName -> SET .]*
    Goal::InputElementDiv,
    // State#480:
    //   [BindingIdentifier -> YIELD .]*
    //   [KeywordOrIdentifierName -> YIELD .]*
    Goal::InputElementDiv,
    // State#481:
    //   [SingleNameBinding -> BindingIdentifier .]*
    //   [SingleNameBinding -> BindingIdentifier . Initializer_In]*
    Goal::InputElementDiv,
    // State#482:
    //   [BindingPropertyList -> BindingProperty .]*
    Goal::InputElementDiv,
    // State#483:
    //   [BindingPropertyList -> BindingPropertyList . COMMA BindingProperty]*
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList . COMMA RBRACE]*
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList . COMMA BindingRestProperty RBRACE]*
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList . RBRACE]*
    Goal::InputElementDiv,
    // State#484:
    //   [ObjectBindingPattern -> LBRACE BindingRestProperty . RBRACE]*
    Goal::InputElementDiv,
    // State#485:
    //   [BindingProperty -> PropertyName . COLON BindingElement]*
    Goal::InputElementDiv,
    // State#486:
    //   [BindingProperty -> SingleNameBinding .]*
    Goal::InputElementDiv,
    // State#487:
    //   [BindingRestElement -> ELLIPSIS . BindingIdentifier]*
    //   [BindingRestElement -> ELLIPSIS . BindingPattern]*
    Goal::InputElementDiv,
    // State#488:
    //   [ArrayBindingPattern -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // State#489:
    //   [BindingElisionElement -> BindingElement .]*
    Goal::InputElementDiv,
    // State#490:
    //   [ArrayBindingPattern -> LBRACK BindingElementList . COMMA RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList . COMMA BindingRestElement RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList . COMMA Elision RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList . COMMA Elision BindingRestElement RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList . RBRACK]*
    //   [BindingElementList -> BindingElementList . COMMA BindingElisionElement]*
    Goal::InputElementDiv,
    // State#491:
    //   [BindingElementList -> BindingElisionElement .]*
    Goal::InputElementDiv,
    // State#492:
    //   [BindingElement -> BindingPattern .]*
    //   [BindingElement -> BindingPattern . Initializer_In]*
    Goal::InputElementDiv,
    // State#493:
    //   [ArrayBindingPattern -> LBRACK BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // State#494:
    //   [ArrayBindingPattern -> LBRACK Elision . RBRACK]*
    //   [ArrayBindingPattern -> LBRACK Elision . BindingRestElement RBRACK]*
    //   [BindingElisionElement -> Elision . BindingElement]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#495:
    //   [BindingElement -> SingleNameBinding .]*
    Goal::InputElementDiv,
    // State#496:
    //   [Initializer_In -> ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#497:
    //   [VariableDeclaration_In -> BindingIdentifier Initializer_In .]*
    Goal::InputElementDiv,
    // State#498:
    //   [VariableDeclaration_In -> BindingPattern Initializer_In .]*
    Goal::InputElementDiv,
    // State#499:
    //   [VariableDeclarationList_In -> VariableDeclarationList_In COMMA . VariableDeclaration_In]*
    Goal::InputElementDiv,
    // State#500:
    //   [VariableStatement -> VAR VariableDeclarationList_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#501:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [WhileStatement -> WHILE LPAREN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#502:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [WithStatement -> WITH LPAREN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#503:
    //   [AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .]*
    //   [MultiplicativeExpression -> MultiplicativeExpression . MultiplicativeOperator ExponentiationExpression]*
    Goal::InputElementTemplateTail,
    // State#504:
    //   [AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .]*
    //   [MultiplicativeExpression -> MultiplicativeExpression . MultiplicativeOperator ExponentiationExpression]*
    Goal::InputElementTemplateTail,
    // State#505:
    //   [ConciseBody_In -> LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#506:
    //   [ExpressionBody_In -> AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#507:
    //   [ArrowFunction_In -> ArrowParameters ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#508:
    //   [ConciseBody_In -> ExpressionBody_In .]*
    Goal::InputElementTemplateTail,
    // State#509:
    //   [BitwiseANDExpression_In -> BitwiseANDExpression_In BIT_AND EqualityExpression_In .]*
    //   [EqualityExpression_In -> EqualityExpression_In . EQ RelationalExpression_In]*
    //   [EqualityExpression_In -> EqualityExpression_In . EQ_STRICT RelationalExpression_In]*
    //   [EqualityExpression_In -> EqualityExpression_In . NE RelationalExpression_In]*
    //   [EqualityExpression_In -> EqualityExpression_In . NE_STRICT RelationalExpression_In]*
    Goal::InputElementTemplateTail,
    // State#510:
    //   [BitwiseORExpression_In -> BitwiseORExpression_In BIT_OR BitwiseXORExpression_In .]*
    //   [BitwiseXORExpression_In -> BitwiseXORExpression_In . BIT_XOR BitwiseANDExpression_In]*
    Goal::InputElementTemplateTail,
    // State#511:
    //   [BitwiseANDExpression_In -> BitwiseANDExpression_In . BIT_AND EqualityExpression_In]*
    //   [BitwiseXORExpression_In -> BitwiseXORExpression_In BIT_XOR BitwiseANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#512:
    //   [CallExpression -> CallExpression DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#513:
    //   [CallExpression -> CallExpression DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#514:
    //   [CallExpression -> CallExpression LBRACK Expression_In . RBRACK]*
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#515:
    //   [OptionalChain -> OPTIONAL_CHAINING LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // State#516:
    //   [OptionalChain -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#517:
    //   [OptionalChain -> OPTIONAL_CHAINING Arguments .]*
    Goal::InputElementTemplateTail,
    // State#518:
    //   [OptionalChain -> OPTIONAL_CHAINING KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#519:
    //   [OptionalChain -> OPTIONAL_CHAINING TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#520:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [SubstitutionTemplate_Tagged -> TemplateHead Expression_In . TemplateSpans_Tagged]*
    Goal::InputElementTemplateTail,
    // State#521:
    //   [OptionalChain -> OptionalChain DOT . PrivateIdentifier]*
    //   [OptionalChain -> OptionalChain DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#522:
    //   [OptionalChain -> OptionalChain LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // State#523:
    //   [OptionalChain -> OptionalChain Arguments .]*
    Goal::InputElementTemplateTail,
    // State#524:
    //   [OptionalChain -> OptionalChain TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#525:
    //   [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    //   [CoalesceExpression_In -> CoalesceExpressionHead_In NULLISH BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#526:
    //   [UnaryExpression_Await -> ADD . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#527:
    //   [AsyncArrowFunction_In_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#528:
    //   [AwaitExpression -> AWAIT . UnaryExpression_Await]*
    //   [BindingIdentifier_Await -> AWAIT .]*
    Goal::InputElementRegExp,
    // State#529:
    //   [UnaryExpression_Await -> BIT_NOT . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#530:
    //   [ClassExpression_Await -> CLASS . BindingIdentifier_Await ClassTail_Await]*
    //   [ClassExpression_Await -> CLASS . ClassTail_Await]*
    Goal::InputElementDiv,
    // State#531:
    //   [UpdateExpression_Await -> DEC . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#532:
    //   [UnaryExpression_Await -> DELETE . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#533:
    //   [ImportCall_Await -> IMPORT . LPAREN AssignmentExpression_In_Await RPAREN]*
    //   [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // State#534:
    //   [UpdateExpression_Await -> INC . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#535:
    //   [AsyncConciseBody_In -> LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#536:
    //   [ArrayLiteral_Await -> LBRACK . RBRACK]*
    //   [ArrayLiteral_Await -> LBRACK . ElementList_Await COMMA RBRACK]*
    //   [ArrayLiteral_Await -> LBRACK . ElementList_Await COMMA Elision RBRACK]*
    //   [ArrayLiteral_Await -> LBRACK . ElementList_Await RBRACK]*
    //   [ArrayLiteral_Await -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // State#537:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . ELLIPSIS BindingIdentifier_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . ELLIPSIS BindingPattern_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await COMMA ELLIPSIS BindingIdentifier_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await COMMA ELLIPSIS BindingPattern_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await RPAREN]*
    Goal::InputElementRegExp,
    // State#538:
    //   [MemberExpression_Await -> NEW . MemberExpression_Await Arguments_Await]*
    //   [NewExpression_Await -> NEW . NewExpression_Await]*
    //   [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // State#539:
    //   [UnaryExpression_Await -> NOT . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#540:
    //   [TemplateLiteral_Await -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#541:
    //   [RelationalExpression_In_Await -> PrivateIdentifier . IN ShiftExpression_Await]*
    Goal::InputElementDiv,
    // State#542:
    //   [PrimaryExpression_Await -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // State#543:
    //   [UnaryExpression_Await -> SUB . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#544:
    //   [SuperCall_Await -> SUPER . Arguments_Await]*
    //   [SuperProperty_Await -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty_Await -> SUPER . LBRACK Expression_In_Await RBRACK]*
    Goal::InputElementDiv,
    // State#545:
    //   [PrimaryExpression_Await -> THIS .]*
    Goal::InputElementTemplateTail,
    // State#546:
    //   [UnaryExpression_Await -> TYPEOF . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#547:
    //   [SubstitutionTemplate_Await -> TemplateHead . Expression_In_Await TemplateSpans_Await]*
    Goal::InputElementRegExp,
    // State#548:
    //   [UnaryExpression_Await -> VOID . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#549:
    //   [BindingIdentifier_Await -> YIELD .]*
    //   [IdentifierReference_Await -> YIELD .]*
    Goal::InputElementTemplateTail,
    // State#550:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    //   [ShiftExpression_Await -> AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#551:
    //   [PrimaryExpression_Await -> ArrayLiteral_Await .]*
    Goal::InputElementTemplateTail,
    // State#552:
    //   [AssignmentExpression_In_Await -> ArrowFunction_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#553:
    //   [ArrowFunction_In_Await -> ArrowParameters_Await . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // State#554:
    //   [ExpressionBody_In_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#555:
    //   [AssignmentExpression_In_Await -> AsyncArrowFunction_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#556:
    //   [AsyncArrowFunction_In -> CoverCallExpressionAndAsyncArrowHead ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#557:
    //   [PrimaryExpression_Await -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#558:
    //   [PrimaryExpression_Await -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#559:
    //   [UnaryExpression_Await -> AwaitExpression .]*
    Goal::InputElementTemplateTail,
    // State#560:
    //   [ArrowParameters_Await -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // State#561:
    //   [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await . BIT_AND EqualityExpression_In_Await]*
    //   [BitwiseXORExpression_In_Await -> BitwiseANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#562:
    //   [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    //   [CoalesceExpressionHead_In_Await -> BitwiseORExpression_In_Await .]*
    //   [LogicalANDExpression_In_Await -> BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#563:
    //   [BitwiseORExpression_In_Await -> BitwiseXORExpression_In_Await .]*
    //   [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await . BIT_XOR BitwiseANDExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // State#564:
    //   [CallExpression_Await -> CallExpression_Await . DOT PrivateIdentifier]*
    //   [CallExpression_Await -> CallExpression_Await . DOT KeywordOrIdentifierName]*
    //   [CallExpression_Await -> CallExpression_Await . LBRACK Expression_In_Await RBRACK]*
    //   [CallExpression_Await -> CallExpression_Await . Arguments_Await]*
    //   [CallExpression_Await -> CallExpression_Await . TemplateLiteral_Await_Tagged]*
    //   [LeftHandSideExpression_Await -> CallExpression_Await .]*
    //   [OptionalExpression_Await -> CallExpression_Await . OptionalChain_Await]*
    Goal::InputElementTemplateTail,
    // State#565:
    //   [PrimaryExpression_Await -> ClassExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#566:
    //   [CoalesceExpression_In_Await -> CoalesceExpressionHead_In_Await . NULLISH BitwiseORExpression_In_Await]*
    Goal::InputElementDiv,
    // State#567:
    //   [CoalesceExpressionHead_In_Await -> CoalesceExpression_In_Await .]*
    //   [ShortCircuitExpression_In_Await -> CoalesceExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#568:
    //   [AssignmentExpression_In_Await -> ConditionalExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#569:
    //   [AsyncArrowFunction_In_Await -> CoverCallExpressionAndAsyncArrowHead_Await . ARROW AsyncConciseBody_In]*
    //   [CallExpression_Await -> CoverCallExpressionAndAsyncArrowHead_Await .]*
    Goal::InputElementTemplateTail,
    // State#570:
    //   [ArrowParameters_Await -> CoverParenthesizedExpressionAndArrowParameterList_Await .]*
    //   [PrimaryExpression_Await -> CoverParenthesizedExpressionAndArrowParameterList_Await .]*
    Goal::InputElementTemplateTail,
    // State#571:
    //   [BitwiseANDExpression_In_Await -> EqualityExpression_In_Await .]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ RelationalExpression_In_Await]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ_STRICT RelationalExpression_In_Await]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE RelationalExpression_In_Await]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE_STRICT RelationalExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // State#572:
    //   [MultiplicativeExpression_Await -> ExponentiationExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#573:
    //   [AsyncConciseBody_In -> ExpressionBody_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#574:
    //   [PrimaryExpression_Await -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#575:
    //   [PrimaryExpression_Await -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#576:
    //   [BindingIdentifier_Await -> Identifier .]*
    //   [IdentifierReference_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#577:
    //   [PrimaryExpression_Await -> IdentifierReference_Await .]*
    Goal::InputElementTemplateTail,
    // State#578:
    //   [CallExpression_Await -> ImportCall_Await .]*
    Goal::InputElementTemplateTail,
    // State#579:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_In_Await]*
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_In_Await]*
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_In_Await]*
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_In_Await]*
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_In_Await]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementTemplateTail,
    // State#580:
    //   [PrimaryExpression_Await -> Literal .]*
    Goal::InputElementTemplateTail,
    // State#581:
    //   [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await . AND BitwiseORExpression_In_Await]*
    //   [LogicalORExpression_In_Await -> LogicalANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#582:
    //   [LogicalORExpression_In_Await -> LogicalORExpression_In_Await . OR LogicalANDExpression_In_Await]*
    //   [ShortCircuitExpression_In_Await -> LogicalORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#583:
    //   [CoverCallExpressionAndAsyncArrowHead_Await -> MemberExpression_Await . Arguments_Await]*
    //   [MemberExpression_Await -> MemberExpression_Await . DOT PrivateIdentifier]*
    //   [MemberExpression_Await -> MemberExpression_Await . DOT KeywordOrIdentifierName]*
    //   [MemberExpression_Await -> MemberExpression_Await . LBRACK Expression_In_Await RBRACK]*
    //   [MemberExpression_Await -> MemberExpression_Await . TemplateLiteral_Await_Tagged]*
    //   [NewExpression_Await -> MemberExpression_Await .]*
    //   [OptionalExpression_Await -> MemberExpression_Await . OptionalChain_Await]*
    Goal::InputElementTemplateTail,
    // State#584:
    //   [MemberExpression_Await -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // State#585:
    //   [AdditiveExpression_Await -> MultiplicativeExpression_Await .]*
    //   [MultiplicativeExpression_Await -> MultiplicativeExpression_Await . MultiplicativeOperator ExponentiationExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#586:
    //   [LeftHandSideExpression_Await -> NewExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#587:
    //   [LeftHandSideExpression_Await -> OptionalExpression_Await .]*
    //   [OptionalExpression_Await -> OptionalExpression_Await . OptionalChain_Await]*
    Goal::InputElementTemplateTail,
    // State#588:
    //   [MemberExpression_Await -> PrimaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#589:
    //   [EqualityExpression_In_Await -> RelationalExpression_In_Await .]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#590:
    //   [RelationalExpression_In_Await -> ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#591:
    //   [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await .]*
    //   [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await . CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // State#592:
    //   [TemplateLiteral_Await -> SubstitutionTemplate_Await .]*
    Goal::InputElementTemplateTail,
    // State#593:
    //   [CallExpression_Await -> SuperCall_Await .]*
    Goal::InputElementTemplateTail,
    // State#594:
    //   [MemberExpression_Await -> SuperProperty_Await .]*
    Goal::InputElementTemplateTail,
    // State#595:
    //   [PrimaryExpression_Await -> TemplateLiteral_Await .]*
    Goal::InputElementTemplateTail,
    // State#596:
    //   [ExponentiationExpression_Await -> UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#597:
    //   [ExponentiationExpression_Await -> UpdateExpression_Await . EXP ExponentiationExpression_Await]*
    //   [UnaryExpression_Await -> UpdateExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#598:
    //   [EqualityExpression_In -> EqualityExpression_In EQ RelationalExpression_In .]*
    //   [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // State#599:
    //   [EqualityExpression_In -> EqualityExpression_In EQ_STRICT RelationalExpression_In .]*
    //   [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // State#600:
    //   [EqualityExpression_In -> EqualityExpression_In NE RelationalExpression_In .]*
    //   [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // State#601:
    //   [EqualityExpression_In -> EqualityExpression_In NE_STRICT RelationalExpression_In .]*
    //   [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    //   [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // State#602:
    //   [Expression_In -> Expression_In COMMA AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#603:
    //   [FunctionDeclaration -> FUNCTION . BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#604:
    //   [LabelledItem -> FunctionDeclaration .]*
    Goal::InputElementRegExp,
    // State#605:
    //   [LabelledStatement -> LabelIdentifier COLON LabelledItem .]*
    Goal::InputElementRegExp,
    // State#606:
    //   [LabelledItem -> Statement .]*
    Goal::InputElementRegExp,
    // State#607:
    //   [AssignmentExpression_In -> LeftHandSideExpression AND_ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#608:
    //   [AssignmentExpression_In -> LeftHandSideExpression ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#609:
    //   [AssignmentExpression_In -> LeftHandSideExpression NULLISH_ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#610:
    //   [AssignmentExpression_In -> LeftHandSideExpression OR_ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#611:
    //   [AssignmentExpression_In -> LeftHandSideExpression AssignmentOperator AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#612:
    //   [LexicalBinding_In -> BindingIdentifier Initializer_In .]*
    Goal::InputElementDiv,
    // State#613:
    //   [BindingList_In -> BindingList_In COMMA . LexicalBinding_In]*
    Goal::InputElementDiv,
    // State#614:
    //   [LexicalDeclaration_In -> LetOrConst BindingList_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#615:
    //   [LexicalBinding_In -> BindingPattern Initializer_In .]*
    Goal::InputElementDiv,
    // State#616:
    //   [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    //   [LogicalANDExpression_In -> LogicalANDExpression_In AND BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#617:
    //   [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    //   [LogicalANDExpression_In -> BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#618:
    //   [LogicalANDExpression_In -> LogicalANDExpression_In . AND BitwiseORExpression_In]*
    //   [LogicalORExpression_In -> LogicalORExpression_In OR LogicalANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#619:
    //   [MemberExpression -> MemberExpression DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#620:
    //   [MemberExpression -> MemberExpression DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#621:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [MemberExpression -> MemberExpression LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // State#622:
    //   [MultiplicativeExpression -> MultiplicativeExpression MultiplicativeOperator ExponentiationExpression .]*
    Goal::InputElementTemplateTail,
    // State#623:
    //   [RelationalExpression_In -> RelationalExpression_In GT ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#624:
    //   [RelationalExpression_In -> RelationalExpression_In GTE ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#625:
    //   [RelationalExpression_In -> RelationalExpression_In IN ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#626:
    //   [RelationalExpression_In -> RelationalExpression_In INSTANCEOF ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#627:
    //   [RelationalExpression_In -> RelationalExpression_In LT ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#628:
    //   [RelationalExpression_In -> RelationalExpression_In LTE ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // State#629:
    //   [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    //   [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    //   [ShiftExpression -> ShiftExpression SAR AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // State#630:
    //   [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    //   [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    //   [ShiftExpression -> ShiftExpression SHL AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // State#631:
    //   [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    //   [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    //   [ShiftExpression -> ShiftExpression SHR AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // State#632:
    //   [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL AssignmentExpression_In . COLON AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#633:
    //   [ExponentiationExpression -> UpdateExpression EXP ExponentiationExpression .]*
    Goal::InputElementTemplateTail,
    // State#634:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#635:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL . BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#636:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#637:
    //   [ClassHeritage -> EXTENDS LeftHandSideExpression .]*
    Goal::InputElementDiv,
    // State#638:
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition -> GET . ClassElementName LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#639:
    //   [ClassTail -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#640:
    //   [ClassElement -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#641:
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition -> SET . ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#642:
    //   [ClassElement -> STATIC . FieldDefinition SEMI_COLON]*
    //   [ClassElement -> STATIC . MethodDefinition]*
    //   [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    //   [KeywordOrIdentifierName -> STATIC .]*
    Goal::InputElementDiv,
    // State#643:
    //   [ClassTail -> LBRACE ClassBody . RBRACE]*
    Goal::InputElementDiv,
    // State#644:
    //   [ClassElementList -> ClassElement .]*
    Goal::InputElementDiv,
    // State#645:
    //   [ClassBody -> ClassElementList .]*
    //   [ClassElementList -> ClassElementList . ClassElement]*
    Goal::InputElementDiv,
    // State#646:
    //   [FieldDefinition -> ClassElementName .]*
    //   [FieldDefinition -> ClassElementName . Initializer_In]*
    //   [MethodDefinition -> ClassElementName . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#647:
    //   [ClassElement -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // State#648:
    //   [ClassElement -> FieldDefinition . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#649:
    //   [ClassElement -> MethodDefinition .]*
    Goal::InputElementDiv,
    // State#650:
    //   [ClassElementName -> PropertyName .]*
    Goal::InputElementDiv,
    // State#651:
    //   [ClassExpression -> CLASS BindingIdentifier ClassTail .]*
    Goal::InputElementTemplateTail,
    // State#652:
    //   [ClassTail -> ClassHeritage LBRACE . RBRACE]*
    //   [ClassTail -> ClassHeritage LBRACE . ClassBody RBRACE]*
    Goal::InputElementDiv,
    // State#653:
    //   [FormalParameter -> BindingElement .]*
    Goal::InputElementDiv,
    // State#654:
    //   [FunctionRestParameter -> BindingRestElement .]*
    Goal::InputElementDiv,
    // State#655:
    //   [FormalParameterList -> FormalParameter .]*
    Goal::InputElementDiv,
    // State#656:
    //   [FormalParameterList -> FormalParameterList . COMMA FormalParameter]*
    //   [FormalParameters -> FormalParameterList .]*
    //   [FormalParameters -> FormalParameterList . COMMA]*
    //   [FormalParameters -> FormalParameterList . COMMA FunctionRestParameter]*
    Goal::InputElementDiv,
    // State#657:
    //   [FunctionExpression -> FUNCTION LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#658:
    //   [FormalParameters -> FunctionRestParameter .]*
    Goal::InputElementDiv,
    // State#659:
    //   [BindingIdentifier_Yield -> AWAIT .]*
    Goal::InputElementDiv,
    // State#660:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorExpression -> FUNCTION MUL LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#661:
    //   [BindingIdentifier_Yield -> YIELD .]*
    Goal::InputElementDiv,
    // State#662:
    //   [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#663:
    //   [BindingIdentifier_Yield -> Identifier .]*
    Goal::InputElementDiv,
    // State#664:
    //   [FormalParameters -> () .]*
    //   [FunctionExpression -> FUNCTION BindingIdentifier LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#665:
    //   [AsyncGeneratorMethod -> ASYNC MUL . ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#666:
    //   [AsyncMethod -> ASYNC ClassElementName . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#667:
    //   [PropertyDefinition -> ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#668:
    //   [MethodDefinition -> GET ClassElementName . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#669:
    //   [ComputedPropertyName -> LBRACK AssignmentExpression_In . RBRACK]*
    Goal::InputElementDiv,
    // State#670:
    //   [GeneratorMethod -> MUL ClassElementName . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#671:
    //   [MethodDefinition -> SET ClassElementName . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#672:
    //   [FormalParameters -> () .]*
    //   [MethodDefinition -> ClassElementName LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#673:
    //   [CoverInitializedName -> IdentifierReference Initializer_In .]*
    Goal::InputElementDiv,
    // State#674:
    //   [ObjectLiteral -> LBRACE PropertyDefinitionList COMMA . RBRACE]*
    //   [PropertyDefinitionList -> PropertyDefinitionList COMMA . PropertyDefinition]*
    Goal::InputElementDiv,
    // State#675:
    //   [ObjectLiteral -> LBRACE PropertyDefinitionList RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#676:
    //   [PropertyDefinition -> PropertyName COLON . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#677:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#678:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#679:
    //   [AsyncArrowFunction_In -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#680:
    //   [DoWhileStatement -> DO Statement WHILE LPAREN . Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#681:
    //   [AsyncArrowFunction -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // State#682:
    //   [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#683:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#684:
    //   [ForBinding -> BindingIdentifier .]*
    //   [VariableDeclaration -> BindingIdentifier .]*
    //   [VariableDeclaration -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // State#685:
    //   [ForBinding -> BindingPattern .]*
    //   [VariableDeclaration -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // State#686:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding . IN Expression_In RPAREN Statement]*
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding . OF AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#687:
    //   [VariableDeclarationList -> VariableDeclaration .]*
    Goal::InputElementDiv,
    // State#688:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    //   [VariableDeclarationList -> VariableDeclarationList . COMMA VariableDeclaration]*
    Goal::InputElementDiv,
    // State#689:
    //   [ArrowFunction -> ArrowParameters ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // State#690:
    //   [BitwiseANDExpression -> BitwiseANDExpression BIT_AND . EqualityExpression]*
    Goal::InputElementRegExp,
    // State#691:
    //   [BitwiseORExpression -> BitwiseORExpression BIT_OR . BitwiseXORExpression]*
    Goal::InputElementRegExp,
    // State#692:
    //   [BitwiseXORExpression -> BitwiseXORExpression BIT_XOR . BitwiseANDExpression]*
    Goal::InputElementRegExp,
    // State#693:
    //   [CoalesceExpression -> CoalesceExpressionHead NULLISH . BitwiseORExpression]*
    Goal::InputElementRegExp,
    // State#694:
    //   [AsyncArrowFunction -> CoverCallExpressionAndAsyncArrowHead ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#695:
    //   [EqualityExpression -> EqualityExpression EQ . RelationalExpression]*
    Goal::InputElementRegExp,
    // State#696:
    //   [EqualityExpression -> EqualityExpression EQ_STRICT . RelationalExpression]*
    Goal::InputElementRegExp,
    // State#697:
    //   [EqualityExpression -> EqualityExpression NE . RelationalExpression]*
    Goal::InputElementRegExp,
    // State#698:
    //   [EqualityExpression -> EqualityExpression NE_STRICT . RelationalExpression]*
    Goal::InputElementRegExp,
    // State#699:
    //   [Expression -> Expression COMMA . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#700:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#701:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration IN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#702:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration OF . AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#703:
    //   [AssignmentExpression -> LeftHandSideExpression AND_ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#704:
    //   [AssignmentExpression -> LeftHandSideExpression ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#705:
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#706:
    //   [AssignmentExpression -> LeftHandSideExpression NULLISH_ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#707:
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF . AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#708:
    //   [AssignmentExpression -> LeftHandSideExpression OR_ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#709:
    //   [AssignmentExpression -> LeftHandSideExpression AssignmentOperator . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#710:
    //   [ForBinding -> BindingIdentifier .]*
    //   [LexicalBinding -> BindingIdentifier .]*
    //   [LexicalBinding -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // State#711:
    //   [BindingList -> BindingList . COMMA LexicalBinding]*
    //   [LexicalDeclaration -> LetOrConst BindingList . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#712:
    //   [ForBinding -> BindingPattern .]*
    //   [LexicalBinding -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // State#713:
    //   [ForDeclaration -> LetOrConst ForBinding .]*
    Goal::InputElementDiv,
    // State#714:
    //   [BindingList -> LexicalBinding .]*
    Goal::InputElementDiv,
    // State#715:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#716:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#717:
    //   [LogicalANDExpression -> LogicalANDExpression AND . BitwiseORExpression]*
    Goal::InputElementRegExp,
    // State#718:
    //   [LogicalORExpression -> LogicalORExpression OR . LogicalANDExpression]*
    Goal::InputElementRegExp,
    // State#719:
    //   [RelationalExpression -> RelationalExpression GT . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#720:
    //   [RelationalExpression -> RelationalExpression GTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#721:
    //   [RelationalExpression -> RelationalExpression INSTANCEOF . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#722:
    //   [RelationalExpression -> RelationalExpression LT . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#723:
    //   [RelationalExpression -> RelationalExpression LTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // State#724:
    //   [ConditionalExpression -> ShortCircuitExpression CONDITIONAL . AssignmentExpression_In COLON AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#725:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#726:
    //   [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#727:
    //   [IfStatement -> IF LPAREN Expression_In RPAREN . Statement ELSE Statement]*
    //   [IfStatement -> IF LPAREN Expression_In RPAREN . Statement !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#728:
    //   [ImportCall -> IMPORT LPAREN AssignmentExpression_In RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#729:
    //   [ArrayLiteral -> LBRACK ElementList COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#730:
    //   [ElementList -> ElementList COMMA AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#731:
    //   [ArrayLiteral -> LBRACK ElementList COMMA Elision . RBRACK]*
    //   [ElementList -> ElementList COMMA Elision . AssignmentExpression_In]*
    //   [ElementList -> ElementList COMMA Elision . SpreadElement]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#732:
    //   [ElementList -> ElementList COMMA SpreadElement .]*
    Goal::InputElementDiv,
    // State#733:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingIdentifier RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#734:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingPattern RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#735:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS . BindingIdentifier RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS . BindingPattern RPAREN]*
    Goal::InputElementDiv,
    // State#736:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#737:
    //   [SuperProperty -> SUPER LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#738:
    //   [ArgumentList -> ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#739:
    //   [ArgumentList -> ArgumentList COMMA . ELLIPSIS AssignmentExpression_In]*
    //   [ArgumentList -> ArgumentList COMMA . AssignmentExpression_In]*
    //   [Arguments -> LPAREN ArgumentList COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // State#740:
    //   [Arguments -> LPAREN ArgumentList RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#741:
    //   [SwitchStatement -> SWITCH LPAREN Expression_In RPAREN . CaseBlock]*
    Goal::InputElementDiv,
    // State#742:
    //   [Catch -> CATCH LPAREN . CatchParameter RPAREN Block]*
    Goal::InputElementDiv,
    // State#743:
    //   [Catch -> CATCH Block .]*
    Goal::InputElementRegExp,
    // State#744:
    //   [Finally -> FINALLY Block .]*
    Goal::InputElementRegExp,
    // State#745:
    //   [TryStatement -> TRY Block Catch Finally .]*
    Goal::InputElementRegExp,
    // State#746:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [TemplateMiddleList -> TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // State#747:
    //   [TemplateMiddleList -> TemplateMiddleList TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // State#748:
    //   [TemplateSpans -> TemplateMiddleList TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#749:
    //   [BindingRestProperty -> ELLIPSIS BindingIdentifier .]*
    Goal::InputElementDiv,
    // State#750:
    //   [SingleNameBinding -> BindingIdentifier Initializer_In .]*
    Goal::InputElementDiv,
    // State#751:
    //   [BindingPropertyList -> BindingPropertyList COMMA . BindingProperty]*
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA . RBRACE]*
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA . BindingRestProperty RBRACE]*
    Goal::InputElementDiv,
    // State#752:
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList RBRACE .]*
    Goal::InputElementDiv,
    // State#753:
    //   [ObjectBindingPattern -> LBRACE BindingRestProperty RBRACE .]*
    Goal::InputElementDiv,
    // State#754:
    //   [BindingProperty -> PropertyName COLON . BindingElement]*
    Goal::InputElementDiv,
    // State#755:
    //   [BindingRestElement -> ELLIPSIS BindingIdentifier .]*
    Goal::InputElementDiv,
    // State#756:
    //   [BindingRestElement -> ELLIPSIS BindingPattern .]*
    Goal::InputElementDiv,
    // State#757:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA . RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA . BindingRestElement RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA . Elision RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA . Elision BindingRestElement RBRACK]*
    //   [BindingElementList -> BindingElementList COMMA . BindingElisionElement]*
    Goal::InputElementDiv,
    // State#758:
    //   [ArrayBindingPattern -> LBRACK BindingElementList RBRACK .]*
    Goal::InputElementDiv,
    // State#759:
    //   [BindingElement -> BindingPattern Initializer_In .]*
    Goal::InputElementDiv,
    // State#760:
    //   [ArrayBindingPattern -> LBRACK BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // State#761:
    //   [ArrayBindingPattern -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#762:
    //   [BindingElisionElement -> Elision BindingElement .]*
    Goal::InputElementDiv,
    // State#763:
    //   [ArrayBindingPattern -> LBRACK Elision BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // State#764:
    //   [Initializer_In -> ASSIGN AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#765:
    //   [VariableDeclarationList_In -> VariableDeclarationList_In COMMA VariableDeclaration_In .]*
    Goal::InputElementDiv,
    // State#766:
    //   [WhileStatement -> WHILE LPAREN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#767:
    //   [WithStatement -> WITH LPAREN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#768:
    //   [DoWhileStatement_Return -> DO . Statement_Return WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#769:
    //   [ForInOfStatement_Return -> FOR . LPAREN VAR ForBinding IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR . LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR . LPAREN ForDeclaration IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR . LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR . LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR . LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#770:
    //   [IfStatement_Return -> IF . LPAREN Expression_In RPAREN Statement_Return ELSE Statement_Return]*
    //   [IfStatement_Return -> IF . LPAREN Expression_In RPAREN Statement_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#771:
    //   [Block_Return -> LBRACE . RBRACE]*
    //   [Block_Return -> LBRACE . StatementList_Return RBRACE]*
    Goal::InputElementRegExp,
    // State#772:
    //   [ReturnStatement -> RETURN . SEMI_COLON]*
    //   [ReturnStatement -> RETURN . Expression_In SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#773:
    //   [SwitchStatement_Return -> SWITCH . LPAREN Expression_In RPAREN CaseBlock_Return]*
    Goal::InputElementDiv,
    // State#774:
    //   [TryStatement_Return -> TRY . Block_Return Catch_Return]*
    //   [TryStatement_Return -> TRY . Block_Return Catch_Return Finally_Return]*
    //   [TryStatement_Return -> TRY . Block_Return Finally_Return]*
    Goal::InputElementDiv,
    // State#775:
    //   [WhileStatement_Return -> WHILE . LPAREN Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#776:
    //   [WithStatement_Return -> WITH . LPAREN Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#777:
    //   [Statement_Return -> BlockStatement_Return .]*
    Goal::InputElementRegExp,
    // State#778:
    //   [BlockStatement_Return -> Block_Return .]*
    Goal::InputElementRegExp,
    // State#779:
    //   [Statement_Return -> BreakStatement .]*
    Goal::InputElementRegExp,
    // State#780:
    //   [Statement_Return -> BreakableStatement_Return .]*
    Goal::InputElementRegExp,
    // State#781:
    //   [Statement_Return -> ContinueStatement .]*
    Goal::InputElementRegExp,
    // State#782:
    //   [Statement_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // State#783:
    //   [StatementListItem_Return -> Declaration .]*
    Goal::InputElementRegExp,
    // State#784:
    //   [IterationStatement_Return -> DoWhileStatement_Return .]*
    Goal::InputElementRegExp,
    // State#785:
    //   [Statement_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // State#786:
    //   [Statement_Return -> ExpressionStatement .]*
    Goal::InputElementRegExp,
    // State#787:
    //   [IterationStatement_Return -> ForInOfStatement_Return .]*
    Goal::InputElementRegExp,
    // State#788:
    //   [IterationStatement_Return -> ForStatement_Return .]*
    Goal::InputElementRegExp,
    // State#789:
    //   [ConciseBody_In -> LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#790:
    //   [FunctionBody -> FunctionStatementList .]*
    Goal::InputElementDiv,
    // State#791:
    //   [Statement_Return -> IfStatement_Return .]*
    Goal::InputElementRegExp,
    // State#792:
    //   [BreakableStatement_Return -> IterationStatement_Return .]*
    Goal::InputElementRegExp,
    // State#793:
    //   [LabelledStatement_Return -> LabelIdentifier . COLON LabelledItem_Return]*
    Goal::InputElementDiv,
    // State#794:
    //   [Statement_Return -> LabelledStatement_Return .]*
    Goal::InputElementRegExp,
    // State#795:
    //   [Statement_Return -> ReturnStatement .]*
    Goal::InputElementRegExp,
    // State#796:
    //   [StatementList_Return -> StatementListItem_Return .]*
    Goal::InputElementRegExp,
    // State#797:
    //   [FunctionStatementList -> StatementList_Return .]*
    //   [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // State#798:
    //   [StatementListItem_Return -> Statement_Return .]*
    Goal::InputElementRegExp,
    // State#799:
    //   [BreakableStatement_Return -> SwitchStatement_Return .]*
    Goal::InputElementRegExp,
    // State#800:
    //   [Statement_Return -> ThrowStatement .]*
    Goal::InputElementRegExp,
    // State#801:
    //   [Statement_Return -> TryStatement_Return .]*
    Goal::InputElementRegExp,
    // State#802:
    //   [Statement_Return -> VariableStatement .]*
    Goal::InputElementRegExp,
    // State#803:
    //   [IterationStatement_Return -> WhileStatement_Return .]*
    Goal::InputElementRegExp,
    // State#804:
    //   [Statement_Return -> WithStatement_Return .]*
    Goal::InputElementRegExp,
    // State#805:
    //   [CallExpression -> CallExpression LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#806:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [OptionalChain -> OPTIONAL_CHAINING LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // State#807:
    //   [TemplateMiddleList_Tagged -> TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // State#808:
    //   [TemplateSpans_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#809:
    //   [TemplateMiddleList_Tagged -> TemplateMiddleList_Tagged . TemplateMiddle Expression_In]*
    //   [TemplateSpans_Tagged -> TemplateMiddleList_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#810:
    //   [SubstitutionTemplate_Tagged -> TemplateHead Expression_In TemplateSpans_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#811:
    //   [OptionalChain -> OptionalChain DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#812:
    //   [OptionalChain -> OptionalChain DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#813:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [OptionalChain -> OptionalChain LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // State#814:
    //   [AwaitExpression -> AWAIT . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // State#815:
    //   [ObjectLiteral_Await -> LBRACE . RBRACE]*
    //   [ObjectLiteral_Await -> LBRACE . PropertyDefinitionList_Await COMMA RBRACE]*
    //   [ObjectLiteral_Await -> LBRACE . PropertyDefinitionList_Await RBRACE]*
    Goal::InputElementDiv,
    // State#816:
    //   [IdentifierReference_Await -> YIELD .]*
    Goal::InputElementTemplateTail,
    // State#817:
    //   [CallExpression_Await -> CoverCallExpressionAndAsyncArrowHead_Await .]*
    Goal::InputElementTemplateTail,
    // State#818:
    //   [PrimaryExpression_Await -> CoverParenthesizedExpressionAndArrowParameterList_Await .]*
    Goal::InputElementTemplateTail,
    // State#819:
    //   [IdentifierReference_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#820:
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementTemplateTail,
    // State#821:
    //   [PrimaryExpression_Await -> ObjectLiteral_Await .]*
    Goal::InputElementTemplateTail,
    // State#822:
    //   [UnaryExpression_Await -> ADD UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#823:
    //   [UnaryExpression_Await -> UpdateExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#824:
    //   [AsyncArrowFunction_In_Await -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#825:
    //   [AwaitExpression -> AWAIT UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#826:
    //   [UnaryExpression_Await -> BIT_NOT UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#827:
    //   [ClassHeritage_Await -> EXTENDS . LeftHandSideExpression_Await]*
    Goal::InputElementRegExp,
    // State#828:
    //   [ClassTail_Await -> LBRACE . RBRACE]*
    //   [ClassTail_Await -> LBRACE . ClassBody_Await RBRACE]*
    Goal::InputElementDiv,
    // State#829:
    //   [ClassExpression_Await -> CLASS BindingIdentifier_Await . ClassTail_Await]*
    Goal::InputElementDiv,
    // State#830:
    //   [ClassTail_Await -> ClassHeritage_Await . LBRACE RBRACE]*
    //   [ClassTail_Await -> ClassHeritage_Await . LBRACE ClassBody_Await RBRACE]*
    Goal::InputElementDiv,
    // State#831:
    //   [ClassExpression_Await -> CLASS ClassTail_Await .]*
    Goal::InputElementTemplateTail,
    // State#832:
    //   [UpdateExpression_Await -> DEC UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#833:
    //   [UnaryExpression_Await -> DELETE UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#834:
    //   [ImportCall_Await -> IMPORT LPAREN . AssignmentExpression_In_Await RPAREN]*
    Goal::InputElementRegExp,
    // State#835:
    //   [UpdateExpression_Await -> INC UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#836:
    //   [AsyncArrowFunction_In_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionDeclaration_Await -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration_Await -> ASYNC . FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#837:
    //   [BreakStatement_Await -> BREAK . SEMI_COLON]*
    //   [BreakStatement_Await -> BREAK . LabelIdentifier_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#838:
    //   [ClassDeclaration_Await -> CLASS . BindingIdentifier_Await ClassTail_Await]*
    Goal::InputElementDiv,
    // State#839:
    //   [ContinueStatement_Await -> CONTINUE . SEMI_COLON]*
    //   [ContinueStatement_Await -> CONTINUE . LabelIdentifier_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#840:
    //   [DoWhileStatement_Await_Return -> DO . Statement_Await_Return WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#841:
    //   [ForInOfStatement_Await_Return -> FOR . AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#842:
    //   [FunctionDeclaration_Await -> FUNCTION . BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    //   [GeneratorDeclaration_Await -> FUNCTION . MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#843:
    //   [IfStatement_Await_Return -> IF . LPAREN Expression_In_Await RPAREN Statement_Await_Return ELSE Statement_Await_Return]*
    //   [IfStatement_Await_Return -> IF . LPAREN Expression_In_Await RPAREN Statement_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#844:
    //   [Block_Await_Return -> LBRACE . RBRACE]*
    //   [Block_Await_Return -> LBRACE . StatementList_Await_Return RBRACE]*
    Goal::InputElementRegExp,
    // State#845:
    //   [ReturnStatement_Await -> RETURN . SEMI_COLON]*
    //   [ReturnStatement_Await -> RETURN . Expression_In_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#846:
    //   [SwitchStatement_Await_Return -> SWITCH . LPAREN Expression_In_Await RPAREN CaseBlock_Await_Return]*
    Goal::InputElementDiv,
    // State#847:
    //   [ThrowStatement_Await -> THROW . Expression_In_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#848:
    //   [TryStatement_Await_Return -> TRY . Block_Await_Return Catch_Await_Return]*
    //   [TryStatement_Await_Return -> TRY . Block_Await_Return Catch_Await_Return Finally_Await_Return]*
    //   [TryStatement_Await_Return -> TRY . Block_Await_Return Finally_Await_Return]*
    Goal::InputElementDiv,
    // State#849:
    //   [VariableStatement_Await -> VAR . VariableDeclarationList_In_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#850:
    //   [WhileStatement_Await_Return -> WHILE . LPAREN Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#851:
    //   [WithStatement_Await_Return -> WITH . LPAREN Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#852:
    //   [BindingIdentifier_Await -> YIELD .]*
    //   [IdentifierReference_Await -> YIELD .]*
    //   [LabelIdentifier_Await -> YIELD .]*
    Goal::InputElementDiv,
    // State#853:
    //   [Expression_In_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#854:
    //   [AsyncConciseBody_In -> LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#855:
    //   [HoistableDeclaration_Await -> AsyncFunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#856:
    //   [HoistableDeclaration_Await -> AsyncGeneratorDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#857:
    //   [Statement_Await_Return -> BlockStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#858:
    //   [BlockStatement_Await_Return -> Block_Await_Return .]*
    Goal::InputElementRegExp,
    // State#859:
    //   [Statement_Await_Return -> BreakStatement_Await .]*
    Goal::InputElementRegExp,
    // State#860:
    //   [Statement_Await_Return -> BreakableStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#861:
    //   [Declaration_Await -> ClassDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#862:
    //   [Statement_Await_Return -> ContinueStatement_Await .]*
    Goal::InputElementRegExp,
    // State#863:
    //   [Statement_Await_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // State#864:
    //   [StatementListItem_Await_Return -> Declaration_Await .]*
    Goal::InputElementRegExp,
    // State#865:
    //   [IterationStatement_Await_Return -> DoWhileStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#866:
    //   [Statement_Await_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // State#867:
    //   [Statement_Await_Return -> ExpressionStatement_Await .]*
    Goal::InputElementRegExp,
    // State#868:
    //   [ExpressionStatement_Await -> Expression_In_Await . SEMI_COLON]*
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#869:
    //   [IterationStatement_Await_Return -> ForInOfStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#870:
    //   [IterationStatement_Await_Return -> ForStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#871:
    //   [AsyncFunctionBody -> FunctionBody_Await .]*
    Goal::InputElementDiv,
    // State#872:
    //   [HoistableDeclaration_Await -> FunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#873:
    //   [FunctionBody_Await -> FunctionStatementList_Await .]*
    Goal::InputElementDiv,
    // State#874:
    //   [HoistableDeclaration_Await -> GeneratorDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#875:
    //   [Declaration_Await -> HoistableDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#876:
    //   [BindingIdentifier_Await -> Identifier .]*
    //   [IdentifierReference_Await -> Identifier .]*
    //   [LabelIdentifier_Await -> Identifier .]*
    Goal::InputElementDiv,
    // State#877:
    //   [Statement_Await_Return -> IfStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#878:
    //   [BreakableStatement_Await_Return -> IterationStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#879:
    //   [LabelledStatement_Await_Return -> LabelIdentifier_Await . COLON LabelledItem_Await_Return]*
    Goal::InputElementDiv,
    // State#880:
    //   [Statement_Await_Return -> LabelledStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#881:
    //   [LexicalDeclaration_In_Await -> LetOrConst . BindingList_In_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#882:
    //   [Declaration_Await -> LexicalDeclaration_In_Await .]*
    Goal::InputElementRegExp,
    // State#883:
    //   [Statement_Await_Return -> ReturnStatement_Await .]*
    Goal::InputElementRegExp,
    // State#884:
    //   [StatementList_Await_Return -> StatementListItem_Await_Return .]*
    Goal::InputElementRegExp,
    // State#885:
    //   [FunctionStatementList_Await -> StatementList_Await_Return .]*
    //   [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // State#886:
    //   [StatementListItem_Await_Return -> Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#887:
    //   [BreakableStatement_Await_Return -> SwitchStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#888:
    //   [Statement_Await_Return -> ThrowStatement_Await .]*
    Goal::InputElementRegExp,
    // State#889:
    //   [Statement_Await_Return -> TryStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#890:
    //   [Statement_Await_Return -> VariableStatement_Await .]*
    Goal::InputElementRegExp,
    // State#891:
    //   [IterationStatement_Await_Return -> WhileStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#892:
    //   [Statement_Await_Return -> WithStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#893:
    //   [SpreadElement_Await -> ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#894:
    //   [ArrayLiteral_Await -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#895:
    //   [ElementList_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#896:
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await . COMMA RBRACK]*
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await . COMMA Elision RBRACK]*
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await . RBRACK]*
    //   [ElementList_Await -> ElementList_Await . COMMA AssignmentExpression_In_Await]*
    //   [ElementList_Await -> ElementList_Await . COMMA Elision AssignmentExpression_In_Await]*
    //   [ElementList_Await -> ElementList_Await . COMMA Elision SpreadElement_Await]*
    //   [ElementList_Await -> ElementList_Await . COMMA SpreadElement_Await]*
    Goal::InputElementDiv,
    // State#897:
    //   [ArrayLiteral_Await -> LBRACK Elision . RBRACK]*
    //   [ElementList_Await -> Elision . AssignmentExpression_In_Await]*
    //   [ElementList_Await -> Elision . SpreadElement_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#898:
    //   [ElementList_Await -> SpreadElement_Await .]*
    Goal::InputElementDiv,
    // State#899:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS . BindingIdentifier_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS . BindingPattern_Await RPAREN]*
    Goal::InputElementDiv,
    // State#900:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#901:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . COMMA ELLIPSIS BindingIdentifier_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . COMMA ELLIPSIS BindingPattern_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . RPAREN]*
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#902:
    //   [SuperProperty_Await -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty_Await -> SUPER . LBRACK Expression_In_Await RBRACK]*
    Goal::InputElementDiv,
    // State#903:
    //   [MemberExpression_Await -> NEW MemberExpression_Await . Arguments_Await]*
    //   [MemberExpression_Await -> MemberExpression_Await . DOT PrivateIdentifier]*
    //   [MemberExpression_Await -> MemberExpression_Await . DOT KeywordOrIdentifierName]*
    //   [MemberExpression_Await -> MemberExpression_Await . LBRACK Expression_In_Await RBRACK]*
    //   [MemberExpression_Await -> MemberExpression_Await . TemplateLiteral_Await_Tagged]*
    //   [NewExpression_Await -> MemberExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#904:
    //   [NewExpression_Await -> NEW NewExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#905:
    //   [UnaryExpression_Await -> NOT UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#906:
    //   [RelationalExpression_In_Await -> PrivateIdentifier IN . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#907:
    //   [UnaryExpression_Await -> SUB UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#908:
    //   [SuperProperty_Await -> SUPER DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#909:
    //   [SuperProperty_Await -> SUPER LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#910:
    //   [Arguments_Await -> LPAREN . RPAREN]*
    //   [Arguments_Await -> LPAREN . ArgumentList_Await COMMA RPAREN]*
    //   [Arguments_Await -> LPAREN . ArgumentList_Await RPAREN]*
    Goal::InputElementRegExp,
    // State#911:
    //   [SuperCall_Await -> SUPER Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // State#912:
    //   [UnaryExpression_Await -> TYPEOF UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#913:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [SubstitutionTemplate_Await -> TemplateHead Expression_In_Await . TemplateSpans_Await]*
    Goal::InputElementTemplateTail,
    // State#914:
    //   [UnaryExpression_Await -> VOID UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#915:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await ADD . MultiplicativeExpression_Await]*
    Goal::InputElementRegExp,
    // State#916:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await SUB . MultiplicativeExpression_Await]*
    Goal::InputElementRegExp,
    // State#917:
    //   [ArrowFunction_In_Await -> ArrowParameters_Await ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // State#918:
    //   [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await BIT_AND . EqualityExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#919:
    //   [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await BIT_OR . BitwiseXORExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#920:
    //   [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await BIT_XOR . BitwiseANDExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#921:
    //   [CallExpression_Await -> CallExpression_Await DOT . PrivateIdentifier]*
    //   [CallExpression_Await -> CallExpression_Await DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#922:
    //   [CallExpression_Await -> CallExpression_Await LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#923:
    //   [TemplateLiteral_Await_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#924:
    //   [OptionalChain_Await -> OPTIONAL_CHAINING . LBRACK Expression_In_Await RBRACK]*
    //   [OptionalChain_Await -> OPTIONAL_CHAINING . PrivateIdentifier]*
    //   [OptionalChain_Await -> OPTIONAL_CHAINING . Arguments_Await]*
    //   [OptionalChain_Await -> OPTIONAL_CHAINING . KeywordOrIdentifierName]*
    //   [OptionalChain_Await -> OPTIONAL_CHAINING . TemplateLiteral_Await_Tagged]*
    Goal::InputElementDiv,
    // State#925:
    //   [SubstitutionTemplate_Await_Tagged -> TemplateHead . Expression_In_Await TemplateSpans_Await_Tagged]*
    Goal::InputElementRegExp,
    // State#926:
    //   [CallExpression_Await -> CallExpression_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // State#927:
    //   [OptionalChain_Await -> OptionalChain_Await . DOT PrivateIdentifier]*
    //   [OptionalChain_Await -> OptionalChain_Await . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Await -> OptionalChain_Await . LBRACK Expression_In_Await RBRACK]*
    //   [OptionalChain_Await -> OptionalChain_Await . Arguments_Await]*
    //   [OptionalChain_Await -> OptionalChain_Await . TemplateLiteral_Await_Tagged]*
    //   [OptionalExpression_Await -> CallExpression_Await OptionalChain_Await .]*
    Goal::InputElementTemplateTail,
    // State#928:
    //   [TemplateLiteral_Await_Tagged -> SubstitutionTemplate_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#929:
    //   [CallExpression_Await -> CallExpression_Await TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#930:
    //   [CoalesceExpression_In_Await -> CoalesceExpressionHead_In_Await NULLISH . BitwiseORExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#931:
    //   [AsyncArrowFunction_In_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#932:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#933:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ_STRICT . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#934:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await NE . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#935:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await NE_STRICT . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#936:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AND_ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#937:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#938:
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await DEC .]*
    Goal::InputElementTemplateTail,
    // State#939:
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await INC .]*
    Goal::InputElementTemplateTail,
    // State#940:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#941:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await OR_ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#942:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AssignmentOperator . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#943:
    //   [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await AND . BitwiseORExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#944:
    //   [LogicalORExpression_In_Await -> LogicalORExpression_In_Await OR . LogicalANDExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#945:
    //   [MemberExpression_Await -> MemberExpression_Await DOT . PrivateIdentifier]*
    //   [MemberExpression_Await -> MemberExpression_Await DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#946:
    //   [MemberExpression_Await -> MemberExpression_Await LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#947:
    //   [CoverCallExpressionAndAsyncArrowHead_Await -> MemberExpression_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // State#948:
    //   [OptionalChain_Await -> OptionalChain_Await . DOT PrivateIdentifier]*
    //   [OptionalChain_Await -> OptionalChain_Await . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Await -> OptionalChain_Await . LBRACK Expression_In_Await RBRACK]*
    //   [OptionalChain_Await -> OptionalChain_Await . Arguments_Await]*
    //   [OptionalChain_Await -> OptionalChain_Await . TemplateLiteral_Await_Tagged]*
    //   [OptionalExpression_Await -> MemberExpression_Await OptionalChain_Await .]*
    Goal::InputElementTemplateTail,
    // State#949:
    //   [MemberExpression_Await -> MemberExpression_Await TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#950:
    //   [MultiplicativeExpression_Await -> MultiplicativeExpression_Await MultiplicativeOperator . ExponentiationExpression_Await]*
    Goal::InputElementRegExp,
    // State#951:
    //   [OptionalChain_Await -> OptionalChain_Await . DOT PrivateIdentifier]*
    //   [OptionalChain_Await -> OptionalChain_Await . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Await -> OptionalChain_Await . LBRACK Expression_In_Await RBRACK]*
    //   [OptionalChain_Await -> OptionalChain_Await . Arguments_Await]*
    //   [OptionalChain_Await -> OptionalChain_Await . TemplateLiteral_Await_Tagged]*
    //   [OptionalExpression_Await -> OptionalExpression_Await OptionalChain_Await .]*
    Goal::InputElementTemplateTail,
    // State#952:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await GT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#953:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await GTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#954:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await IN . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#955:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await INSTANCEOF . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#956:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await LT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#957:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await LTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#958:
    //   [ShiftExpression_Await -> ShiftExpression_Await SAR . AdditiveExpression_Await]*
    Goal::InputElementRegExp,
    // State#959:
    //   [ShiftExpression_Await -> ShiftExpression_Await SHL . AdditiveExpression_Await]*
    Goal::InputElementRegExp,
    // State#960:
    //   [ShiftExpression_Await -> ShiftExpression_Await SHR . AdditiveExpression_Await]*
    Goal::InputElementRegExp,
    // State#961:
    //   [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL . AssignmentExpression_In_Await COLON AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#962:
    //   [ExponentiationExpression_Await -> UpdateExpression_Await EXP . ExponentiationExpression_Await]*
    Goal::InputElementRegExp,
    // State#963:
    //   [BindingList_In -> BindingList_In COMMA LexicalBinding_In .]*
    Goal::InputElementDiv,
    // State#964:
    //   [MemberExpression -> MemberExpression LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#965:
    //   [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL AssignmentExpression_In COLON . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#966:
    //   [BindingRestElement_Await -> ELLIPSIS . BindingIdentifier_Await]*
    //   [BindingRestElement_Await -> ELLIPSIS . BindingPattern_Await]*
    Goal::InputElementDiv,
    // State#967:
    //   [ObjectBindingPattern_Await -> LBRACE . RBRACE]*
    //   [ObjectBindingPattern_Await -> LBRACE . BindingPropertyList_Await COMMA RBRACE]*
    //   [ObjectBindingPattern_Await -> LBRACE . BindingPropertyList_Await COMMA BindingRestProperty_Await RBRACE]*
    //   [ObjectBindingPattern_Await -> LBRACE . BindingPropertyList_Await RBRACE]*
    //   [ObjectBindingPattern_Await -> LBRACE . BindingRestProperty_Await RBRACE]*
    Goal::InputElementDiv,
    // State#968:
    //   [ArrayBindingPattern_Await -> LBRACK . RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA BindingRestElement_Await RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA Elision RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA Elision BindingRestElement_Await RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . BindingRestElement_Await RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . Elision RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK . Elision BindingRestElement_Await RBRACK]*
    Goal::InputElementDiv,
    // State#969:
    //   [BindingPattern_Await -> ArrayBindingPattern_Await .]*
    Goal::InputElementDiv,
    // State#970:
    //   [FormalParameter_Await -> BindingElement_Await .]*
    Goal::InputElementDiv,
    // State#971:
    //   [SingleNameBinding_Await -> BindingIdentifier_Await .]*
    //   [SingleNameBinding_Await -> BindingIdentifier_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // State#972:
    //   [BindingElement_Await -> BindingPattern_Await .]*
    //   [BindingElement_Await -> BindingPattern_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // State#973:
    //   [FunctionRestParameter_Await -> BindingRestElement_Await .]*
    Goal::InputElementDiv,
    // State#974:
    //   [FormalParameterList_Await -> FormalParameterList_Await . COMMA FormalParameter_Await]*
    //   [FormalParameters_Await -> FormalParameterList_Await .]*
    //   [FormalParameters_Await -> FormalParameterList_Await . COMMA]*
    //   [FormalParameters_Await -> FormalParameterList_Await . COMMA FunctionRestParameter_Await]*
    Goal::InputElementDiv,
    // State#975:
    //   [FormalParameterList_Await -> FormalParameter_Await .]*
    Goal::InputElementDiv,
    // State#976:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#977:
    //   [FormalParameters_Await -> FunctionRestParameter_Await .]*
    Goal::InputElementDiv,
    // State#978:
    //   [BindingPattern_Await -> ObjectBindingPattern_Await .]*
    Goal::InputElementDiv,
    // State#979:
    //   [BindingElement_Await -> SingleNameBinding_Await .]*
    Goal::InputElementDiv,
    // State#980:
    //   [BindingIdentifier_Yield_Await -> AWAIT .]*
    Goal::InputElementDiv,
    // State#981:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#982:
    //   [BindingIdentifier_Yield_Await -> YIELD .]*
    Goal::InputElementDiv,
    // State#983:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#984:
    //   [BindingIdentifier_Yield_Await -> Identifier .]*
    Goal::InputElementDiv,
    // State#985:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#986:
    //   [ClassStaticBlock -> STATIC LBRACE . ClassStaticBlockBody RBRACE]*
    //   [ClassStaticBlockStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#987:
    //   [ClassElement -> STATIC FieldDefinition . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#988:
    //   [ClassElement -> STATIC MethodDefinition .]*
    Goal::InputElementDiv,
    // State#989:
    //   [ClassTail -> LBRACE ClassBody RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#990:
    //   [ClassElementList -> ClassElementList ClassElement .]*
    Goal::InputElementDiv,
    // State#991:
    //   [FieldDefinition -> ClassElementName Initializer_In .]*
    Goal::InputElementDiv,
    // State#992:
    //   [ClassElement -> FieldDefinition SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#993:
    //   [ClassTail -> ClassHeritage LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#994:
    //   [ClassTail -> ClassHeritage LBRACE ClassBody . RBRACE]*
    Goal::InputElementDiv,
    // State#995:
    //   [FormalParameterList -> FormalParameterList COMMA . FormalParameter]*
    //   [FormalParameters -> FormalParameterList COMMA .]*
    //   [FormalParameters -> FormalParameterList COMMA . FunctionRestParameter]*
    Goal::InputElementDiv,
    // State#996:
    //   [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#997:
    //   [BindingRestElement_Yield -> ELLIPSIS . BindingIdentifier_Yield]*
    //   [BindingRestElement_Yield -> ELLIPSIS . BindingPattern_Yield]*
    Goal::InputElementDiv,
    // State#998:
    //   [ObjectBindingPattern_Yield -> LBRACE . RBRACE]*
    //   [ObjectBindingPattern_Yield -> LBRACE . BindingPropertyList_Yield COMMA RBRACE]*
    //   [ObjectBindingPattern_Yield -> LBRACE . BindingPropertyList_Yield COMMA BindingRestProperty_Yield RBRACE]*
    //   [ObjectBindingPattern_Yield -> LBRACE . BindingPropertyList_Yield RBRACE]*
    //   [ObjectBindingPattern_Yield -> LBRACE . BindingRestProperty_Yield RBRACE]*
    Goal::InputElementDiv,
    // State#999:
    //   [ArrayBindingPattern_Yield -> LBRACK . RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA BindingRestElement_Yield RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA Elision RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA Elision BindingRestElement_Yield RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . BindingRestElement_Yield RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . Elision RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK . Elision BindingRestElement_Yield RBRACK]*
    Goal::InputElementDiv,
    // State#1000:
    //   [BindingPattern_Yield -> ArrayBindingPattern_Yield .]*
    Goal::InputElementDiv,
    // State#1001:
    //   [FormalParameter_Yield -> BindingElement_Yield .]*
    Goal::InputElementDiv,
    // State#1002:
    //   [SingleNameBinding_Yield -> BindingIdentifier_Yield .]*
    //   [SingleNameBinding_Yield -> BindingIdentifier_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // State#1003:
    //   [BindingElement_Yield -> BindingPattern_Yield .]*
    //   [BindingElement_Yield -> BindingPattern_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // State#1004:
    //   [FunctionRestParameter_Yield -> BindingRestElement_Yield .]*
    Goal::InputElementDiv,
    // State#1005:
    //   [FormalParameterList_Yield -> FormalParameterList_Yield . COMMA FormalParameter_Yield]*
    //   [FormalParameters_Yield -> FormalParameterList_Yield .]*
    //   [FormalParameters_Yield -> FormalParameterList_Yield . COMMA]*
    //   [FormalParameters_Yield -> FormalParameterList_Yield . COMMA FunctionRestParameter_Yield]*
    Goal::InputElementDiv,
    // State#1006:
    //   [FormalParameterList_Yield -> FormalParameter_Yield .]*
    Goal::InputElementDiv,
    // State#1007:
    //   [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1008:
    //   [FormalParameters_Yield -> FunctionRestParameter_Yield .]*
    Goal::InputElementDiv,
    // State#1009:
    //   [BindingPattern_Yield -> ObjectBindingPattern_Yield .]*
    Goal::InputElementDiv,
    // State#1010:
    //   [BindingElement_Yield -> SingleNameBinding_Yield .]*
    Goal::InputElementDiv,
    // State#1011:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1012:
    //   [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1013:
    //   [AsyncGeneratorMethod -> ASYNC MUL ClassElementName . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1014:
    //   [AsyncMethod -> ASYNC ClassElementName LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#1015:
    //   [MethodDefinition -> GET ClassElementName LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1016:
    //   [ComputedPropertyName -> LBRACK AssignmentExpression_In RBRACK .]*
    Goal::InputElementDiv,
    // State#1017:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorMethod -> MUL ClassElementName LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1018:
    //   [MethodDefinition -> SET ClassElementName LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1019:
    //   [UniqueFormalParameters -> FormalParameters .]*
    Goal::InputElementDiv,
    // State#1020:
    //   [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1021:
    //   [ObjectLiteral -> LBRACE PropertyDefinitionList COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#1022:
    //   [PropertyDefinitionList -> PropertyDefinitionList COMMA PropertyDefinition .]*
    Goal::InputElementDiv,
    // State#1023:
    //   [PropertyDefinition -> PropertyName COLON AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#1024:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#1025:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1026:
    //   [DoWhileStatement -> DO Statement WHILE LPAREN Expression_In . RPAREN SEMI_COLON]*
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#1027:
    //   [AsyncArrowFunction -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#1028:
    //   [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1029:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1030:
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1031:
    //   [Initializer -> ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#1032:
    //   [VariableDeclaration -> BindingIdentifier Initializer .]*
    Goal::InputElementDiv,
    // State#1033:
    //   [VariableDeclaration -> BindingPattern Initializer .]*
    Goal::InputElementDiv,
    // State#1034:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding IN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1035:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding OF . AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1036:
    //   [VariableDeclarationList -> VariableDeclarationList COMMA . VariableDeclaration]*
    Goal::InputElementDiv,
    // State#1037:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1038:
    //   [ConciseBody -> LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#1039:
    //   [ExpressionBody -> AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1040:
    //   [ArrowFunction -> ArrowParameters ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // State#1041:
    //   [ConciseBody -> ExpressionBody .]*
    Goal::InputElementDiv,
    // State#1042:
    //   [AssignmentExpression -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . AssignmentOperator AssignmentExpression]*
    //   [UpdateExpression -> LeftHandSideExpression .]*
    //   [UpdateExpression -> LeftHandSideExpression . DEC]*
    //   [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementDiv,
    // State#1043:
    //   [BitwiseANDExpression -> BitwiseANDExpression BIT_AND EqualityExpression .]*
    //   [EqualityExpression -> EqualityExpression . EQ RelationalExpression]*
    //   [EqualityExpression -> EqualityExpression . EQ_STRICT RelationalExpression]*
    //   [EqualityExpression -> EqualityExpression . NE RelationalExpression]*
    //   [EqualityExpression -> EqualityExpression . NE_STRICT RelationalExpression]*
    Goal::InputElementDiv,
    // State#1044:
    //   [BitwiseORExpression -> BitwiseORExpression BIT_OR BitwiseXORExpression .]*
    //   [BitwiseXORExpression -> BitwiseXORExpression . BIT_XOR BitwiseANDExpression]*
    Goal::InputElementDiv,
    // State#1045:
    //   [BitwiseANDExpression -> BitwiseANDExpression . BIT_AND EqualityExpression]*
    //   [BitwiseXORExpression -> BitwiseXORExpression BIT_XOR BitwiseANDExpression .]*
    Goal::InputElementDiv,
    // State#1046:
    //   [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    //   [CoalesceExpression -> CoalesceExpressionHead NULLISH BitwiseORExpression .]*
    Goal::InputElementDiv,
    // State#1047:
    //   [AsyncArrowFunction_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1048:
    //   [AsyncConciseBody -> LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#1049:
    //   [AssignmentExpression_Await -> ArrowFunction_Await .]*
    Goal::InputElementDiv,
    // State#1050:
    //   [ArrowFunction_Await -> ArrowParameters_Await . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // State#1051:
    //   [ExpressionBody_Await -> AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#1052:
    //   [AssignmentExpression_Await -> AsyncArrowFunction_Await .]*
    Goal::InputElementDiv,
    // State#1053:
    //   [AsyncArrowFunction -> CoverCallExpressionAndAsyncArrowHead ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#1054:
    //   [BitwiseANDExpression_Await -> BitwiseANDExpression_Await . BIT_AND EqualityExpression_Await]*
    //   [BitwiseXORExpression_Await -> BitwiseANDExpression_Await .]*
    Goal::InputElementDiv,
    // State#1055:
    //   [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    //   [CoalesceExpressionHead_Await -> BitwiseORExpression_Await .]*
    //   [LogicalANDExpression_Await -> BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // State#1056:
    //   [BitwiseORExpression_Await -> BitwiseXORExpression_Await .]*
    //   [BitwiseXORExpression_Await -> BitwiseXORExpression_Await . BIT_XOR BitwiseANDExpression_Await]*
    Goal::InputElementDiv,
    // State#1057:
    //   [CoalesceExpression_Await -> CoalesceExpressionHead_Await . NULLISH BitwiseORExpression_Await]*
    Goal::InputElementDiv,
    // State#1058:
    //   [CoalesceExpressionHead_Await -> CoalesceExpression_Await .]*
    //   [ShortCircuitExpression_Await -> CoalesceExpression_Await .]*
    Goal::InputElementDiv,
    // State#1059:
    //   [AssignmentExpression_Await -> ConditionalExpression_Await .]*
    Goal::InputElementDiv,
    // State#1060:
    //   [AsyncArrowFunction_Await -> CoverCallExpressionAndAsyncArrowHead_Await . ARROW AsyncConciseBody]*
    //   [CallExpression_Await -> CoverCallExpressionAndAsyncArrowHead_Await .]*
    Goal::InputElementDiv,
    // State#1061:
    //   [BitwiseANDExpression_Await -> EqualityExpression_Await .]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . EQ RelationalExpression_Await]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . EQ_STRICT RelationalExpression_Await]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . NE RelationalExpression_Await]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . NE_STRICT RelationalExpression_Await]*
    Goal::InputElementDiv,
    // State#1062:
    //   [AsyncConciseBody -> ExpressionBody_Await .]*
    Goal::InputElementDiv,
    // State#1063:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_Await]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementDiv,
    // State#1064:
    //   [LogicalANDExpression_Await -> LogicalANDExpression_Await . AND BitwiseORExpression_Await]*
    //   [LogicalORExpression_Await -> LogicalANDExpression_Await .]*
    Goal::InputElementDiv,
    // State#1065:
    //   [LogicalORExpression_Await -> LogicalORExpression_Await . OR LogicalANDExpression_Await]*
    //   [ShortCircuitExpression_Await -> LogicalORExpression_Await .]*
    Goal::InputElementDiv,
    // State#1066:
    //   [EqualityExpression_Await -> RelationalExpression_Await .]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // State#1067:
    //   [RelationalExpression_Await -> ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // State#1068:
    //   [ConditionalExpression_Await -> ShortCircuitExpression_Await .]*
    //   [ConditionalExpression_Await -> ShortCircuitExpression_Await . CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_Await]*
    Goal::InputElementDiv,
    // State#1069:
    //   [EqualityExpression -> EqualityExpression EQ RelationalExpression .]*
    //   [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // State#1070:
    //   [EqualityExpression -> EqualityExpression EQ_STRICT RelationalExpression .]*
    //   [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // State#1071:
    //   [EqualityExpression -> EqualityExpression NE RelationalExpression .]*
    //   [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // State#1072:
    //   [EqualityExpression -> EqualityExpression NE_STRICT RelationalExpression .]*
    //   [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    //   [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // State#1073:
    //   [Expression -> Expression COMMA AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1074:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1075:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1076:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration IN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1077:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration OF AssignmentExpression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1078:
    //   [AssignmentExpression -> LeftHandSideExpression AND_ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1079:
    //   [AssignmentExpression -> LeftHandSideExpression ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1080:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1081:
    //   [AssignmentExpression -> LeftHandSideExpression NULLISH_ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1082:
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1083:
    //   [AssignmentExpression -> LeftHandSideExpression OR_ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1084:
    //   [AssignmentExpression -> LeftHandSideExpression AssignmentOperator AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1085:
    //   [LexicalBinding -> BindingIdentifier Initializer .]*
    Goal::InputElementDiv,
    // State#1086:
    //   [BindingList -> BindingList COMMA . LexicalBinding]*
    Goal::InputElementDiv,
    // State#1087:
    //   [LexicalDeclaration -> LetOrConst BindingList SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1088:
    //   [LexicalBinding -> BindingPattern Initializer .]*
    Goal::InputElementDiv,
    // State#1089:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1090:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1091:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1092:
    //   [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    //   [LogicalANDExpression -> LogicalANDExpression AND BitwiseORExpression .]*
    Goal::InputElementDiv,
    // State#1093:
    //   [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    //   [LogicalANDExpression -> BitwiseORExpression .]*
    Goal::InputElementDiv,
    // State#1094:
    //   [LogicalANDExpression -> LogicalANDExpression . AND BitwiseORExpression]*
    //   [LogicalORExpression -> LogicalORExpression OR LogicalANDExpression .]*
    Goal::InputElementDiv,
    // State#1095:
    //   [RelationalExpression -> RelationalExpression GT ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // State#1096:
    //   [RelationalExpression -> RelationalExpression GTE ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // State#1097:
    //   [RelationalExpression -> RelationalExpression INSTANCEOF ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // State#1098:
    //   [RelationalExpression -> RelationalExpression LT ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // State#1099:
    //   [RelationalExpression -> RelationalExpression LTE ShiftExpression .]*
    //   [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    //   [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // State#1100:
    //   [ConditionalExpression -> ShortCircuitExpression CONDITIONAL AssignmentExpression_In . COLON AssignmentExpression]*
    Goal::InputElementDiv,
    // State#1101:
    //   [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1102:
    //   [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1103:
    //   [IfStatement -> IF LPAREN Expression_In RPAREN Statement . ELSE Statement]*
    //   [IfStatement -> IF LPAREN Expression_In RPAREN Statement . !~[ELSE]]*
    //   [IfStatement -> IF LPAREN Expression_In RPAREN Statement !~[ELSE] .]*
    Goal::InputElementRegExp,
    // State#1104:
    //   [ArrayLiteral -> LBRACK ElementList COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1105:
    //   [ElementList -> ElementList COMMA Elision AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#1106:
    //   [ElementList -> ElementList COMMA Elision SpreadElement .]*
    Goal::InputElementDiv,
    // State#1107:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingIdentifier . RPAREN]*
    Goal::InputElementDiv,
    // State#1108:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingPattern . RPAREN]*
    Goal::InputElementDiv,
    // State#1109:
    //   [ArgumentList -> ArgumentList COMMA ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // State#1110:
    //   [Arguments -> LPAREN ArgumentList COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1111:
    //   [ArgumentList -> ArgumentList COMMA AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#1112:
    //   [CaseBlock -> LBRACE . RBRACE]*
    //   [CaseBlock -> LBRACE . CaseClauses RBRACE]*
    //   [CaseBlock -> LBRACE . CaseClauses DefaultClause RBRACE]*
    //   [CaseBlock -> LBRACE . CaseClauses DefaultClause CaseClauses RBRACE]*
    //   [CaseBlock -> LBRACE . DefaultClause RBRACE]*
    //   [CaseBlock -> LBRACE . DefaultClause CaseClauses RBRACE]*
    Goal::InputElementDiv,
    // State#1113:
    //   [SwitchStatement -> SWITCH LPAREN Expression_In RPAREN CaseBlock .]*
    Goal::InputElementRegExp,
    // State#1114:
    //   [CatchParameter -> BindingIdentifier .]*
    Goal::InputElementDiv,
    // State#1115:
    //   [CatchParameter -> BindingPattern .]*
    Goal::InputElementDiv,
    // State#1116:
    //   [Catch -> CATCH LPAREN CatchParameter . RPAREN Block]*
    Goal::InputElementDiv,
    // State#1117:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [TemplateMiddleList -> TemplateMiddleList TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // State#1118:
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA RBRACE .]*
    Goal::InputElementDiv,
    // State#1119:
    //   [BindingPropertyList -> BindingPropertyList COMMA BindingProperty .]*
    Goal::InputElementDiv,
    // State#1120:
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA BindingRestProperty . RBRACE]*
    Goal::InputElementDiv,
    // State#1121:
    //   [BindingProperty -> PropertyName COLON BindingElement .]*
    Goal::InputElementDiv,
    // State#1122:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA RBRACK .]*
    Goal::InputElementDiv,
    // State#1123:
    //   [BindingElementList -> BindingElementList COMMA BindingElisionElement .]*
    Goal::InputElementDiv,
    // State#1124:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // State#1125:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision . RBRACK]*
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision . BindingRestElement RBRACK]*
    //   [BindingElisionElement -> Elision . BindingElement]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#1126:
    //   [ArrayBindingPattern -> LBRACK Elision BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // State#1127:
    //   [WhileStatement -> WHILE LPAREN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1128:
    //   [WithStatement -> WITH LPAREN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1129:
    //   [DoWhileStatement_Return -> DO Statement_Return . WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1130:
    //   [ForInOfStatement_Return -> FOR LPAREN . VAR ForBinding IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN . VAR ForBinding OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN . ForDeclaration IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN . ForDeclaration OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN . LeftHandSideExpression IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN . LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . LexicalDeclaration SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1131:
    //   [IfStatement_Return -> IF LPAREN . Expression_In RPAREN Statement_Return ELSE Statement_Return]*
    //   [IfStatement_Return -> IF LPAREN . Expression_In RPAREN Statement_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#1132:
    //   [Block_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#1133:
    //   [Block_Return -> LBRACE StatementList_Return . RBRACE]*
    //   [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // State#1134:
    //   [ReturnStatement -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1135:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ReturnStatement -> RETURN Expression_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1136:
    //   [SwitchStatement_Return -> SWITCH LPAREN . Expression_In RPAREN CaseBlock_Return]*
    Goal::InputElementRegExp,
    // State#1137:
    //   [TryStatement_Return -> TRY Block_Return . Catch_Return]*
    //   [TryStatement_Return -> TRY Block_Return . Catch_Return Finally_Return]*
    //   [TryStatement_Return -> TRY Block_Return . Finally_Return]*
    Goal::InputElementDiv,
    // State#1138:
    //   [WhileStatement_Return -> WHILE LPAREN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1139:
    //   [WithStatement_Return -> WITH LPAREN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1140:
    //   [ConciseBody_In -> LBRACE FunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#1141:
    //   [LabelledStatement_Return -> LabelIdentifier COLON . LabelledItem_Return]*
    Goal::InputElementRegExp,
    // State#1142:
    //   [StatementList_Return -> StatementList_Return StatementListItem_Return .]*
    Goal::InputElementRegExp,
    // State#1143:
    //   [OptionalChain -> OPTIONAL_CHAINING LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1144:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [TemplateMiddleList_Tagged -> TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // State#1145:
    //   [TemplateMiddleList_Tagged -> TemplateMiddleList_Tagged TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // State#1146:
    //   [TemplateSpans_Tagged -> TemplateMiddleList_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#1147:
    //   [OptionalChain -> OptionalChain LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1148:
    //   [AsyncGeneratorMethod_Await -> ASYNC . MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncMethod_Await -> ASYNC . ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [KeywordOrIdentifierName -> ASYNC .]*
    Goal::InputElementDiv,
    // State#1149:
    //   [PropertyDefinition_Await -> ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1150:
    //   [IdentifierNameButNotReservedWord -> GET .]*
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition_Await -> GET . ClassElementName_Await LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1151:
    //   [ComputedPropertyName_Await -> LBRACK . AssignmentExpression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#1152:
    //   [GeneratorMethod_Await -> MUL . ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1153:
    //   [ClassElementName_Await -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // State#1154:
    //   [ObjectLiteral_Await -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#1155:
    //   [IdentifierNameButNotReservedWord -> SET .]*
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition_Await -> SET . ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1156:
    //   [IdentifierReference_Await -> YIELD .]*
    //   [KeywordOrIdentifierName -> YIELD .]*
    Goal::InputElementDiv,
    // State#1157:
    //   [MethodDefinition_Await -> AsyncGeneratorMethod_Await .]*
    Goal::InputElementDiv,
    // State#1158:
    //   [MethodDefinition_Await -> AsyncMethod_Await .]*
    Goal::InputElementDiv,
    // State#1159:
    //   [MethodDefinition_Await -> ClassElementName_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1160:
    //   [PropertyName_Await -> ComputedPropertyName_Await .]*
    Goal::InputElementDiv,
    // State#1161:
    //   [PropertyDefinition_Await -> CoverInitializedName_Await .]*
    Goal::InputElementDiv,
    // State#1162:
    //   [MethodDefinition_Await -> GeneratorMethod_Await .]*
    Goal::InputElementDiv,
    // State#1163:
    //   [CoverInitializedName_Await -> IdentifierReference_Await . Initializer_In_Await]*
    //   [PropertyDefinition_Await -> IdentifierReference_Await .]*
    Goal::InputElementDiv,
    // State#1164:
    //   [PropertyName_Await -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // State#1165:
    //   [PropertyDefinition_Await -> MethodDefinition_Await .]*
    Goal::InputElementDiv,
    // State#1166:
    //   [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await . COMMA RBRACE]*
    //   [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await . RBRACE]*
    //   [PropertyDefinitionList_Await -> PropertyDefinitionList_Await . COMMA PropertyDefinition_Await]*
    Goal::InputElementDiv,
    // State#1167:
    //   [PropertyDefinitionList_Await -> PropertyDefinition_Await .]*
    Goal::InputElementDiv,
    // State#1168:
    //   [ClassElementName_Await -> PropertyName_Await .]*
    //   [PropertyDefinition_Await -> PropertyName_Await . COLON AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#1169:
    //   [AsyncArrowFunction_In_Await -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#1170:
    //   [ClassHeritage_Await -> EXTENDS LeftHandSideExpression_Await .]*
    Goal::InputElementDiv,
    // State#1171:
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition_Await -> GET . ClassElementName_Await LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1172:
    //   [ClassTail_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#1173:
    //   [ClassElement_Await -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#1174:
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition_Await -> SET . ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1175:
    //   [ClassElement_Await -> STATIC . FieldDefinition_Await SEMI_COLON]*
    //   [ClassElement_Await -> STATIC . MethodDefinition_Await]*
    //   [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    //   [KeywordOrIdentifierName -> STATIC .]*
    Goal::InputElementDiv,
    // State#1176:
    //   [ClassTail_Await -> LBRACE ClassBody_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#1177:
    //   [ClassBody_Await -> ClassElementList_Await .]*
    //   [ClassElementList_Await -> ClassElementList_Await . ClassElement_Await]*
    Goal::InputElementDiv,
    // State#1178:
    //   [FieldDefinition_Await -> ClassElementName_Await .]*
    //   [FieldDefinition_Await -> ClassElementName_Await . Initializer_In_Await]*
    //   [MethodDefinition_Await -> ClassElementName_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1179:
    //   [ClassElementList_Await -> ClassElement_Await .]*
    Goal::InputElementDiv,
    // State#1180:
    //   [ClassElement_Await -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // State#1181:
    //   [ClassElement_Await -> FieldDefinition_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1182:
    //   [ClassElement_Await -> MethodDefinition_Await .]*
    Goal::InputElementDiv,
    // State#1183:
    //   [ClassElementName_Await -> PropertyName_Await .]*
    Goal::InputElementDiv,
    // State#1184:
    //   [ClassExpression_Await -> CLASS BindingIdentifier_Await ClassTail_Await .]*
    Goal::InputElementTemplateTail,
    // State#1185:
    //   [ClassTail_Await -> ClassHeritage_Await LBRACE . RBRACE]*
    //   [ClassTail_Await -> ClassHeritage_Await LBRACE . ClassBody_Await RBRACE]*
    Goal::InputElementDiv,
    // State#1186:
    //   [ImportCall_Await -> IMPORT LPAREN AssignmentExpression_In_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#1187:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION . BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION . MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1188:
    //   [BreakStatement_Await -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1189:
    //   [LabelIdentifier_Await -> YIELD .]*
    Goal::InputElementDiv,
    // State#1190:
    //   [LabelIdentifier_Await -> Identifier .]*
    Goal::InputElementDiv,
    // State#1191:
    //   [BreakStatement_Await -> BREAK LabelIdentifier_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1192:
    //   [ClassDeclaration_Await -> CLASS BindingIdentifier_Await . ClassTail_Await]*
    Goal::InputElementDiv,
    // State#1193:
    //   [ContinueStatement_Await -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1194:
    //   [ContinueStatement_Await -> CONTINUE LabelIdentifier_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1195:
    //   [AsyncArrowFunction_In_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#1196:
    //   [DoWhileStatement_Await_Return -> DO Statement_Await_Return . WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1197:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR AWAIT . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR AWAIT . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1198:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN . VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN . ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN . LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1199:
    //   [GeneratorDeclaration_Await -> FUNCTION MUL . BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1200:
    //   [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1201:
    //   [IfStatement_Await_Return -> IF LPAREN . Expression_In_Await RPAREN Statement_Await_Return ELSE Statement_Await_Return]*
    //   [IfStatement_Await_Return -> IF LPAREN . Expression_In_Await RPAREN Statement_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#1202:
    //   [Block_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#1203:
    //   [Block_Await_Return -> LBRACE StatementList_Await_Return . RBRACE]*
    //   [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // State#1204:
    //   [ReturnStatement_Await -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1205:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ReturnStatement_Await -> RETURN Expression_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1206:
    //   [SwitchStatement_Await_Return -> SWITCH LPAREN . Expression_In_Await RPAREN CaseBlock_Await_Return]*
    Goal::InputElementRegExp,
    // State#1207:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ThrowStatement_Await -> THROW Expression_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1208:
    //   [TryStatement_Await_Return -> TRY Block_Await_Return . Catch_Await_Return]*
    //   [TryStatement_Await_Return -> TRY Block_Await_Return . Catch_Await_Return Finally_Await_Return]*
    //   [TryStatement_Await_Return -> TRY Block_Await_Return . Finally_Await_Return]*
    Goal::InputElementDiv,
    // State#1209:
    //   [VariableDeclaration_In_Await -> BindingIdentifier_Await .]*
    //   [VariableDeclaration_In_Await -> BindingIdentifier_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // State#1210:
    //   [VariableDeclaration_In_Await -> BindingPattern_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // State#1211:
    //   [VariableDeclarationList_In_Await -> VariableDeclarationList_In_Await . COMMA VariableDeclaration_In_Await]*
    //   [VariableStatement_Await -> VAR VariableDeclarationList_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1212:
    //   [VariableDeclarationList_In_Await -> VariableDeclaration_In_Await .]*
    Goal::InputElementDiv,
    // State#1213:
    //   [WhileStatement_Await_Return -> WHILE LPAREN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1214:
    //   [WithStatement_Await_Return -> WITH LPAREN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1215:
    //   [AsyncConciseBody_In -> LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#1216:
    //   [Expression_In_Await -> Expression_In_Await COMMA . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1217:
    //   [ExpressionStatement_Await -> Expression_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1218:
    //   [LabelledStatement_Await_Return -> LabelIdentifier_Await COLON . LabelledItem_Await_Return]*
    Goal::InputElementRegExp,
    // State#1219:
    //   [LexicalBinding_In_Await -> BindingIdentifier_Await .]*
    //   [LexicalBinding_In_Await -> BindingIdentifier_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // State#1220:
    //   [BindingList_In_Await -> BindingList_In_Await . COMMA LexicalBinding_In_Await]*
    //   [LexicalDeclaration_In_Await -> LetOrConst BindingList_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1221:
    //   [LexicalBinding_In_Await -> BindingPattern_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // State#1222:
    //   [BindingList_In_Await -> LexicalBinding_In_Await .]*
    Goal::InputElementDiv,
    // State#1223:
    //   [StatementList_Await_Return -> StatementList_Await_Return StatementListItem_Await_Return .]*
    Goal::InputElementRegExp,
    // State#1224:
    //   [SpreadElement_Await -> ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1225:
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA . RBRACK]*
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA . Elision RBRACK]*
    //   [ElementList_Await -> ElementList_Await COMMA . AssignmentExpression_In_Await]*
    //   [ElementList_Await -> ElementList_Await COMMA . Elision AssignmentExpression_In_Await]*
    //   [ElementList_Await -> ElementList_Await COMMA . Elision SpreadElement_Await]*
    //   [ElementList_Await -> ElementList_Await COMMA . SpreadElement_Await]*
    Goal::InputElementRegExp,
    // State#1226:
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1227:
    //   [ArrayLiteral_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1228:
    //   [ElementList_Await -> Elision AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1229:
    //   [ElementList_Await -> Elision SpreadElement_Await .]*
    Goal::InputElementDiv,
    // State#1230:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingIdentifier_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#1231:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingPattern_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#1232:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA . ELLIPSIS BindingIdentifier_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA . ELLIPSIS BindingPattern_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA . RPAREN]*
    //   [Expression_In_Await -> Expression_In_Await COMMA . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1233:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1234:
    //   [MemberExpression_Await -> NEW MemberExpression_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // State#1235:
    //   [RelationalExpression_In_Await -> PrivateIdentifier IN ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1236:
    //   [SuperProperty_Await -> SUPER DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#1237:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [SuperProperty_Await -> SUPER LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1238:
    //   [ArgumentList_Await -> ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1239:
    //   [Arguments_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1240:
    //   [ArgumentList_Await -> ArgumentList_Await . COMMA ELLIPSIS AssignmentExpression_In_Await]*
    //   [ArgumentList_Await -> ArgumentList_Await . COMMA AssignmentExpression_In_Await]*
    //   [Arguments_Await -> LPAREN ArgumentList_Await . COMMA RPAREN]*
    //   [Arguments_Await -> LPAREN ArgumentList_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#1241:
    //   [ArgumentList_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1242:
    //   [TemplateMiddleList_Await -> TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // State#1243:
    //   [TemplateSpans_Await -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#1244:
    //   [TemplateMiddleList_Await -> TemplateMiddleList_Await . TemplateMiddle Expression_In_Await]*
    //   [TemplateSpans_Await -> TemplateMiddleList_Await . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#1245:
    //   [SubstitutionTemplate_Await -> TemplateHead Expression_In_Await TemplateSpans_Await .]*
    Goal::InputElementTemplateTail,
    // State#1246:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await ADD MultiplicativeExpression_Await .]*
    //   [MultiplicativeExpression_Await -> MultiplicativeExpression_Await . MultiplicativeOperator ExponentiationExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1247:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await SUB MultiplicativeExpression_Await .]*
    //   [MultiplicativeExpression_Await -> MultiplicativeExpression_Await . MultiplicativeOperator ExponentiationExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1248:
    //   [ArrowFunction_In_Await -> ArrowParameters_Await ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#1249:
    //   [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await BIT_AND EqualityExpression_In_Await .]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ RelationalExpression_In_Await]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ_STRICT RelationalExpression_In_Await]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE RelationalExpression_In_Await]*
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE_STRICT RelationalExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // State#1250:
    //   [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await BIT_OR BitwiseXORExpression_In_Await .]*
    //   [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await . BIT_XOR BitwiseANDExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // State#1251:
    //   [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await . BIT_AND EqualityExpression_In_Await]*
    //   [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await BIT_XOR BitwiseANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1252:
    //   [CallExpression_Await -> CallExpression_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#1253:
    //   [CallExpression_Await -> CallExpression_Await DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#1254:
    //   [CallExpression_Await -> CallExpression_Await LBRACK Expression_In_Await . RBRACK]*
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#1255:
    //   [OptionalChain_Await -> OPTIONAL_CHAINING LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#1256:
    //   [OptionalChain_Await -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#1257:
    //   [OptionalChain_Await -> OPTIONAL_CHAINING Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // State#1258:
    //   [OptionalChain_Await -> OPTIONAL_CHAINING KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#1259:
    //   [OptionalChain_Await -> OPTIONAL_CHAINING TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#1260:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [SubstitutionTemplate_Await_Tagged -> TemplateHead Expression_In_Await . TemplateSpans_Await_Tagged]*
    Goal::InputElementTemplateTail,
    // State#1261:
    //   [OptionalChain_Await -> OptionalChain_Await DOT . PrivateIdentifier]*
    //   [OptionalChain_Await -> OptionalChain_Await DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#1262:
    //   [OptionalChain_Await -> OptionalChain_Await LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#1263:
    //   [OptionalChain_Await -> OptionalChain_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // State#1264:
    //   [OptionalChain_Await -> OptionalChain_Await TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#1265:
    //   [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    //   [CoalesceExpression_In_Await -> CoalesceExpressionHead_In_Await NULLISH BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1266:
    //   [AsyncArrowFunction_In_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#1267:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ RelationalExpression_In_Await .]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1268:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ_STRICT RelationalExpression_In_Await .]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1269:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await NE RelationalExpression_In_Await .]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1270:
    //   [EqualityExpression_In_Await -> EqualityExpression_In_Await NE_STRICT RelationalExpression_In_Await .]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1271:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AND_ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1272:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1273:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1274:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await OR_ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1275:
    //   [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AssignmentOperator AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1276:
    //   [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    //   [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await AND BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1277:
    //   [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    //   [LogicalANDExpression_In_Await -> BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1278:
    //   [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await . AND BitwiseORExpression_In_Await]*
    //   [LogicalORExpression_In_Await -> LogicalORExpression_In_Await OR LogicalANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1279:
    //   [MemberExpression_Await -> MemberExpression_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#1280:
    //   [MemberExpression_Await -> MemberExpression_Await DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#1281:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [MemberExpression_Await -> MemberExpression_Await LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1282:
    //   [MultiplicativeExpression_Await -> MultiplicativeExpression_Await MultiplicativeOperator ExponentiationExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#1283:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await GT ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1284:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await GTE ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1285:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await IN ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1286:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await INSTANCEOF ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1287:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await LT ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1288:
    //   [RelationalExpression_In_Await -> RelationalExpression_In_Await LTE ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // State#1289:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await SAR AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#1290:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await SHL AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#1291:
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    //   [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await SHR AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#1292:
    //   [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL AssignmentExpression_In_Await . COLON AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#1293:
    //   [ExponentiationExpression_Await -> UpdateExpression_Await EXP ExponentiationExpression_Await .]*
    Goal::InputElementTemplateTail,
    // State#1294:
    //   [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL AssignmentExpression_In COLON AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#1295:
    //   [BindingRestElement_Await -> ELLIPSIS BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // State#1296:
    //   [BindingRestElement_Await -> ELLIPSIS BindingPattern_Await .]*
    Goal::InputElementDiv,
    // State#1297:
    //   [BindingIdentifier_Await -> AWAIT .]*
    //   [KeywordOrIdentifierName -> AWAIT .]*
    Goal::InputElementDiv,
    // State#1298:
    //   [BindingRestProperty_Await -> ELLIPSIS . BindingIdentifier_Await]*
    Goal::InputElementDiv,
    // State#1299:
    //   [ObjectBindingPattern_Await -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // State#1300:
    //   [BindingIdentifier_Await -> YIELD .]*
    //   [KeywordOrIdentifierName -> YIELD .]*
    Goal::InputElementDiv,
    // State#1301:
    //   [BindingPropertyList_Await -> BindingPropertyList_Await . COMMA BindingProperty_Await]*
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await . COMMA RBRACE]*
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await . COMMA BindingRestProperty_Await RBRACE]*
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#1302:
    //   [BindingPropertyList_Await -> BindingProperty_Await .]*
    Goal::InputElementDiv,
    // State#1303:
    //   [ObjectBindingPattern_Await -> LBRACE BindingRestProperty_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#1304:
    //   [BindingProperty_Await -> PropertyName_Await . COLON BindingElement_Await]*
    Goal::InputElementDiv,
    // State#1305:
    //   [BindingProperty_Await -> SingleNameBinding_Await .]*
    Goal::InputElementDiv,
    // State#1306:
    //   [ArrayBindingPattern_Await -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // State#1307:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA BindingRestElement_Await RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA Elision RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA Elision BindingRestElement_Await RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . RBRACK]*
    //   [BindingElementList_Await -> BindingElementList_Await . COMMA BindingElisionElement_Await]*
    Goal::InputElementDiv,
    // State#1308:
    //   [BindingElisionElement_Await -> BindingElement_Await .]*
    Goal::InputElementDiv,
    // State#1309:
    //   [BindingElementList_Await -> BindingElisionElement_Await .]*
    Goal::InputElementDiv,
    // State#1310:
    //   [ArrayBindingPattern_Await -> LBRACK BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1311:
    //   [ArrayBindingPattern_Await -> LBRACK Elision . RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK Elision . BindingRestElement_Await RBRACK]*
    //   [BindingElisionElement_Await -> Elision . BindingElement_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#1312:
    //   [Initializer_In_Await -> ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1313:
    //   [SingleNameBinding_Await -> BindingIdentifier_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1314:
    //   [BindingElement_Await -> BindingPattern_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1315:
    //   [FormalParameterList_Await -> FormalParameterList_Await COMMA . FormalParameter_Await]*
    //   [FormalParameters_Await -> FormalParameterList_Await COMMA .]*
    //   [FormalParameters_Await -> FormalParameterList_Await COMMA . FunctionRestParameter_Await]*
    Goal::InputElementDiv,
    // State#1316:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1317:
    //   [BindingRestElement_Yield_Await -> ELLIPSIS . BindingIdentifier_Yield_Await]*
    //   [BindingRestElement_Yield_Await -> ELLIPSIS . BindingPattern_Yield_Await]*
    Goal::InputElementDiv,
    // State#1318:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE . RBRACE]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE . BindingPropertyList_Yield_Await COMMA RBRACE]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE . BindingPropertyList_Yield_Await COMMA BindingRestProperty_Yield_Await RBRACE]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE . BindingPropertyList_Yield_Await RBRACE]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE . BindingRestProperty_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // State#1319:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA BindingRestElement_Yield_Await RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA Elision RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA Elision BindingRestElement_Yield_Await RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . BindingRestElement_Yield_Await RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . Elision RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK . Elision BindingRestElement_Yield_Await RBRACK]*
    Goal::InputElementDiv,
    // State#1320:
    //   [BindingPattern_Yield_Await -> ArrayBindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1321:
    //   [FormalParameter_Yield_Await -> BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1322:
    //   [SingleNameBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [SingleNameBinding_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#1323:
    //   [BindingElement_Yield_Await -> BindingPattern_Yield_Await .]*
    //   [BindingElement_Yield_Await -> BindingPattern_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#1324:
    //   [FunctionRestParameter_Yield_Await -> BindingRestElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1325:
    //   [FormalParameterList_Yield_Await -> FormalParameterList_Yield_Await . COMMA FormalParameter_Yield_Await]*
    //   [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await .]*
    //   [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await . COMMA]*
    //   [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await . COMMA FunctionRestParameter_Yield_Await]*
    Goal::InputElementDiv,
    // State#1326:
    //   [FormalParameterList_Yield_Await -> FormalParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1327:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1328:
    //   [FormalParameters_Yield_Await -> FunctionRestParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1329:
    //   [BindingPattern_Yield_Await -> ObjectBindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1330:
    //   [BindingElement_Yield_Await -> SingleNameBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1331:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#1332:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1333:
    //   [DoWhileStatement_Await -> DO . Statement_Await WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#1334:
    //   [ForInOfStatement_Await -> FOR . AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#1335:
    //   [IfStatement_Await -> IF . LPAREN Expression_In_Await RPAREN Statement_Await ELSE Statement_Await]*
    //   [IfStatement_Await -> IF . LPAREN Expression_In_Await RPAREN Statement_Await !~[ELSE]]*
    Goal::InputElementDiv,
    // State#1336:
    //   [Block_Await -> LBRACE . RBRACE]*
    //   [Block_Await -> LBRACE . StatementList_Await RBRACE]*
    Goal::InputElementRegExp,
    // State#1337:
    //   [SwitchStatement_Await -> SWITCH . LPAREN Expression_In_Await RPAREN CaseBlock_Await]*
    Goal::InputElementDiv,
    // State#1338:
    //   [TryStatement_Await -> TRY . Block_Await Catch_Await]*
    //   [TryStatement_Await -> TRY . Block_Await Catch_Await Finally_Await]*
    //   [TryStatement_Await -> TRY . Block_Await Finally_Await]*
    Goal::InputElementDiv,
    // State#1339:
    //   [WhileStatement_Await -> WHILE . LPAREN Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#1340:
    //   [WithStatement_Await -> WITH . LPAREN Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#1341:
    //   [Statement_Await -> BlockStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1342:
    //   [BlockStatement_Await -> Block_Await .]*
    Goal::InputElementRegExp,
    // State#1343:
    //   [Statement_Await -> BreakStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1344:
    //   [Statement_Await -> BreakableStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1345:
    //   [ClassStaticBlock -> STATIC LBRACE ClassStaticBlockBody . RBRACE]*
    Goal::InputElementDiv,
    // State#1346:
    //   [ClassStaticBlockBody -> ClassStaticBlockStatementList .]*
    Goal::InputElementDiv,
    // State#1347:
    //   [Statement_Await -> ContinueStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1348:
    //   [Statement_Await -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // State#1349:
    //   [StatementListItem_Await -> Declaration_Await .]*
    Goal::InputElementRegExp,
    // State#1350:
    //   [IterationStatement_Await -> DoWhileStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1351:
    //   [Statement_Await -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // State#1352:
    //   [Statement_Await -> ExpressionStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1353:
    //   [IterationStatement_Await -> ForInOfStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1354:
    //   [IterationStatement_Await -> ForStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1355:
    //   [Statement_Await -> IfStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1356:
    //   [BreakableStatement_Await -> IterationStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1357:
    //   [LabelledStatement_Await -> LabelIdentifier_Await . COLON LabelledItem_Await]*
    Goal::InputElementDiv,
    // State#1358:
    //   [Statement_Await -> LabelledStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1359:
    //   [StatementList_Await -> StatementListItem_Await .]*
    Goal::InputElementRegExp,
    // State#1360:
    //   [ClassStaticBlockStatementList -> StatementList_Await .]*
    //   [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // State#1361:
    //   [StatementListItem_Await -> Statement_Await .]*
    Goal::InputElementRegExp,
    // State#1362:
    //   [BreakableStatement_Await -> SwitchStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1363:
    //   [Statement_Await -> ThrowStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1364:
    //   [Statement_Await -> TryStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1365:
    //   [Statement_Await -> VariableStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1366:
    //   [IterationStatement_Await -> WhileStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1367:
    //   [Statement_Await -> WithStatement_Await .]*
    Goal::InputElementRegExp,
    // State#1368:
    //   [ClassElement -> STATIC FieldDefinition SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#1369:
    //   [ClassTail -> ClassHeritage LBRACE ClassBody RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#1370:
    //   [FormalParameterList -> FormalParameterList COMMA FormalParameter .]*
    Goal::InputElementDiv,
    // State#1371:
    //   [FormalParameters -> FormalParameterList COMMA FunctionRestParameter .]*
    Goal::InputElementDiv,
    // State#1372:
    //   [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#1373:
    //   [BindingRestElement_Yield -> ELLIPSIS BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // State#1374:
    //   [BindingRestElement_Yield -> ELLIPSIS BindingPattern_Yield .]*
    Goal::InputElementDiv,
    // State#1375:
    //   [BindingIdentifier_Yield -> AWAIT .]*
    //   [KeywordOrIdentifierName -> AWAIT .]*
    Goal::InputElementDiv,
    // State#1376:
    //   [BindingRestProperty_Yield -> ELLIPSIS . BindingIdentifier_Yield]*
    Goal::InputElementDiv,
    // State#1377:
    //   [ComputedPropertyName_Yield -> LBRACK . AssignmentExpression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // State#1378:
    //   [ObjectBindingPattern_Yield -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // State#1379:
    //   [BindingIdentifier_Yield -> YIELD .]*
    //   [KeywordOrIdentifierName -> YIELD .]*
    Goal::InputElementDiv,
    // State#1380:
    //   [BindingPropertyList_Yield -> BindingPropertyList_Yield . COMMA BindingProperty_Yield]*
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield . COMMA RBRACE]*
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield . COMMA BindingRestProperty_Yield RBRACE]*
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield . RBRACE]*
    Goal::InputElementDiv,
    // State#1381:
    //   [BindingPropertyList_Yield -> BindingProperty_Yield .]*
    Goal::InputElementDiv,
    // State#1382:
    //   [ObjectBindingPattern_Yield -> LBRACE BindingRestProperty_Yield . RBRACE]*
    Goal::InputElementDiv,
    // State#1383:
    //   [PropertyName_Yield -> ComputedPropertyName_Yield .]*
    Goal::InputElementDiv,
    // State#1384:
    //   [PropertyName_Yield -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // State#1385:
    //   [BindingProperty_Yield -> PropertyName_Yield . COLON BindingElement_Yield]*
    Goal::InputElementDiv,
    // State#1386:
    //   [BindingProperty_Yield -> SingleNameBinding_Yield .]*
    Goal::InputElementDiv,
    // State#1387:
    //   [ArrayBindingPattern_Yield -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // State#1388:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA BindingRestElement_Yield RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA Elision RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA Elision BindingRestElement_Yield RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . RBRACK]*
    //   [BindingElementList_Yield -> BindingElementList_Yield . COMMA BindingElisionElement_Yield]*
    Goal::InputElementDiv,
    // State#1389:
    //   [BindingElisionElement_Yield -> BindingElement_Yield .]*
    Goal::InputElementDiv,
    // State#1390:
    //   [BindingElementList_Yield -> BindingElisionElement_Yield .]*
    Goal::InputElementDiv,
    // State#1391:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#1392:
    //   [ArrayBindingPattern_Yield -> LBRACK Elision . RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK Elision . BindingRestElement_Yield RBRACK]*
    //   [BindingElisionElement_Yield -> Elision . BindingElement_Yield]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#1393:
    //   [Initializer_In_Yield -> ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#1394:
    //   [SingleNameBinding_Yield -> BindingIdentifier_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#1395:
    //   [BindingElement_Yield -> BindingPattern_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#1396:
    //   [FormalParameterList_Yield -> FormalParameterList_Yield COMMA . FormalParameter_Yield]*
    //   [FormalParameters_Yield -> FormalParameterList_Yield COMMA .]*
    //   [FormalParameters_Yield -> FormalParameterList_Yield COMMA . FunctionRestParameter_Yield]*
    Goal::InputElementDiv,
    // State#1397:
    //   [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1398:
    //   [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1399:
    //   [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1400:
    //   [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#1401:
    //   [UniqueFormalParameters_Await -> FormalParameters_Await .]*
    Goal::InputElementDiv,
    // State#1402:
    //   [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1403:
    //   [MethodDefinition -> GET ClassElementName LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1404:
    //   [UniqueFormalParameters_Yield -> FormalParameters_Yield .]*
    Goal::InputElementDiv,
    // State#1405:
    //   [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1406:
    //   [PropertySetParameterList -> FormalParameter .]*
    Goal::InputElementDiv,
    // State#1407:
    //   [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1408:
    //   [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1409:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1410:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1411:
    //   [DoWhileStatement -> DO Statement WHILE LPAREN Expression_In RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1412:
    //   [AsyncArrowFunction -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#1413:
    //   [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1414:
    //   [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1415:
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1416:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1417:
    //   [Initializer -> ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1418:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding IN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1419:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1420:
    //   [VariableDeclaration -> BindingIdentifier .]*
    //   [VariableDeclaration -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // State#1421:
    //   [VariableDeclaration -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // State#1422:
    //   [VariableDeclarationList -> VariableDeclarationList COMMA VariableDeclaration .]*
    Goal::InputElementDiv,
    // State#1423:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1424:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1425:
    //   [ConciseBody -> LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#1426:
    //   [AsyncArrowFunction_Await -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // State#1427:
    //   [AsyncConciseBody -> LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#1428:
    //   [ArrowFunction_Await -> ArrowParameters_Await ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // State#1429:
    //   [BitwiseANDExpression_Await -> BitwiseANDExpression_Await BIT_AND . EqualityExpression_Await]*
    Goal::InputElementRegExp,
    // State#1430:
    //   [BitwiseORExpression_Await -> BitwiseORExpression_Await BIT_OR . BitwiseXORExpression_Await]*
    Goal::InputElementRegExp,
    // State#1431:
    //   [BitwiseXORExpression_Await -> BitwiseXORExpression_Await BIT_XOR . BitwiseANDExpression_Await]*
    Goal::InputElementRegExp,
    // State#1432:
    //   [CoalesceExpression_Await -> CoalesceExpressionHead_Await NULLISH . BitwiseORExpression_Await]*
    Goal::InputElementRegExp,
    // State#1433:
    //   [AsyncArrowFunction_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#1434:
    //   [EqualityExpression_Await -> EqualityExpression_Await EQ . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // State#1435:
    //   [EqualityExpression_Await -> EqualityExpression_Await EQ_STRICT . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // State#1436:
    //   [EqualityExpression_Await -> EqualityExpression_Await NE . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // State#1437:
    //   [EqualityExpression_Await -> EqualityExpression_Await NE_STRICT . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // State#1438:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await AND_ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#1439:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#1440:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#1441:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await OR_ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#1442:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await AssignmentOperator . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#1443:
    //   [LogicalANDExpression_Await -> LogicalANDExpression_Await AND . BitwiseORExpression_Await]*
    Goal::InputElementRegExp,
    // State#1444:
    //   [LogicalORExpression_Await -> LogicalORExpression_Await OR . LogicalANDExpression_Await]*
    Goal::InputElementRegExp,
    // State#1445:
    //   [RelationalExpression_Await -> RelationalExpression_Await GT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#1446:
    //   [RelationalExpression_Await -> RelationalExpression_Await GTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#1447:
    //   [RelationalExpression_Await -> RelationalExpression_Await INSTANCEOF . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#1448:
    //   [RelationalExpression_Await -> RelationalExpression_Await LT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#1449:
    //   [RelationalExpression_Await -> RelationalExpression_Await LTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // State#1450:
    //   [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL . AssignmentExpression_In_Await COLON AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#1451:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1452:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1453:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1454:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration IN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1455:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1456:
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1457:
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1458:
    //   [LexicalBinding -> BindingIdentifier .]*
    //   [LexicalBinding -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // State#1459:
    //   [LexicalBinding -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // State#1460:
    //   [BindingList -> BindingList COMMA LexicalBinding .]*
    Goal::InputElementDiv,
    // State#1461:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1462:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1463:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1464:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1465:
    //   [ConditionalExpression -> ShortCircuitExpression CONDITIONAL AssignmentExpression_In COLON . AssignmentExpression]*
    Goal::InputElementRegExp,
    // State#1466:
    //   [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1467:
    //   [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#1468:
    //   [IfStatement -> IF LPAREN Expression_In RPAREN Statement ELSE . Statement]*
    Goal::InputElementRegExp,
    // State#1469:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingIdentifier RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1470:
    //   [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingPattern RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1471:
    //   [ArgumentList -> ArgumentList COMMA ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // State#1472:
    //   [CaseClause -> CASE . Expression_In COLON]*
    //   [CaseClause -> CASE . Expression_In COLON StatementList]*
    Goal::InputElementRegExp,
    // State#1473:
    //   [DefaultClause -> DEFAULT . COLON]*
    //   [DefaultClause -> DEFAULT . COLON StatementList]*
    Goal::InputElementDiv,
    // State#1474:
    //   [CaseBlock -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#1475:
    //   [CaseClauses -> CaseClause .]*
    Goal::InputElementDiv,
    // State#1476:
    //   [CaseBlock -> LBRACE CaseClauses . RBRACE]*
    //   [CaseBlock -> LBRACE CaseClauses . DefaultClause RBRACE]*
    //   [CaseBlock -> LBRACE CaseClauses . DefaultClause CaseClauses RBRACE]*
    //   [CaseClauses -> CaseClauses . CaseClause]*
    Goal::InputElementDiv,
    // State#1477:
    //   [CaseBlock -> LBRACE DefaultClause . RBRACE]*
    //   [CaseBlock -> LBRACE DefaultClause . CaseClauses RBRACE]*
    Goal::InputElementDiv,
    // State#1478:
    //   [Catch -> CATCH LPAREN CatchParameter RPAREN . Block]*
    Goal::InputElementDiv,
    // State#1479:
    //   [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA BindingRestProperty RBRACE .]*
    Goal::InputElementDiv,
    // State#1480:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // State#1481:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#1482:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // State#1483:
    //   [DoWhileStatement_Return -> DO Statement_Return WHILE . LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1484:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1485:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR . ForBinding IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN VAR . ForBinding OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1486:
    //   [Expression -> Expression . COMMA AssignmentExpression]*
    //   [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1487:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration . IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration . OF AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1488:
    //   [AssignmentExpression -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression]*
    //   [AssignmentExpression -> LeftHandSideExpression . AssignmentOperator AssignmentExpression]*
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression . IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression . OF AssignmentExpression_In RPAREN Statement_Return]*
    //   [UpdateExpression -> LeftHandSideExpression .]*
    //   [UpdateExpression -> LeftHandSideExpression . DEC]*
    //   [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementDiv,
    // State#1489:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration . SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1490:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [IfStatement_Return -> IF LPAREN Expression_In . RPAREN Statement_Return ELSE Statement_Return]*
    //   [IfStatement_Return -> IF LPAREN Expression_In . RPAREN Statement_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#1491:
    //   [Block_Return -> LBRACE StatementList_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#1492:
    //   [ReturnStatement -> RETURN Expression_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1493:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [SwitchStatement_Return -> SWITCH LPAREN Expression_In . RPAREN CaseBlock_Return]*
    Goal::InputElementDiv,
    // State#1494:
    //   [Catch_Return -> CATCH . LPAREN CatchParameter RPAREN Block_Return]*
    //   [Catch_Return -> CATCH . Block_Return]*
    Goal::InputElementDiv,
    // State#1495:
    //   [Finally_Return -> FINALLY . Block_Return]*
    Goal::InputElementDiv,
    // State#1496:
    //   [TryStatement_Return -> TRY Block_Return Catch_Return .]*
    //   [TryStatement_Return -> TRY Block_Return Catch_Return . Finally_Return]*
    Goal::InputElementRegExp,
    // State#1497:
    //   [TryStatement_Return -> TRY Block_Return Finally_Return .]*
    Goal::InputElementRegExp,
    // State#1498:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [WhileStatement_Return -> WHILE LPAREN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1499:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [WithStatement_Return -> WITH LPAREN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1500:
    //   [LabelledItem_Return -> FunctionDeclaration .]*
    Goal::InputElementRegExp,
    // State#1501:
    //   [LabelledStatement_Return -> LabelIdentifier COLON LabelledItem_Return .]*
    Goal::InputElementRegExp,
    // State#1502:
    //   [LabelledItem_Return -> Statement_Return .]*
    Goal::InputElementRegExp,
    // State#1503:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [TemplateMiddleList_Tagged -> TemplateMiddleList_Tagged TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // State#1504:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL . ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1505:
    //   [AsyncMethod_Await -> ASYNC ClassElementName_Await . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1506:
    //   [PropertyDefinition_Await -> ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1507:
    //   [MethodDefinition_Await -> GET ClassElementName_Await . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1508:
    //   [ComputedPropertyName_Await -> LBRACK AssignmentExpression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1509:
    //   [GeneratorMethod_Await -> MUL ClassElementName_Await . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1510:
    //   [MethodDefinition_Await -> SET ClassElementName_Await . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1511:
    //   [FormalParameters -> () .]*
    //   [MethodDefinition_Await -> ClassElementName_Await LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1512:
    //   [CoverInitializedName_Await -> IdentifierReference_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1513:
    //   [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await COMMA . RBRACE]*
    //   [PropertyDefinitionList_Await -> PropertyDefinitionList_Await COMMA . PropertyDefinition_Await]*
    Goal::InputElementDiv,
    // State#1514:
    //   [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#1515:
    //   [PropertyDefinition_Await -> PropertyName_Await COLON . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1516:
    //   [AsyncArrowFunction_In_Await -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#1517:
    //   [ClassElement_Await -> STATIC FieldDefinition_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1518:
    //   [ClassElement_Await -> STATIC MethodDefinition_Await .]*
    Goal::InputElementDiv,
    // State#1519:
    //   [ClassTail_Await -> LBRACE ClassBody_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#1520:
    //   [ClassElementList_Await -> ClassElementList_Await ClassElement_Await .]*
    Goal::InputElementDiv,
    // State#1521:
    //   [FieldDefinition_Await -> ClassElementName_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1522:
    //   [ClassElement_Await -> FieldDefinition_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#1523:
    //   [ClassTail_Await -> ClassHeritage_Await LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#1524:
    //   [ClassTail_Await -> ClassHeritage_Await LBRACE ClassBody_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#1525:
    //   [ImportCall_Await -> IMPORT LPAREN AssignmentExpression_In_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1526:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL . BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1527:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1528:
    //   [BreakStatement_Await -> BREAK LabelIdentifier_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1529:
    //   [ClassDeclaration_Await -> CLASS BindingIdentifier_Await ClassTail_Await .]*
    Goal::InputElementRegExp,
    // State#1530:
    //   [ContinueStatement_Await -> CONTINUE LabelIdentifier_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1531:
    //   [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE . LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1532:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1533:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1534:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR . ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1535:
    //   [Expression_Await -> AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#1536:
    //   [Expression_Await -> Expression_Await . COMMA AssignmentExpression_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1537:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await . IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1538:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_Await]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await . IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementDiv,
    // State#1539:
    //   [ForDeclaration_Await -> LetOrConst . ForBinding_Await]*
    //   [LexicalDeclaration_Await -> LetOrConst . BindingList_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1540:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1541:
    //   [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1542:
    //   [FormalParameters -> () .]*
    //   [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1543:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await . RPAREN Statement_Await_Return ELSE Statement_Await_Return]*
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await . RPAREN Statement_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#1544:
    //   [Block_Await_Return -> LBRACE StatementList_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#1545:
    //   [ReturnStatement_Await -> RETURN Expression_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1546:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [SwitchStatement_Await_Return -> SWITCH LPAREN Expression_In_Await . RPAREN CaseBlock_Await_Return]*
    Goal::InputElementDiv,
    // State#1547:
    //   [ThrowStatement_Await -> THROW Expression_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1548:
    //   [Catch_Await_Return -> CATCH . LPAREN CatchParameter_Await RPAREN Block_Await_Return]*
    //   [Catch_Await_Return -> CATCH . Block_Await_Return]*
    Goal::InputElementDiv,
    // State#1549:
    //   [Finally_Await_Return -> FINALLY . Block_Await_Return]*
    Goal::InputElementDiv,
    // State#1550:
    //   [TryStatement_Await_Return -> TRY Block_Await_Return Catch_Await_Return .]*
    //   [TryStatement_Await_Return -> TRY Block_Await_Return Catch_Await_Return . Finally_Await_Return]*
    Goal::InputElementRegExp,
    // State#1551:
    //   [TryStatement_Await_Return -> TRY Block_Await_Return Finally_Await_Return .]*
    Goal::InputElementRegExp,
    // State#1552:
    //   [VariableDeclaration_In_Await -> BindingIdentifier_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1553:
    //   [VariableDeclaration_In_Await -> BindingPattern_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1554:
    //   [VariableDeclarationList_In_Await -> VariableDeclarationList_In_Await COMMA . VariableDeclaration_In_Await]*
    Goal::InputElementDiv,
    // State#1555:
    //   [VariableStatement_Await -> VAR VariableDeclarationList_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1556:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [WhileStatement_Await_Return -> WHILE LPAREN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1557:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [WithStatement_Await_Return -> WITH LPAREN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1558:
    //   [Expression_In_Await -> Expression_In_Await COMMA AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1559:
    //   [FunctionDeclaration_Await -> FUNCTION . BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1560:
    //   [LabelledItem_Await_Return -> FunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#1561:
    //   [LabelledStatement_Await_Return -> LabelIdentifier_Await COLON LabelledItem_Await_Return .]*
    Goal::InputElementRegExp,
    // State#1562:
    //   [LabelledItem_Await_Return -> Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#1563:
    //   [LexicalBinding_In_Await -> BindingIdentifier_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1564:
    //   [BindingList_In_Await -> BindingList_In_Await COMMA . LexicalBinding_In_Await]*
    Goal::InputElementDiv,
    // State#1565:
    //   [LexicalDeclaration_In_Await -> LetOrConst BindingList_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1566:
    //   [LexicalBinding_In_Await -> BindingPattern_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // State#1567:
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1568:
    //   [ElementList_Await -> ElementList_Await COMMA AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1569:
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA Elision . RBRACK]*
    //   [ElementList_Await -> ElementList_Await COMMA Elision . AssignmentExpression_In_Await]*
    //   [ElementList_Await -> ElementList_Await COMMA Elision . SpreadElement_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#1570:
    //   [ElementList_Await -> ElementList_Await COMMA SpreadElement_Await .]*
    Goal::InputElementDiv,
    // State#1571:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingIdentifier_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1572:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingPattern_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1573:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS . BindingIdentifier_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS . BindingPattern_Await RPAREN]*
    Goal::InputElementDiv,
    // State#1574:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1575:
    //   [SuperProperty_Await -> SUPER LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1576:
    //   [ArgumentList_Await -> ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1577:
    //   [ArgumentList_Await -> ArgumentList_Await COMMA . ELLIPSIS AssignmentExpression_In_Await]*
    //   [ArgumentList_Await -> ArgumentList_Await COMMA . AssignmentExpression_In_Await]*
    //   [Arguments_Await -> LPAREN ArgumentList_Await COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // State#1578:
    //   [Arguments_Await -> LPAREN ArgumentList_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1579:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [TemplateMiddleList_Await -> TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1580:
    //   [TemplateMiddleList_Await -> TemplateMiddleList_Await TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // State#1581:
    //   [TemplateSpans_Await -> TemplateMiddleList_Await TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#1582:
    //   [CallExpression_Await -> CallExpression_Await LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1583:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [OptionalChain_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1584:
    //   [TemplateMiddleList_Await_Tagged -> TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // State#1585:
    //   [TemplateSpans_Await_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#1586:
    //   [TemplateMiddleList_Await_Tagged -> TemplateMiddleList_Await_Tagged . TemplateMiddle Expression_In_Await]*
    //   [TemplateSpans_Await_Tagged -> TemplateMiddleList_Await_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#1587:
    //   [SubstitutionTemplate_Await_Tagged -> TemplateHead Expression_In_Await TemplateSpans_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#1588:
    //   [OptionalChain_Await -> OptionalChain_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#1589:
    //   [OptionalChain_Await -> OptionalChain_Await DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#1590:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [OptionalChain_Await -> OptionalChain_Await LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1591:
    //   [MemberExpression_Await -> MemberExpression_Await LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1592:
    //   [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL AssignmentExpression_In_Await COLON . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1593:
    //   [BindingRestProperty_Await -> ELLIPSIS BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // State#1594:
    //   [BindingPropertyList_Await -> BindingPropertyList_Await COMMA . BindingProperty_Await]*
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA . RBRACE]*
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA . BindingRestProperty_Await RBRACE]*
    Goal::InputElementDiv,
    // State#1595:
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await RBRACE .]*
    Goal::InputElementDiv,
    // State#1596:
    //   [ObjectBindingPattern_Await -> LBRACE BindingRestProperty_Await RBRACE .]*
    Goal::InputElementDiv,
    // State#1597:
    //   [BindingProperty_Await -> PropertyName_Await COLON . BindingElement_Await]*
    Goal::InputElementDiv,
    // State#1598:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . BindingRestElement_Await RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . Elision RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . Elision BindingRestElement_Await RBRACK]*
    //   [BindingElementList_Await -> BindingElementList_Await COMMA . BindingElisionElement_Await]*
    Goal::InputElementDiv,
    // State#1599:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#1600:
    //   [ArrayBindingPattern_Await -> LBRACK BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#1601:
    //   [ArrayBindingPattern_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#1602:
    //   [BindingElisionElement_Await -> Elision BindingElement_Await .]*
    Goal::InputElementDiv,
    // State#1603:
    //   [ArrayBindingPattern_Await -> LBRACK Elision BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1604:
    //   [Initializer_In_Await -> ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1605:
    //   [FormalParameterList_Await -> FormalParameterList_Await COMMA FormalParameter_Await .]*
    Goal::InputElementDiv,
    // State#1606:
    //   [FormalParameters_Await -> FormalParameterList_Await COMMA FunctionRestParameter_Await .]*
    Goal::InputElementDiv,
    // State#1607:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#1608:
    //   [BindingRestElement_Yield_Await -> ELLIPSIS BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1609:
    //   [BindingRestElement_Yield_Await -> ELLIPSIS BindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1610:
    //   [BindingIdentifier_Yield_Await -> AWAIT .]*
    //   [KeywordOrIdentifierName -> AWAIT .]*
    Goal::InputElementDiv,
    // State#1611:
    //   [BindingRestProperty_Yield_Await -> ELLIPSIS . BindingIdentifier_Yield_Await]*
    Goal::InputElementDiv,
    // State#1612:
    //   [ComputedPropertyName_Yield_Await -> LBRACK . AssignmentExpression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#1613:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // State#1614:
    //   [BindingIdentifier_Yield_Await -> YIELD .]*
    //   [KeywordOrIdentifierName -> YIELD .]*
    Goal::InputElementDiv,
    // State#1615:
    //   [BindingPropertyList_Yield_Await -> BindingPropertyList_Yield_Await . COMMA BindingProperty_Yield_Await]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await . COMMA RBRACE]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await . COMMA BindingRestProperty_Yield_Await RBRACE]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#1616:
    //   [BindingPropertyList_Yield_Await -> BindingProperty_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1617:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingRestProperty_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#1618:
    //   [PropertyName_Yield_Await -> ComputedPropertyName_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1619:
    //   [PropertyName_Yield_Await -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // State#1620:
    //   [BindingProperty_Yield_Await -> PropertyName_Yield_Await . COLON BindingElement_Yield_Await]*
    Goal::InputElementDiv,
    // State#1621:
    //   [BindingProperty_Yield_Await -> SingleNameBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1622:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // State#1623:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA BindingRestElement_Yield_Await RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA Elision RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA Elision BindingRestElement_Yield_Await RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . RBRACK]*
    //   [BindingElementList_Yield_Await -> BindingElementList_Yield_Await . COMMA BindingElisionElement_Yield_Await]*
    Goal::InputElementDiv,
    // State#1624:
    //   [BindingElisionElement_Yield_Await -> BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1625:
    //   [BindingElementList_Yield_Await -> BindingElisionElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1626:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1627:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK Elision . RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK Elision . BindingRestElement_Yield_Await RBRACK]*
    //   [BindingElisionElement_Yield_Await -> Elision . BindingElement_Yield_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#1628:
    //   [Initializer_In_Yield_Await -> ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1629:
    //   [SingleNameBinding_Yield_Await -> BindingIdentifier_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1630:
    //   [BindingElement_Yield_Await -> BindingPattern_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1631:
    //   [FormalParameterList_Yield_Await -> FormalParameterList_Yield_Await COMMA . FormalParameter_Yield_Await]*
    //   [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await COMMA .]*
    //   [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await COMMA . FunctionRestParameter_Yield_Await]*
    Goal::InputElementDiv,
    // State#1632:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1633:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1634:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1635:
    //   [DoWhileStatement_Await -> DO Statement_Await . WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1636:
    //   [ForInOfStatement_Await -> FOR AWAIT . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR AWAIT . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR AWAIT . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#1637:
    //   [ForInOfStatement_Await -> FOR LPAREN . VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN . ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN . LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#1638:
    //   [IfStatement_Await -> IF LPAREN . Expression_In_Await RPAREN Statement_Await ELSE Statement_Await]*
    //   [IfStatement_Await -> IF LPAREN . Expression_In_Await RPAREN Statement_Await !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#1639:
    //   [Block_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#1640:
    //   [Block_Await -> LBRACE StatementList_Await . RBRACE]*
    //   [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // State#1641:
    //   [SwitchStatement_Await -> SWITCH LPAREN . Expression_In_Await RPAREN CaseBlock_Await]*
    Goal::InputElementRegExp,
    // State#1642:
    //   [TryStatement_Await -> TRY Block_Await . Catch_Await]*
    //   [TryStatement_Await -> TRY Block_Await . Catch_Await Finally_Await]*
    //   [TryStatement_Await -> TRY Block_Await . Finally_Await]*
    Goal::InputElementDiv,
    // State#1643:
    //   [WhileStatement_Await -> WHILE LPAREN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#1644:
    //   [WithStatement_Await -> WITH LPAREN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#1645:
    //   [ClassStaticBlock -> STATIC LBRACE ClassStaticBlockBody RBRACE .]*
    Goal::InputElementDiv,
    // State#1646:
    //   [LabelledStatement_Await -> LabelIdentifier_Await COLON . LabelledItem_Await]*
    Goal::InputElementRegExp,
    // State#1647:
    //   [StatementList_Await -> StatementList_Await StatementListItem_Await .]*
    Goal::InputElementRegExp,
    // State#1648:
    //   [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#1649:
    //   [BindingRestProperty_Yield -> ELLIPSIS BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // State#1650:
    //   [UnaryExpression_Yield -> ADD . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1651:
    //   [AsyncArrowFunction_In_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1652:
    //   [BindingIdentifier_Yield -> AWAIT .]*
    //   [IdentifierReference_Yield -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // State#1653:
    //   [UnaryExpression_Yield -> BIT_NOT . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1654:
    //   [ClassExpression_Yield -> CLASS . BindingIdentifier_Yield ClassTail_Yield]*
    //   [ClassExpression_Yield -> CLASS . ClassTail_Yield]*
    Goal::InputElementDiv,
    // State#1655:
    //   [UpdateExpression_Yield -> DEC . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1656:
    //   [UnaryExpression_Yield -> DELETE . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1657:
    //   [ImportCall_Yield -> IMPORT . LPAREN AssignmentExpression_In_Yield RPAREN]*
    //   [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // State#1658:
    //   [UpdateExpression_Yield -> INC . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1659:
    //   [ObjectLiteral_Yield -> LBRACE . RBRACE]*
    //   [ObjectLiteral_Yield -> LBRACE . PropertyDefinitionList_Yield COMMA RBRACE]*
    //   [ObjectLiteral_Yield -> LBRACE . PropertyDefinitionList_Yield RBRACE]*
    Goal::InputElementDiv,
    // State#1660:
    //   [ArrayLiteral_Yield -> LBRACK . RBRACK]*
    //   [ArrayLiteral_Yield -> LBRACK . ElementList_Yield COMMA RBRACK]*
    //   [ArrayLiteral_Yield -> LBRACK . ElementList_Yield COMMA Elision RBRACK]*
    //   [ArrayLiteral_Yield -> LBRACK . ElementList_Yield RBRACK]*
    //   [ArrayLiteral_Yield -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // State#1661:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . ELLIPSIS BindingIdentifier_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . ELLIPSIS BindingPattern_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield COMMA ELLIPSIS BindingIdentifier_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield COMMA ELLIPSIS BindingPattern_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield RPAREN]*
    Goal::InputElementRegExp,
    // State#1662:
    //   [MemberExpression_Yield -> NEW . MemberExpression_Yield Arguments_Yield]*
    //   [NewExpression_Yield -> NEW . NewExpression_Yield]*
    //   [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // State#1663:
    //   [UnaryExpression_Yield -> NOT . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1664:
    //   [TemplateLiteral_Yield -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#1665:
    //   [RelationalExpression_In_Yield -> PrivateIdentifier . IN ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // State#1666:
    //   [PrimaryExpression_Yield -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // State#1667:
    //   [UnaryExpression_Yield -> SUB . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1668:
    //   [SuperCall_Yield -> SUPER . Arguments_Yield]*
    //   [SuperProperty_Yield -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty_Yield -> SUPER . LBRACK Expression_In_Yield RBRACK]*
    Goal::InputElementDiv,
    // State#1669:
    //   [PrimaryExpression_Yield -> THIS .]*
    Goal::InputElementTemplateTail,
    // State#1670:
    //   [UnaryExpression_Yield -> TYPEOF . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1671:
    //   [SubstitutionTemplate_Yield -> TemplateHead . Expression_In_Yield TemplateSpans_Yield]*
    Goal::InputElementRegExp,
    // State#1672:
    //   [UnaryExpression_Yield -> VOID . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // State#1673:
    //   [BindingIdentifier_Yield -> YIELD .]*
    //   [YieldExpression_In -> YIELD .]*
    //   [YieldExpression_In -> YIELD . MUL AssignmentExpression_In_Yield]*
    //   [YieldExpression_In -> YIELD . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#1674:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    //   [ShiftExpression_Yield -> AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1675:
    //   [PrimaryExpression_Yield -> ArrayLiteral_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1676:
    //   [AssignmentExpression_In_Yield -> ArrowFunction_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1677:
    //   [ArrowFunction_In_Yield -> ArrowParameters_Yield . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // State#1678:
    //   [ComputedPropertyName_Yield -> LBRACK AssignmentExpression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#1679:
    //   [AssignmentExpression_In_Yield -> AsyncArrowFunction_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1680:
    //   [PrimaryExpression_Yield -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#1681:
    //   [PrimaryExpression_Yield -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#1682:
    //   [ArrowParameters_Yield -> BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // State#1683:
    //   [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield . BIT_AND EqualityExpression_In_Yield]*
    //   [BitwiseXORExpression_In_Yield -> BitwiseANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1684:
    //   [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    //   [CoalesceExpressionHead_In_Yield -> BitwiseORExpression_In_Yield .]*
    //   [LogicalANDExpression_In_Yield -> BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1685:
    //   [BitwiseORExpression_In_Yield -> BitwiseXORExpression_In_Yield .]*
    //   [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield . BIT_XOR BitwiseANDExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // State#1686:
    //   [CallExpression_Yield -> CallExpression_Yield . DOT PrivateIdentifier]*
    //   [CallExpression_Yield -> CallExpression_Yield . DOT KeywordOrIdentifierName]*
    //   [CallExpression_Yield -> CallExpression_Yield . LBRACK Expression_In_Yield RBRACK]*
    //   [CallExpression_Yield -> CallExpression_Yield . Arguments_Yield]*
    //   [CallExpression_Yield -> CallExpression_Yield . TemplateLiteral_Yield_Tagged]*
    //   [LeftHandSideExpression_Yield -> CallExpression_Yield .]*
    //   [OptionalExpression_Yield -> CallExpression_Yield . OptionalChain_Yield]*
    Goal::InputElementTemplateTail,
    // State#1687:
    //   [PrimaryExpression_Yield -> ClassExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1688:
    //   [CoalesceExpression_In_Yield -> CoalesceExpressionHead_In_Yield . NULLISH BitwiseORExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#1689:
    //   [CoalesceExpressionHead_In_Yield -> CoalesceExpression_In_Yield .]*
    //   [ShortCircuitExpression_In_Yield -> CoalesceExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1690:
    //   [AssignmentExpression_In_Yield -> ConditionalExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1691:
    //   [AsyncArrowFunction_In_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield . ARROW AsyncConciseBody_In]*
    //   [CallExpression_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1692:
    //   [ArrowParameters_Yield -> CoverParenthesizedExpressionAndArrowParameterList_Yield .]*
    //   [PrimaryExpression_Yield -> CoverParenthesizedExpressionAndArrowParameterList_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1693:
    //   [BitwiseANDExpression_In_Yield -> EqualityExpression_In_Yield .]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ RelationalExpression_In_Yield]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ_STRICT RelationalExpression_In_Yield]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE RelationalExpression_In_Yield]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE_STRICT RelationalExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // State#1694:
    //   [MultiplicativeExpression_Yield -> ExponentiationExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1695:
    //   [PrimaryExpression_Yield -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#1696:
    //   [PrimaryExpression_Yield -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#1697:
    //   [BindingIdentifier_Yield -> Identifier .]*
    //   [IdentifierReference_Yield -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#1698:
    //   [PrimaryExpression_Yield -> IdentifierReference_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1699:
    //   [CallExpression_Yield -> ImportCall_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1700:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . AND_ASSIGN AssignmentExpression_In_Yield]*
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . ASSIGN AssignmentExpression_In_Yield]*
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . NULLISH_ASSIGN AssignmentExpression_In_Yield]*
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . OR_ASSIGN AssignmentExpression_In_Yield]*
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . AssignmentOperator AssignmentExpression_In_Yield]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementTemplateTail,
    // State#1701:
    //   [PrimaryExpression_Yield -> Literal .]*
    Goal::InputElementTemplateTail,
    // State#1702:
    //   [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield . AND BitwiseORExpression_In_Yield]*
    //   [LogicalORExpression_In_Yield -> LogicalANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1703:
    //   [LogicalORExpression_In_Yield -> LogicalORExpression_In_Yield . OR LogicalANDExpression_In_Yield]*
    //   [ShortCircuitExpression_In_Yield -> LogicalORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1704:
    //   [CoverCallExpressionAndAsyncArrowHead_Yield -> MemberExpression_Yield . Arguments_Yield]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . DOT PrivateIdentifier]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . DOT KeywordOrIdentifierName]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . LBRACK Expression_In_Yield RBRACK]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . TemplateLiteral_Yield_Tagged]*
    //   [NewExpression_Yield -> MemberExpression_Yield .]*
    //   [OptionalExpression_Yield -> MemberExpression_Yield . OptionalChain_Yield]*
    Goal::InputElementTemplateTail,
    // State#1705:
    //   [MemberExpression_Yield -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // State#1706:
    //   [AdditiveExpression_Yield -> MultiplicativeExpression_Yield .]*
    //   [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield . MultiplicativeOperator ExponentiationExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#1707:
    //   [LeftHandSideExpression_Yield -> NewExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1708:
    //   [PrimaryExpression_Yield -> ObjectLiteral_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1709:
    //   [LeftHandSideExpression_Yield -> OptionalExpression_Yield .]*
    //   [OptionalExpression_Yield -> OptionalExpression_Yield . OptionalChain_Yield]*
    Goal::InputElementTemplateTail,
    // State#1710:
    //   [MemberExpression_Yield -> PrimaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1711:
    //   [EqualityExpression_In_Yield -> RelationalExpression_In_Yield .]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#1712:
    //   [RelationalExpression_In_Yield -> ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#1713:
    //   [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield .]*
    //   [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield . CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // State#1714:
    //   [TemplateLiteral_Yield -> SubstitutionTemplate_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1715:
    //   [CallExpression_Yield -> SuperCall_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1716:
    //   [MemberExpression_Yield -> SuperProperty_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1717:
    //   [PrimaryExpression_Yield -> TemplateLiteral_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1718:
    //   [ExponentiationExpression_Yield -> UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1719:
    //   [ExponentiationExpression_Yield -> UpdateExpression_Yield . EXP ExponentiationExpression_Yield]*
    //   [UnaryExpression_Yield -> UpdateExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1720:
    //   [AssignmentExpression_In_Yield -> YieldExpression_In .]*
    Goal::InputElementTemplateTail,
    // State#1721:
    //   [BindingPropertyList_Yield -> BindingPropertyList_Yield COMMA . BindingProperty_Yield]*
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA . RBRACE]*
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA . BindingRestProperty_Yield RBRACE]*
    Goal::InputElementDiv,
    // State#1722:
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield RBRACE .]*
    Goal::InputElementDiv,
    // State#1723:
    //   [ObjectBindingPattern_Yield -> LBRACE BindingRestProperty_Yield RBRACE .]*
    Goal::InputElementDiv,
    // State#1724:
    //   [BindingProperty_Yield -> PropertyName_Yield COLON . BindingElement_Yield]*
    Goal::InputElementDiv,
    // State#1725:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . BindingRestElement_Yield RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . Elision RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . Elision BindingRestElement_Yield RBRACK]*
    //   [BindingElementList_Yield -> BindingElementList_Yield COMMA . BindingElisionElement_Yield]*
    Goal::InputElementDiv,
    // State#1726:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield RBRACK .]*
    Goal::InputElementDiv,
    // State#1727:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // State#1728:
    //   [ArrayBindingPattern_Yield -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#1729:
    //   [BindingElisionElement_Yield -> Elision BindingElement_Yield .]*
    Goal::InputElementDiv,
    // State#1730:
    //   [ArrayBindingPattern_Yield -> LBRACK Elision BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#1731:
    //   [Initializer_In_Yield -> ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#1732:
    //   [FormalParameterList_Yield -> FormalParameterList_Yield COMMA FormalParameter_Yield .]*
    Goal::InputElementDiv,
    // State#1733:
    //   [FormalParameters_Yield -> FormalParameterList_Yield COMMA FunctionRestParameter_Yield .]*
    Goal::InputElementDiv,
    // State#1734:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#1735:
    //   [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1736:
    //   [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#1737:
    //   [UniqueFormalParameters_Yield_Await -> FormalParameters_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1738:
    //   [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1739:
    //   [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1740:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition -> GET ClassElementName LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#1741:
    //   [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1742:
    //   [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1743:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#1744:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1745:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#1746:
    //   [DoWhileStatement -> DO Statement WHILE LPAREN Expression_In RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#1747:
    //   [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1748:
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1749:
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1750:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1751:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1752:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1753:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1754:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // State#1755:
    //   [ConciseBody -> LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#1756:
    //   [AsyncArrowFunction_Await -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#1757:
    //   [AsyncConciseBody -> LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#1758:
    //   [ArrowFunction_Await -> ArrowParameters_Await ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // State#1759:
    //   [BitwiseANDExpression_Await -> BitwiseANDExpression_Await BIT_AND EqualityExpression_Await .]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . EQ RelationalExpression_Await]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . EQ_STRICT RelationalExpression_Await]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . NE RelationalExpression_Await]*
    //   [EqualityExpression_Await -> EqualityExpression_Await . NE_STRICT RelationalExpression_Await]*
    Goal::InputElementDiv,
    // State#1760:
    //   [BitwiseORExpression_Await -> BitwiseORExpression_Await BIT_OR BitwiseXORExpression_Await .]*
    //   [BitwiseXORExpression_Await -> BitwiseXORExpression_Await . BIT_XOR BitwiseANDExpression_Await]*
    Goal::InputElementDiv,
    // State#1761:
    //   [BitwiseANDExpression_Await -> BitwiseANDExpression_Await . BIT_AND EqualityExpression_Await]*
    //   [BitwiseXORExpression_Await -> BitwiseXORExpression_Await BIT_XOR BitwiseANDExpression_Await .]*
    Goal::InputElementDiv,
    // State#1762:
    //   [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    //   [CoalesceExpression_Await -> CoalesceExpressionHead_Await NULLISH BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // State#1763:
    //   [AsyncArrowFunction_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#1764:
    //   [EqualityExpression_Await -> EqualityExpression_Await EQ RelationalExpression_Await .]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // State#1765:
    //   [EqualityExpression_Await -> EqualityExpression_Await EQ_STRICT RelationalExpression_Await .]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // State#1766:
    //   [EqualityExpression_Await -> EqualityExpression_Await NE RelationalExpression_Await .]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // State#1767:
    //   [EqualityExpression_Await -> EqualityExpression_Await NE_STRICT RelationalExpression_Await .]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    //   [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // State#1768:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await AND_ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#1769:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#1770:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#1771:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await OR_ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#1772:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await AssignmentOperator AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#1773:
    //   [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    //   [LogicalANDExpression_Await -> LogicalANDExpression_Await AND BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // State#1774:
    //   [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    //   [LogicalANDExpression_Await -> BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // State#1775:
    //   [LogicalANDExpression_Await -> LogicalANDExpression_Await . AND BitwiseORExpression_Await]*
    //   [LogicalORExpression_Await -> LogicalORExpression_Await OR LogicalANDExpression_Await .]*
    Goal::InputElementDiv,
    // State#1776:
    //   [RelationalExpression_Await -> RelationalExpression_Await GT ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // State#1777:
    //   [RelationalExpression_Await -> RelationalExpression_Await GTE ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // State#1778:
    //   [RelationalExpression_Await -> RelationalExpression_Await INSTANCEOF ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // State#1779:
    //   [RelationalExpression_Await -> RelationalExpression_Await LT ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // State#1780:
    //   [RelationalExpression_Await -> RelationalExpression_Await LTE ShiftExpression_Await .]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    //   [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // State#1781:
    //   [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL AssignmentExpression_In_Await . COLON AssignmentExpression_Await]*
    Goal::InputElementDiv,
    // State#1782:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1783:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1784:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1785:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#1786:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration IN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1787:
    //   [ForInOfStatement -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1788:
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1789:
    //   [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1790:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1791:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#1792:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#1793:
    //   [ConditionalExpression -> ShortCircuitExpression CONDITIONAL AssignmentExpression_In COLON AssignmentExpression .]*
    Goal::InputElementDiv,
    // State#1794:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#1795:
    //   [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#1796:
    //   [IfStatement -> IF LPAREN Expression_In RPAREN Statement ELSE Statement .]*
    Goal::InputElementRegExp,
    // State#1797:
    //   [CaseClause -> CASE Expression_In . COLON]*
    //   [CaseClause -> CASE Expression_In . COLON StatementList]*
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#1798:
    //   [DefaultClause -> DEFAULT COLON .]*
    //   [DefaultClause -> DEFAULT COLON . StatementList]*
    Goal::InputElementRegExp,
    // State#1799:
    //   [CaseBlock -> LBRACE CaseClauses RBRACE .]*
    Goal::InputElementRegExp,
    // State#1800:
    //   [CaseClauses -> CaseClauses CaseClause .]*
    Goal::InputElementDiv,
    // State#1801:
    //   [CaseBlock -> LBRACE CaseClauses DefaultClause . RBRACE]*
    //   [CaseBlock -> LBRACE CaseClauses DefaultClause . CaseClauses RBRACE]*
    Goal::InputElementDiv,
    // State#1802:
    //   [CaseBlock -> LBRACE DefaultClause RBRACE .]*
    Goal::InputElementRegExp,
    // State#1803:
    //   [CaseBlock -> LBRACE DefaultClause CaseClauses . RBRACE]*
    //   [CaseClauses -> CaseClauses . CaseClause]*
    Goal::InputElementDiv,
    // State#1804:
    //   [Catch -> CATCH LPAREN CatchParameter RPAREN Block .]*
    Goal::InputElementRegExp,
    // State#1805:
    //   [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // State#1806:
    //   [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN . Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#1807:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1808:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1809:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding . IN Expression_In RPAREN Statement_Return]*
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding . OF AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1810:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [VariableDeclarationList -> VariableDeclarationList . COMMA VariableDeclaration]*
    Goal::InputElementDiv,
    // State#1811:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1812:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1813:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF . AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1814:
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1815:
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF . AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1816:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#1817:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#1818:
    //   [IfStatement_Return -> IF LPAREN Expression_In RPAREN . Statement_Return ELSE Statement_Return]*
    //   [IfStatement_Return -> IF LPAREN Expression_In RPAREN . Statement_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#1819:
    //   [SwitchStatement_Return -> SWITCH LPAREN Expression_In RPAREN . CaseBlock_Return]*
    Goal::InputElementDiv,
    // State#1820:
    //   [Catch_Return -> CATCH LPAREN . CatchParameter RPAREN Block_Return]*
    Goal::InputElementDiv,
    // State#1821:
    //   [Catch_Return -> CATCH Block_Return .]*
    Goal::InputElementRegExp,
    // State#1822:
    //   [Finally_Return -> FINALLY Block_Return .]*
    Goal::InputElementRegExp,
    // State#1823:
    //   [TryStatement_Return -> TRY Block_Return Catch_Return Finally_Return .]*
    Goal::InputElementRegExp,
    // State#1824:
    //   [WhileStatement_Return -> WHILE LPAREN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#1825:
    //   [WithStatement_Return -> WITH LPAREN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#1826:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1827:
    //   [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#1828:
    //   [MethodDefinition_Await -> GET ClassElementName_Await LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1829:
    //   [ComputedPropertyName_Await -> LBRACK AssignmentExpression_In_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#1830:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1831:
    //   [MethodDefinition_Await -> SET ClassElementName_Await LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1832:
    //   [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1833:
    //   [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#1834:
    //   [PropertyDefinitionList_Await -> PropertyDefinitionList_Await COMMA PropertyDefinition_Await .]*
    Goal::InputElementDiv,
    // State#1835:
    //   [PropertyDefinition_Await -> PropertyName_Await COLON AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1836:
    //   [ClassElement_Await -> STATIC FieldDefinition_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#1837:
    //   [ClassTail_Await -> ClassHeritage_Await LBRACE ClassBody_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#1838:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1839:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#1840:
    //   [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN . Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#1841:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1842:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1843:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1844:
    //   [ForDeclaration_Await -> LetOrConst . ForBinding_Await]*
    Goal::InputElementDiv,
    // State#1845:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1846:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1847:
    //   [ForBinding_Await -> BindingIdentifier_Await .]*
    //   [VariableDeclaration_Await -> BindingIdentifier_Await .]*
    //   [VariableDeclaration_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#1848:
    //   [ForBinding_Await -> BindingPattern_Await .]*
    //   [VariableDeclaration_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#1849:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await . IN Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1850:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [VariableDeclarationList_Await -> VariableDeclarationList_Await . COMMA VariableDeclaration_Await]*
    Goal::InputElementDiv,
    // State#1851:
    //   [VariableDeclarationList_Await -> VariableDeclaration_Await .]*
    Goal::InputElementDiv,
    // State#1852:
    //   [Expression_Await -> Expression_Await COMMA . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#1853:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1854:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1855:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1856:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1857:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1858:
    //   [ForBinding_Await -> BindingIdentifier_Await .]*
    //   [LexicalBinding_Await -> BindingIdentifier_Await .]*
    //   [LexicalBinding_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#1859:
    //   [BindingList_Await -> BindingList_Await . COMMA LexicalBinding_Await]*
    //   [LexicalDeclaration_Await -> LetOrConst BindingList_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1860:
    //   [ForBinding_Await -> BindingPattern_Await .]*
    //   [LexicalBinding_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#1861:
    //   [ForDeclaration_Await -> LetOrConst ForBinding_Await .]*
    Goal::InputElementDiv,
    // State#1862:
    //   [BindingList_Await -> LexicalBinding_Await .]*
    Goal::InputElementDiv,
    // State#1863:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1864:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#1865:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1866:
    //   [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#1867:
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN . Statement_Await_Return ELSE Statement_Await_Return]*
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN . Statement_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#1868:
    //   [SwitchStatement_Await_Return -> SWITCH LPAREN Expression_In_Await RPAREN . CaseBlock_Await_Return]*
    Goal::InputElementDiv,
    // State#1869:
    //   [Catch_Await_Return -> CATCH LPAREN . CatchParameter_Await RPAREN Block_Await_Return]*
    Goal::InputElementDiv,
    // State#1870:
    //   [Catch_Await_Return -> CATCH Block_Await_Return .]*
    Goal::InputElementRegExp,
    // State#1871:
    //   [Finally_Await_Return -> FINALLY Block_Await_Return .]*
    Goal::InputElementRegExp,
    // State#1872:
    //   [TryStatement_Await_Return -> TRY Block_Await_Return Catch_Await_Return Finally_Await_Return .]*
    Goal::InputElementRegExp,
    // State#1873:
    //   [VariableDeclarationList_In_Await -> VariableDeclarationList_In_Await COMMA VariableDeclaration_In_Await .]*
    Goal::InputElementDiv,
    // State#1874:
    //   [WhileStatement_Await_Return -> WHILE LPAREN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1875:
    //   [WithStatement_Await_Return -> WITH LPAREN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#1876:
    //   [BindingList_In_Await -> BindingList_In_Await COMMA LexicalBinding_In_Await .]*
    Goal::InputElementDiv,
    // State#1877:
    //   [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1878:
    //   [ElementList_Await -> ElementList_Await COMMA Elision AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1879:
    //   [ElementList_Await -> ElementList_Await COMMA Elision SpreadElement_Await .]*
    Goal::InputElementDiv,
    // State#1880:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingIdentifier_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#1881:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingPattern_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#1882:
    //   [ArgumentList_Await -> ArgumentList_Await COMMA ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // State#1883:
    //   [Arguments_Await -> LPAREN ArgumentList_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#1884:
    //   [ArgumentList_Await -> ArgumentList_Await COMMA AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#1885:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [TemplateMiddleList_Await -> TemplateMiddleList_Await TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1886:
    //   [OptionalChain_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1887:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [TemplateMiddleList_Await_Tagged -> TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1888:
    //   [TemplateMiddleList_Await_Tagged -> TemplateMiddleList_Await_Tagged TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // State#1889:
    //   [TemplateSpans_Await_Tagged -> TemplateMiddleList_Await_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#1890:
    //   [OptionalChain_Await -> OptionalChain_Await LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#1891:
    //   [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1892:
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA RBRACE .]*
    Goal::InputElementDiv,
    // State#1893:
    //   [BindingPropertyList_Await -> BindingPropertyList_Await COMMA BindingProperty_Await .]*
    Goal::InputElementDiv,
    // State#1894:
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA BindingRestProperty_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#1895:
    //   [BindingProperty_Await -> PropertyName_Await COLON BindingElement_Await .]*
    Goal::InputElementDiv,
    // State#1896:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA RBRACK .]*
    Goal::InputElementDiv,
    // State#1897:
    //   [BindingElementList_Await -> BindingElementList_Await COMMA BindingElisionElement_Await .]*
    Goal::InputElementDiv,
    // State#1898:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1899:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision . RBRACK]*
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision . BindingRestElement_Await RBRACK]*
    //   [BindingElisionElement_Await -> Elision . BindingElement_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#1900:
    //   [ArrayBindingPattern_Await -> LBRACK Elision BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#1901:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#1902:
    //   [BindingRestProperty_Yield_Await -> ELLIPSIS BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1903:
    //   [UnaryExpression_Yield_Await -> ADD . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1904:
    //   [AsyncArrowFunction_In_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1905:
    //   [AwaitExpression_Yield -> AWAIT . UnaryExpression_Yield_Await]*
    //   [BindingIdentifier_Yield_Await -> AWAIT .]*
    Goal::InputElementRegExp,
    // State#1906:
    //   [UnaryExpression_Yield_Await -> BIT_NOT . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1907:
    //   [ClassExpression_Yield_Await -> CLASS . BindingIdentifier_Yield_Await ClassTail_Yield_Await]*
    //   [ClassExpression_Yield_Await -> CLASS . ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // State#1908:
    //   [UpdateExpression_Yield_Await -> DEC . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1909:
    //   [UnaryExpression_Yield_Await -> DELETE . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1910:
    //   [ImportCall_Yield_Await -> IMPORT . LPAREN AssignmentExpression_In_Yield_Await RPAREN]*
    //   [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // State#1911:
    //   [UpdateExpression_Yield_Await -> INC . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1912:
    //   [ObjectLiteral_Yield_Await -> LBRACE . RBRACE]*
    //   [ObjectLiteral_Yield_Await -> LBRACE . PropertyDefinitionList_Yield_Await COMMA RBRACE]*
    //   [ObjectLiteral_Yield_Await -> LBRACE . PropertyDefinitionList_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // State#1913:
    //   [ArrayLiteral_Yield_Await -> LBRACK . RBRACK]*
    //   [ArrayLiteral_Yield_Await -> LBRACK . ElementList_Yield_Await COMMA RBRACK]*
    //   [ArrayLiteral_Yield_Await -> LBRACK . ElementList_Yield_Await COMMA Elision RBRACK]*
    //   [ArrayLiteral_Yield_Await -> LBRACK . ElementList_Yield_Await RBRACK]*
    //   [ArrayLiteral_Yield_Await -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // State#1914:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await COMMA ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await COMMA ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await RPAREN]*
    Goal::InputElementRegExp,
    // State#1915:
    //   [MemberExpression_Yield_Await -> NEW . MemberExpression_Yield_Await Arguments_Yield_Await]*
    //   [NewExpression_Yield_Await -> NEW . NewExpression_Yield_Await]*
    //   [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // State#1916:
    //   [UnaryExpression_Yield_Await -> NOT . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1917:
    //   [TemplateLiteral_Yield_Await -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#1918:
    //   [RelationalExpression_In_Yield_Await -> PrivateIdentifier . IN ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#1919:
    //   [PrimaryExpression_Yield_Await -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // State#1920:
    //   [UnaryExpression_Yield_Await -> SUB . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1921:
    //   [SuperCall_Yield_Await -> SUPER . Arguments_Yield_Await]*
    //   [SuperProperty_Yield_Await -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty_Yield_Await -> SUPER . LBRACK Expression_In_Yield_Await RBRACK]*
    Goal::InputElementDiv,
    // State#1922:
    //   [PrimaryExpression_Yield_Await -> THIS .]*
    Goal::InputElementTemplateTail,
    // State#1923:
    //   [UnaryExpression_Yield_Await -> TYPEOF . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1924:
    //   [SubstitutionTemplate_Yield_Await -> TemplateHead . Expression_In_Yield_Await TemplateSpans_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1925:
    //   [UnaryExpression_Yield_Await -> VOID . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#1926:
    //   [BindingIdentifier_Yield_Await -> YIELD .]*
    //   [YieldExpression_In_Await -> YIELD .]*
    //   [YieldExpression_In_Await -> YIELD . MUL AssignmentExpression_In_Yield_Await]*
    //   [YieldExpression_In_Await -> YIELD . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#1927:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1928:
    //   [PrimaryExpression_Yield_Await -> ArrayLiteral_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1929:
    //   [AssignmentExpression_In_Yield_Await -> ArrowFunction_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1930:
    //   [ArrowFunction_In_Yield_Await -> ArrowParameters_Yield_Await . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // State#1931:
    //   [ComputedPropertyName_Yield_Await -> LBRACK AssignmentExpression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1932:
    //   [AssignmentExpression_In_Yield_Await -> AsyncArrowFunction_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1933:
    //   [PrimaryExpression_Yield_Await -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#1934:
    //   [PrimaryExpression_Yield_Await -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#1935:
    //   [UnaryExpression_Yield_Await -> AwaitExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#1936:
    //   [ArrowParameters_Yield_Await -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1937:
    //   [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await . BIT_AND EqualityExpression_In_Yield_Await]*
    //   [BitwiseXORExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1938:
    //   [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    //   [CoalesceExpressionHead_In_Yield_Await -> BitwiseORExpression_In_Yield_Await .]*
    //   [LogicalANDExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1939:
    //   [BitwiseORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await .]*
    //   [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await . BIT_XOR BitwiseANDExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1940:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await . DOT PrivateIdentifier]*
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await . DOT KeywordOrIdentifierName]*
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await . Arguments_Yield_Await]*
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    //   [LeftHandSideExpression_Yield_Await -> CallExpression_Yield_Await .]*
    //   [OptionalExpression_Yield_Await -> CallExpression_Yield_Await . OptionalChain_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1941:
    //   [PrimaryExpression_Yield_Await -> ClassExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1942:
    //   [CoalesceExpression_In_Yield_Await -> CoalesceExpressionHead_In_Yield_Await . NULLISH BitwiseORExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#1943:
    //   [CoalesceExpressionHead_In_Yield_Await -> CoalesceExpression_In_Yield_Await .]*
    //   [ShortCircuitExpression_In_Yield_Await -> CoalesceExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1944:
    //   [AssignmentExpression_In_Yield_Await -> ConditionalExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1945:
    //   [AsyncArrowFunction_In_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await . ARROW AsyncConciseBody_In]*
    //   [CallExpression_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1946:
    //   [ArrowParameters_Yield_Await -> CoverParenthesizedExpressionAndArrowParameterList_Yield_Await .]*
    //   [PrimaryExpression_Yield_Await -> CoverParenthesizedExpressionAndArrowParameterList_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1947:
    //   [BitwiseANDExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await .]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ RelationalExpression_In_Yield_Await]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ_STRICT RelationalExpression_In_Yield_Await]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE RelationalExpression_In_Yield_Await]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE_STRICT RelationalExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1948:
    //   [MultiplicativeExpression_Yield_Await -> ExponentiationExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1949:
    //   [PrimaryExpression_Yield_Await -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // State#1950:
    //   [PrimaryExpression_Yield_Await -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // State#1951:
    //   [BindingIdentifier_Yield_Await -> Identifier .]*
    //   [IdentifierReference_Yield_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#1952:
    //   [PrimaryExpression_Yield_Await -> IdentifierReference_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1953:
    //   [CallExpression_Yield_Await -> ImportCall_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1954:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . AND_ASSIGN AssignmentExpression_In_Yield_Await]*
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . ASSIGN AssignmentExpression_In_Yield_Await]*
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . NULLISH_ASSIGN AssignmentExpression_In_Yield_Await]*
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . OR_ASSIGN AssignmentExpression_In_Yield_Await]*
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . AssignmentOperator AssignmentExpression_In_Yield_Await]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementTemplateTail,
    // State#1955:
    //   [PrimaryExpression_Yield_Await -> Literal .]*
    Goal::InputElementTemplateTail,
    // State#1956:
    //   [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await . AND BitwiseORExpression_In_Yield_Await]*
    //   [LogicalORExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1957:
    //   [LogicalORExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await . OR LogicalANDExpression_In_Yield_Await]*
    //   [ShortCircuitExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1958:
    //   [CoverCallExpressionAndAsyncArrowHead_Yield_Await -> MemberExpression_Yield_Await . Arguments_Yield_Await]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT PrivateIdentifier]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT KeywordOrIdentifierName]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    //   [NewExpression_Yield_Await -> MemberExpression_Yield_Await .]*
    //   [OptionalExpression_Yield_Await -> MemberExpression_Yield_Await . OptionalChain_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1959:
    //   [MemberExpression_Yield_Await -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // State#1960:
    //   [AdditiveExpression_Yield_Await -> MultiplicativeExpression_Yield_Await .]*
    //   [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await . MultiplicativeOperator ExponentiationExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1961:
    //   [LeftHandSideExpression_Yield_Await -> NewExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1962:
    //   [PrimaryExpression_Yield_Await -> ObjectLiteral_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1963:
    //   [LeftHandSideExpression_Yield_Await -> OptionalExpression_Yield_Await .]*
    //   [OptionalExpression_Yield_Await -> OptionalExpression_Yield_Await . OptionalChain_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1964:
    //   [MemberExpression_Yield_Await -> PrimaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1965:
    //   [EqualityExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await .]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1966:
    //   [RelationalExpression_In_Yield_Await -> ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1967:
    //   [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await .]*
    //   [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await . CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#1968:
    //   [TemplateLiteral_Yield_Await -> SubstitutionTemplate_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1969:
    //   [CallExpression_Yield_Await -> SuperCall_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1970:
    //   [MemberExpression_Yield_Await -> SuperProperty_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1971:
    //   [PrimaryExpression_Yield_Await -> TemplateLiteral_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1972:
    //   [ExponentiationExpression_Yield_Await -> UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1973:
    //   [ExponentiationExpression_Yield_Await -> UpdateExpression_Yield_Await . EXP ExponentiationExpression_Yield_Await]*
    //   [UnaryExpression_Yield_Await -> UpdateExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#1974:
    //   [AssignmentExpression_In_Yield_Await -> YieldExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#1975:
    //   [BindingPropertyList_Yield_Await -> BindingPropertyList_Yield_Await COMMA . BindingProperty_Yield_Await]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA . RBRACE]*
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA . BindingRestProperty_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // State#1976:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await RBRACE .]*
    Goal::InputElementDiv,
    // State#1977:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingRestProperty_Yield_Await RBRACE .]*
    Goal::InputElementDiv,
    // State#1978:
    //   [BindingProperty_Yield_Await -> PropertyName_Yield_Await COLON . BindingElement_Yield_Await]*
    Goal::InputElementDiv,
    // State#1979:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . BindingRestElement_Yield_Await RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . Elision RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . Elision BindingRestElement_Yield_Await RBRACK]*
    //   [BindingElementList_Yield_Await -> BindingElementList_Yield_Await COMMA . BindingElisionElement_Yield_Await]*
    Goal::InputElementDiv,
    // State#1980:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#1981:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#1982:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#1983:
    //   [BindingElisionElement_Yield_Await -> Elision BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1984:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK Elision BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#1985:
    //   [Initializer_In_Yield_Await -> ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1986:
    //   [FormalParameterList_Yield_Await -> FormalParameterList_Yield_Await COMMA FormalParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1987:
    //   [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await COMMA FunctionRestParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // State#1988:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#1989:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#1990:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#1991:
    //   [DoWhileStatement_Await -> DO Statement_Await WHILE . LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#1992:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#1993:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#1994:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR . ForBinding_Await IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#1995:
    //   [Expression_Await -> Expression_Await . COMMA AssignmentExpression_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#1996:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await . IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#1997:
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_Await]*
    //   [AssignmentExpression_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await . IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    //   [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementDiv,
    // State#1998:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#1999:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await . RPAREN Statement_Await ELSE Statement_Await]*
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await . RPAREN Statement_Await !~[ELSE]]*
    Goal::InputElementDiv,
    // State#2000:
    //   [Block_Await -> LBRACE StatementList_Await RBRACE .]*
    Goal::InputElementRegExp,
    // State#2001:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [SwitchStatement_Await -> SWITCH LPAREN Expression_In_Await . RPAREN CaseBlock_Await]*
    Goal::InputElementDiv,
    // State#2002:
    //   [Catch_Await -> CATCH . LPAREN CatchParameter_Await RPAREN Block_Await]*
    //   [Catch_Await -> CATCH . Block_Await]*
    Goal::InputElementDiv,
    // State#2003:
    //   [Finally_Await -> FINALLY . Block_Await]*
    Goal::InputElementDiv,
    // State#2004:
    //   [TryStatement_Await -> TRY Block_Await Catch_Await .]*
    //   [TryStatement_Await -> TRY Block_Await Catch_Await . Finally_Await]*
    Goal::InputElementRegExp,
    // State#2005:
    //   [TryStatement_Await -> TRY Block_Await Finally_Await .]*
    Goal::InputElementRegExp,
    // State#2006:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [WhileStatement_Await -> WHILE LPAREN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2007:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [WithStatement_Await -> WITH LPAREN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2008:
    //   [LabelledItem_Await -> FunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // State#2009:
    //   [LabelledStatement_Await -> LabelIdentifier_Await COLON LabelledItem_Await .]*
    Goal::InputElementRegExp,
    // State#2010:
    //   [LabelledItem_Await -> Statement_Await .]*
    Goal::InputElementRegExp,
    // State#2011:
    //   [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2012:
    //   [IdentifierReference_Yield -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // State#2013:
    //   [CallExpression_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2014:
    //   [PrimaryExpression_Yield -> CoverParenthesizedExpressionAndArrowParameterList_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2015:
    //   [IdentifierReference_Yield -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#2016:
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementTemplateTail,
    // State#2017:
    //   [UnaryExpression_Yield -> ADD UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2018:
    //   [UnaryExpression_Yield -> UpdateExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2019:
    //   [AsyncArrowFunction_In_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#2020:
    //   [AsyncArrowBindingIdentifier_Yield -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2021:
    //   [UnaryExpression_Yield -> BIT_NOT UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2022:
    //   [ClassHeritage_Yield -> EXTENDS . LeftHandSideExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2023:
    //   [ClassTail_Yield -> LBRACE . RBRACE]*
    //   [ClassTail_Yield -> LBRACE . ClassBody_Yield RBRACE]*
    Goal::InputElementDiv,
    // State#2024:
    //   [ClassExpression_Yield -> CLASS BindingIdentifier_Yield . ClassTail_Yield]*
    Goal::InputElementDiv,
    // State#2025:
    //   [ClassTail_Yield -> ClassHeritage_Yield . LBRACE RBRACE]*
    //   [ClassTail_Yield -> ClassHeritage_Yield . LBRACE ClassBody_Yield RBRACE]*
    Goal::InputElementDiv,
    // State#2026:
    //   [ClassExpression_Yield -> CLASS ClassTail_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2027:
    //   [UpdateExpression_Yield -> DEC UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2028:
    //   [UnaryExpression_Yield -> DELETE UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2029:
    //   [ImportCall_Yield -> IMPORT LPAREN . AssignmentExpression_In_Yield RPAREN]*
    Goal::InputElementRegExp,
    // State#2030:
    //   [UpdateExpression_Yield -> INC UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2031:
    //   [AsyncGeneratorMethod_Yield -> ASYNC . MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncMethod_Yield -> ASYNC . ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [KeywordOrIdentifierName -> ASYNC .]*
    Goal::InputElementDiv,
    // State#2032:
    //   [IdentifierReference_Yield -> AWAIT .]*
    //   [KeywordOrIdentifierName -> AWAIT .]*
    Goal::InputElementDiv,
    // State#2033:
    //   [PropertyDefinition_Yield -> ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2034:
    //   [IdentifierNameButNotReservedWord -> GET .]*
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition_Yield -> GET . ClassElementName_Yield LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2035:
    //   [GeneratorMethod_Yield -> MUL . ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2036:
    //   [ClassElementName_Yield -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // State#2037:
    //   [ObjectLiteral_Yield -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2038:
    //   [IdentifierNameButNotReservedWord -> SET .]*
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition_Yield -> SET . ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2039:
    //   [MethodDefinition_Yield -> AsyncGeneratorMethod_Yield .]*
    Goal::InputElementDiv,
    // State#2040:
    //   [MethodDefinition_Yield -> AsyncMethod_Yield .]*
    Goal::InputElementDiv,
    // State#2041:
    //   [MethodDefinition_Yield -> ClassElementName_Yield . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2042:
    //   [PropertyDefinition_Yield -> CoverInitializedName_Yield .]*
    Goal::InputElementDiv,
    // State#2043:
    //   [MethodDefinition_Yield -> GeneratorMethod_Yield .]*
    Goal::InputElementDiv,
    // State#2044:
    //   [CoverInitializedName_Yield -> IdentifierReference_Yield . Initializer_In_Yield]*
    //   [PropertyDefinition_Yield -> IdentifierReference_Yield .]*
    Goal::InputElementDiv,
    // State#2045:
    //   [PropertyDefinition_Yield -> MethodDefinition_Yield .]*
    Goal::InputElementDiv,
    // State#2046:
    //   [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield . COMMA RBRACE]*
    //   [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield . RBRACE]*
    //   [PropertyDefinitionList_Yield -> PropertyDefinitionList_Yield . COMMA PropertyDefinition_Yield]*
    Goal::InputElementDiv,
    // State#2047:
    //   [PropertyDefinitionList_Yield -> PropertyDefinition_Yield .]*
    Goal::InputElementDiv,
    // State#2048:
    //   [ClassElementName_Yield -> PropertyName_Yield .]*
    //   [PropertyDefinition_Yield -> PropertyName_Yield . COLON AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#2049:
    //   [SpreadElement_Yield -> ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2050:
    //   [ArrayLiteral_Yield -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2051:
    //   [ElementList_Yield -> AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2052:
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield . COMMA RBRACK]*
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield . COMMA Elision RBRACK]*
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield . RBRACK]*
    //   [ElementList_Yield -> ElementList_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ElementList_Yield -> ElementList_Yield . COMMA Elision AssignmentExpression_In_Yield]*
    //   [ElementList_Yield -> ElementList_Yield . COMMA Elision SpreadElement_Yield]*
    //   [ElementList_Yield -> ElementList_Yield . COMMA SpreadElement_Yield]*
    Goal::InputElementDiv,
    // State#2053:
    //   [ArrayLiteral_Yield -> LBRACK Elision . RBRACK]*
    //   [ElementList_Yield -> Elision . AssignmentExpression_In_Yield]*
    //   [ElementList_Yield -> Elision . SpreadElement_Yield]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#2054:
    //   [ElementList_Yield -> SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // State#2055:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS . BindingIdentifier_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS . BindingPattern_Yield RPAREN]*
    Goal::InputElementDiv,
    // State#2056:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2057:
    //   [Expression_In_Yield -> AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2058:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . COMMA ELLIPSIS BindingIdentifier_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . COMMA ELLIPSIS BindingPattern_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . RPAREN]*
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#2059:
    //   [SuperProperty_Yield -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty_Yield -> SUPER . LBRACK Expression_In_Yield RBRACK]*
    Goal::InputElementDiv,
    // State#2060:
    //   [MemberExpression_Yield -> NEW MemberExpression_Yield . Arguments_Yield]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . DOT PrivateIdentifier]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . DOT KeywordOrIdentifierName]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . LBRACK Expression_In_Yield RBRACK]*
    //   [MemberExpression_Yield -> MemberExpression_Yield . TemplateLiteral_Yield_Tagged]*
    //   [NewExpression_Yield -> MemberExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2061:
    //   [NewExpression_Yield -> NEW NewExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2062:
    //   [UnaryExpression_Yield -> NOT UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2063:
    //   [RelationalExpression_In_Yield -> PrivateIdentifier IN . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2064:
    //   [UnaryExpression_Yield -> SUB UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2065:
    //   [SuperProperty_Yield -> SUPER DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2066:
    //   [SuperProperty_Yield -> SUPER LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // State#2067:
    //   [Arguments_Yield -> LPAREN . RPAREN]*
    //   [Arguments_Yield -> LPAREN . ArgumentList_Yield COMMA RPAREN]*
    //   [Arguments_Yield -> LPAREN . ArgumentList_Yield RPAREN]*
    Goal::InputElementRegExp,
    // State#2068:
    //   [SuperCall_Yield -> SUPER Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2069:
    //   [UnaryExpression_Yield -> TYPEOF UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2070:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [SubstitutionTemplate_Yield -> TemplateHead Expression_In_Yield . TemplateSpans_Yield]*
    Goal::InputElementTemplateTail,
    // State#2071:
    //   [UnaryExpression_Yield -> VOID UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2072:
    //   [YieldExpression_In -> YIELD MUL . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2073:
    //   [YieldExpression_In -> YIELD AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2074:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield ADD . MultiplicativeExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2075:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield SUB . MultiplicativeExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2076:
    //   [ArrowFunction_In_Yield -> ArrowParameters_Yield ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // State#2077:
    //   [ComputedPropertyName_Yield -> LBRACK AssignmentExpression_In_Yield RBRACK .]*
    Goal::InputElementDiv,
    // State#2078:
    //   [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield BIT_AND . EqualityExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2079:
    //   [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield BIT_OR . BitwiseXORExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2080:
    //   [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield BIT_XOR . BitwiseANDExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2081:
    //   [CallExpression_Yield -> CallExpression_Yield DOT . PrivateIdentifier]*
    //   [CallExpression_Yield -> CallExpression_Yield DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2082:
    //   [CallExpression_Yield -> CallExpression_Yield LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // State#2083:
    //   [TemplateLiteral_Yield_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#2084:
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING . LBRACK Expression_In_Yield RBRACK]*
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING . PrivateIdentifier]*
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING . Arguments_Yield]*
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING . KeywordOrIdentifierName]*
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING . TemplateLiteral_Yield_Tagged]*
    Goal::InputElementDiv,
    // State#2085:
    //   [SubstitutionTemplate_Yield_Tagged -> TemplateHead . Expression_In_Yield TemplateSpans_Yield_Tagged]*
    Goal::InputElementRegExp,
    // State#2086:
    //   [CallExpression_Yield -> CallExpression_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2087:
    //   [OptionalChain_Yield -> OptionalChain_Yield . DOT PrivateIdentifier]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . LBRACK Expression_In_Yield RBRACK]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . Arguments_Yield]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . TemplateLiteral_Yield_Tagged]*
    //   [OptionalExpression_Yield -> CallExpression_Yield OptionalChain_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2088:
    //   [TemplateLiteral_Yield_Tagged -> SubstitutionTemplate_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2089:
    //   [CallExpression_Yield -> CallExpression_Yield TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2090:
    //   [CoalesceExpression_In_Yield -> CoalesceExpressionHead_In_Yield NULLISH . BitwiseORExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2091:
    //   [AsyncArrowFunction_In_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#2092:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2093:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ_STRICT . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2094:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2095:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE_STRICT . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2096:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AND_ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2097:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2098:
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield DEC .]*
    Goal::InputElementTemplateTail,
    // State#2099:
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield INC .]*
    Goal::InputElementTemplateTail,
    // State#2100:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2101:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield OR_ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2102:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AssignmentOperator . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2103:
    //   [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield AND . BitwiseORExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2104:
    //   [LogicalORExpression_In_Yield -> LogicalORExpression_In_Yield OR . LogicalANDExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2105:
    //   [MemberExpression_Yield -> MemberExpression_Yield DOT . PrivateIdentifier]*
    //   [MemberExpression_Yield -> MemberExpression_Yield DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2106:
    //   [MemberExpression_Yield -> MemberExpression_Yield LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // State#2107:
    //   [CoverCallExpressionAndAsyncArrowHead_Yield -> MemberExpression_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2108:
    //   [OptionalChain_Yield -> OptionalChain_Yield . DOT PrivateIdentifier]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . LBRACK Expression_In_Yield RBRACK]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . Arguments_Yield]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . TemplateLiteral_Yield_Tagged]*
    //   [OptionalExpression_Yield -> MemberExpression_Yield OptionalChain_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2109:
    //   [MemberExpression_Yield -> MemberExpression_Yield TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2110:
    //   [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield MultiplicativeOperator . ExponentiationExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2111:
    //   [OptionalChain_Yield -> OptionalChain_Yield . DOT PrivateIdentifier]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . LBRACK Expression_In_Yield RBRACK]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . Arguments_Yield]*
    //   [OptionalChain_Yield -> OptionalChain_Yield . TemplateLiteral_Yield_Tagged]*
    //   [OptionalExpression_Yield -> OptionalExpression_Yield OptionalChain_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2112:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2113:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2114:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield IN . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2115:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield INSTANCEOF . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2116:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2117:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2118:
    //   [ShiftExpression_Yield -> ShiftExpression_Yield SAR . AdditiveExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2119:
    //   [ShiftExpression_Yield -> ShiftExpression_Yield SHL . AdditiveExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2120:
    //   [ShiftExpression_Yield -> ShiftExpression_Yield SHR . AdditiveExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2121:
    //   [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL . AssignmentExpression_In_Yield COLON AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2122:
    //   [ExponentiationExpression_Yield -> UpdateExpression_Yield EXP . ExponentiationExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2123:
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA RBRACE .]*
    Goal::InputElementDiv,
    // State#2124:
    //   [BindingPropertyList_Yield -> BindingPropertyList_Yield COMMA BindingProperty_Yield .]*
    Goal::InputElementDiv,
    // State#2125:
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA BindingRestProperty_Yield . RBRACE]*
    Goal::InputElementDiv,
    // State#2126:
    //   [BindingProperty_Yield -> PropertyName_Yield COLON BindingElement_Yield .]*
    Goal::InputElementDiv,
    // State#2127:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA RBRACK .]*
    Goal::InputElementDiv,
    // State#2128:
    //   [BindingElementList_Yield -> BindingElementList_Yield COMMA BindingElisionElement_Yield .]*
    Goal::InputElementDiv,
    // State#2129:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#2130:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision . RBRACK]*
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision . BindingRestElement_Yield RBRACK]*
    //   [BindingElisionElement_Yield -> Elision . BindingElement_Yield]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#2131:
    //   [ArrayBindingPattern_Yield -> LBRACK Elision BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // State#2132:
    //   [AsyncArrowFunction_In_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionDeclaration_Yield -> ASYNC . FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC . FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2133:
    //   [BindingIdentifier_Yield -> AWAIT .]*
    //   [IdentifierReference_Yield -> AWAIT .]*
    //   [LabelIdentifier_Yield -> AWAIT .]*
    Goal::InputElementDiv,
    // State#2134:
    //   [BreakStatement_Yield -> BREAK . SEMI_COLON]*
    //   [BreakStatement_Yield -> BREAK . LabelIdentifier_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2135:
    //   [ClassDeclaration_Yield -> CLASS . BindingIdentifier_Yield ClassTail_Yield]*
    Goal::InputElementDiv,
    // State#2136:
    //   [ContinueStatement_Yield -> CONTINUE . SEMI_COLON]*
    //   [ContinueStatement_Yield -> CONTINUE . LabelIdentifier_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2137:
    //   [DoWhileStatement_Yield_Return -> DO . Statement_Yield_Return WHILE LPAREN Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#2138:
    //   [ForInOfStatement_Yield_Return -> FOR . LPAREN VAR ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR . LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR . LPAREN ForDeclaration_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR . LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR . LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR . LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2139:
    //   [FunctionDeclaration_Yield -> FUNCTION . BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    //   [GeneratorDeclaration_Yield -> FUNCTION . MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2140:
    //   [IfStatement_Yield_Return -> IF . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return ELSE Statement_Yield_Return]*
    //   [IfStatement_Yield_Return -> IF . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#2141:
    //   [Block_Yield_Return -> LBRACE . RBRACE]*
    //   [Block_Yield_Return -> LBRACE . StatementList_Yield_Return RBRACE]*
    Goal::InputElementRegExp,
    // State#2142:
    //   [ReturnStatement_Yield -> RETURN . SEMI_COLON]*
    //   [ReturnStatement_Yield -> RETURN . Expression_In_Yield SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#2143:
    //   [SwitchStatement_Yield_Return -> SWITCH . LPAREN Expression_In_Yield RPAREN CaseBlock_Yield_Return]*
    Goal::InputElementDiv,
    // State#2144:
    //   [ThrowStatement_Yield -> THROW . Expression_In_Yield SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#2145:
    //   [TryStatement_Yield_Return -> TRY . Block_Yield_Return Catch_Yield_Return]*
    //   [TryStatement_Yield_Return -> TRY . Block_Yield_Return Catch_Yield_Return Finally_Yield_Return]*
    //   [TryStatement_Yield_Return -> TRY . Block_Yield_Return Finally_Yield_Return]*
    Goal::InputElementDiv,
    // State#2146:
    //   [VariableStatement_Yield -> VAR . VariableDeclarationList_In_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2147:
    //   [WhileStatement_Yield_Return -> WHILE . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2148:
    //   [WithStatement_Yield_Return -> WITH . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2149:
    //   [HoistableDeclaration_Yield -> AsyncFunctionDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2150:
    //   [HoistableDeclaration_Yield -> AsyncGeneratorDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2151:
    //   [Statement_Yield_Return -> BlockStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2152:
    //   [BlockStatement_Yield_Return -> Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2153:
    //   [Statement_Yield_Return -> BreakStatement_Yield .]*
    Goal::InputElementRegExp,
    // State#2154:
    //   [Statement_Yield_Return -> BreakableStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2155:
    //   [Declaration_Yield -> ClassDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2156:
    //   [Statement_Yield_Return -> ContinueStatement_Yield .]*
    Goal::InputElementRegExp,
    // State#2157:
    //   [Statement_Yield_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // State#2158:
    //   [StatementListItem_Yield_Return -> Declaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2159:
    //   [IterationStatement_Yield_Return -> DoWhileStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2160:
    //   [Statement_Yield_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // State#2161:
    //   [Statement_Yield_Return -> ExpressionStatement_Yield .]*
    Goal::InputElementRegExp,
    // State#2162:
    //   [ExpressionStatement_Yield -> Expression_In_Yield . SEMI_COLON]*
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#2163:
    //   [IterationStatement_Yield_Return -> ForInOfStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2164:
    //   [IterationStatement_Yield_Return -> ForStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2165:
    //   [GeneratorBody -> FunctionBody_Yield .]*
    Goal::InputElementDiv,
    // State#2166:
    //   [HoistableDeclaration_Yield -> FunctionDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2167:
    //   [FunctionBody_Yield -> FunctionStatementList_Yield .]*
    Goal::InputElementDiv,
    // State#2168:
    //   [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2169:
    //   [HoistableDeclaration_Yield -> GeneratorDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2170:
    //   [Declaration_Yield -> HoistableDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2171:
    //   [BindingIdentifier_Yield -> Identifier .]*
    //   [IdentifierReference_Yield -> Identifier .]*
    //   [LabelIdentifier_Yield -> Identifier .]*
    Goal::InputElementDiv,
    // State#2172:
    //   [Statement_Yield_Return -> IfStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2173:
    //   [BreakableStatement_Yield_Return -> IterationStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2174:
    //   [LabelledStatement_Yield_Return -> LabelIdentifier_Yield . COLON LabelledItem_Yield_Return]*
    Goal::InputElementDiv,
    // State#2175:
    //   [Statement_Yield_Return -> LabelledStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2176:
    //   [LexicalDeclaration_In_Yield -> LetOrConst . BindingList_In_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2177:
    //   [Declaration_Yield -> LexicalDeclaration_In_Yield .]*
    Goal::InputElementRegExp,
    // State#2178:
    //   [Statement_Yield_Return -> ReturnStatement_Yield .]*
    Goal::InputElementRegExp,
    // State#2179:
    //   [StatementList_Yield_Return -> StatementListItem_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2180:
    //   [FunctionStatementList_Yield -> StatementList_Yield_Return .]*
    //   [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2181:
    //   [StatementListItem_Yield_Return -> Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2182:
    //   [BreakableStatement_Yield_Return -> SwitchStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2183:
    //   [Statement_Yield_Return -> ThrowStatement_Yield .]*
    Goal::InputElementRegExp,
    // State#2184:
    //   [Statement_Yield_Return -> TryStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2185:
    //   [Statement_Yield_Return -> VariableStatement_Yield .]*
    Goal::InputElementRegExp,
    // State#2186:
    //   [IterationStatement_Yield_Return -> WhileStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2187:
    //   [Statement_Yield_Return -> WithStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2188:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#2189:
    //   [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2190:
    //   [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2191:
    //   [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#2192:
    //   [MethodDefinition -> GET ClassElementName LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2193:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#2194:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#2195:
    //   [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2196:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#2197:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2198:
    //   [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2199:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2200:
    //   [ForInOfStatement -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2201:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2202:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#2203:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#2204:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // State#2205:
    //   [AsyncArrowFunction_Await -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#2206:
    //   [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL AssignmentExpression_In_Await COLON . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#2207:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2208:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2209:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#2210:
    //   [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2211:
    //   [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2212:
    //   [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#2213:
    //   [CaseClause -> CASE Expression_In COLON .]*
    //   [CaseClause -> CASE Expression_In COLON . StatementList]*
    Goal::InputElementRegExp,
    // State#2214:
    //   [DefaultClause -> DEFAULT COLON StatementList .]*
    //   [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // State#2215:
    //   [CaseBlock -> LBRACE CaseClauses DefaultClause RBRACE .]*
    Goal::InputElementRegExp,
    // State#2216:
    //   [CaseBlock -> LBRACE CaseClauses DefaultClause CaseClauses . RBRACE]*
    //   [CaseClauses -> CaseClauses . CaseClause]*
    Goal::InputElementDiv,
    // State#2217:
    //   [CaseBlock -> LBRACE DefaultClause CaseClauses RBRACE .]*
    Goal::InputElementRegExp,
    // State#2218:
    //   [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN Expression_In . RPAREN SEMI_COLON]*
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#2219:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2220:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2221:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2222:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2223:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF . AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2224:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2225:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2226:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2227:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2228:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF AssignmentExpression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2229:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2230:
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2231:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2232:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2233:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2234:
    //   [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return . ELSE Statement_Return]*
    //   [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return . !~[ELSE]]*
    //   [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // State#2235:
    //   [CaseBlock_Return -> LBRACE . RBRACE]*
    //   [CaseBlock_Return -> LBRACE . CaseClauses_Return RBRACE]*
    //   [CaseBlock_Return -> LBRACE . CaseClauses_Return DefaultClause_Return RBRACE]*
    //   [CaseBlock_Return -> LBRACE . CaseClauses_Return DefaultClause_Return CaseClauses_Return RBRACE]*
    //   [CaseBlock_Return -> LBRACE . DefaultClause_Return RBRACE]*
    //   [CaseBlock_Return -> LBRACE . DefaultClause_Return CaseClauses_Return RBRACE]*
    Goal::InputElementDiv,
    // State#2236:
    //   [SwitchStatement_Return -> SWITCH LPAREN Expression_In RPAREN CaseBlock_Return .]*
    Goal::InputElementRegExp,
    // State#2237:
    //   [Catch_Return -> CATCH LPAREN CatchParameter . RPAREN Block_Return]*
    Goal::InputElementDiv,
    // State#2238:
    //   [WhileStatement_Return -> WHILE LPAREN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#2239:
    //   [WithStatement_Return -> WITH LPAREN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#2240:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#2241:
    //   [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2242:
    //   [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2243:
    //   [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2244:
    //   [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2245:
    //   [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2246:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#2247:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2248:
    //   [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN Expression_In_Await . RPAREN SEMI_COLON]*
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#2249:
    //   [ForBinding_Await -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // State#2250:
    //   [ForBinding_Await -> BindingPattern_Await .]*
    Goal::InputElementDiv,
    // State#2251:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2252:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2253:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2254:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2255:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2256:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2257:
    //   [Initializer_Await -> ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // State#2258:
    //   [VariableDeclaration_Await -> BindingIdentifier_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // State#2259:
    //   [VariableDeclaration_Await -> BindingPattern_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // State#2260:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2261:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2262:
    //   [VariableDeclarationList_Await -> VariableDeclarationList_Await COMMA . VariableDeclaration_Await]*
    Goal::InputElementDiv,
    // State#2263:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2264:
    //   [Expression_Await -> Expression_Await COMMA AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#2265:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2266:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2267:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2268:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2269:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2270:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2271:
    //   [LexicalBinding_Await -> BindingIdentifier_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // State#2272:
    //   [BindingList_Await -> BindingList_Await COMMA . LexicalBinding_Await]*
    Goal::InputElementDiv,
    // State#2273:
    //   [LexicalDeclaration_Await -> LetOrConst BindingList_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2274:
    //   [LexicalBinding_Await -> BindingPattern_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // State#2275:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2276:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2277:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2278:
    //   [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2279:
    //   [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2280:
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return . ELSE Statement_Await_Return]*
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return . !~[ELSE]]*
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // State#2281:
    //   [CaseBlock_Await_Return -> LBRACE . RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE . CaseClauses_Await_Return RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE . CaseClauses_Await_Return DefaultClause_Await_Return RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE . CaseClauses_Await_Return DefaultClause_Await_Return CaseClauses_Await_Return RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE . DefaultClause_Await_Return RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE . DefaultClause_Await_Return CaseClauses_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // State#2282:
    //   [SwitchStatement_Await_Return -> SWITCH LPAREN Expression_In_Await RPAREN CaseBlock_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2283:
    //   [CatchParameter_Await -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // State#2284:
    //   [CatchParameter_Await -> BindingPattern_Await .]*
    Goal::InputElementDiv,
    // State#2285:
    //   [Catch_Await_Return -> CATCH LPAREN CatchParameter_Await . RPAREN Block_Await_Return]*
    Goal::InputElementDiv,
    // State#2286:
    //   [WhileStatement_Await_Return -> WHILE LPAREN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2287:
    //   [WithStatement_Await_Return -> WITH LPAREN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2288:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingIdentifier_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2289:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingPattern_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2290:
    //   [ArgumentList_Await -> ArgumentList_Await COMMA ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // State#2291:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [TemplateMiddleList_Await_Tagged -> TemplateMiddleList_Await_Tagged TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // State#2292:
    //   [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA BindingRestProperty_Await RBRACE .]*
    Goal::InputElementDiv,
    // State#2293:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#2294:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#2295:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#2296:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2297:
    //   [AwaitExpression_Yield -> AWAIT . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2298:
    //   [CallExpression_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2299:
    //   [PrimaryExpression_Yield_Await -> CoverParenthesizedExpressionAndArrowParameterList_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2300:
    //   [IdentifierReference_Yield_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // State#2301:
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementTemplateTail,
    // State#2302:
    //   [UnaryExpression_Yield_Await -> ADD UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2303:
    //   [UnaryExpression_Yield_Await -> UpdateExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2304:
    //   [AsyncArrowFunction_In_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#2305:
    //   [AwaitExpression_Yield -> AWAIT UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2306:
    //   [UnaryExpression_Yield_Await -> BIT_NOT UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2307:
    //   [ClassHeritage_Yield_Await -> EXTENDS . LeftHandSideExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2308:
    //   [ClassTail_Yield_Await -> LBRACE . RBRACE]*
    //   [ClassTail_Yield_Await -> LBRACE . ClassBody_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // State#2309:
    //   [ClassExpression_Yield_Await -> CLASS BindingIdentifier_Yield_Await . ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // State#2310:
    //   [ClassTail_Yield_Await -> ClassHeritage_Yield_Await . LBRACE RBRACE]*
    //   [ClassTail_Yield_Await -> ClassHeritage_Yield_Await . LBRACE ClassBody_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // State#2311:
    //   [ClassExpression_Yield_Await -> CLASS ClassTail_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2312:
    //   [UpdateExpression_Yield_Await -> DEC UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2313:
    //   [UnaryExpression_Yield_Await -> DELETE UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2314:
    //   [ImportCall_Yield_Await -> IMPORT LPAREN . AssignmentExpression_In_Yield_Await RPAREN]*
    Goal::InputElementRegExp,
    // State#2315:
    //   [UpdateExpression_Yield_Await -> INC UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2316:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC . MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncMethod_Yield_Await -> ASYNC . ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [KeywordOrIdentifierName -> ASYNC .]*
    Goal::InputElementDiv,
    // State#2317:
    //   [PropertyDefinition_Yield_Await -> ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2318:
    //   [IdentifierNameButNotReservedWord -> GET .]*
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition_Yield_Await -> GET . ClassElementName_Yield_Await LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2319:
    //   [GeneratorMethod_Yield_Await -> MUL . ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2320:
    //   [ClassElementName_Yield_Await -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // State#2321:
    //   [ObjectLiteral_Yield_Await -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2322:
    //   [IdentifierNameButNotReservedWord -> SET .]*
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition_Yield_Await -> SET . ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2323:
    //   [MethodDefinition_Yield_Await -> AsyncGeneratorMethod_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2324:
    //   [MethodDefinition_Yield_Await -> AsyncMethod_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2325:
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2326:
    //   [PropertyDefinition_Yield_Await -> CoverInitializedName_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2327:
    //   [MethodDefinition_Yield_Await -> GeneratorMethod_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2328:
    //   [CoverInitializedName_Yield_Await -> IdentifierReference_Yield_Await . Initializer_In_Yield_Await]*
    //   [PropertyDefinition_Yield_Await -> IdentifierReference_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2329:
    //   [PropertyDefinition_Yield_Await -> MethodDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2330:
    //   [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await . COMMA RBRACE]*
    //   [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await . RBRACE]*
    //   [PropertyDefinitionList_Yield_Await -> PropertyDefinitionList_Yield_Await . COMMA PropertyDefinition_Yield_Await]*
    Goal::InputElementDiv,
    // State#2331:
    //   [PropertyDefinitionList_Yield_Await -> PropertyDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2332:
    //   [ClassElementName_Yield_Await -> PropertyName_Yield_Await .]*
    //   [PropertyDefinition_Yield_Await -> PropertyName_Yield_Await . COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2333:
    //   [SpreadElement_Yield_Await -> ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2334:
    //   [ArrayLiteral_Yield_Await -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2335:
    //   [ElementList_Yield_Await -> AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2336:
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await . COMMA RBRACK]*
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await . COMMA Elision RBRACK]*
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await . RBRACK]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA Elision AssignmentExpression_In_Yield_Await]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA Elision SpreadElement_Yield_Await]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA SpreadElement_Yield_Await]*
    Goal::InputElementDiv,
    // State#2337:
    //   [ArrayLiteral_Yield_Await -> LBRACK Elision . RBRACK]*
    //   [ElementList_Yield_Await -> Elision . AssignmentExpression_In_Yield_Await]*
    //   [ElementList_Yield_Await -> Elision . SpreadElement_Yield_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#2338:
    //   [ElementList_Yield_Await -> SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2339:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS . BindingIdentifier_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS . BindingPattern_Yield_Await RPAREN]*
    Goal::InputElementDiv,
    // State#2340:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2341:
    //   [Expression_In_Yield_Await -> AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2342:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . COMMA ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . COMMA ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . COMMA RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . RPAREN]*
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2343:
    //   [SuperProperty_Yield_Await -> SUPER . DOT KeywordOrIdentifierName]*
    //   [SuperProperty_Yield_Await -> SUPER . LBRACK Expression_In_Yield_Await RBRACK]*
    Goal::InputElementDiv,
    // State#2344:
    //   [MemberExpression_Yield_Await -> NEW MemberExpression_Yield_Await . Arguments_Yield_Await]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT PrivateIdentifier]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT KeywordOrIdentifierName]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    //   [NewExpression_Yield_Await -> MemberExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2345:
    //   [NewExpression_Yield_Await -> NEW NewExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2346:
    //   [UnaryExpression_Yield_Await -> NOT UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2347:
    //   [RelationalExpression_In_Yield_Await -> PrivateIdentifier IN . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2348:
    //   [UnaryExpression_Yield_Await -> SUB UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2349:
    //   [SuperProperty_Yield_Await -> SUPER DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2350:
    //   [SuperProperty_Yield_Await -> SUPER LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#2351:
    //   [Arguments_Yield_Await -> LPAREN . RPAREN]*
    //   [Arguments_Yield_Await -> LPAREN . ArgumentList_Yield_Await COMMA RPAREN]*
    //   [Arguments_Yield_Await -> LPAREN . ArgumentList_Yield_Await RPAREN]*
    Goal::InputElementRegExp,
    // State#2352:
    //   [SuperCall_Yield_Await -> SUPER Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2353:
    //   [UnaryExpression_Yield_Await -> TYPEOF UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2354:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [SubstitutionTemplate_Yield_Await -> TemplateHead Expression_In_Yield_Await . TemplateSpans_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2355:
    //   [UnaryExpression_Yield_Await -> VOID UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2356:
    //   [YieldExpression_In_Await -> YIELD MUL . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2357:
    //   [YieldExpression_In_Await -> YIELD AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2358:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await ADD . MultiplicativeExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2359:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await SUB . MultiplicativeExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2360:
    //   [ArrowFunction_In_Yield_Await -> ArrowParameters_Yield_Await ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // State#2361:
    //   [ComputedPropertyName_Yield_Await -> LBRACK AssignmentExpression_In_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#2362:
    //   [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await BIT_AND . EqualityExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2363:
    //   [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await BIT_OR . BitwiseXORExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2364:
    //   [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await BIT_XOR . BitwiseANDExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2365:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT . PrivateIdentifier]*
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2366:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#2367:
    //   [TemplateLiteral_Yield_Await_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // State#2368:
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . LBRACK Expression_In_Yield_Await RBRACK]*
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . PrivateIdentifier]*
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . Arguments_Yield_Await]*
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . KeywordOrIdentifierName]*
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . TemplateLiteral_Yield_Await_Tagged]*
    Goal::InputElementDiv,
    // State#2369:
    //   [SubstitutionTemplate_Yield_Await_Tagged -> TemplateHead . Expression_In_Yield_Await TemplateSpans_Yield_Await_Tagged]*
    Goal::InputElementRegExp,
    // State#2370:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2371:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT PrivateIdentifier]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . Arguments_Yield_Await]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    //   [OptionalExpression_Yield_Await -> CallExpression_Yield_Await OptionalChain_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2372:
    //   [TemplateLiteral_Yield_Await_Tagged -> SubstitutionTemplate_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2373:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2374:
    //   [CoalesceExpression_In_Yield_Await -> CoalesceExpressionHead_In_Yield_Await NULLISH . BitwiseORExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2375:
    //   [AsyncArrowFunction_In_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#2376:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2377:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ_STRICT . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2378:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2379:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE_STRICT . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2380:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2381:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2382:
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await DEC .]*
    Goal::InputElementTemplateTail,
    // State#2383:
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await INC .]*
    Goal::InputElementTemplateTail,
    // State#2384:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2385:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2386:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2387:
    //   [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await AND . BitwiseORExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2388:
    //   [LogicalORExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await OR . LogicalANDExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2389:
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT . PrivateIdentifier]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2390:
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#2391:
    //   [CoverCallExpressionAndAsyncArrowHead_Yield_Await -> MemberExpression_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2392:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT PrivateIdentifier]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . Arguments_Yield_Await]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    //   [OptionalExpression_Yield_Await -> MemberExpression_Yield_Await OptionalChain_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2393:
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2394:
    //   [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await MultiplicativeOperator . ExponentiationExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2395:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT PrivateIdentifier]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT KeywordOrIdentifierName]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . Arguments_Yield_Await]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    //   [OptionalExpression_Yield_Await -> OptionalExpression_Yield_Await OptionalChain_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2396:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2397:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2398:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await IN . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2399:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await INSTANCEOF . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2400:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2401:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2402:
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SAR . AdditiveExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2403:
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHL . AdditiveExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2404:
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHR . AdditiveExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2405:
    //   [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL . AssignmentExpression_In_Yield_Await COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2406:
    //   [ExponentiationExpression_Yield_Await -> UpdateExpression_Yield_Await EXP . ExponentiationExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2407:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA RBRACE .]*
    Goal::InputElementDiv,
    // State#2408:
    //   [BindingPropertyList_Yield_Await -> BindingPropertyList_Yield_Await COMMA BindingProperty_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2409:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA BindingRestProperty_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#2410:
    //   [BindingProperty_Yield_Await -> PropertyName_Yield_Await COLON BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2411:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA RBRACK .]*
    Goal::InputElementDiv,
    // State#2412:
    //   [BindingElementList_Yield_Await -> BindingElementList_Yield_Await COMMA BindingElisionElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2413:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#2414:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision . RBRACK]*
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision . BindingRestElement_Yield_Await RBRACK]*
    //   [BindingElisionElement_Yield_Await -> Elision . BindingElement_Yield_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // State#2415:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK Elision BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#2416:
    //   [AsyncArrowFunction_In_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC . FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2417:
    //   [BreakStatement_Yield_Await -> BREAK . SEMI_COLON]*
    //   [BreakStatement_Yield_Await -> BREAK . LabelIdentifier_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2418:
    //   [ClassDeclaration_Yield_Await -> CLASS . BindingIdentifier_Yield_Await ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // State#2419:
    //   [ContinueStatement_Yield_Await -> CONTINUE . SEMI_COLON]*
    //   [ContinueStatement_Yield_Await -> CONTINUE . LabelIdentifier_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2420:
    //   [DoWhileStatement_Yield_Await_Return -> DO . Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#2421:
    //   [ForInOfStatement_Yield_Await_Return -> FOR . AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2422:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION . BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION . MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2423:
    //   [IfStatement_Yield_Await_Return -> IF . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    //   [IfStatement_Yield_Await_Return -> IF . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#2424:
    //   [Block_Yield_Await_Return -> LBRACE . RBRACE]*
    //   [Block_Yield_Await_Return -> LBRACE . StatementList_Yield_Await_Return RBRACE]*
    Goal::InputElementRegExp,
    // State#2425:
    //   [ReturnStatement_Yield_Await -> RETURN . SEMI_COLON]*
    //   [ReturnStatement_Yield_Await -> RETURN . Expression_In_Yield_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#2426:
    //   [SwitchStatement_Yield_Await_Return -> SWITCH . LPAREN Expression_In_Yield_Await RPAREN CaseBlock_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2427:
    //   [ThrowStatement_Yield_Await -> THROW . Expression_In_Yield_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#2428:
    //   [TryStatement_Yield_Await_Return -> TRY . Block_Yield_Await_Return Catch_Yield_Await_Return]*
    //   [TryStatement_Yield_Await_Return -> TRY . Block_Yield_Await_Return Catch_Yield_Await_Return Finally_Yield_Await_Return]*
    //   [TryStatement_Yield_Await_Return -> TRY . Block_Yield_Await_Return Finally_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2429:
    //   [VariableStatement_Yield_Await -> VAR . VariableDeclarationList_In_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2430:
    //   [WhileStatement_Yield_Await_Return -> WHILE . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2431:
    //   [WithStatement_Yield_Await_Return -> WITH . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2432:
    //   [HoistableDeclaration_Yield_Await -> AsyncFunctionDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2433:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2434:
    //   [HoistableDeclaration_Yield_Await -> AsyncGeneratorDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2435:
    //   [Statement_Yield_Await_Return -> BlockStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2436:
    //   [BlockStatement_Yield_Await_Return -> Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2437:
    //   [Statement_Yield_Await_Return -> BreakStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2438:
    //   [Statement_Yield_Await_Return -> BreakableStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2439:
    //   [Declaration_Yield_Await -> ClassDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2440:
    //   [Statement_Yield_Await_Return -> ContinueStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2441:
    //   [Statement_Yield_Await_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // State#2442:
    //   [StatementListItem_Yield_Await_Return -> Declaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2443:
    //   [IterationStatement_Yield_Await_Return -> DoWhileStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2444:
    //   [Statement_Yield_Await_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // State#2445:
    //   [Statement_Yield_Await_Return -> ExpressionStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2446:
    //   [ExpressionStatement_Yield_Await -> Expression_In_Yield_Await . SEMI_COLON]*
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2447:
    //   [IterationStatement_Yield_Await_Return -> ForInOfStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2448:
    //   [IterationStatement_Yield_Await_Return -> ForStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2449:
    //   [AsyncGeneratorBody -> FunctionBody_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2450:
    //   [HoistableDeclaration_Yield_Await -> FunctionDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2451:
    //   [FunctionBody_Yield_Await -> FunctionStatementList_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2452:
    //   [HoistableDeclaration_Yield_Await -> GeneratorDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2453:
    //   [Declaration_Yield_Await -> HoistableDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2454:
    //   [BindingIdentifier_Yield_Await -> Identifier .]*
    //   [IdentifierReference_Yield_Await -> Identifier .]*
    //   [LabelIdentifier_Yield_Await -> Identifier .]*
    Goal::InputElementDiv,
    // State#2455:
    //   [Statement_Yield_Await_Return -> IfStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2456:
    //   [BreakableStatement_Yield_Await_Return -> IterationStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2457:
    //   [LabelledStatement_Yield_Await_Return -> LabelIdentifier_Yield_Await . COLON LabelledItem_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2458:
    //   [Statement_Yield_Await_Return -> LabelledStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2459:
    //   [LexicalDeclaration_In_Yield_Await -> LetOrConst . BindingList_In_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2460:
    //   [Declaration_Yield_Await -> LexicalDeclaration_In_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2461:
    //   [Statement_Yield_Await_Return -> ReturnStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2462:
    //   [StatementList_Yield_Await_Return -> StatementListItem_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2463:
    //   [FunctionStatementList_Yield_Await -> StatementList_Yield_Await_Return .]*
    //   [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#2464:
    //   [StatementListItem_Yield_Await_Return -> Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2465:
    //   [BreakableStatement_Yield_Await_Return -> SwitchStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2466:
    //   [Statement_Yield_Await_Return -> ThrowStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2467:
    //   [Statement_Yield_Await_Return -> TryStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2468:
    //   [Statement_Yield_Await_Return -> VariableStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#2469:
    //   [IterationStatement_Yield_Await_Return -> WhileStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2470:
    //   [Statement_Yield_Await_Return -> WithStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2471:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#2472:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2473:
    //   [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN . Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#2474:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2475:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2476:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2477:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2478:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2479:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await . IN Expression_In_Await RPAREN Statement_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2480:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [VariableDeclarationList_Await -> VariableDeclarationList_Await . COMMA VariableDeclaration_Await]*
    Goal::InputElementDiv,
    // State#2481:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2482:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2483:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2484:
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2485:
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2486:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2487:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2488:
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN . Statement_Await ELSE Statement_Await]*
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN . Statement_Await !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#2489:
    //   [SwitchStatement_Await -> SWITCH LPAREN Expression_In_Await RPAREN . CaseBlock_Await]*
    Goal::InputElementDiv,
    // State#2490:
    //   [Catch_Await -> CATCH LPAREN . CatchParameter_Await RPAREN Block_Await]*
    Goal::InputElementDiv,
    // State#2491:
    //   [Catch_Await -> CATCH Block_Await .]*
    Goal::InputElementRegExp,
    // State#2492:
    //   [Finally_Await -> FINALLY Block_Await .]*
    Goal::InputElementRegExp,
    // State#2493:
    //   [TryStatement_Await -> TRY Block_Await Catch_Await Finally_Await .]*
    Goal::InputElementRegExp,
    // State#2494:
    //   [WhileStatement_Await -> WHILE LPAREN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#2495:
    //   [WithStatement_Await -> WITH LPAREN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#2496:
    //   [AsyncArrowFunction_In_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#2497:
    //   [ClassHeritage_Yield -> EXTENDS LeftHandSideExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2498:
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition_Yield -> GET . ClassElementName_Yield LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2499:
    //   [ClassTail_Yield -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#2500:
    //   [ClassElement_Yield -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#2501:
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition_Yield -> SET . ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2502:
    //   [ClassElement_Yield -> STATIC . FieldDefinition_Yield SEMI_COLON]*
    //   [ClassElement_Yield -> STATIC . MethodDefinition_Yield]*
    //   [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    //   [KeywordOrIdentifierName -> STATIC .]*
    Goal::InputElementDiv,
    // State#2503:
    //   [ClassTail_Yield -> LBRACE ClassBody_Yield . RBRACE]*
    Goal::InputElementDiv,
    // State#2504:
    //   [ClassBody_Yield -> ClassElementList_Yield .]*
    //   [ClassElementList_Yield -> ClassElementList_Yield . ClassElement_Yield]*
    Goal::InputElementDiv,
    // State#2505:
    //   [FieldDefinition_Yield -> ClassElementName_Yield .]*
    //   [FieldDefinition_Yield -> ClassElementName_Yield . Initializer_In_Yield]*
    //   [MethodDefinition_Yield -> ClassElementName_Yield . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2506:
    //   [ClassElementList_Yield -> ClassElement_Yield .]*
    Goal::InputElementDiv,
    // State#2507:
    //   [ClassElement_Yield -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // State#2508:
    //   [ClassElement_Yield -> FieldDefinition_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2509:
    //   [ClassElement_Yield -> MethodDefinition_Yield .]*
    Goal::InputElementDiv,
    // State#2510:
    //   [ClassElementName_Yield -> PropertyName_Yield .]*
    Goal::InputElementDiv,
    // State#2511:
    //   [ClassExpression_Yield -> CLASS BindingIdentifier_Yield ClassTail_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2512:
    //   [ClassTail_Yield -> ClassHeritage_Yield LBRACE . RBRACE]*
    //   [ClassTail_Yield -> ClassHeritage_Yield LBRACE . ClassBody_Yield RBRACE]*
    Goal::InputElementDiv,
    // State#2513:
    //   [ImportCall_Yield -> IMPORT LPAREN AssignmentExpression_In_Yield . RPAREN]*
    Goal::InputElementDiv,
    // State#2514:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL . ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2515:
    //   [AsyncMethod_Yield -> ASYNC ClassElementName_Yield . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2516:
    //   [PropertyDefinition_Yield -> ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2517:
    //   [MethodDefinition_Yield -> GET ClassElementName_Yield . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2518:
    //   [GeneratorMethod_Yield -> MUL ClassElementName_Yield . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2519:
    //   [MethodDefinition_Yield -> SET ClassElementName_Yield . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2520:
    //   [FormalParameters -> () .]*
    //   [MethodDefinition_Yield -> ClassElementName_Yield LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2521:
    //   [CoverInitializedName_Yield -> IdentifierReference_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#2522:
    //   [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield COMMA . RBRACE]*
    //   [PropertyDefinitionList_Yield -> PropertyDefinitionList_Yield COMMA . PropertyDefinition_Yield]*
    Goal::InputElementDiv,
    // State#2523:
    //   [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2524:
    //   [PropertyDefinition_Yield -> PropertyName_Yield COLON . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2525:
    //   [SpreadElement_Yield -> ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2526:
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA . RBRACK]*
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA . Elision RBRACK]*
    //   [ElementList_Yield -> ElementList_Yield COMMA . AssignmentExpression_In_Yield]*
    //   [ElementList_Yield -> ElementList_Yield COMMA . Elision AssignmentExpression_In_Yield]*
    //   [ElementList_Yield -> ElementList_Yield COMMA . Elision SpreadElement_Yield]*
    //   [ElementList_Yield -> ElementList_Yield COMMA . SpreadElement_Yield]*
    Goal::InputElementRegExp,
    // State#2527:
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2528:
    //   [ArrayLiteral_Yield -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2529:
    //   [ElementList_Yield -> Elision AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2530:
    //   [ElementList_Yield -> Elision SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // State#2531:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingIdentifier_Yield . RPAREN]*
    Goal::InputElementDiv,
    // State#2532:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingPattern_Yield . RPAREN]*
    Goal::InputElementDiv,
    // State#2533:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA . ELLIPSIS BindingIdentifier_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA . ELLIPSIS BindingPattern_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA . RPAREN]*
    //   [Expression_In_Yield -> Expression_In_Yield COMMA . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2534:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2535:
    //   [MemberExpression_Yield -> NEW MemberExpression_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2536:
    //   [RelationalExpression_In_Yield -> PrivateIdentifier IN ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2537:
    //   [SuperProperty_Yield -> SUPER DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2538:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [SuperProperty_Yield -> SUPER LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#2539:
    //   [ArgumentList_Yield -> ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2540:
    //   [Arguments_Yield -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2541:
    //   [ArgumentList_Yield -> ArgumentList_Yield . COMMA ELLIPSIS AssignmentExpression_In_Yield]*
    //   [ArgumentList_Yield -> ArgumentList_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [Arguments_Yield -> LPAREN ArgumentList_Yield . COMMA RPAREN]*
    //   [Arguments_Yield -> LPAREN ArgumentList_Yield . RPAREN]*
    Goal::InputElementDiv,
    // State#2542:
    //   [ArgumentList_Yield -> AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2543:
    //   [Expression_In_Yield -> Expression_In_Yield COMMA . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2544:
    //   [TemplateMiddleList_Yield -> TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2545:
    //   [TemplateSpans_Yield -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#2546:
    //   [TemplateMiddleList_Yield -> TemplateMiddleList_Yield . TemplateMiddle Expression_In_Yield]*
    //   [TemplateSpans_Yield -> TemplateMiddleList_Yield . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#2547:
    //   [SubstitutionTemplate_Yield -> TemplateHead Expression_In_Yield TemplateSpans_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2548:
    //   [YieldExpression_In -> YIELD MUL AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2549:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield ADD MultiplicativeExpression_Yield .]*
    //   [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield . MultiplicativeOperator ExponentiationExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2550:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield SUB MultiplicativeExpression_Yield .]*
    //   [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield . MultiplicativeOperator ExponentiationExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2551:
    //   [ArrowFunction_In_Yield -> ArrowParameters_Yield ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#2552:
    //   [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield BIT_AND EqualityExpression_In_Yield .]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ RelationalExpression_In_Yield]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ_STRICT RelationalExpression_In_Yield]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE RelationalExpression_In_Yield]*
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE_STRICT RelationalExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // State#2553:
    //   [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield BIT_OR BitwiseXORExpression_In_Yield .]*
    //   [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield . BIT_XOR BitwiseANDExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // State#2554:
    //   [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield . BIT_AND EqualityExpression_In_Yield]*
    //   [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield BIT_XOR BitwiseANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2555:
    //   [CallExpression_Yield -> CallExpression_Yield DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#2556:
    //   [CallExpression_Yield -> CallExpression_Yield DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2557:
    //   [CallExpression_Yield -> CallExpression_Yield LBRACK Expression_In_Yield . RBRACK]*
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#2558:
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // State#2559:
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#2560:
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2561:
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2562:
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2563:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [SubstitutionTemplate_Yield_Tagged -> TemplateHead Expression_In_Yield . TemplateSpans_Yield_Tagged]*
    Goal::InputElementTemplateTail,
    // State#2564:
    //   [OptionalChain_Yield -> OptionalChain_Yield DOT . PrivateIdentifier]*
    //   [OptionalChain_Yield -> OptionalChain_Yield DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2565:
    //   [OptionalChain_Yield -> OptionalChain_Yield LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // State#2566:
    //   [OptionalChain_Yield -> OptionalChain_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2567:
    //   [OptionalChain_Yield -> OptionalChain_Yield TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2568:
    //   [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    //   [CoalesceExpression_In_Yield -> CoalesceExpressionHead_In_Yield NULLISH BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2569:
    //   [AsyncArrowFunction_In_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#2570:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ RelationalExpression_In_Yield .]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2571:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ_STRICT RelationalExpression_In_Yield .]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2572:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE RelationalExpression_In_Yield .]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2573:
    //   [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE_STRICT RelationalExpression_In_Yield .]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2574:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AND_ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2575:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2576:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2577:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield OR_ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2578:
    //   [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AssignmentOperator AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2579:
    //   [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    //   [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield AND BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2580:
    //   [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    //   [LogicalANDExpression_In_Yield -> BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2581:
    //   [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield . AND BitwiseORExpression_In_Yield]*
    //   [LogicalORExpression_In_Yield -> LogicalORExpression_In_Yield OR LogicalANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2582:
    //   [MemberExpression_Yield -> MemberExpression_Yield DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#2583:
    //   [MemberExpression_Yield -> MemberExpression_Yield DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2584:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [MemberExpression_Yield -> MemberExpression_Yield LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#2585:
    //   [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield MultiplicativeOperator ExponentiationExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2586:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GT ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2587:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GTE ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2588:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield IN ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2589:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield INSTANCEOF ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2590:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LT ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2591:
    //   [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LTE ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // State#2592:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield SAR AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2593:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield SHL AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2594:
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    //   [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield SHR AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2595:
    //   [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL AssignmentExpression_In_Yield . COLON AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#2596:
    //   [ExponentiationExpression_Yield -> UpdateExpression_Yield EXP ExponentiationExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2597:
    //   [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA BindingRestProperty_Yield RBRACE .]*
    Goal::InputElementDiv,
    // State#2598:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // State#2599:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#2600:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#2601:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION . BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION . MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2602:
    //   [LabelIdentifier_Yield -> AWAIT .]*
    Goal::InputElementDiv,
    // State#2603:
    //   [BreakStatement_Yield -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2604:
    //   [LabelIdentifier_Yield -> Identifier .]*
    Goal::InputElementDiv,
    // State#2605:
    //   [BreakStatement_Yield -> BREAK LabelIdentifier_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2606:
    //   [ClassDeclaration_Yield -> CLASS BindingIdentifier_Yield . ClassTail_Yield]*
    Goal::InputElementDiv,
    // State#2607:
    //   [ContinueStatement_Yield -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2608:
    //   [ContinueStatement_Yield -> CONTINUE LabelIdentifier_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2609:
    //   [AsyncArrowFunction_In_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#2610:
    //   [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return . WHILE LPAREN Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2611:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN . VAR ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN . VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN . ForDeclaration_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN . ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN . LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN . LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2612:
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL . BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2613:
    //   [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2614:
    //   [IfStatement_Yield_Return -> IF LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return ELSE Statement_Yield_Return]*
    //   [IfStatement_Yield_Return -> IF LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#2615:
    //   [Block_Yield_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#2616:
    //   [Block_Yield_Return -> LBRACE StatementList_Yield_Return . RBRACE]*
    //   [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2617:
    //   [ReturnStatement_Yield -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2618:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ReturnStatement_Yield -> RETURN Expression_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2619:
    //   [SwitchStatement_Yield_Return -> SWITCH LPAREN . Expression_In_Yield RPAREN CaseBlock_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2620:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ThrowStatement_Yield -> THROW Expression_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2621:
    //   [TryStatement_Yield_Return -> TRY Block_Yield_Return . Catch_Yield_Return]*
    //   [TryStatement_Yield_Return -> TRY Block_Yield_Return . Catch_Yield_Return Finally_Yield_Return]*
    //   [TryStatement_Yield_Return -> TRY Block_Yield_Return . Finally_Yield_Return]*
    Goal::InputElementDiv,
    // State#2622:
    //   [VariableDeclaration_In_Yield -> BindingIdentifier_Yield .]*
    //   [VariableDeclaration_In_Yield -> BindingIdentifier_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // State#2623:
    //   [VariableDeclaration_In_Yield -> BindingPattern_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // State#2624:
    //   [VariableDeclarationList_In_Yield -> VariableDeclarationList_In_Yield . COMMA VariableDeclaration_In_Yield]*
    //   [VariableStatement_Yield -> VAR VariableDeclarationList_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2625:
    //   [VariableDeclarationList_In_Yield -> VariableDeclaration_In_Yield .]*
    Goal::InputElementDiv,
    // State#2626:
    //   [WhileStatement_Yield_Return -> WHILE LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2627:
    //   [WithStatement_Yield_Return -> WITH LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2628:
    //   [ExpressionStatement_Yield -> Expression_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2629:
    //   [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2630:
    //   [LabelledStatement_Yield_Return -> LabelIdentifier_Yield COLON . LabelledItem_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2631:
    //   [LexicalBinding_In_Yield -> BindingIdentifier_Yield .]*
    //   [LexicalBinding_In_Yield -> BindingIdentifier_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // State#2632:
    //   [BindingList_In_Yield -> BindingList_In_Yield . COMMA LexicalBinding_In_Yield]*
    //   [LexicalDeclaration_In_Yield -> LetOrConst BindingList_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2633:
    //   [LexicalBinding_In_Yield -> BindingPattern_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // State#2634:
    //   [BindingList_In_Yield -> LexicalBinding_In_Yield .]*
    Goal::InputElementDiv,
    // State#2635:
    //   [StatementList_Yield_Return -> StatementList_Yield_Return StatementListItem_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2636:
    //   [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2637:
    //   [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2638:
    //   [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#2639:
    //   [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2640:
    //   [MethodDefinition -> GET ClassElementName LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#2641:
    //   [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2642:
    //   [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2643:
    //   [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#2644:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2645:
    //   [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#2646:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2647:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2648:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // State#2649:
    //   [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#2650:
    //   [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#2651:
    //   [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#2652:
    //   [CaseClause -> CASE Expression_In COLON StatementList .]*
    //   [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // State#2653:
    //   [CaseBlock -> LBRACE CaseClauses DefaultClause CaseClauses RBRACE .]*
    Goal::InputElementRegExp,
    // State#2654:
    //   [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN Expression_In RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2655:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#2656:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2657:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2658:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2659:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2660:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2661:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2662:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2663:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2664:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2665:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#2666:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2667:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2668:
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2669:
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2670:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#2671:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2672:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2673:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#2674:
    //   [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return ELSE . Statement_Return]*
    Goal::InputElementRegExp,
    // State#2675:
    //   [CaseClause_Return -> CASE . Expression_In COLON]*
    //   [CaseClause_Return -> CASE . Expression_In COLON StatementList_Return]*
    Goal::InputElementRegExp,
    // State#2676:
    //   [DefaultClause_Return -> DEFAULT . COLON]*
    //   [DefaultClause_Return -> DEFAULT . COLON StatementList_Return]*
    Goal::InputElementDiv,
    // State#2677:
    //   [CaseBlock_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#2678:
    //   [CaseClauses_Return -> CaseClause_Return .]*
    Goal::InputElementDiv,
    // State#2679:
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return . RBRACE]*
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return . DefaultClause_Return RBRACE]*
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return . DefaultClause_Return CaseClauses_Return RBRACE]*
    //   [CaseClauses_Return -> CaseClauses_Return . CaseClause_Return]*
    Goal::InputElementDiv,
    // State#2680:
    //   [CaseBlock_Return -> LBRACE DefaultClause_Return . RBRACE]*
    //   [CaseBlock_Return -> LBRACE DefaultClause_Return . CaseClauses_Return RBRACE]*
    Goal::InputElementDiv,
    // State#2681:
    //   [Catch_Return -> CATCH LPAREN CatchParameter RPAREN . Block_Return]*
    Goal::InputElementDiv,
    // State#2682:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2683:
    //   [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2684:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#2685:
    //   [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2686:
    //   [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2687:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#2688:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2689:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2690:
    //   [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN Expression_In_Await RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2691:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2692:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2693:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2694:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2695:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2696:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2697:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2698:
    //   [Initializer_Await -> ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // State#2699:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2700:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2701:
    //   [VariableDeclaration_Await -> BindingIdentifier_Await .]*
    //   [VariableDeclaration_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#2702:
    //   [VariableDeclaration_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#2703:
    //   [VariableDeclarationList_Await -> VariableDeclarationList_Await COMMA VariableDeclaration_Await .]*
    Goal::InputElementDiv,
    // State#2704:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2705:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2706:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2707:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2708:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2709:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2710:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2711:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2712:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2713:
    //   [LexicalBinding_Await -> BindingIdentifier_Await .]*
    //   [LexicalBinding_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#2714:
    //   [LexicalBinding_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // State#2715:
    //   [BindingList_Await -> BindingList_Await COMMA LexicalBinding_Await .]*
    Goal::InputElementDiv,
    // State#2716:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2717:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2718:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2719:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#2720:
    //   [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2721:
    //   [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#2722:
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return ELSE . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#2723:
    //   [CaseClause_Await_Return -> CASE . Expression_In_Await COLON]*
    //   [CaseClause_Await_Return -> CASE . Expression_In_Await COLON StatementList_Await_Return]*
    Goal::InputElementRegExp,
    // State#2724:
    //   [DefaultClause_Await_Return -> DEFAULT . COLON]*
    //   [DefaultClause_Await_Return -> DEFAULT . COLON StatementList_Await_Return]*
    Goal::InputElementDiv,
    // State#2725:
    //   [CaseBlock_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#2726:
    //   [CaseClauses_Await_Return -> CaseClause_Await_Return .]*
    Goal::InputElementDiv,
    // State#2727:
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return . RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return . DefaultClause_Await_Return RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return . DefaultClause_Await_Return CaseClauses_Await_Return RBRACE]*
    //   [CaseClauses_Await_Return -> CaseClauses_Await_Return . CaseClause_Await_Return]*
    Goal::InputElementDiv,
    // State#2728:
    //   [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return . RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return . CaseClauses_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // State#2729:
    //   [Catch_Await_Return -> CATCH LPAREN CatchParameter_Await RPAREN . Block_Await_Return]*
    Goal::InputElementDiv,
    // State#2730:
    //   [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#2731:
    //   [AsyncArrowFunction_In_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // State#2732:
    //   [ClassHeritage_Yield_Await -> EXTENDS LeftHandSideExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2733:
    //   [KeywordOrIdentifierName -> GET .]*
    //   [MethodDefinition_Yield_Await -> GET . ClassElementName_Yield_Await LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2734:
    //   [ClassTail_Yield_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#2735:
    //   [ClassElement_Yield_Await -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#2736:
    //   [KeywordOrIdentifierName -> SET .]*
    //   [MethodDefinition_Yield_Await -> SET . ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2737:
    //   [ClassElement_Yield_Await -> STATIC . FieldDefinition_Yield_Await SEMI_COLON]*
    //   [ClassElement_Yield_Await -> STATIC . MethodDefinition_Yield_Await]*
    //   [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    //   [KeywordOrIdentifierName -> STATIC .]*
    Goal::InputElementDiv,
    // State#2738:
    //   [ClassTail_Yield_Await -> LBRACE ClassBody_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#2739:
    //   [ClassBody_Yield_Await -> ClassElementList_Yield_Await .]*
    //   [ClassElementList_Yield_Await -> ClassElementList_Yield_Await . ClassElement_Yield_Await]*
    Goal::InputElementDiv,
    // State#2740:
    //   [FieldDefinition_Yield_Await -> ClassElementName_Yield_Await .]*
    //   [FieldDefinition_Yield_Await -> ClassElementName_Yield_Await . Initializer_In_Yield_Await]*
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2741:
    //   [ClassElementList_Yield_Await -> ClassElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2742:
    //   [ClassElement_Yield_Await -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // State#2743:
    //   [ClassElement_Yield_Await -> FieldDefinition_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2744:
    //   [ClassElement_Yield_Await -> MethodDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2745:
    //   [ClassElementName_Yield_Await -> PropertyName_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2746:
    //   [ClassExpression_Yield_Await -> CLASS BindingIdentifier_Yield_Await ClassTail_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2747:
    //   [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE . RBRACE]*
    //   [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE . ClassBody_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // State#2748:
    //   [ImportCall_Yield_Await -> IMPORT LPAREN AssignmentExpression_In_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#2749:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL . ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2750:
    //   [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2751:
    //   [PropertyDefinition_Yield_Await -> ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2752:
    //   [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2753:
    //   [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2754:
    //   [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2755:
    //   [FormalParameters -> () .]*
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2756:
    //   [CoverInitializedName_Yield_Await -> IdentifierReference_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2757:
    //   [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await COMMA . RBRACE]*
    //   [PropertyDefinitionList_Yield_Await -> PropertyDefinitionList_Yield_Await COMMA . PropertyDefinition_Yield_Await]*
    Goal::InputElementDiv,
    // State#2758:
    //   [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2759:
    //   [PropertyDefinition_Yield_Await -> PropertyName_Yield_Await COLON . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2760:
    //   [SpreadElement_Yield_Await -> ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2761:
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA . RBRACK]*
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA . Elision RBRACK]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . Elision AssignmentExpression_In_Yield_Await]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . Elision SpreadElement_Yield_Await]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . SpreadElement_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2762:
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2763:
    //   [ArrayLiteral_Yield_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2764:
    //   [ElementList_Yield_Await -> Elision AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2765:
    //   [ElementList_Yield_Await -> Elision SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2766:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingIdentifier_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#2767:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingPattern_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#2768:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA . ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA . ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA . RPAREN]*
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2769:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2770:
    //   [MemberExpression_Yield_Await -> NEW MemberExpression_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2771:
    //   [RelationalExpression_In_Yield_Await -> PrivateIdentifier IN ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2772:
    //   [SuperProperty_Yield_Await -> SUPER DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2773:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [SuperProperty_Yield_Await -> SUPER LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#2774:
    //   [ArgumentList_Yield_Await -> ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2775:
    //   [Arguments_Yield_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2776:
    //   [ArgumentList_Yield_Await -> ArgumentList_Yield_Await . COMMA ELLIPSIS AssignmentExpression_In_Yield_Await]*
    //   [ArgumentList_Yield_Await -> ArgumentList_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await . COMMA RPAREN]*
    //   [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#2777:
    //   [ArgumentList_Yield_Await -> AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2778:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2779:
    //   [TemplateMiddleList_Yield_Await -> TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#2780:
    //   [TemplateSpans_Yield_Await -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#2781:
    //   [TemplateMiddleList_Yield_Await -> TemplateMiddleList_Yield_Await . TemplateMiddle Expression_In_Yield_Await]*
    //   [TemplateSpans_Yield_Await -> TemplateMiddleList_Yield_Await . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#2782:
    //   [SubstitutionTemplate_Yield_Await -> TemplateHead Expression_In_Yield_Await TemplateSpans_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2783:
    //   [YieldExpression_In_Await -> YIELD MUL AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2784:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await ADD MultiplicativeExpression_Yield_Await .]*
    //   [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await . MultiplicativeOperator ExponentiationExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2785:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await SUB MultiplicativeExpression_Yield_Await .]*
    //   [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await . MultiplicativeOperator ExponentiationExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2786:
    //   [ArrowFunction_In_Yield_Await -> ArrowParameters_Yield_Await ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#2787:
    //   [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await BIT_AND EqualityExpression_In_Yield_Await .]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ RelationalExpression_In_Yield_Await]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ_STRICT RelationalExpression_In_Yield_Await]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE RelationalExpression_In_Yield_Await]*
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE_STRICT RelationalExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2788:
    //   [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await BIT_OR BitwiseXORExpression_In_Yield_Await .]*
    //   [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await . BIT_XOR BitwiseANDExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2789:
    //   [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await . BIT_AND EqualityExpression_In_Yield_Await]*
    //   [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await BIT_XOR BitwiseANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2790:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#2791:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2792:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await LBRACK Expression_In_Yield_Await . RBRACK]*
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2793:
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#2794:
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#2795:
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2796:
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2797:
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2798:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [SubstitutionTemplate_Yield_Await_Tagged -> TemplateHead Expression_In_Yield_Await . TemplateSpans_Yield_Await_Tagged]*
    Goal::InputElementTemplateTail,
    // State#2799:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT . PrivateIdentifier]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT . KeywordOrIdentifierName]*
    Goal::InputElementDiv,
    // State#2800:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // State#2801:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2802:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2803:
    //   [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    //   [CoalesceExpression_In_Yield_Await -> CoalesceExpressionHead_In_Yield_Await NULLISH BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2804:
    //   [AsyncArrowFunction_In_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#2805:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ RelationalExpression_In_Yield_Await .]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2806:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ_STRICT RelationalExpression_In_Yield_Await .]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2807:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE RelationalExpression_In_Yield_Await .]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2808:
    //   [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE_STRICT RelationalExpression_In_Yield_Await .]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2809:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2810:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2811:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2812:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2813:
    //   [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2814:
    //   [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    //   [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await AND BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2815:
    //   [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    //   [LogicalANDExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2816:
    //   [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await . AND BitwiseORExpression_In_Yield_Await]*
    //   [LogicalORExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await OR LogicalANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2817:
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#2818:
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2819:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#2820:
    //   [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await MultiplicativeOperator ExponentiationExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2821:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GT ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2822:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GTE ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2823:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await IN ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2824:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await INSTANCEOF ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2825:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LT ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2826:
    //   [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LTE ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // State#2827:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SAR AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2828:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHL AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2829:
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    //   [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHR AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2830:
    //   [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await . COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2831:
    //   [ExponentiationExpression_Yield_Await -> UpdateExpression_Yield_Await EXP ExponentiationExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#2832:
    //   [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA BindingRestProperty_Yield_Await RBRACE .]*
    Goal::InputElementDiv,
    // State#2833:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#2834:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // State#2835:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#2836:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION . BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION . MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2837:
    //   [BreakStatement_Yield_Await -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2838:
    //   [LabelIdentifier_Yield_Await -> Identifier .]*
    Goal::InputElementDiv,
    // State#2839:
    //   [BreakStatement_Yield_Await -> BREAK LabelIdentifier_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2840:
    //   [ClassDeclaration_Yield_Await -> CLASS BindingIdentifier_Yield_Await . ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // State#2841:
    //   [ContinueStatement_Yield_Await -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2842:
    //   [ContinueStatement_Yield_Await -> CONTINUE LabelIdentifier_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2843:
    //   [AsyncArrowFunction_In_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // State#2844:
    //   [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return . WHILE LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2845:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT . LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT . LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT . LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2846:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#2847:
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL . BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2848:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2849:
    //   [IfStatement_Yield_Await_Return -> IF LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    //   [IfStatement_Yield_Await_Return -> IF LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#2850:
    //   [Block_Yield_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#2851:
    //   [Block_Yield_Await_Return -> LBRACE StatementList_Yield_Await_Return . RBRACE]*
    //   [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#2852:
    //   [ReturnStatement_Yield_Await -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2853:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ReturnStatement_Yield_Await -> RETURN Expression_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2854:
    //   [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN . Expression_In_Yield_Await RPAREN CaseBlock_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#2855:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ThrowStatement_Yield_Await -> THROW Expression_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2856:
    //   [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return . Catch_Yield_Await_Return]*
    //   [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return . Catch_Yield_Await_Return Finally_Yield_Await_Return]*
    //   [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return . Finally_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#2857:
    //   [VariableDeclaration_In_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [VariableDeclaration_In_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2858:
    //   [VariableDeclaration_In_Yield_Await -> BindingPattern_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2859:
    //   [VariableDeclarationList_In_Yield_Await -> VariableDeclarationList_In_Yield_Await . COMMA VariableDeclaration_In_Yield_Await]*
    //   [VariableStatement_Yield_Await -> VAR VariableDeclarationList_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2860:
    //   [VariableDeclarationList_In_Yield_Await -> VariableDeclaration_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2861:
    //   [WhileStatement_Yield_Await_Return -> WHILE LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#2862:
    //   [WithStatement_Yield_Await_Return -> WITH LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#2863:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2864:
    //   [ExpressionStatement_Yield_Await -> Expression_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2865:
    //   [LabelledStatement_Yield_Await_Return -> LabelIdentifier_Yield_Await COLON . LabelledItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#2866:
    //   [LexicalBinding_In_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [LexicalBinding_In_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2867:
    //   [BindingList_In_Yield_Await -> BindingList_In_Yield_Await . COMMA LexicalBinding_In_Yield_Await]*
    //   [LexicalDeclaration_In_Yield_Await -> LetOrConst BindingList_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2868:
    //   [LexicalBinding_In_Yield_Await -> BindingPattern_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#2869:
    //   [BindingList_In_Yield_Await -> LexicalBinding_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#2870:
    //   [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return StatementListItem_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#2871:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#2872:
    //   [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2873:
    //   [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN Expression_In_Await . RPAREN SEMI_COLON]*
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#2874:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2875:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2876:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2877:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#2878:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2879:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2880:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2881:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2882:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2883:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2884:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2885:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2886:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2887:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2888:
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2889:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#2890:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#2891:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#2892:
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await . ELSE Statement_Await]*
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await . !~[ELSE]]*
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await !~[ELSE] .]*
    Goal::InputElementRegExp,
    // State#2893:
    //   [CaseBlock_Await -> LBRACE . RBRACE]*
    //   [CaseBlock_Await -> LBRACE . CaseClauses_Await RBRACE]*
    //   [CaseBlock_Await -> LBRACE . CaseClauses_Await DefaultClause_Await RBRACE]*
    //   [CaseBlock_Await -> LBRACE . CaseClauses_Await DefaultClause_Await CaseClauses_Await RBRACE]*
    //   [CaseBlock_Await -> LBRACE . DefaultClause_Await RBRACE]*
    //   [CaseBlock_Await -> LBRACE . DefaultClause_Await CaseClauses_Await RBRACE]*
    Goal::InputElementDiv,
    // State#2894:
    //   [SwitchStatement_Await -> SWITCH LPAREN Expression_In_Await RPAREN CaseBlock_Await .]*
    Goal::InputElementRegExp,
    // State#2895:
    //   [Catch_Await -> CATCH LPAREN CatchParameter_Await . RPAREN Block_Await]*
    Goal::InputElementDiv,
    // State#2896:
    //   [WhileStatement_Await -> WHILE LPAREN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#2897:
    //   [WithStatement_Await -> WITH LPAREN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#2898:
    //   [AsyncArrowFunction_In_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#2899:
    //   [ClassElement_Yield -> STATIC FieldDefinition_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2900:
    //   [ClassElement_Yield -> STATIC MethodDefinition_Yield .]*
    Goal::InputElementDiv,
    // State#2901:
    //   [ClassTail_Yield -> LBRACE ClassBody_Yield RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#2902:
    //   [ClassElementList_Yield -> ClassElementList_Yield ClassElement_Yield .]*
    Goal::InputElementDiv,
    // State#2903:
    //   [FieldDefinition_Yield -> ClassElementName_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#2904:
    //   [ClassElement_Yield -> FieldDefinition_Yield SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#2905:
    //   [ClassTail_Yield -> ClassHeritage_Yield LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#2906:
    //   [ClassTail_Yield -> ClassHeritage_Yield LBRACE ClassBody_Yield . RBRACE]*
    Goal::InputElementDiv,
    // State#2907:
    //   [ImportCall_Yield -> IMPORT LPAREN AssignmentExpression_In_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2908:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2909:
    //   [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#2910:
    //   [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2911:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2912:
    //   [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2913:
    //   [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2914:
    //   [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#2915:
    //   [PropertyDefinitionList_Yield -> PropertyDefinitionList_Yield COMMA PropertyDefinition_Yield .]*
    Goal::InputElementDiv,
    // State#2916:
    //   [PropertyDefinition_Yield -> PropertyName_Yield COLON AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2917:
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2918:
    //   [ElementList_Yield -> ElementList_Yield COMMA AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2919:
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA Elision . RBRACK]*
    //   [ElementList_Yield -> ElementList_Yield COMMA Elision . AssignmentExpression_In_Yield]*
    //   [ElementList_Yield -> ElementList_Yield COMMA Elision . SpreadElement_Yield]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#2920:
    //   [ElementList_Yield -> ElementList_Yield COMMA SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // State#2921:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingIdentifier_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2922:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingPattern_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2923:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS . BindingIdentifier_Yield RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS . BindingPattern_Yield RPAREN]*
    Goal::InputElementDiv,
    // State#2924:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2925:
    //   [Expression_In_Yield -> Expression_In_Yield COMMA AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2926:
    //   [SuperProperty_Yield -> SUPER LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2927:
    //   [ArgumentList_Yield -> ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#2928:
    //   [ArgumentList_Yield -> ArgumentList_Yield COMMA . ELLIPSIS AssignmentExpression_In_Yield]*
    //   [ArgumentList_Yield -> ArgumentList_Yield COMMA . AssignmentExpression_In_Yield]*
    //   [Arguments_Yield -> LPAREN ArgumentList_Yield COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // State#2929:
    //   [Arguments_Yield -> LPAREN ArgumentList_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#2930:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [TemplateMiddleList_Yield -> TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#2931:
    //   [TemplateMiddleList_Yield -> TemplateMiddleList_Yield TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2932:
    //   [TemplateSpans_Yield -> TemplateMiddleList_Yield TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#2933:
    //   [CallExpression_Yield -> CallExpression_Yield LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2934:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#2935:
    //   [TemplateMiddleList_Yield_Tagged -> TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2936:
    //   [TemplateSpans_Yield_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#2937:
    //   [TemplateMiddleList_Yield_Tagged -> TemplateMiddleList_Yield_Tagged . TemplateMiddle Expression_In_Yield]*
    //   [TemplateSpans_Yield_Tagged -> TemplateMiddleList_Yield_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#2938:
    //   [SubstitutionTemplate_Yield_Tagged -> TemplateHead Expression_In_Yield TemplateSpans_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#2939:
    //   [OptionalChain_Yield -> OptionalChain_Yield DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#2940:
    //   [OptionalChain_Yield -> OptionalChain_Yield DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#2941:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [OptionalChain_Yield -> OptionalChain_Yield LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // State#2942:
    //   [MemberExpression_Yield -> MemberExpression_Yield LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#2943:
    //   [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL AssignmentExpression_In_Yield COLON . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#2944:
    //   [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // State#2945:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL . BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2946:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2947:
    //   [BreakStatement_Yield -> BREAK LabelIdentifier_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2948:
    //   [ClassDeclaration_Yield -> CLASS BindingIdentifier_Yield ClassTail_Yield .]*
    Goal::InputElementRegExp,
    // State#2949:
    //   [ContinueStatement_Yield -> CONTINUE LabelIdentifier_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2950:
    //   [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE . LPAREN Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2951:
    //   [AsyncArrowFunction_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2952:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2953:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR . ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR . ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2954:
    //   [BindingIdentifier_Yield -> YIELD .]*
    //   [YieldExpression -> YIELD .]*
    //   [YieldExpression -> YIELD . MUL AssignmentExpression_Yield]*
    //   [YieldExpression -> YIELD . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#2955:
    //   [AssignmentExpression_Yield -> ArrowFunction_Yield .]*
    Goal::InputElementDiv,
    // State#2956:
    //   [ArrowFunction_Yield -> ArrowParameters_Yield . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // State#2957:
    //   [Expression_Yield -> AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2958:
    //   [AssignmentExpression_Yield -> AsyncArrowFunction_Yield .]*
    Goal::InputElementDiv,
    // State#2959:
    //   [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield . BIT_AND EqualityExpression_Yield]*
    //   [BitwiseXORExpression_Yield -> BitwiseANDExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2960:
    //   [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    //   [CoalesceExpressionHead_Yield -> BitwiseORExpression_Yield .]*
    //   [LogicalANDExpression_Yield -> BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2961:
    //   [BitwiseORExpression_Yield -> BitwiseXORExpression_Yield .]*
    //   [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield . BIT_XOR BitwiseANDExpression_Yield]*
    Goal::InputElementDiv,
    // State#2962:
    //   [CoalesceExpression_Yield -> CoalesceExpressionHead_Yield . NULLISH BitwiseORExpression_Yield]*
    Goal::InputElementDiv,
    // State#2963:
    //   [CoalesceExpressionHead_Yield -> CoalesceExpression_Yield .]*
    //   [ShortCircuitExpression_Yield -> CoalesceExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2964:
    //   [AssignmentExpression_Yield -> ConditionalExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2965:
    //   [AsyncArrowFunction_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield . ARROW AsyncConciseBody]*
    //   [CallExpression_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield .]*
    Goal::InputElementDiv,
    // State#2966:
    //   [BitwiseANDExpression_Yield -> EqualityExpression_Yield .]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . EQ RelationalExpression_Yield]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . EQ_STRICT RelationalExpression_Yield]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . NE RelationalExpression_Yield]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . NE_STRICT RelationalExpression_Yield]*
    Goal::InputElementDiv,
    // State#2967:
    //   [Expression_Yield -> Expression_Yield . COMMA AssignmentExpression_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2968:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield . IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield . OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2969:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AND_ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . NULLISH_ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . OR_ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AssignmentOperator AssignmentExpression_Yield]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield . IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield . OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementDiv,
    // State#2970:
    //   [ForDeclaration_Yield -> LetOrConst . ForBinding_Yield]*
    //   [LexicalDeclaration_Yield -> LetOrConst . BindingList_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // State#2971:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2972:
    //   [LogicalANDExpression_Yield -> LogicalANDExpression_Yield . AND BitwiseORExpression_Yield]*
    //   [LogicalORExpression_Yield -> LogicalANDExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2973:
    //   [LogicalORExpression_Yield -> LogicalORExpression_Yield . OR LogicalANDExpression_Yield]*
    //   [ShortCircuitExpression_Yield -> LogicalORExpression_Yield .]*
    Goal::InputElementDiv,
    // State#2974:
    //   [EqualityExpression_Yield -> RelationalExpression_Yield .]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // State#2975:
    //   [RelationalExpression_Yield -> ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // State#2976:
    //   [ConditionalExpression_Yield -> ShortCircuitExpression_Yield .]*
    //   [ConditionalExpression_Yield -> ShortCircuitExpression_Yield . CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_Yield]*
    Goal::InputElementDiv,
    // State#2977:
    //   [AssignmentExpression_Yield -> YieldExpression .]*
    Goal::InputElementDiv,
    // State#2978:
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#2979:
    //   [FormalParameters -> () .]*
    //   [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2980:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return ELSE Statement_Yield_Return]*
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#2981:
    //   [Block_Yield_Return -> LBRACE StatementList_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#2982:
    //   [ReturnStatement_Yield -> RETURN Expression_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2983:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [SwitchStatement_Yield_Return -> SWITCH LPAREN Expression_In_Yield . RPAREN CaseBlock_Yield_Return]*
    Goal::InputElementDiv,
    // State#2984:
    //   [ThrowStatement_Yield -> THROW Expression_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2985:
    //   [Catch_Yield_Return -> CATCH . LPAREN CatchParameter_Yield RPAREN Block_Yield_Return]*
    //   [Catch_Yield_Return -> CATCH . Block_Yield_Return]*
    Goal::InputElementDiv,
    // State#2986:
    //   [Finally_Yield_Return -> FINALLY . Block_Yield_Return]*
    Goal::InputElementDiv,
    // State#2987:
    //   [TryStatement_Yield_Return -> TRY Block_Yield_Return Catch_Yield_Return .]*
    //   [TryStatement_Yield_Return -> TRY Block_Yield_Return Catch_Yield_Return . Finally_Yield_Return]*
    Goal::InputElementRegExp,
    // State#2988:
    //   [TryStatement_Yield_Return -> TRY Block_Yield_Return Finally_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2989:
    //   [VariableDeclaration_In_Yield -> BindingIdentifier_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#2990:
    //   [VariableDeclaration_In_Yield -> BindingPattern_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#2991:
    //   [VariableDeclarationList_In_Yield -> VariableDeclarationList_In_Yield COMMA . VariableDeclaration_In_Yield]*
    Goal::InputElementDiv,
    // State#2992:
    //   [VariableStatement_Yield -> VAR VariableDeclarationList_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#2993:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [WhileStatement_Yield_Return -> WHILE LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2994:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [WithStatement_Yield_Return -> WITH LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#2995:
    //   [FunctionDeclaration_Yield -> FUNCTION . BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#2996:
    //   [LabelledItem_Yield_Return -> FunctionDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // State#2997:
    //   [LabelledStatement_Yield_Return -> LabelIdentifier_Yield COLON LabelledItem_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2998:
    //   [LabelledItem_Yield_Return -> Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#2999:
    //   [LexicalBinding_In_Yield -> BindingIdentifier_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#3000:
    //   [BindingList_In_Yield -> BindingList_In_Yield COMMA . LexicalBinding_In_Yield]*
    Goal::InputElementDiv,
    // State#3001:
    //   [LexicalDeclaration_In_Yield -> LetOrConst BindingList_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3002:
    //   [LexicalBinding_In_Yield -> BindingPattern_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // State#3003:
    //   [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#3004:
    //   [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3005:
    //   [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3006:
    //   [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3007:
    //   [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3008:
    //   [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3009:
    //   [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // State#3010:
    //   [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN Expression_In RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3011:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3012:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3013:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3014:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3015:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3016:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3017:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#3018:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement_Return]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // State#3019:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3020:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3021:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3022:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#3023:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3024:
    //   [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3025:
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3026:
    //   [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3027:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3028:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3029:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3030:
    //   [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return ELSE Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3031:
    //   [CaseClause_Return -> CASE Expression_In . COLON]*
    //   [CaseClause_Return -> CASE Expression_In . COLON StatementList_Return]*
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // State#3032:
    //   [DefaultClause_Return -> DEFAULT COLON .]*
    //   [DefaultClause_Return -> DEFAULT COLON . StatementList_Return]*
    Goal::InputElementRegExp,
    // State#3033:
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3034:
    //   [CaseClauses_Return -> CaseClauses_Return CaseClause_Return .]*
    Goal::InputElementDiv,
    // State#3035:
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return . RBRACE]*
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return . CaseClauses_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3036:
    //   [CaseBlock_Return -> LBRACE DefaultClause_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3037:
    //   [CaseBlock_Return -> LBRACE DefaultClause_Return CaseClauses_Return . RBRACE]*
    //   [CaseClauses_Return -> CaseClauses_Return . CaseClause_Return]*
    Goal::InputElementDiv,
    // State#3038:
    //   [Catch_Return -> CATCH LPAREN CatchParameter RPAREN Block_Return .]*
    Goal::InputElementRegExp,
    // State#3039:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3040:
    //   [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3041:
    //   [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3042:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3043:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3044:
    //   [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3045:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3046:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3047:
    //   [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3048:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#3049:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3050:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3051:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3052:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3053:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3054:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3055:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3056:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3057:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#3058:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3059:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3060:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3061:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3062:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#3063:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3064:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3065:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3066:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3067:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3068:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3069:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3070:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3071:
    //   [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3072:
    //   [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return ELSE Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3073:
    //   [CaseClause_Await_Return -> CASE Expression_In_Await . COLON]*
    //   [CaseClause_Await_Return -> CASE Expression_In_Await . COLON StatementList_Await_Return]*
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#3074:
    //   [DefaultClause_Await_Return -> DEFAULT COLON .]*
    //   [DefaultClause_Await_Return -> DEFAULT COLON . StatementList_Await_Return]*
    Goal::InputElementRegExp,
    // State#3075:
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3076:
    //   [CaseClauses_Await_Return -> CaseClauses_Await_Return CaseClause_Await_Return .]*
    Goal::InputElementDiv,
    // State#3077:
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return . RBRACE]*
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return . CaseClauses_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3078:
    //   [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3079:
    //   [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return CaseClauses_Await_Return . RBRACE]*
    //   [CaseClauses_Await_Return -> CaseClauses_Await_Return . CaseClause_Await_Return]*
    Goal::InputElementDiv,
    // State#3080:
    //   [Catch_Await_Return -> CATCH LPAREN CatchParameter_Await RPAREN Block_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3081:
    //   [AsyncArrowFunction_In_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // State#3082:
    //   [ClassElement_Yield_Await -> STATIC FieldDefinition_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3083:
    //   [ClassElement_Yield_Await -> STATIC MethodDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3084:
    //   [ClassTail_Yield_Await -> LBRACE ClassBody_Yield_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#3085:
    //   [ClassElementList_Yield_Await -> ClassElementList_Yield_Await ClassElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3086:
    //   [FieldDefinition_Yield_Await -> ClassElementName_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3087:
    //   [ClassElement_Yield_Await -> FieldDefinition_Yield_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#3088:
    //   [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#3089:
    //   [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE ClassBody_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // State#3090:
    //   [ImportCall_Yield_Await -> IMPORT LPAREN AssignmentExpression_In_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3091:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3092:
    //   [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#3093:
    //   [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3094:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3095:
    //   [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3096:
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3097:
    //   [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#3098:
    //   [PropertyDefinitionList_Yield_Await -> PropertyDefinitionList_Yield_Await COMMA PropertyDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3099:
    //   [PropertyDefinition_Yield_Await -> PropertyName_Yield_Await COLON AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3100:
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3101:
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3102:
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA Elision . RBRACK]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision . AssignmentExpression_In_Yield_Await]*
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision . SpreadElement_Yield_Await]*
    //   [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // State#3103:
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3104:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingIdentifier_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3105:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingPattern_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3106:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS . BindingIdentifier_Yield_Await RPAREN]*
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS . BindingPattern_Yield_Await RPAREN]*
    Goal::InputElementDiv,
    // State#3107:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3108:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await COMMA AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#3109:
    //   [SuperProperty_Yield_Await -> SUPER LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3110:
    //   [ArgumentList_Yield_Await -> ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3111:
    //   [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA . ELLIPSIS AssignmentExpression_In_Yield_Await]*
    //   [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    //   [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // State#3112:
    //   [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3113:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [TemplateMiddleList_Yield_Await -> TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#3114:
    //   [TemplateMiddleList_Yield_Await -> TemplateMiddleList_Yield_Await TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3115:
    //   [TemplateSpans_Yield_Await -> TemplateMiddleList_Yield_Await TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#3116:
    //   [CallExpression_Yield_Await -> CallExpression_Yield_Await LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3117:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#3118:
    //   [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3119:
    //   [TemplateSpans_Yield_Await_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#3120:
    //   [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged . TemplateMiddle Expression_In_Yield_Await]*
    //   [TemplateSpans_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // State#3121:
    //   [SubstitutionTemplate_Yield_Await_Tagged -> TemplateHead Expression_In_Yield_Await TemplateSpans_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // State#3122:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // State#3123:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT KeywordOrIdentifierName .]*
    Goal::InputElementTemplateTail,
    // State#3124:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // State#3125:
    //   [MemberExpression_Yield_Await -> MemberExpression_Yield_Await LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3126:
    //   [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3127:
    //   [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // State#3128:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL . BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3129:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3130:
    //   [BreakStatement_Yield_Await -> BREAK LabelIdentifier_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3131:
    //   [ClassDeclaration_Yield_Await -> CLASS BindingIdentifier_Yield_Await ClassTail_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#3132:
    //   [ContinueStatement_Yield_Await -> CONTINUE LabelIdentifier_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3133:
    //   [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE . LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3134:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN . VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN . ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN . LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3135:
    //   [AsyncArrowFunction_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3136:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3137:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR . ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR . ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3138:
    //   [BindingIdentifier_Yield_Await -> YIELD .]*
    //   [YieldExpression_Await -> YIELD .]*
    //   [YieldExpression_Await -> YIELD . MUL AssignmentExpression_Yield_Await]*
    //   [YieldExpression_Await -> YIELD . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3139:
    //   [AssignmentExpression_Yield_Await -> ArrowFunction_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3140:
    //   [ArrowFunction_Yield_Await -> ArrowParameters_Yield_Await . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // State#3141:
    //   [Expression_Yield_Await -> AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3142:
    //   [AssignmentExpression_Yield_Await -> AsyncArrowFunction_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3143:
    //   [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await . BIT_AND EqualityExpression_Yield_Await]*
    //   [BitwiseXORExpression_Yield_Await -> BitwiseANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3144:
    //   [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    //   [CoalesceExpressionHead_Yield_Await -> BitwiseORExpression_Yield_Await .]*
    //   [LogicalANDExpression_Yield_Await -> BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3145:
    //   [BitwiseORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await .]*
    //   [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await . BIT_XOR BitwiseANDExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3146:
    //   [CoalesceExpression_Yield_Await -> CoalesceExpressionHead_Yield_Await . NULLISH BitwiseORExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3147:
    //   [CoalesceExpressionHead_Yield_Await -> CoalesceExpression_Yield_Await .]*
    //   [ShortCircuitExpression_Yield_Await -> CoalesceExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3148:
    //   [AssignmentExpression_Yield_Await -> ConditionalExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3149:
    //   [AsyncArrowFunction_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await . ARROW AsyncConciseBody]*
    //   [CallExpression_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3150:
    //   [BitwiseANDExpression_Yield_Await -> EqualityExpression_Yield_Await .]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ RelationalExpression_Yield_Await]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ_STRICT RelationalExpression_Yield_Await]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE RelationalExpression_Yield_Await]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE_STRICT RelationalExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3151:
    //   [Expression_Yield_Await -> Expression_Yield_Await . COMMA AssignmentExpression_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3152:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await . IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3153:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AND_ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . NULLISH_ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . OR_ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AssignmentOperator AssignmentExpression_Yield_Await]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await . IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementDiv,
    // State#3154:
    //   [ForDeclaration_Yield_Await -> LetOrConst . ForBinding_Yield_Await]*
    //   [LexicalDeclaration_Yield_Await -> LetOrConst . BindingList_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3155:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3156:
    //   [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await . AND BitwiseORExpression_Yield_Await]*
    //   [LogicalORExpression_Yield_Await -> LogicalANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3157:
    //   [LogicalORExpression_Yield_Await -> LogicalORExpression_Yield_Await . OR LogicalANDExpression_Yield_Await]*
    //   [ShortCircuitExpression_Yield_Await -> LogicalORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3158:
    //   [EqualityExpression_Yield_Await -> RelationalExpression_Yield_Await .]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3159:
    //   [RelationalExpression_Yield_Await -> ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3160:
    //   [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await .]*
    //   [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await . CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3161:
    //   [AssignmentExpression_Yield_Await -> YieldExpression_Await .]*
    Goal::InputElementDiv,
    // State#3162:
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3163:
    //   [FormalParameters -> () .]*
    //   [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3164:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // State#3165:
    //   [Block_Yield_Await_Return -> LBRACE StatementList_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3166:
    //   [ReturnStatement_Yield_Await -> RETURN Expression_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3167:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN Expression_In_Yield_Await . RPAREN CaseBlock_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3168:
    //   [ThrowStatement_Yield_Await -> THROW Expression_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3169:
    //   [Catch_Yield_Await_Return -> CATCH . LPAREN CatchParameter_Yield_Await RPAREN Block_Yield_Await_Return]*
    //   [Catch_Yield_Await_Return -> CATCH . Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3170:
    //   [Finally_Yield_Await_Return -> FINALLY . Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3171:
    //   [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Catch_Yield_Await_Return .]*
    //   [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Catch_Yield_Await_Return . Finally_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3172:
    //   [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Finally_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3173:
    //   [VariableDeclaration_In_Yield_Await -> BindingIdentifier_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3174:
    //   [VariableDeclaration_In_Yield_Await -> BindingPattern_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3175:
    //   [VariableDeclarationList_In_Yield_Await -> VariableDeclarationList_In_Yield_Await COMMA . VariableDeclaration_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#3176:
    //   [VariableStatement_Yield_Await -> VAR VariableDeclarationList_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3177:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [WhileStatement_Yield_Await_Return -> WHILE LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3178:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [WithStatement_Yield_Await_Return -> WITH LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3179:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION . BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3180:
    //   [LabelledItem_Yield_Await_Return -> FunctionDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // State#3181:
    //   [LabelledStatement_Yield_Await_Return -> LabelIdentifier_Yield_Await COLON LabelledItem_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3182:
    //   [LabelledItem_Yield_Await_Return -> Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3183:
    //   [LexicalBinding_In_Yield_Await -> BindingIdentifier_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3184:
    //   [BindingList_In_Yield_Await -> BindingList_In_Yield_Await COMMA . LexicalBinding_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#3185:
    //   [LexicalDeclaration_In_Yield_Await -> LetOrConst BindingList_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3186:
    //   [LexicalBinding_In_Yield_Await -> BindingPattern_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3187:
    //   [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // State#3188:
    //   [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN Expression_In_Await RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3189:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#3190:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3191:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3192:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3193:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3194:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3195:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3196:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3197:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3198:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#3199:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3200:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3201:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3202:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#3203:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3204:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3205:
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3206:
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3207:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3208:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3209:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3210:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3211:
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await ELSE . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3212:
    //   [CaseClause_Await -> CASE . Expression_In_Await COLON]*
    //   [CaseClause_Await -> CASE . Expression_In_Await COLON StatementList_Await]*
    Goal::InputElementRegExp,
    // State#3213:
    //   [DefaultClause_Await -> DEFAULT . COLON]*
    //   [DefaultClause_Await -> DEFAULT . COLON StatementList_Await]*
    Goal::InputElementDiv,
    // State#3214:
    //   [CaseBlock_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#3215:
    //   [CaseClauses_Await -> CaseClause_Await .]*
    Goal::InputElementDiv,
    // State#3216:
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await . RBRACE]*
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await . DefaultClause_Await RBRACE]*
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await . DefaultClause_Await CaseClauses_Await RBRACE]*
    //   [CaseClauses_Await -> CaseClauses_Await . CaseClause_Await]*
    Goal::InputElementDiv,
    // State#3217:
    //   [CaseBlock_Await -> LBRACE DefaultClause_Await . RBRACE]*
    //   [CaseBlock_Await -> LBRACE DefaultClause_Await . CaseClauses_Await RBRACE]*
    Goal::InputElementDiv,
    // State#3218:
    //   [Catch_Await -> CATCH LPAREN CatchParameter_Await RPAREN . Block_Await]*
    Goal::InputElementDiv,
    // State#3219:
    //   [ClassElement_Yield -> STATIC FieldDefinition_Yield SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#3220:
    //   [ClassTail_Yield -> ClassHeritage_Yield LBRACE ClassBody_Yield RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#3221:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#3222:
    //   [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3223:
    //   [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3224:
    //   [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3225:
    //   [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3226:
    //   [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3227:
    //   [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3228:
    //   [ElementList_Yield -> ElementList_Yield COMMA Elision AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#3229:
    //   [ElementList_Yield -> ElementList_Yield COMMA Elision SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // State#3230:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingIdentifier_Yield . RPAREN]*
    Goal::InputElementDiv,
    // State#3231:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingPattern_Yield . RPAREN]*
    Goal::InputElementDiv,
    // State#3232:
    //   [ArgumentList_Yield -> ArgumentList_Yield COMMA ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // State#3233:
    //   [Arguments_Yield -> LPAREN ArgumentList_Yield COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3234:
    //   [ArgumentList_Yield -> ArgumentList_Yield COMMA AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#3235:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [TemplateMiddleList_Yield -> TemplateMiddleList_Yield TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#3236:
    //   [OptionalChain_Yield -> OPTIONAL_CHAINING LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3237:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [TemplateMiddleList_Yield_Tagged -> TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#3238:
    //   [TemplateMiddleList_Yield_Tagged -> TemplateMiddleList_Yield_Tagged TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // State#3239:
    //   [TemplateSpans_Yield_Tagged -> TemplateMiddleList_Yield_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#3240:
    //   [OptionalChain_Yield -> OptionalChain_Yield LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3241:
    //   [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#3242:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3243:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#3244:
    //   [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN . Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#3245:
    //   [AsyncArrowFunction_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // State#3246:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3247:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3248:
    //   [ForBinding_Yield -> BindingIdentifier_Yield .]*
    //   [VariableDeclaration_Yield -> BindingIdentifier_Yield .]*
    //   [VariableDeclaration_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3249:
    //   [ForBinding_Yield -> BindingPattern_Yield .]*
    //   [VariableDeclaration_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3250:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield . IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield . OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3251:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [VariableDeclarationList_Yield -> VariableDeclarationList_Yield . COMMA VariableDeclaration_Yield]*
    Goal::InputElementDiv,
    // State#3252:
    //   [VariableDeclarationList_Yield -> VariableDeclaration_Yield .]*
    Goal::InputElementDiv,
    // State#3253:
    //   [YieldExpression -> YIELD MUL . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3254:
    //   [YieldExpression -> YIELD AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3255:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AND_ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . NULLISH_ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . OR_ASSIGN AssignmentExpression_Yield]*
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AssignmentOperator AssignmentExpression_Yield]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    //   [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementDiv,
    // State#3256:
    //   [ArrowFunction_Yield -> ArrowParameters_Yield ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // State#3257:
    //   [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield BIT_AND . EqualityExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3258:
    //   [BitwiseORExpression_Yield -> BitwiseORExpression_Yield BIT_OR . BitwiseXORExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3259:
    //   [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield BIT_XOR . BitwiseANDExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3260:
    //   [CoalesceExpression_Yield -> CoalesceExpressionHead_Yield NULLISH . BitwiseORExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3261:
    //   [AsyncArrowFunction_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#3262:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield EQ . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3263:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield EQ_STRICT . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3264:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield NE . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3265:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield NE_STRICT . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3266:
    //   [Expression_Yield -> Expression_Yield COMMA . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3267:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3268:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3269:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF . AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3270:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AND_ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3271:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3272:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3273:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3274:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF . AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3275:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield OR_ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3276:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AssignmentOperator . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3277:
    //   [ForBinding_Yield -> BindingIdentifier_Yield .]*
    //   [LexicalBinding_Yield -> BindingIdentifier_Yield .]*
    //   [LexicalBinding_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3278:
    //   [BindingList_Yield -> BindingList_Yield . COMMA LexicalBinding_Yield]*
    //   [LexicalDeclaration_Yield -> LetOrConst BindingList_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3279:
    //   [ForBinding_Yield -> BindingPattern_Yield .]*
    //   [LexicalBinding_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3280:
    //   [ForDeclaration_Yield -> LetOrConst ForBinding_Yield .]*
    Goal::InputElementDiv,
    // State#3281:
    //   [BindingList_Yield -> LexicalBinding_Yield .]*
    Goal::InputElementDiv,
    // State#3282:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3283:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3284:
    //   [LogicalANDExpression_Yield -> LogicalANDExpression_Yield AND . BitwiseORExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3285:
    //   [LogicalORExpression_Yield -> LogicalORExpression_Yield OR . LogicalANDExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3286:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield GT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3287:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield GTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3288:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield INSTANCEOF . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3289:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield LT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3290:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield LTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3291:
    //   [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL . AssignmentExpression_In_Yield COLON AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3292:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3293:
    //   [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3294:
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return ELSE Statement_Yield_Return]*
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#3295:
    //   [SwitchStatement_Yield_Return -> SWITCH LPAREN Expression_In_Yield RPAREN . CaseBlock_Yield_Return]*
    Goal::InputElementDiv,
    // State#3296:
    //   [Catch_Yield_Return -> CATCH LPAREN . CatchParameter_Yield RPAREN Block_Yield_Return]*
    Goal::InputElementDiv,
    // State#3297:
    //   [Catch_Yield_Return -> CATCH Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3298:
    //   [Finally_Yield_Return -> FINALLY Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3299:
    //   [TryStatement_Yield_Return -> TRY Block_Yield_Return Catch_Yield_Return Finally_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3300:
    //   [VariableDeclarationList_In_Yield -> VariableDeclarationList_In_Yield COMMA VariableDeclaration_In_Yield .]*
    Goal::InputElementDiv,
    // State#3301:
    //   [WhileStatement_Yield_Return -> WHILE LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3302:
    //   [WithStatement_Yield_Return -> WITH LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3303:
    //   [BindingList_In_Yield -> BindingList_In_Yield COMMA LexicalBinding_In_Yield .]*
    Goal::InputElementDiv,
    // State#3304:
    //   [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3305:
    //   [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3306:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3307:
    //   [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3308:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3309:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3310:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3311:
    //   [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // State#3312:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3313:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3314:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3315:
    //   [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3316:
    //   [CaseClause_Return -> CASE Expression_In COLON .]*
    //   [CaseClause_Return -> CASE Expression_In COLON . StatementList_Return]*
    Goal::InputElementRegExp,
    // State#3317:
    //   [DefaultClause_Return -> DEFAULT COLON StatementList_Return .]*
    //   [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // State#3318:
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3319:
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return CaseClauses_Return . RBRACE]*
    //   [CaseClauses_Return -> CaseClauses_Return . CaseClause_Return]*
    Goal::InputElementDiv,
    // State#3320:
    //   [CaseBlock_Return -> LBRACE DefaultClause_Return CaseClauses_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3321:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3322:
    //   [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3323:
    //   [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3324:
    //   [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3325:
    //   [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3326:
    //   [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3327:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3328:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3329:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3330:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3331:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3332:
    //   [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3333:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3334:
    //   [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3335:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3336:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3337:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3338:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // State#3339:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3340:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3341:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3342:
    //   [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3343:
    //   [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3344:
    //   [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3345:
    //   [CaseClause_Await_Return -> CASE Expression_In_Await COLON .]*
    //   [CaseClause_Await_Return -> CASE Expression_In_Await COLON . StatementList_Await_Return]*
    Goal::InputElementRegExp,
    // State#3346:
    //   [DefaultClause_Await_Return -> DEFAULT COLON StatementList_Await_Return .]*
    //   [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // State#3347:
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3348:
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return CaseClauses_Await_Return . RBRACE]*
    //   [CaseClauses_Await_Return -> CaseClauses_Await_Return . CaseClause_Await_Return]*
    Goal::InputElementDiv,
    // State#3349:
    //   [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return CaseClauses_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3350:
    //   [ClassElement_Yield_Await -> STATIC FieldDefinition_Yield_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // State#3351:
    //   [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE ClassBody_Yield_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // State#3352:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#3353:
    //   [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3354:
    //   [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3355:
    //   [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3356:
    //   [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3357:
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3358:
    //   [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3359:
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3360:
    //   [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3361:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingIdentifier_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#3362:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingPattern_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // State#3363:
    //   [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3364:
    //   [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3365:
    //   [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3366:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [TemplateMiddleList_Yield_Await -> TemplateMiddleList_Yield_Await TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#3367:
    //   [OptionalChain_Yield_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3368:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#3369:
    //   [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3370:
    //   [TemplateSpans_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // State#3371:
    //   [OptionalChain_Yield_Await -> OptionalChain_Yield_Await LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // State#3372:
    //   [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#3373:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3374:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    //   [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // State#3375:
    //   [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN . Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // State#3376:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR . ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3377:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3378:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3379:
    //   [ForDeclaration_Yield_Await -> LetOrConst . ForBinding_Yield_Await]*
    Goal::InputElementDiv,
    // State#3380:
    //   [AsyncArrowFunction_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // State#3381:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3382:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3383:
    //   [ForBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3384:
    //   [ForBinding_Yield_Await -> BindingPattern_Yield_Await .]*
    //   [VariableDeclaration_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3385:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await . IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3386:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [VariableDeclarationList_Yield_Await -> VariableDeclarationList_Yield_Await . COMMA VariableDeclaration_Yield_Await]*
    Goal::InputElementDiv,
    // State#3387:
    //   [VariableDeclarationList_Yield_Await -> VariableDeclaration_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3388:
    //   [YieldExpression_Await -> YIELD MUL . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3389:
    //   [YieldExpression_Await -> YIELD AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3390:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AND_ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . NULLISH_ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . OR_ASSIGN AssignmentExpression_Yield_Await]*
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AssignmentOperator AssignmentExpression_Yield_Await]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    //   [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementDiv,
    // State#3391:
    //   [ArrowFunction_Yield_Await -> ArrowParameters_Yield_Await ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // State#3392:
    //   [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await BIT_AND . EqualityExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3393:
    //   [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await BIT_OR . BitwiseXORExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3394:
    //   [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await BIT_XOR . BitwiseANDExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3395:
    //   [CoalesceExpression_Yield_Await -> CoalesceExpressionHead_Yield_Await NULLISH . BitwiseORExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3396:
    //   [AsyncArrowFunction_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#3397:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3398:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ_STRICT . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3399:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3400:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE_STRICT . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3401:
    //   [Expression_Yield_Await -> Expression_Yield_Await COMMA . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3402:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3403:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3404:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3405:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3406:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3407:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3408:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3409:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3410:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3411:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3412:
    //   [ForBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3413:
    //   [BindingList_Yield_Await -> BindingList_Yield_Await . COMMA LexicalBinding_Yield_Await]*
    //   [LexicalDeclaration_Yield_Await -> LetOrConst BindingList_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3414:
    //   [ForBinding_Yield_Await -> BindingPattern_Yield_Await .]*
    //   [LexicalBinding_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3415:
    //   [ForDeclaration_Yield_Await -> LetOrConst ForBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3416:
    //   [BindingList_Yield_Await -> LexicalBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3417:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3418:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3419:
    //   [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await AND . BitwiseORExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3420:
    //   [LogicalORExpression_Yield_Await -> LogicalORExpression_Yield_Await OR . LogicalANDExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3421:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3422:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3423:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await INSTANCEOF . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3424:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3425:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3426:
    //   [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL . AssignmentExpression_In_Yield_Await COLON AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3427:
    //   [FormalParameters_Yield -> () .]*
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3428:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3429:
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // State#3430:
    //   [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN Expression_In_Yield_Await RPAREN . CaseBlock_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3431:
    //   [Catch_Yield_Await_Return -> CATCH LPAREN . CatchParameter_Yield_Await RPAREN Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3432:
    //   [Catch_Yield_Await_Return -> CATCH Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3433:
    //   [Finally_Yield_Await_Return -> FINALLY Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3434:
    //   [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Catch_Yield_Await_Return Finally_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3435:
    //   [VariableDeclarationList_In_Yield_Await -> VariableDeclarationList_In_Yield_Await COMMA VariableDeclaration_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3436:
    //   [WhileStatement_Yield_Await_Return -> WHILE LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3437:
    //   [WithStatement_Yield_Await_Return -> WITH LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3438:
    //   [BindingList_In_Yield_Await -> BindingList_In_Yield_Await COMMA LexicalBinding_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3439:
    //   [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3440:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3441:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3442:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3443:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3444:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3445:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3446:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3447:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3448:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3449:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3450:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // State#3451:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3452:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3453:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3454:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3455:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3456:
    //   [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3457:
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3458:
    //   [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3459:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3460:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3461:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3462:
    //   [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await ELSE Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3463:
    //   [CaseClause_Await -> CASE Expression_In_Await . COLON]*
    //   [CaseClause_Await -> CASE Expression_In_Await . COLON StatementList_Await]*
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // State#3464:
    //   [DefaultClause_Await -> DEFAULT COLON .]*
    //   [DefaultClause_Await -> DEFAULT COLON . StatementList_Await]*
    Goal::InputElementRegExp,
    // State#3465:
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await RBRACE .]*
    Goal::InputElementRegExp,
    // State#3466:
    //   [CaseClauses_Await -> CaseClauses_Await CaseClause_Await .]*
    Goal::InputElementDiv,
    // State#3467:
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await . RBRACE]*
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await . CaseClauses_Await RBRACE]*
    Goal::InputElementDiv,
    // State#3468:
    //   [CaseBlock_Await -> LBRACE DefaultClause_Await RBRACE .]*
    Goal::InputElementRegExp,
    // State#3469:
    //   [CaseBlock_Await -> LBRACE DefaultClause_Await CaseClauses_Await . RBRACE]*
    //   [CaseClauses_Await -> CaseClauses_Await . CaseClause_Await]*
    Goal::InputElementDiv,
    // State#3470:
    //   [Catch_Await -> CATCH LPAREN CatchParameter_Await RPAREN Block_Await .]*
    Goal::InputElementRegExp,
    // State#3471:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3472:
    //   [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3473:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3474:
    //   [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3475:
    //   [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3476:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3477:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingIdentifier_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3478:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingPattern_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3479:
    //   [ArgumentList_Yield -> ArgumentList_Yield COMMA ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // State#3480:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [TemplateMiddleList_Yield_Tagged -> TemplateMiddleList_Yield_Tagged TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // State#3481:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#3482:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3483:
    //   [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN Expression_In_Yield . RPAREN SEMI_COLON]*
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#3484:
    //   [AsyncArrowFunction_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#3485:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3486:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3487:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3488:
    //   [Initializer_Yield -> ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3489:
    //   [VariableDeclaration_Yield -> BindingIdentifier_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // State#3490:
    //   [VariableDeclaration_Yield -> BindingPattern_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // State#3491:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3492:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF . AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3493:
    //   [VariableDeclarationList_Yield -> VariableDeclarationList_Yield COMMA . VariableDeclaration_Yield]*
    Goal::InputElementDiv,
    // State#3494:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3495:
    //   [YieldExpression -> YIELD MUL AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3496:
    //   [ArrowFunction_Yield -> ArrowParameters_Yield ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // State#3497:
    //   [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield BIT_AND EqualityExpression_Yield .]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . EQ RelationalExpression_Yield]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . EQ_STRICT RelationalExpression_Yield]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . NE RelationalExpression_Yield]*
    //   [EqualityExpression_Yield -> EqualityExpression_Yield . NE_STRICT RelationalExpression_Yield]*
    Goal::InputElementDiv,
    // State#3498:
    //   [BitwiseORExpression_Yield -> BitwiseORExpression_Yield BIT_OR BitwiseXORExpression_Yield .]*
    //   [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield . BIT_XOR BitwiseANDExpression_Yield]*
    Goal::InputElementDiv,
    // State#3499:
    //   [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield . BIT_AND EqualityExpression_Yield]*
    //   [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield BIT_XOR BitwiseANDExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3500:
    //   [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    //   [CoalesceExpression_Yield -> CoalesceExpressionHead_Yield NULLISH BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3501:
    //   [AsyncArrowFunction_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#3502:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield EQ RelationalExpression_Yield .]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // State#3503:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield EQ_STRICT RelationalExpression_Yield .]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // State#3504:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield NE RelationalExpression_Yield .]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // State#3505:
    //   [EqualityExpression_Yield -> EqualityExpression_Yield NE_STRICT RelationalExpression_Yield .]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    //   [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // State#3506:
    //   [Expression_Yield -> Expression_Yield COMMA AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3507:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3508:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3509:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3510:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3511:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AND_ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3512:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3513:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3514:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3515:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3516:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield OR_ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3517:
    //   [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AssignmentOperator AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3518:
    //   [LexicalBinding_Yield -> BindingIdentifier_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // State#3519:
    //   [BindingList_Yield -> BindingList_Yield COMMA . LexicalBinding_Yield]*
    Goal::InputElementDiv,
    // State#3520:
    //   [LexicalDeclaration_Yield -> LetOrConst BindingList_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3521:
    //   [LexicalBinding_Yield -> BindingPattern_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // State#3522:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3523:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3524:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3525:
    //   [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    //   [LogicalANDExpression_Yield -> LogicalANDExpression_Yield AND BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3526:
    //   [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    //   [LogicalANDExpression_Yield -> BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3527:
    //   [LogicalANDExpression_Yield -> LogicalANDExpression_Yield . AND BitwiseORExpression_Yield]*
    //   [LogicalORExpression_Yield -> LogicalORExpression_Yield OR LogicalANDExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3528:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield GT ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // State#3529:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield GTE ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // State#3530:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield INSTANCEOF ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // State#3531:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield LT ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // State#3532:
    //   [RelationalExpression_Yield -> RelationalExpression_Yield LTE ShiftExpression_Yield .]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    //   [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // State#3533:
    //   [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL AssignmentExpression_In_Yield . COLON AssignmentExpression_Yield]*
    Goal::InputElementDiv,
    // State#3534:
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3535:
    //   [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3536:
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return . ELSE Statement_Yield_Return]*
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return . !~[ELSE]]*
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // State#3537:
    //   [CaseBlock_Yield_Return -> LBRACE . RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE . CaseClauses_Yield_Return RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE . CaseClauses_Yield_Return DefaultClause_Yield_Return RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE . CaseClauses_Yield_Return DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE . DefaultClause_Yield_Return RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE . DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3538:
    //   [SwitchStatement_Yield_Return -> SWITCH LPAREN Expression_In_Yield RPAREN CaseBlock_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3539:
    //   [CatchParameter_Yield -> BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // State#3540:
    //   [CatchParameter_Yield -> BindingPattern_Yield .]*
    Goal::InputElementDiv,
    // State#3541:
    //   [Catch_Yield_Return -> CATCH LPAREN CatchParameter_Yield . RPAREN Block_Yield_Return]*
    Goal::InputElementDiv,
    // State#3542:
    //   [WhileStatement_Yield_Return -> WHILE LPAREN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3543:
    //   [WithStatement_Yield_Return -> WITH LPAREN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3544:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3545:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3546:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // State#3547:
    //   [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3548:
    //   [CaseClause_Return -> CASE Expression_In COLON StatementList_Return .]*
    //   [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // State#3549:
    //   [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return CaseClauses_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3550:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3551:
    //   [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3552:
    //   [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3553:
    //   [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3554:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3555:
    //   [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3556:
    //   [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3557:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3558:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3559:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // State#3560:
    //   [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3561:
    //   [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3562:
    //   [CaseClause_Await_Return -> CASE Expression_In_Await COLON StatementList_Await_Return .]*
    //   [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // State#3563:
    //   [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return CaseClauses_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3564:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3565:
    //   [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3566:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3567:
    //   [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3568:
    //   [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3569:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3570:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingIdentifier_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3571:
    //   [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingPattern_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // State#3572:
    //   [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3573:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // State#3574:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    //   [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // State#3575:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3576:
    //   [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await . RPAREN SEMI_COLON]*
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#3577:
    //   [ForBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3578:
    //   [ForBinding_Yield_Await -> BindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3579:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3580:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3581:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3582:
    //   [AsyncArrowFunction_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // State#3583:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3584:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3585:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3586:
    //   [Initializer_Yield_Await -> ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3587:
    //   [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3588:
    //   [VariableDeclaration_Yield_Await -> BindingPattern_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3589:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3590:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3591:
    //   [VariableDeclarationList_Yield_Await -> VariableDeclarationList_Yield_Await COMMA . VariableDeclaration_Yield_Await]*
    Goal::InputElementDiv,
    // State#3592:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3593:
    //   [YieldExpression_Await -> YIELD MUL AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3594:
    //   [ArrowFunction_Yield_Await -> ArrowParameters_Yield_Await ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // State#3595:
    //   [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await BIT_AND EqualityExpression_Yield_Await .]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ RelationalExpression_Yield_Await]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ_STRICT RelationalExpression_Yield_Await]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE RelationalExpression_Yield_Await]*
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE_STRICT RelationalExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3596:
    //   [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await BIT_OR BitwiseXORExpression_Yield_Await .]*
    //   [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await . BIT_XOR BitwiseANDExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3597:
    //   [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await . BIT_AND EqualityExpression_Yield_Await]*
    //   [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await BIT_XOR BitwiseANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3598:
    //   [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    //   [CoalesceExpression_Yield_Await -> CoalesceExpressionHead_Yield_Await NULLISH BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3599:
    //   [AsyncArrowFunction_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#3600:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ RelationalExpression_Yield_Await .]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3601:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ_STRICT RelationalExpression_Yield_Await .]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3602:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE RelationalExpression_Yield_Await .]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3603:
    //   [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE_STRICT RelationalExpression_Yield_Await .]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3604:
    //   [Expression_Yield_Await -> Expression_Yield_Await COMMA AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3605:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3606:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3607:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3608:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3609:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3610:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3611:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3612:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3613:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3614:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3615:
    //   [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3616:
    //   [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3617:
    //   [BindingList_Yield_Await -> BindingList_Yield_Await COMMA . LexicalBinding_Yield_Await]*
    Goal::InputElementDiv,
    // State#3618:
    //   [LexicalDeclaration_Yield_Await -> LetOrConst BindingList_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3619:
    //   [LexicalBinding_Yield_Await -> BindingPattern_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3620:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3621:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3622:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3623:
    //   [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    //   [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await AND BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3624:
    //   [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    //   [LogicalANDExpression_Yield_Await -> BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3625:
    //   [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await . AND BitwiseORExpression_Yield_Await]*
    //   [LogicalORExpression_Yield_Await -> LogicalORExpression_Yield_Await OR LogicalANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3626:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GT ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3627:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GTE ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3628:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await INSTANCEOF ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3629:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LT ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3630:
    //   [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LTE ShiftExpression_Yield_Await .]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    //   [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3631:
    //   [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await . COLON AssignmentExpression_Yield_Await]*
    Goal::InputElementDiv,
    // State#3632:
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3633:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3634:
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return . ELSE Statement_Yield_Await_Return]*
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return . !~[ELSE]]*
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // State#3635:
    //   [CaseBlock_Yield_Await_Return -> LBRACE . RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE . CaseClauses_Yield_Await_Return RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE . CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE . CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE . DefaultClause_Yield_Await_Return RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE . DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3636:
    //   [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN Expression_In_Yield_Await RPAREN CaseBlock_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3637:
    //   [CatchParameter_Yield_Await -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3638:
    //   [CatchParameter_Yield_Await -> BindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3639:
    //   [Catch_Yield_Await_Return -> CATCH LPAREN CatchParameter_Yield_Await . RPAREN Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3640:
    //   [WhileStatement_Yield_Await_Return -> WHILE LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3641:
    //   [WithStatement_Yield_Await_Return -> WITH LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3642:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3643:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3644:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3645:
    //   [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3646:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3647:
    //   [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3648:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3649:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3650:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3651:
    //   [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // State#3652:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3653:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3654:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3655:
    //   [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3656:
    //   [CaseClause_Await -> CASE Expression_In_Await COLON .]*
    //   [CaseClause_Await -> CASE Expression_In_Await COLON . StatementList_Await]*
    Goal::InputElementRegExp,
    // State#3657:
    //   [DefaultClause_Await -> DEFAULT COLON StatementList_Await .]*
    //   [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // State#3658:
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await RBRACE .]*
    Goal::InputElementRegExp,
    // State#3659:
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await CaseClauses_Await . RBRACE]*
    //   [CaseClauses_Await -> CaseClauses_Await . CaseClause_Await]*
    Goal::InputElementDiv,
    // State#3660:
    //   [CaseBlock_Await -> LBRACE DefaultClause_Await CaseClauses_Await RBRACE .]*
    Goal::InputElementRegExp,
    // State#3661:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3662:
    //   [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3663:
    //   [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3664:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3665:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3666:
    //   [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3667:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3668:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3669:
    //   [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN Expression_In_Yield RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3670:
    //   [AsyncArrowFunction_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#3671:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3672:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3673:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3674:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3675:
    //   [Initializer_Yield -> ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3676:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3677:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3678:
    //   [VariableDeclaration_Yield -> BindingIdentifier_Yield .]*
    //   [VariableDeclaration_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3679:
    //   [VariableDeclaration_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3680:
    //   [VariableDeclarationList_Yield -> VariableDeclarationList_Yield COMMA VariableDeclaration_Yield .]*
    Goal::InputElementDiv,
    // State#3681:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3682:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3683:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3684:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3685:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3686:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3687:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3688:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3689:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3690:
    //   [LexicalBinding_Yield -> BindingIdentifier_Yield .]*
    //   [LexicalBinding_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3691:
    //   [LexicalBinding_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // State#3692:
    //   [BindingList_Yield -> BindingList_Yield COMMA LexicalBinding_Yield .]*
    Goal::InputElementDiv,
    // State#3693:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3694:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3695:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3696:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3697:
    //   [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL AssignmentExpression_In_Yield COLON . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // State#3698:
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3699:
    //   [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#3700:
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return ELSE . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3701:
    //   [CaseClause_Yield_Return -> CASE . Expression_In_Yield COLON]*
    //   [CaseClause_Yield_Return -> CASE . Expression_In_Yield COLON StatementList_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3702:
    //   [DefaultClause_Yield_Return -> DEFAULT . COLON]*
    //   [DefaultClause_Yield_Return -> DEFAULT . COLON StatementList_Yield_Return]*
    Goal::InputElementDiv,
    // State#3703:
    //   [CaseBlock_Yield_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#3704:
    //   [CaseClauses_Yield_Return -> CaseClause_Yield_Return .]*
    Goal::InputElementDiv,
    // State#3705:
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return . RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return . DefaultClause_Yield_Return RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return . DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE]*
    //   [CaseClauses_Yield_Return -> CaseClauses_Yield_Return . CaseClause_Yield_Return]*
    Goal::InputElementDiv,
    // State#3706:
    //   [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return . RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return . CaseClauses_Yield_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3707:
    //   [Catch_Yield_Return -> CATCH LPAREN CatchParameter_Yield RPAREN . Block_Yield_Return]*
    Goal::InputElementDiv,
    // State#3708:
    //   [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // State#3709:
    //   [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3710:
    //   [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3711:
    //   [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3712:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3713:
    //   [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3714:
    //   [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3715:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3716:
    //   [FunctionStatementList -> () .]*
    //   [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3717:
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3718:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3719:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // State#3720:
    //   [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // State#3721:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3722:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3723:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3724:
    //   [AsyncArrowFunction_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // State#3725:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3726:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3727:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3728:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3729:
    //   [Initializer_Yield_Await -> ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3730:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3731:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3732:
    //   [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3733:
    //   [VariableDeclaration_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3734:
    //   [VariableDeclarationList_Yield_Await -> VariableDeclarationList_Yield_Await COMMA VariableDeclaration_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3735:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3736:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3737:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3738:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3739:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3740:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3741:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3742:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3743:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3744:
    //   [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    //   [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3745:
    //   [LexicalBinding_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // State#3746:
    //   [BindingList_Yield_Await -> BindingList_Yield_Await COMMA LexicalBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3747:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3748:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3749:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3750:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3751:
    //   [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // State#3752:
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3753:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    //   [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // State#3754:
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3755:
    //   [CaseClause_Yield_Await_Return -> CASE . Expression_In_Yield_Await COLON]*
    //   [CaseClause_Yield_Await_Return -> CASE . Expression_In_Yield_Await COLON StatementList_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3756:
    //   [DefaultClause_Yield_Await_Return -> DEFAULT . COLON]*
    //   [DefaultClause_Yield_Await_Return -> DEFAULT . COLON StatementList_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3757:
    //   [CaseBlock_Yield_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // State#3758:
    //   [CaseClauses_Yield_Await_Return -> CaseClause_Yield_Await_Return .]*
    Goal::InputElementDiv,
    // State#3759:
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return . RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return . DefaultClause_Yield_Await_Return RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return . DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE]*
    //   [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return . CaseClause_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3760:
    //   [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return . RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return . CaseClauses_Yield_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3761:
    //   [Catch_Yield_Await_Return -> CATCH LPAREN CatchParameter_Yield_Await RPAREN . Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3762:
    //   [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3763:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3764:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3765:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // State#3766:
    //   [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3767:
    //   [CaseClause_Await -> CASE Expression_In_Await COLON StatementList_Await .]*
    //   [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // State#3768:
    //   [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await CaseClauses_Await RBRACE .]*
    Goal::InputElementRegExp,
    // State#3769:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3770:
    //   [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3771:
    //   [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3772:
    //   [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3773:
    //   [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3774:
    //   [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3775:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3776:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3777:
    //   [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN Expression_In_Yield RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3778:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3779:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3780:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3781:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3782:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3783:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3784:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3785:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3786:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3787:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3788:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3789:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3790:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3791:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3792:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3793:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3794:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3795:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3796:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3797:
    //   [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // State#3798:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3799:
    //   [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3800:
    //   [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return ELSE Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3801:
    //   [CaseClause_Yield_Return -> CASE Expression_In_Yield . COLON]*
    //   [CaseClause_Yield_Return -> CASE Expression_In_Yield . COLON StatementList_Yield_Return]*
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // State#3802:
    //   [DefaultClause_Yield_Return -> DEFAULT COLON .]*
    //   [DefaultClause_Yield_Return -> DEFAULT COLON . StatementList_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3803:
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3804:
    //   [CaseClauses_Yield_Return -> CaseClauses_Yield_Return CaseClause_Yield_Return .]*
    Goal::InputElementDiv,
    // State#3805:
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return . RBRACE]*
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return . CaseClauses_Yield_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3806:
    //   [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3807:
    //   [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return CaseClauses_Yield_Return . RBRACE]*
    //   [CaseClauses_Yield_Return -> CaseClauses_Yield_Return . CaseClause_Yield_Return]*
    Goal::InputElementDiv,
    // State#3808:
    //   [Catch_Yield_Return -> CATCH LPAREN CatchParameter_Yield RPAREN Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3809:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3810:
    //   [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3811:
    //   [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3812:
    //   [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3813:
    //   [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3814:
    //   [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3815:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // State#3816:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    //   [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3817:
    //   [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // State#3818:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3819:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3820:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3821:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3822:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3823:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3824:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3825:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3826:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3827:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3828:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3829:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3830:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3831:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3832:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3833:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3834:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3835:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3836:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3837:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3838:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3839:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3840:
    //   [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // State#3841:
    //   [FunctionStatementList_Yield -> () .]*
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // State#3842:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3843:
    //   [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3844:
    //   [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await . COLON]*
    //   [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await . COLON StatementList_Yield_Await_Return]*
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // State#3845:
    //   [DefaultClause_Yield_Await_Return -> DEFAULT COLON .]*
    //   [DefaultClause_Yield_Await_Return -> DEFAULT COLON . StatementList_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3846:
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3847:
    //   [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return CaseClause_Yield_Await_Return .]*
    Goal::InputElementDiv,
    // State#3848:
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return . RBRACE]*
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return . CaseClauses_Yield_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // State#3849:
    //   [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3850:
    //   [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return . RBRACE]*
    //   [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return . CaseClause_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3851:
    //   [Catch_Yield_Await_Return -> CATCH LPAREN CatchParameter_Yield_Await RPAREN Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3852:
    //   [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // State#3853:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3854:
    //   [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3855:
    //   [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3856:
    //   [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3857:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3858:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3859:
    //   [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3860:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3861:
    //   [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3862:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3863:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3864:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3865:
    //   [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // State#3866:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3867:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3868:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3869:
    //   [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3870:
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3871:
    //   [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3872:
    //   [CaseClause_Yield_Return -> CASE Expression_In_Yield COLON .]*
    //   [CaseClause_Yield_Return -> CASE Expression_In_Yield COLON . StatementList_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3873:
    //   [DefaultClause_Yield_Return -> DEFAULT COLON StatementList_Yield_Return .]*
    //   [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3874:
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3875:
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return CaseClauses_Yield_Return . RBRACE]*
    //   [CaseClauses_Yield_Return -> CaseClauses_Yield_Return . CaseClause_Yield_Return]*
    Goal::InputElementDiv,
    // State#3876:
    //   [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3877:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3878:
    //   [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3879:
    //   [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3880:
    //   [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3881:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    //   [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // State#3882:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3883:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3884:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3885:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3886:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3887:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3888:
    //   [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3889:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3890:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3891:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3892:
    //   [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3893:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3894:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3895:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3896:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3897:
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3898:
    //   [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3899:
    //   [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await COLON .]*
    //   [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await COLON . StatementList_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3900:
    //   [DefaultClause_Yield_Await_Return -> DEFAULT COLON StatementList_Yield_Await_Return .]*
    //   [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3901:
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3902:
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return . RBRACE]*
    //   [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return . CaseClause_Yield_Await_Return]*
    Goal::InputElementDiv,
    // State#3903:
    //   [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3904:
    //   [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3905:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3906:
    //   [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3907:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3908:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3909:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3910:
    //   [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3911:
    //   [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3912:
    //   [CaseClause_Yield_Return -> CASE Expression_In_Yield COLON StatementList_Yield_Return .]*
    //   [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // State#3913:
    //   [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3914:
    //   [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // State#3915:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // State#3916:
    //   [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3917:
    //   [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3918:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3919:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3920:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3921:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // State#3922:
    //   [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3923:
    //   [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await COLON StatementList_Yield_Await_Return .]*
    //   [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // State#3924:
    //   [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // State#3925:
    //   [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3926:
    //   [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // State#3927:
    //   [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // State#3928:
    //   [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
];
