// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated by using lalr/lexical_goal.rs.hbs.

use crate::lexer::Goal;

pub const TABLE: [Goal; 3825] = [
    // [Script -> () .]*
    // [^ -> . Script]*
    Goal::InputElementRegExp,
    // [UnaryExpression -> ADD . UnaryExpression]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    // [AsyncFunctionDeclaration -> ASYNC . FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration -> ASYNC . FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier -> AWAIT .]*
    // [IdentifierReference -> AWAIT .]*
    // [LabelIdentifier -> AWAIT .]*
    Goal::InputElementDiv,
    // [UnaryExpression -> BIT_NOT . UnaryExpression]*
    Goal::InputElementRegExp,
    // [BreakStatement -> BREAK . SEMI_COLON]*
    // [BreakStatement -> BREAK . LabelIdentifier SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassDeclaration -> CLASS . BindingIdentifier ClassTail]*
    Goal::InputElementDiv,
    // [LetOrConst -> CONST .]*
    Goal::InputElementDiv,
    // [ContinueStatement -> CONTINUE . SEMI_COLON]*
    // [ContinueStatement -> CONTINUE . LabelIdentifier SEMI_COLON]*
    Goal::InputElementDiv,
    // [DebuggerStatement -> DEBUGGER . SEMI_COLON]*
    Goal::InputElementDiv,
    // [UpdateExpression -> DEC . UnaryExpression]*
    Goal::InputElementRegExp,
    // [UnaryExpression -> DELETE . UnaryExpression]*
    Goal::InputElementRegExp,
    // [DoWhileStatement -> DO . Statement WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [BooleanLiteral -> FALSE .]*
    Goal::InputElementTemplateTail,
    // [ForInOfStatement -> FOR . LPAREN VAR ForBinding IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR . LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR . LPAREN ForDeclaration IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR . LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR . LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR . LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [FunctionDeclaration -> FUNCTION . BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    // [GeneratorDeclaration -> FUNCTION . MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement -> IF . LPAREN Expression_In RPAREN Statement ELSE Statement]*
    // [IfStatement -> IF . LPAREN Expression_In RPAREN Statement !~[ELSE]]*
    Goal::InputElementDiv,
    // [ImportCall -> IMPORT . LPAREN AssignmentExpression_In RPAREN]*
    // [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // [UpdateExpression -> INC . UnaryExpression]*
    Goal::InputElementRegExp,
    // [Identifier -> IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [Block -> LBRACE . RBRACE]*
    // [Block -> LBRACE . StatementList RBRACE]*
    Goal::InputElementRegExp,
    // [ArrayLiteral -> LBRACK . RBRACK]*
    // [ArrayLiteral -> LBRACK . ElementList COMMA RBRACK]*
    // [ArrayLiteral -> LBRACK . ElementList COMMA Elision RBRACK]*
    // [ArrayLiteral -> LBRACK . ElementList RBRACK]*
    // [ArrayLiteral -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // [LetOrConst -> LET .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . ELLIPSIS BindingIdentifier RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . ELLIPSIS BindingPattern RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In COMMA ELLIPSIS BindingIdentifier RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In COMMA ELLIPSIS BindingPattern RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN . Expression_In RPAREN]*
    Goal::InputElementRegExp,
    // [MemberExpression -> NEW . MemberExpression Arguments]*
    // [NewExpression -> NEW . NewExpression]*
    // [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // [UnaryExpression -> NOT . UnaryExpression]*
    Goal::InputElementRegExp,
    // [NullLiteral -> NULL .]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [Literal -> NumericLiteral .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> PrivateIdentifier . IN ShiftExpression]*
    Goal::InputElementDiv,
    // [PrimaryExpression -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // [EmptyStatement -> SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [UnaryExpression -> SUB . UnaryExpression]*
    Goal::InputElementRegExp,
    // [SuperCall -> SUPER . Arguments]*
    // [SuperProperty -> SUPER . DOT IdentifierName]*
    // [SuperProperty -> SUPER . LBRACK Expression_In RBRACK]*
    Goal::InputElementDiv,
    // [SwitchStatement -> SWITCH . LPAREN Expression_In RPAREN CaseBlock]*
    Goal::InputElementDiv,
    // [Literal -> StringLiteral .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> THIS .]*
    Goal::InputElementTemplateTail,
    // [ThrowStatement -> THROW . Expression_In SEMI_COLON]*
    Goal::InputElementRegExp,
    // [BooleanLiteral -> TRUE .]*
    Goal::InputElementTemplateTail,
    // [TryStatement -> TRY . Block Catch]*
    // [TryStatement -> TRY . Block Catch Finally]*
    // [TryStatement -> TRY . Block Finally]*
    Goal::InputElementDiv,
    // [UnaryExpression -> TYPEOF . UnaryExpression]*
    Goal::InputElementRegExp,
    // [SubstitutionTemplate -> TemplateHead . Expression_In TemplateSpans]*
    Goal::InputElementRegExp,
    // [VariableStatement -> VAR . VariableDeclarationList_In SEMI_COLON]*
    Goal::InputElementDiv,
    // [UnaryExpression -> VOID . UnaryExpression]*
    Goal::InputElementRegExp,
    // [WhileStatement -> WHILE . LPAREN Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [WithStatement -> WITH . LPAREN Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [BindingIdentifier -> YIELD .]*
    // [IdentifierReference -> YIELD .]*
    // [LabelIdentifier -> YIELD .]*
    Goal::InputElementDiv,
    // [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    // [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    // [ShiftExpression -> AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> ArrayLiteral .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In -> ArrowFunction_In .]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In -> ArrowParameters . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // [Expression_In -> AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In -> AsyncArrowFunction_In .]*
    Goal::InputElementTemplateTail,
    // [HoistableDeclaration -> AsyncFunctionDeclaration .]*
    Goal::InputElementRegExp,
    // [HoistableDeclaration -> AsyncGeneratorDeclaration .]*
    Goal::InputElementRegExp,
    // [ArrowParameters -> BindingIdentifier .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_In -> BitwiseANDExpression_In . BIT_AND EqualityExpression_In]*
    // [BitwiseXORExpression_In -> BitwiseANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    // [CoalesceExpressionHead_In -> BitwiseORExpression_In .]*
    // [LogicalANDExpression_In -> BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In -> BitwiseXORExpression_In .]*
    // [BitwiseXORExpression_In -> BitwiseXORExpression_In . BIT_XOR BitwiseANDExpression_In]*
    Goal::InputElementTemplateTail,
    // [BlockStatement -> Block .]*
    Goal::InputElementRegExp,
    // [Statement -> BlockStatement .]*
    Goal::InputElementRegExp,
    // [Literal -> BooleanLiteral .]*
    Goal::InputElementTemplateTail,
    // [Statement -> BreakStatement .]*
    Goal::InputElementRegExp,
    // [Statement -> BreakableStatement .]*
    Goal::InputElementRegExp,
    // [CallExpression -> CallExpression . DOT IdentifierName]*
    // [CallExpression -> CallExpression . DOT PrivateIdentifier]*
    // [CallExpression -> CallExpression . LBRACK Expression_In RBRACK]*
    // [CallExpression -> CallExpression . Arguments]*
    // [CallExpression -> CallExpression . TemplateLiteral_Tagged]*
    // [LeftHandSideExpression -> CallExpression .]*
    // [OptionalExpression -> CallExpression . OptionalChain]*
    Goal::InputElementTemplateTail,
    // [Declaration -> ClassDeclaration .]*
    Goal::InputElementRegExp,
    // [CoalesceExpression_In -> CoalesceExpressionHead_In . NULLISH BitwiseORExpression_In]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead_In -> CoalesceExpression_In .]*
    // [ShortCircuitExpression_In -> CoalesceExpression_In .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In -> ConditionalExpression_In .]*
    Goal::InputElementTemplateTail,
    // [Statement -> ContinueStatement .]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In -> CoverCallExpressionAndAsyncArrowHead . ARROW AsyncConciseBody_In]*
    // [CallExpression -> CoverCallExpressionAndAsyncArrowHead .]*
    Goal::InputElementTemplateTail,
    // [ArrowParameters -> CoverParenthesizedExpressionAndArrowParameterList .]*
    // [PrimaryExpression -> CoverParenthesizedExpressionAndArrowParameterList .]*
    Goal::InputElementTemplateTail,
    // [Statement -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // [StatementListItem -> Declaration .]*
    Goal::InputElementRegExp,
    // [IterationStatement -> DoWhileStatement .]*
    Goal::InputElementRegExp,
    // [Statement -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // [BitwiseANDExpression_In -> EqualityExpression_In .]*
    // [EqualityExpression_In -> EqualityExpression_In . EQ RelationalExpression_In]*
    // [EqualityExpression_In -> EqualityExpression_In . EQ_STRICT RelationalExpression_In]*
    // [EqualityExpression_In -> EqualityExpression_In . NE RelationalExpression_In]*
    // [EqualityExpression_In -> EqualityExpression_In . NE_STRICT RelationalExpression_In]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeExpression -> ExponentiationExpression .]*
    Goal::InputElementTemplateTail,
    // [Statement -> ExpressionStatement .]*
    Goal::InputElementRegExp,
    // [ExpressionStatement -> Expression_In . SEMI_COLON]*
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [IterationStatement -> ForInOfStatement .]*
    Goal::InputElementRegExp,
    // [IterationStatement -> ForStatement .]*
    Goal::InputElementRegExp,
    // [HoistableDeclaration -> FunctionDeclaration .]*
    Goal::InputElementRegExp,
    // [HoistableDeclaration -> GeneratorDeclaration .]*
    Goal::InputElementRegExp,
    // [Declaration -> HoistableDeclaration .]*
    Goal::InputElementRegExp,
    // [BindingIdentifier -> Identifier .]*
    // [IdentifierReference -> Identifier .]*
    // [LabelIdentifier -> Identifier .]*
    Goal::InputElementDiv,
    // [PrimaryExpression -> IdentifierReference .]*
    Goal::InputElementTemplateTail,
    // [Statement -> IfStatement .]*
    Goal::InputElementRegExp,
    // [CallExpression -> ImportCall .]*
    Goal::InputElementTemplateTail,
    // [MetaProperty -> ImportMeta .]*
    Goal::InputElementTemplateTail,
    // [BreakableStatement -> IterationStatement .]*
    Goal::InputElementRegExp,
    // [LabelledStatement -> LabelIdentifier . COLON LabelledItem]*
    Goal::InputElementDiv,
    // [Statement -> LabelledStatement .]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression_In]*
    // [AssignmentExpression_In -> LeftHandSideExpression . ASSIGN AssignmentExpression_In]*
    // [AssignmentExpression_In -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression_In]*
    // [AssignmentExpression_In -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression_In]*
    // [AssignmentExpression_In -> LeftHandSideExpression . AssignmentOperator AssignmentExpression_In]*
    // [UpdateExpression -> LeftHandSideExpression .]*
    // [UpdateExpression -> LeftHandSideExpression . DEC]*
    // [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementTemplateTail,
    // [LexicalDeclaration_In -> LetOrConst . BindingList_In SEMI_COLON]*
    Goal::InputElementDiv,
    // [Declaration -> LexicalDeclaration_In .]*
    Goal::InputElementRegExp,
    // [PrimaryExpression -> Literal .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In -> LogicalANDExpression_In . AND BitwiseORExpression_In]*
    // [LogicalORExpression_In -> LogicalANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // [LogicalORExpression_In -> LogicalORExpression_In . OR LogicalANDExpression_In]*
    // [ShortCircuitExpression_In -> LogicalORExpression_In .]*
    Goal::InputElementTemplateTail,
    // [CoverCallExpressionAndAsyncArrowHead -> MemberExpression . Arguments]*
    // [MemberExpression -> MemberExpression . DOT IdentifierName]*
    // [MemberExpression -> MemberExpression . DOT PrivateIdentifier]*
    // [MemberExpression -> MemberExpression . LBRACK Expression_In RBRACK]*
    // [MemberExpression -> MemberExpression . TemplateLiteral_Tagged]*
    // [NewExpression -> MemberExpression .]*
    // [OptionalExpression -> MemberExpression . OptionalChain]*
    Goal::InputElementTemplateTail,
    // [MemberExpression -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression -> MultiplicativeExpression .]*
    // [MultiplicativeExpression -> MultiplicativeExpression . MultiplicativeOperator ExponentiationExpression]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression -> NewExpression .]*
    Goal::InputElementTemplateTail,
    // [MetaProperty -> NewTarget .]*
    Goal::InputElementTemplateTail,
    // [Literal -> NullLiteral .]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression -> OptionalExpression .]*
    // [OptionalExpression -> OptionalExpression . OptionalChain]*
    Goal::InputElementTemplateTail,
    // [MemberExpression -> PrimaryExpression .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In -> RelationalExpression_In .]*
    // [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // [^ -> Script .]*
    Goal::InputElementDiv,
    // [Script -> ScriptBody .]*
    Goal::InputElementDiv,
    // [RelationalExpression_In -> ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In -> ShortCircuitExpression_In .]*
    // [ConditionalExpression_In -> ShortCircuitExpression_In . CONDITIONAL AssignmentExpression_In COLON AssignmentExpression_In]*
    Goal::InputElementTemplateTail,
    // [StatementListItem -> Statement .]*
    Goal::InputElementRegExp,
    // [ScriptBody -> StatementList .]*
    // [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // [StatementList -> StatementListItem .]*
    Goal::InputElementRegExp,
    // [TemplateLiteral -> SubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [CallExpression -> SuperCall .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression -> SuperProperty .]*
    Goal::InputElementTemplateTail,
    // [BreakableStatement -> SwitchStatement .]*
    Goal::InputElementRegExp,
    // [PrimaryExpression -> TemplateLiteral .]*
    Goal::InputElementTemplateTail,
    // [Statement -> ThrowStatement .]*
    Goal::InputElementRegExp,
    // [Statement -> TryStatement .]*
    Goal::InputElementRegExp,
    // [ExponentiationExpression -> UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [ExponentiationExpression -> UpdateExpression . EXP ExponentiationExpression]*
    // [UnaryExpression -> UpdateExpression .]*
    Goal::InputElementTemplateTail,
    // [Statement -> VariableStatement .]*
    Goal::InputElementRegExp,
    // [IterationStatement -> WhileStatement .]*
    Goal::InputElementRegExp,
    // [Statement -> WithStatement .]*
    Goal::InputElementRegExp,
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [IdentifierReference -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // [ClassExpression -> CLASS . BindingIdentifier ClassTail]*
    // [ClassExpression -> CLASS . ClassTail]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    // [FunctionExpression -> FUNCTION . BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    // [GeneratorExpression -> FUNCTION . MUL LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    // [GeneratorExpression -> FUNCTION . MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ObjectLiteral -> LBRACE . RBRACE]*
    // [ObjectLiteral -> LBRACE . PropertyDefinitionList COMMA RBRACE]*
    // [ObjectLiteral -> LBRACE . PropertyDefinitionList RBRACE]*
    Goal::InputElementDiv,
    // [IdentifierReference -> YIELD .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> ClassExpression .]*
    Goal::InputElementTemplateTail,
    // [CallExpression -> CoverCallExpressionAndAsyncArrowHead .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> CoverParenthesizedExpressionAndArrowParameterList .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [IdentifierReference -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression -> LeftHandSideExpression .]*
    // [UpdateExpression -> LeftHandSideExpression . DEC]*
    // [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression -> ObjectLiteral .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression -> ADD UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression -> UpdateExpression .]*
    Goal::InputElementTemplateTail,
    // [BindingIdentifier_Await -> AWAIT .]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION . BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION . MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Await -> YIELD .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [AsyncArrowBindingIdentifier -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Await -> Identifier .]*
    Goal::InputElementDiv,
    // [UnaryExpression -> BIT_NOT UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [LabelIdentifier -> AWAIT .]*
    Goal::InputElementDiv,
    // [BreakStatement -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LabelIdentifier -> YIELD .]*
    Goal::InputElementDiv,
    // [LabelIdentifier -> Identifier .]*
    Goal::InputElementDiv,
    // [BreakStatement -> BREAK LabelIdentifier . SEMI_COLON]*
    Goal::InputElementDiv,
    // [BindingIdentifier -> AWAIT .]*
    Goal::InputElementDiv,
    // [BindingIdentifier -> YIELD .]*
    Goal::InputElementDiv,
    // [ClassDeclaration -> CLASS BindingIdentifier . ClassTail]*
    Goal::InputElementDiv,
    // [BindingIdentifier -> Identifier .]*
    Goal::InputElementDiv,
    // [ContinueStatement -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ContinueStatement -> CONTINUE LabelIdentifier . SEMI_COLON]*
    Goal::InputElementDiv,
    // [DebuggerStatement -> DEBUGGER SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [UpdateExpression -> DEC UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression -> DELETE UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [DoWhileStatement -> DO Statement . WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN . VAR ForBinding IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN . VAR ForBinding OF AssignmentExpression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN . ForDeclaration IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN . ForDeclaration OF AssignmentExpression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN . LeftHandSideExpression IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN . LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . LexicalDeclaration SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration -> FUNCTION MUL . BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration -> FUNCTION BindingIdentifier . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement -> IF LPAREN . Expression_In RPAREN Statement ELSE Statement]*
    // [IfStatement -> IF LPAREN . Expression_In RPAREN Statement !~[ELSE]]*
    Goal::InputElementRegExp,
    // [ImportMeta -> IMPORT DOT . META]*
    Goal::InputElementDiv,
    // [ImportCall -> IMPORT LPAREN . AssignmentExpression_In RPAREN]*
    Goal::InputElementRegExp,
    // [UpdateExpression -> INC UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [Block -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [Block -> LBRACE StatementList . RBRACE]*
    // [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier -> AWAIT .]*
    // [IdentifierReference -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // [Elision -> COMMA .]*
    Goal::InputElementRegExp,
    // [SpreadElement -> ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [ArrayLiteral -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // [BindingIdentifier -> YIELD .]*
    // [IdentifierReference -> YIELD .]*
    Goal::InputElementTemplateTail,
    // [ElementList -> AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [ArrayLiteral -> LBRACK ElementList . COMMA RBRACK]*
    // [ArrayLiteral -> LBRACK ElementList . COMMA Elision RBRACK]*
    // [ArrayLiteral -> LBRACK ElementList . RBRACK]*
    // [ElementList -> ElementList . COMMA AssignmentExpression_In]*
    // [ElementList -> ElementList . COMMA Elision AssignmentExpression_In]*
    // [ElementList -> ElementList . COMMA Elision SpreadElement]*
    // [ElementList -> ElementList . COMMA SpreadElement]*
    Goal::InputElementDiv,
    // [ArrayLiteral -> LBRACK Elision . RBRACK]*
    // [ElementList -> Elision . AssignmentExpression_In]*
    // [ElementList -> Elision . SpreadElement]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [BindingIdentifier -> Identifier .]*
    // [IdentifierReference -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [ElementList -> SpreadElement .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS . BindingIdentifier RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS . BindingPattern RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . COMMA ELLIPSIS BindingIdentifier RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . COMMA ELLIPSIS BindingPattern RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In . RPAREN]*
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [NewTarget -> NEW DOT . TARGET]*
    Goal::InputElementDiv,
    // [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // [SuperProperty -> SUPER . DOT IdentifierName]*
    // [SuperProperty -> SUPER . LBRACK Expression_In RBRACK]*
    Goal::InputElementDiv,
    // [MemberExpression -> NEW MemberExpression . Arguments]*
    // [MemberExpression -> MemberExpression . DOT IdentifierName]*
    // [MemberExpression -> MemberExpression . DOT PrivateIdentifier]*
    // [MemberExpression -> MemberExpression . LBRACK Expression_In RBRACK]*
    // [MemberExpression -> MemberExpression . TemplateLiteral_Tagged]*
    // [NewExpression -> MemberExpression .]*
    Goal::InputElementTemplateTail,
    // [NewExpression -> NEW NewExpression .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression -> NOT UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> PrivateIdentifier IN . ShiftExpression]*
    Goal::InputElementRegExp,
    // [UnaryExpression -> SUB UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty -> SUPER DOT . IdentifierName]*
    Goal::InputElementDiv,
    // [SuperProperty -> SUPER LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // [Arguments -> LPAREN . RPAREN]*
    // [Arguments -> LPAREN . ArgumentList COMMA RPAREN]*
    // [Arguments -> LPAREN . ArgumentList RPAREN]*
    Goal::InputElementRegExp,
    // [SuperCall -> SUPER Arguments .]*
    Goal::InputElementTemplateTail,
    // [SwitchStatement -> SWITCH LPAREN . Expression_In RPAREN CaseBlock]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ThrowStatement -> THROW Expression_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // [TryStatement -> TRY Block . Catch]*
    // [TryStatement -> TRY Block . Catch Finally]*
    // [TryStatement -> TRY Block . Finally]*
    Goal::InputElementDiv,
    // [UnaryExpression -> TYPEOF UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [SubstitutionTemplate -> TemplateHead Expression_In . TemplateSpans]*
    Goal::InputElementTemplateTail,
    // [ObjectBindingPattern -> LBRACE . RBRACE]*
    // [ObjectBindingPattern -> LBRACE . BindingPropertyList COMMA RBRACE]*
    // [ObjectBindingPattern -> LBRACE . BindingPropertyList COMMA BindingRestProperty RBRACE]*
    // [ObjectBindingPattern -> LBRACE . BindingPropertyList RBRACE]*
    // [ObjectBindingPattern -> LBRACE . BindingRestProperty RBRACE]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK . RBRACK]*
    // [ArrayBindingPattern -> LBRACK . BindingElementList COMMA RBRACK]*
    // [ArrayBindingPattern -> LBRACK . BindingElementList COMMA BindingRestElement RBRACK]*
    // [ArrayBindingPattern -> LBRACK . BindingElementList COMMA Elision RBRACK]*
    // [ArrayBindingPattern -> LBRACK . BindingElementList COMMA Elision BindingRestElement RBRACK]*
    // [ArrayBindingPattern -> LBRACK . BindingElementList RBRACK]*
    // [ArrayBindingPattern -> LBRACK . BindingRestElement RBRACK]*
    // [ArrayBindingPattern -> LBRACK . Elision RBRACK]*
    // [ArrayBindingPattern -> LBRACK . Elision BindingRestElement RBRACK]*
    Goal::InputElementDiv,
    // [BindingPattern -> ArrayBindingPattern .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In -> BindingIdentifier .]*
    // [VariableDeclaration_In -> BindingIdentifier . Initializer_In]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In -> BindingPattern . Initializer_In]*
    Goal::InputElementDiv,
    // [BindingPattern -> ObjectBindingPattern .]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In -> VariableDeclarationList_In . COMMA VariableDeclaration_In]*
    // [VariableStatement -> VAR VariableDeclarationList_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In -> VariableDeclaration_In .]*
    Goal::InputElementDiv,
    // [UnaryExpression -> VOID UnaryExpression .]*
    Goal::InputElementTemplateTail,
    // [WhileStatement -> WHILE LPAREN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [WithStatement -> WITH LPAREN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [AdditiveExpression -> AdditiveExpression ADD . MultiplicativeExpression]*
    Goal::InputElementRegExp,
    // [AdditiveExpression -> AdditiveExpression SUB . MultiplicativeExpression]*
    Goal::InputElementRegExp,
    // [ArrowFunction_In -> ArrowParameters ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // [BitwiseANDExpression_In -> BitwiseANDExpression_In BIT_AND . EqualityExpression_In]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_In -> BitwiseORExpression_In BIT_OR . BitwiseXORExpression_In]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression_In -> BitwiseXORExpression_In BIT_XOR . BitwiseANDExpression_In]*
    Goal::InputElementRegExp,
    // [CallExpression -> CallExpression DOT . IdentifierName]*
    // [CallExpression -> CallExpression DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [CallExpression -> CallExpression LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // [TemplateLiteral_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OPTIONAL_CHAINING . IdentifierName]*
    // [OptionalChain -> OPTIONAL_CHAINING . LBRACK Expression_In RBRACK]*
    // [OptionalChain -> OPTIONAL_CHAINING . PrivateIdentifier]*
    // [OptionalChain -> OPTIONAL_CHAINING . Arguments]*
    // [OptionalChain -> OPTIONAL_CHAINING . TemplateLiteral_Tagged]*
    Goal::InputElementDiv,
    // [SubstitutionTemplate_Tagged -> TemplateHead . Expression_In TemplateSpans_Tagged]*
    Goal::InputElementRegExp,
    // [CallExpression -> CallExpression Arguments .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OptionalChain . DOT IdentifierName]*
    // [OptionalChain -> OptionalChain . DOT PrivateIdentifier]*
    // [OptionalChain -> OptionalChain . LBRACK Expression_In RBRACK]*
    // [OptionalChain -> OptionalChain . Arguments]*
    // [OptionalChain -> OptionalChain . TemplateLiteral_Tagged]*
    // [OptionalExpression -> CallExpression OptionalChain .]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral_Tagged -> SubstitutionTemplate_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CallExpression -> CallExpression TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CoalesceExpression_In -> CoalesceExpressionHead_In NULLISH . BitwiseORExpression_In]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In -> CoverCallExpressionAndAsyncArrowHead ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In -> EqualityExpression_In EQ . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In -> EqualityExpression_In EQ_STRICT . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In -> EqualityExpression_In NE . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In -> EqualityExpression_In NE_STRICT . RelationalExpression_In]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In COMMA . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [ExpressionStatement -> Expression_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LabelledStatement -> LabelIdentifier COLON . LabelledItem]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> ADD_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In -> LeftHandSideExpression AND_ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In -> LeftHandSideExpression ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> BIT_AND_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> BIT_OR_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> BIT_XOR_ASSIGN .]*
    Goal::InputElementRegExp,
    // [UpdateExpression -> LeftHandSideExpression DEC .]*
    Goal::InputElementTemplateTail,
    // [AssignmentOperator -> DIV_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> EXP_ASSIGN .]*
    Goal::InputElementRegExp,
    // [UpdateExpression -> LeftHandSideExpression INC .]*
    Goal::InputElementTemplateTail,
    // [AssignmentOperator -> MOD_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> MUL_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In -> LeftHandSideExpression NULLISH_ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In -> LeftHandSideExpression OR_ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> SAR_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> SHL_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> SHR_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentOperator -> SUB_ASSIGN .]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In -> LeftHandSideExpression AssignmentOperator . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In -> BindingIdentifier .]*
    // [LexicalBinding_In -> BindingIdentifier . Initializer_In]*
    Goal::InputElementDiv,
    // [BindingList_In -> BindingList_In . COMMA LexicalBinding_In]*
    // [LexicalDeclaration_In -> LetOrConst BindingList_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // [LexicalBinding_In -> BindingPattern . Initializer_In]*
    Goal::InputElementDiv,
    // [BindingList_In -> LexicalBinding_In .]*
    Goal::InputElementDiv,
    // [LogicalANDExpression_In -> LogicalANDExpression_In AND . BitwiseORExpression_In]*
    Goal::InputElementRegExp,
    // [LogicalORExpression_In -> LogicalORExpression_In OR . LogicalANDExpression_In]*
    Goal::InputElementRegExp,
    // [MemberExpression -> MemberExpression DOT . IdentifierName]*
    // [MemberExpression -> MemberExpression DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [MemberExpression -> MemberExpression LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // [CoverCallExpressionAndAsyncArrowHead -> MemberExpression Arguments .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OptionalChain . DOT IdentifierName]*
    // [OptionalChain -> OptionalChain . DOT PrivateIdentifier]*
    // [OptionalChain -> OptionalChain . LBRACK Expression_In RBRACK]*
    // [OptionalChain -> OptionalChain . Arguments]*
    // [OptionalChain -> OptionalChain . TemplateLiteral_Tagged]*
    // [OptionalExpression -> MemberExpression OptionalChain .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression -> MemberExpression TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeOperator -> DIV .]*
    Goal::InputElementRegExp,
    // [MultiplicativeOperator -> MOD .]*
    Goal::InputElementRegExp,
    // [MultiplicativeOperator -> MUL .]*
    Goal::InputElementRegExp,
    // [MultiplicativeExpression -> MultiplicativeExpression MultiplicativeOperator . ExponentiationExpression]*
    Goal::InputElementRegExp,
    // [OptionalChain -> OptionalChain . DOT IdentifierName]*
    // [OptionalChain -> OptionalChain . DOT PrivateIdentifier]*
    // [OptionalChain -> OptionalChain . LBRACK Expression_In RBRACK]*
    // [OptionalChain -> OptionalChain . Arguments]*
    // [OptionalChain -> OptionalChain . TemplateLiteral_Tagged]*
    // [OptionalExpression -> OptionalExpression OptionalChain .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> RelationalExpression_In GT . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In -> RelationalExpression_In GTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In -> RelationalExpression_In IN . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In -> RelationalExpression_In INSTANCEOF . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In -> RelationalExpression_In LT . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In -> RelationalExpression_In LTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // [ShiftExpression -> ShiftExpression SAR . AdditiveExpression]*
    Goal::InputElementRegExp,
    // [ShiftExpression -> ShiftExpression SHL . AdditiveExpression]*
    Goal::InputElementRegExp,
    // [ShiftExpression -> ShiftExpression SHR . AdditiveExpression]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL . AssignmentExpression_In COLON AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [StatementList -> StatementList StatementListItem .]*
    Goal::InputElementRegExp,
    // [ExponentiationExpression -> UpdateExpression EXP . ExponentiationExpression]*
    Goal::InputElementRegExp,
    // [AsyncFunctionExpression -> ASYNC FUNCTION . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC FUNCTION . BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC FUNCTION . MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC FUNCTION . MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassHeritage -> EXTENDS . LeftHandSideExpression]*
    Goal::InputElementRegExp,
    // [ClassTail -> LBRACE . RBRACE]*
    // [ClassTail -> LBRACE . ClassBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression -> CLASS BindingIdentifier . ClassTail]*
    Goal::InputElementDiv,
    // [ClassTail -> ClassHeritage . LBRACE RBRACE]*
    // [ClassTail -> ClassHeritage . LBRACE ClassBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression -> CLASS ClassTail .]*
    Goal::InputElementTemplateTail,
    // [FormalParameters -> () .]*
    // [FunctionExpression -> FUNCTION LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorExpression -> FUNCTION MUL . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    // [GeneratorExpression -> FUNCTION MUL . BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION BindingIdentifier . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod -> ASYNC . MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncMethod -> ASYNC . ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition -> ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [MethodDefinition -> GET . ClassElementName LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [Identifier -> IdentifierName .]*
    // [LiteralPropertyName -> IdentifierName .]*
    Goal::InputElementDiv,
    // [ComputedPropertyName -> LBRACK . AssignmentExpression_In RBRACK]*
    Goal::InputElementRegExp,
    // [GeneratorMethod -> MUL . ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [LiteralPropertyName -> NumericLiteral .]*
    Goal::InputElementDiv,
    // [ClassElementName -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // [ObjectLiteral -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // [MethodDefinition -> SET . ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [LiteralPropertyName -> StringLiteral .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> AsyncGeneratorMethod .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> AsyncMethod .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> ClassElementName . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyName -> ComputedPropertyName .]*
    Goal::InputElementDiv,
    // [PropertyDefinition -> CoverInitializedName .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> GeneratorMethod .]*
    Goal::InputElementDiv,
    // [CoverInitializedName -> IdentifierReference . Initializer_In]*
    // [PropertyDefinition -> IdentifierReference .]*
    Goal::InputElementDiv,
    // [PropertyName -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // [PropertyDefinition -> MethodDefinition .]*
    Goal::InputElementDiv,
    // [PropertyDefinitionList -> PropertyDefinition .]*
    Goal::InputElementDiv,
    // [ObjectLiteral -> LBRACE PropertyDefinitionList . COMMA RBRACE]*
    // [ObjectLiteral -> LBRACE PropertyDefinitionList . RBRACE]*
    // [PropertyDefinitionList -> PropertyDefinitionList . COMMA PropertyDefinition]*
    Goal::InputElementDiv,
    // [ClassElementName -> PropertyName .]*
    // [PropertyDefinition -> PropertyName . COLON AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL . BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [BreakStatement -> BREAK LabelIdentifier SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ClassDeclaration -> CLASS BindingIdentifier ClassTail .]*
    Goal::InputElementRegExp,
    // [ContinueStatement -> CONTINUE LabelIdentifier SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement -> DO Statement WHILE . LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN VAR . ForBinding IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN VAR . ForBinding OF AssignmentExpression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> ArrowFunction .]*
    Goal::InputElementDiv,
    // [ArrowFunction -> ArrowParameters . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // [Expression -> AssignmentExpression .]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> AsyncArrowFunction .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression -> BitwiseANDExpression . BIT_AND EqualityExpression]*
    // [BitwiseXORExpression -> BitwiseANDExpression .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    // [CoalesceExpressionHead -> BitwiseORExpression .]*
    // [LogicalANDExpression -> BitwiseORExpression .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression -> BitwiseXORExpression .]*
    // [BitwiseXORExpression -> BitwiseXORExpression . BIT_XOR BitwiseANDExpression]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead -> CoalesceExpression .]*
    // [ShortCircuitExpression -> CoalesceExpression .]*
    Goal::InputElementDiv,
    // [CoalesceExpression -> CoalesceExpressionHead . NULLISH BitwiseORExpression]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> ConditionalExpression .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction -> CoverCallExpressionAndAsyncArrowHead . ARROW AsyncConciseBody]*
    // [CallExpression -> CoverCallExpressionAndAsyncArrowHead .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression -> EqualityExpression .]*
    // [EqualityExpression -> EqualityExpression . EQ RelationalExpression]*
    // [EqualityExpression -> EqualityExpression . EQ_STRICT RelationalExpression]*
    // [EqualityExpression -> EqualityExpression . NE RelationalExpression]*
    // [EqualityExpression -> EqualityExpression . NE_STRICT RelationalExpression]*
    Goal::InputElementDiv,
    // [Expression -> Expression . COMMA AssignmentExpression]*
    // [ForStatement -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration . IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN ForDeclaration . OF AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . AssignmentOperator AssignmentExpression]*
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression . IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression . OF AssignmentExpression_In RPAREN Statement]*
    // [UpdateExpression -> LeftHandSideExpression .]*
    // [UpdateExpression -> LeftHandSideExpression . DEC]*
    // [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementDiv,
    // [ForDeclaration -> LetOrConst . ForBinding]*
    // [LexicalDeclaration -> LetOrConst . BindingList SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN LexicalDeclaration . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration . SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [LogicalANDExpression -> LogicalANDExpression . AND BitwiseORExpression]*
    // [LogicalORExpression -> LogicalANDExpression .]*
    Goal::InputElementDiv,
    // [LogicalORExpression -> LogicalORExpression . OR LogicalANDExpression]*
    // [ShortCircuitExpression -> LogicalORExpression .]*
    Goal::InputElementDiv,
    // [EqualityExpression -> RelationalExpression .]*
    // [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // [RelationalExpression -> ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // [ConditionalExpression -> ShortCircuitExpression .]*
    // [ConditionalExpression -> ShortCircuitExpression . CONDITIONAL AssignmentExpression_In COLON AssignmentExpression]*
    Goal::InputElementDiv,
    // [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [IfStatement -> IF LPAREN Expression_In . RPAREN Statement ELSE Statement]*
    // [IfStatement -> IF LPAREN Expression_In . RPAREN Statement !~[ELSE]]*
    Goal::InputElementDiv,
    // [ImportMeta -> IMPORT DOT META .]*
    Goal::InputElementTemplateTail,
    // [ImportCall -> IMPORT LPAREN AssignmentExpression_In . RPAREN]*
    Goal::InputElementDiv,
    // [Block -> LBRACE StatementList RBRACE .]*
    Goal::InputElementRegExp,
    // [SpreadElement -> ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [ArrayLiteral -> LBRACK ElementList COMMA . RBRACK]*
    // [ArrayLiteral -> LBRACK ElementList COMMA . Elision RBRACK]*
    // [ElementList -> ElementList COMMA . AssignmentExpression_In]*
    // [ElementList -> ElementList COMMA . Elision AssignmentExpression_In]*
    // [ElementList -> ElementList COMMA . Elision SpreadElement]*
    // [ElementList -> ElementList COMMA . SpreadElement]*
    Goal::InputElementRegExp,
    // [ArrayLiteral -> LBRACK ElementList RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Elision -> Elision COMMA .]*
    Goal::InputElementRegExp,
    // [ArrayLiteral -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList -> Elision AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [ElementList -> Elision SpreadElement .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingIdentifier . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingPattern . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA . ELLIPSIS BindingIdentifier RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA . ELLIPSIS BindingPattern RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA . RPAREN]*
    // [Expression_In -> Expression_In COMMA . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In RPAREN .]*
    Goal::InputElementTemplateTail,
    // [NewTarget -> NEW DOT TARGET .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression -> NEW MemberExpression Arguments .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> PrivateIdentifier IN ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [SuperProperty -> SUPER DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [SuperProperty -> SUPER LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // [ArgumentList -> ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [Arguments -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList -> ArgumentList . COMMA ELLIPSIS AssignmentExpression_In]*
    // [ArgumentList -> ArgumentList . COMMA AssignmentExpression_In]*
    // [Arguments -> LPAREN ArgumentList . COMMA RPAREN]*
    // [Arguments -> LPAREN ArgumentList . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList -> AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [SwitchStatement -> SWITCH LPAREN Expression_In . RPAREN CaseBlock]*
    Goal::InputElementDiv,
    // [ThrowStatement -> THROW Expression_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Catch -> CATCH . LPAREN CatchParameter RPAREN Block]*
    // [Catch -> CATCH . Block]*
    Goal::InputElementDiv,
    // [Finally -> FINALLY . Block]*
    Goal::InputElementDiv,
    // [TryStatement -> TRY Block Catch .]*
    // [TryStatement -> TRY Block Catch . Finally]*
    Goal::InputElementRegExp,
    // [TryStatement -> TRY Block Finally .]*
    Goal::InputElementRegExp,
    // [TemplateMiddleList -> TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // [TemplateSpans -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList -> TemplateMiddleList . TemplateMiddle Expression_In]*
    // [TemplateSpans -> TemplateMiddleList . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate -> TemplateHead Expression_In TemplateSpans .]*
    Goal::InputElementTemplateTail,
    // [BindingRestProperty -> ELLIPSIS . BindingIdentifier]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // [SingleNameBinding -> BindingIdentifier .]*
    // [SingleNameBinding -> BindingIdentifier . Initializer_In]*
    Goal::InputElementDiv,
    // [BindingPropertyList -> BindingProperty .]*
    Goal::InputElementDiv,
    // [BindingPropertyList -> BindingPropertyList . COMMA BindingProperty]*
    // [ObjectBindingPattern -> LBRACE BindingPropertyList . COMMA RBRACE]*
    // [ObjectBindingPattern -> LBRACE BindingPropertyList . COMMA BindingRestProperty RBRACE]*
    // [ObjectBindingPattern -> LBRACE BindingPropertyList . RBRACE]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern -> LBRACE BindingRestProperty . RBRACE]*
    Goal::InputElementDiv,
    // [BindingProperty -> PropertyName . COLON BindingElement]*
    Goal::InputElementDiv,
    // [BindingProperty -> SingleNameBinding .]*
    Goal::InputElementDiv,
    // [BindingRestElement -> ELLIPSIS . BindingIdentifier]*
    // [BindingRestElement -> ELLIPSIS . BindingPattern]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElisionElement -> BindingElement .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList . COMMA RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList . COMMA BindingRestElement RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList . COMMA Elision RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList . COMMA Elision BindingRestElement RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList . RBRACK]*
    // [BindingElementList -> BindingElementList . COMMA BindingElisionElement]*
    Goal::InputElementDiv,
    // [BindingElementList -> BindingElisionElement .]*
    Goal::InputElementDiv,
    // [BindingElement -> BindingPattern .]*
    // [BindingElement -> BindingPattern . Initializer_In]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK Elision . RBRACK]*
    // [ArrayBindingPattern -> LBRACK Elision . BindingRestElement RBRACK]*
    // [BindingElisionElement -> Elision . BindingElement]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [BindingElement -> SingleNameBinding .]*
    Goal::InputElementDiv,
    // [Initializer_In -> ASSIGN . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [VariableDeclaration_In -> BindingIdentifier Initializer_In .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In -> BindingPattern Initializer_In .]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In -> VariableDeclarationList_In COMMA . VariableDeclaration_In]*
    Goal::InputElementDiv,
    // [VariableStatement -> VAR VariableDeclarationList_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [WhileStatement -> WHILE LPAREN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [WithStatement -> WITH LPAREN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .]*
    // [MultiplicativeExpression -> MultiplicativeExpression . MultiplicativeOperator ExponentiationExpression]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .]*
    // [MultiplicativeExpression -> MultiplicativeExpression . MultiplicativeOperator ExponentiationExpression]*
    Goal::InputElementTemplateTail,
    // [ConciseBody_In -> LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [ExpressionBody_In -> AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In -> ArrowParameters ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [ConciseBody_In -> ExpressionBody_In .]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In -> BitwiseANDExpression_In BIT_AND EqualityExpression_In .]*
    // [EqualityExpression_In -> EqualityExpression_In . EQ RelationalExpression_In]*
    // [EqualityExpression_In -> EqualityExpression_In . EQ_STRICT RelationalExpression_In]*
    // [EqualityExpression_In -> EqualityExpression_In . NE RelationalExpression_In]*
    // [EqualityExpression_In -> EqualityExpression_In . NE_STRICT RelationalExpression_In]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In -> BitwiseORExpression_In BIT_OR BitwiseXORExpression_In .]*
    // [BitwiseXORExpression_In -> BitwiseXORExpression_In . BIT_XOR BitwiseANDExpression_In]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In -> BitwiseANDExpression_In . BIT_AND EqualityExpression_In]*
    // [BitwiseXORExpression_In -> BitwiseXORExpression_In BIT_XOR BitwiseANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // [CallExpression -> CallExpression DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [CallExpression -> CallExpression DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [CallExpression -> CallExpression LBRACK Expression_In . RBRACK]*
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [OptionalChain -> OPTIONAL_CHAINING IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OPTIONAL_CHAINING LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OPTIONAL_CHAINING Arguments .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OPTIONAL_CHAINING TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [SubstitutionTemplate_Tagged -> TemplateHead Expression_In . TemplateSpans_Tagged]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OptionalChain DOT . IdentifierName]*
    // [OptionalChain -> OptionalChain DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [OptionalChain -> OptionalChain LBRACK . Expression_In RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain -> OptionalChain Arguments .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OptionalChain TemplateLiteral_Tagged .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    // [CoalesceExpression_In -> CoalesceExpressionHead_In NULLISH BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> ADD . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AwaitExpression -> AWAIT . UnaryExpression_Await]*
    // [BindingIdentifier_Await -> AWAIT .]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Await -> BIT_NOT . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [ClassExpression_Await -> CLASS . BindingIdentifier_Await ClassTail_Await]*
    // [ClassExpression_Await -> CLASS . ClassTail_Await]*
    Goal::InputElementDiv,
    // [UpdateExpression_Await -> DEC . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Await -> DELETE . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [ImportCall_Await -> IMPORT . LPAREN AssignmentExpression_In_Await RPAREN]*
    // [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // [UpdateExpression_Await -> INC . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [AsyncConciseBody_In -> LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [ArrayLiteral_Await -> LBRACK . RBRACK]*
    // [ArrayLiteral_Await -> LBRACK . ElementList_Await COMMA RBRACK]*
    // [ArrayLiteral_Await -> LBRACK . ElementList_Await COMMA Elision RBRACK]*
    // [ArrayLiteral_Await -> LBRACK . ElementList_Await RBRACK]*
    // [ArrayLiteral_Await -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . ELLIPSIS BindingIdentifier_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . ELLIPSIS BindingPattern_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await COMMA ELLIPSIS BindingIdentifier_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await COMMA ELLIPSIS BindingPattern_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN . Expression_In_Await RPAREN]*
    Goal::InputElementRegExp,
    // [MemberExpression_Await -> NEW . MemberExpression_Await Arguments_Await]*
    // [NewExpression_Await -> NEW . NewExpression_Await]*
    // [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Await -> NOT . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [TemplateLiteral_Await -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> PrivateIdentifier . IN ShiftExpression_Await]*
    Goal::InputElementDiv,
    // [PrimaryExpression_Await -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> SUB . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [SuperCall_Await -> SUPER . Arguments_Await]*
    // [SuperProperty_Await -> SUPER . DOT IdentifierName]*
    // [SuperProperty_Await -> SUPER . LBRACK Expression_In_Await RBRACK]*
    Goal::InputElementDiv,
    // [PrimaryExpression_Await -> THIS .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> TYPEOF . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [SubstitutionTemplate_Await -> TemplateHead . Expression_In_Await TemplateSpans_Await]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Await -> VOID . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [BindingIdentifier_Await -> YIELD .]*
    // [IdentifierReference_Await -> YIELD .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    // [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    // [ShiftExpression_Await -> AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> ArrayLiteral_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> ArrowFunction_In_Await .]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In_Await -> ArrowParameters_Await . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // [ExpressionBody_In_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> AsyncArrowFunction_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In -> CoverCallExpressionAndAsyncArrowHead ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> AwaitExpression .]*
    Goal::InputElementTemplateTail,
    // [ArrowParameters_Await -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await . BIT_AND EqualityExpression_In_Await]*
    // [BitwiseXORExpression_In_Await -> BitwiseANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    // [CoalesceExpressionHead_In_Await -> BitwiseORExpression_In_Await .]*
    // [LogicalANDExpression_In_Await -> BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Await -> BitwiseXORExpression_In_Await .]*
    // [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await . BIT_XOR BitwiseANDExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> CallExpression_Await . DOT IdentifierName]*
    // [CallExpression_Await -> CallExpression_Await . DOT PrivateIdentifier]*
    // [CallExpression_Await -> CallExpression_Await . LBRACK Expression_In_Await RBRACK]*
    // [CallExpression_Await -> CallExpression_Await . Arguments_Await]*
    // [CallExpression_Await -> CallExpression_Await . TemplateLiteral_Await_Tagged]*
    // [LeftHandSideExpression_Await -> CallExpression_Await .]*
    // [OptionalExpression_Await -> CallExpression_Await . OptionalChain_Await]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> ClassExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [CoalesceExpression_In_Await -> CoalesceExpressionHead_In_Await . NULLISH BitwiseORExpression_In_Await]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead_In_Await -> CoalesceExpression_In_Await .]*
    // [ShortCircuitExpression_In_Await -> CoalesceExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> ConditionalExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Await -> CoverCallExpressionAndAsyncArrowHead_Await . ARROW AsyncConciseBody_In]*
    // [CallExpression_Await -> CoverCallExpressionAndAsyncArrowHead_Await .]*
    Goal::InputElementTemplateTail,
    // [ArrowParameters_Await -> CoverParenthesizedExpressionAndArrowParameterList_Await .]*
    // [PrimaryExpression_Await -> CoverParenthesizedExpressionAndArrowParameterList_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Await -> EqualityExpression_In_Await .]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ RelationalExpression_In_Await]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ_STRICT RelationalExpression_In_Await]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE RelationalExpression_In_Await]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE_STRICT RelationalExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeExpression_Await -> ExponentiationExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncConciseBody_In -> ExpressionBody_In_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [BindingIdentifier_Await -> Identifier .]*
    // [IdentifierReference_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> IdentifierReference_Await .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> ImportCall_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_In_Await]*
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_In_Await]*
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_In_Await]*
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_In_Await]*
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_In_Await]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> Literal .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await . AND BitwiseORExpression_In_Await]*
    // [LogicalORExpression_In_Await -> LogicalANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [LogicalORExpression_In_Await -> LogicalORExpression_In_Await . OR LogicalANDExpression_In_Await]*
    // [ShortCircuitExpression_In_Await -> LogicalORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [CoverCallExpressionAndAsyncArrowHead_Await -> MemberExpression_Await . Arguments_Await]*
    // [MemberExpression_Await -> MemberExpression_Await . DOT IdentifierName]*
    // [MemberExpression_Await -> MemberExpression_Await . DOT PrivateIdentifier]*
    // [MemberExpression_Await -> MemberExpression_Await . LBRACK Expression_In_Await RBRACK]*
    // [MemberExpression_Await -> MemberExpression_Await . TemplateLiteral_Await_Tagged]*
    // [NewExpression_Await -> MemberExpression_Await .]*
    // [OptionalExpression_Await -> MemberExpression_Await . OptionalChain_Await]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Await -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> MultiplicativeExpression_Await .]*
    // [MultiplicativeExpression_Await -> MultiplicativeExpression_Await . MultiplicativeOperator ExponentiationExpression_Await]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression_Await -> NewExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression_Await -> OptionalExpression_Await .]*
    // [OptionalExpression_Await -> OptionalExpression_Await . OptionalChain_Await]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Await -> PrimaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Await -> RelationalExpression_In_Await .]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await .]*
    // [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await . CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral_Await -> SubstitutionTemplate_Await .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> SuperCall_Await .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Await -> SuperProperty_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> TemplateLiteral_Await .]*
    Goal::InputElementTemplateTail,
    // [ExponentiationExpression_Await -> UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [ExponentiationExpression_Await -> UpdateExpression_Await . EXP ExponentiationExpression_Await]*
    // [UnaryExpression_Await -> UpdateExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In -> EqualityExpression_In EQ RelationalExpression_In .]*
    // [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In -> EqualityExpression_In EQ_STRICT RelationalExpression_In .]*
    // [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In -> EqualityExpression_In NE RelationalExpression_In .]*
    // [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In -> EqualityExpression_In NE_STRICT RelationalExpression_In .]*
    // [RelationalExpression_In -> RelationalExpression_In . GT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . GTE ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . IN ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . INSTANCEOF ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LT ShiftExpression]*
    // [RelationalExpression_In -> RelationalExpression_In . LTE ShiftExpression]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In COMMA AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [FunctionDeclaration -> FUNCTION . BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [LabelledItem -> FunctionDeclaration .]*
    Goal::InputElementRegExp,
    // [LabelledStatement -> LabelIdentifier COLON LabelledItem .]*
    Goal::InputElementRegExp,
    // [LabelledItem -> Statement .]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In -> LeftHandSideExpression AND_ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In -> LeftHandSideExpression ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In -> LeftHandSideExpression NULLISH_ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In -> LeftHandSideExpression OR_ASSIGN AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In -> LeftHandSideExpression AssignmentOperator AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [LexicalBinding_In -> BindingIdentifier Initializer_In .]*
    Goal::InputElementDiv,
    // [BindingList_In -> BindingList_In COMMA . LexicalBinding_In]*
    Goal::InputElementDiv,
    // [LexicalDeclaration_In -> LetOrConst BindingList_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In -> BindingPattern Initializer_In .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    // [LogicalANDExpression_In -> LogicalANDExpression_In AND BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In -> BitwiseORExpression_In . BIT_OR BitwiseXORExpression_In]*
    // [LogicalANDExpression_In -> BitwiseORExpression_In .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In -> LogicalANDExpression_In . AND BitwiseORExpression_In]*
    // [LogicalORExpression_In -> LogicalORExpression_In OR LogicalANDExpression_In .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression -> MemberExpression DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression -> MemberExpression DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [MemberExpression -> MemberExpression LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // [MultiplicativeExpression -> MultiplicativeExpression MultiplicativeOperator ExponentiationExpression .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> RelationalExpression_In GT ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> RelationalExpression_In GTE ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> RelationalExpression_In IN ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> RelationalExpression_In INSTANCEOF ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> RelationalExpression_In LT ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In -> RelationalExpression_In LTE ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    // [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    // [ShiftExpression -> ShiftExpression SAR AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    // [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    // [ShiftExpression -> ShiftExpression SHL AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression]*
    // [AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression]*
    // [ShiftExpression -> ShiftExpression SHR AdditiveExpression .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL AssignmentExpression_In . COLON AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [ExponentiationExpression -> UpdateExpression EXP ExponentiationExpression .]*
    Goal::InputElementTemplateTail,
    // [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL . BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassHeritage -> EXTENDS LeftHandSideExpression .]*
    Goal::InputElementDiv,
    // [LiteralPropertyName -> IdentifierName .]*
    Goal::InputElementDiv,
    // [ClassTail -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElement -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassElement -> STATIC . FieldDefinition SEMI_COLON]*
    // [ClassElement -> STATIC . MethodDefinition]*
    // [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassTail -> LBRACE ClassBody . RBRACE]*
    Goal::InputElementDiv,
    // [ClassElementList -> ClassElement .]*
    Goal::InputElementDiv,
    // [ClassBody -> ClassElementList .]*
    // [ClassElementList -> ClassElementList . ClassElement]*
    Goal::InputElementDiv,
    // [FieldDefinition -> ClassElementName .]*
    // [FieldDefinition -> ClassElementName . Initializer_In]*
    // [MethodDefinition -> ClassElementName . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassElement -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // [ClassElement -> FieldDefinition . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement -> MethodDefinition .]*
    Goal::InputElementDiv,
    // [ClassElementName -> PropertyName .]*
    Goal::InputElementDiv,
    // [ClassExpression -> CLASS BindingIdentifier ClassTail .]*
    Goal::InputElementTemplateTail,
    // [ClassTail -> ClassHeritage LBRACE . RBRACE]*
    // [ClassTail -> ClassHeritage LBRACE . ClassBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameter -> BindingElement .]*
    Goal::InputElementDiv,
    // [FunctionRestParameter -> BindingRestElement .]*
    Goal::InputElementDiv,
    // [FormalParameterList -> FormalParameter .]*
    Goal::InputElementDiv,
    // [FormalParameterList -> FormalParameterList . COMMA FormalParameter]*
    // [FormalParameters -> FormalParameterList .]*
    // [FormalParameters -> FormalParameterList . COMMA]*
    // [FormalParameters -> FormalParameterList . COMMA FunctionRestParameter]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> FunctionRestParameter .]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield -> AWAIT .]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorExpression -> FUNCTION MUL LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield -> YIELD .]*
    Goal::InputElementDiv,
    // [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield -> Identifier .]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [FunctionExpression -> FUNCTION BindingIdentifier LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod -> ASYNC MUL . ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod -> ASYNC ClassElementName . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition -> ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> GET ClassElementName . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ComputedPropertyName -> LBRACK AssignmentExpression_In . RBRACK]*
    Goal::InputElementDiv,
    // [GeneratorMethod -> MUL ClassElementName . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> SET ClassElementName . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [MethodDefinition -> ClassElementName LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [CoverInitializedName -> IdentifierReference Initializer_In .]*
    Goal::InputElementDiv,
    // [ObjectLiteral -> LBRACE PropertyDefinitionList COMMA . RBRACE]*
    // [PropertyDefinitionList -> PropertyDefinitionList COMMA . PropertyDefinition]*
    Goal::InputElementDiv,
    // [ObjectLiteral -> LBRACE PropertyDefinitionList RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinition -> PropertyName COLON . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [DoWhileStatement -> DO Statement WHILE LPAREN . Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForBinding -> BindingIdentifier .]*
    // [VariableDeclaration -> BindingIdentifier .]*
    // [VariableDeclaration -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // [ForBinding -> BindingPattern .]*
    // [VariableDeclaration -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding . IN Expression_In RPAREN Statement]*
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding . OF AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [VariableDeclarationList -> VariableDeclaration .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    // [VariableDeclarationList -> VariableDeclarationList . COMMA VariableDeclaration]*
    Goal::InputElementDiv,
    // [ArrowFunction -> ArrowParameters ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // [BitwiseANDExpression -> BitwiseANDExpression BIT_AND . EqualityExpression]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression -> BitwiseORExpression BIT_OR . BitwiseXORExpression]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression -> BitwiseXORExpression BIT_XOR . BitwiseANDExpression]*
    Goal::InputElementRegExp,
    // [CoalesceExpression -> CoalesceExpressionHead NULLISH . BitwiseORExpression]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction -> CoverCallExpressionAndAsyncArrowHead ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [EqualityExpression -> EqualityExpression EQ . RelationalExpression]*
    Goal::InputElementRegExp,
    // [EqualityExpression -> EqualityExpression EQ_STRICT . RelationalExpression]*
    Goal::InputElementRegExp,
    // [EqualityExpression -> EqualityExpression NE . RelationalExpression]*
    Goal::InputElementRegExp,
    // [EqualityExpression -> EqualityExpression NE_STRICT . RelationalExpression]*
    Goal::InputElementRegExp,
    // [Expression -> Expression COMMA . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration IN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration OF . AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [AssignmentExpression -> LeftHandSideExpression AND_ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [AssignmentExpression -> LeftHandSideExpression ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [AssignmentExpression -> LeftHandSideExpression NULLISH_ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF . AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [AssignmentExpression -> LeftHandSideExpression OR_ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [AssignmentExpression -> LeftHandSideExpression AssignmentOperator . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [ForBinding -> BindingIdentifier .]*
    // [LexicalBinding -> BindingIdentifier .]*
    // [LexicalBinding -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // [BindingList -> BindingList . COMMA LexicalBinding]*
    // [LexicalDeclaration -> LetOrConst BindingList . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForBinding -> BindingPattern .]*
    // [LexicalBinding -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // [ForDeclaration -> LetOrConst ForBinding .]*
    Goal::InputElementDiv,
    // [BindingList -> LexicalBinding .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [LogicalANDExpression -> LogicalANDExpression AND . BitwiseORExpression]*
    Goal::InputElementRegExp,
    // [LogicalORExpression -> LogicalORExpression OR . LogicalANDExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression -> RelationalExpression GT . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression -> RelationalExpression GTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression -> RelationalExpression INSTANCEOF . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression -> RelationalExpression LT . ShiftExpression]*
    Goal::InputElementRegExp,
    // [RelationalExpression -> RelationalExpression LTE . ShiftExpression]*
    Goal::InputElementRegExp,
    // [ConditionalExpression -> ShortCircuitExpression CONDITIONAL . AssignmentExpression_In COLON AssignmentExpression]*
    Goal::InputElementRegExp,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement -> IF LPAREN Expression_In RPAREN . Statement ELSE Statement]*
    // [IfStatement -> IF LPAREN Expression_In RPAREN . Statement !~[ELSE]]*
    Goal::InputElementRegExp,
    // [ImportCall -> IMPORT LPAREN AssignmentExpression_In RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArrayLiteral -> LBRACK ElementList COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList -> ElementList COMMA AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [ArrayLiteral -> LBRACK ElementList COMMA Elision . RBRACK]*
    // [ElementList -> ElementList COMMA Elision . AssignmentExpression_In]*
    // [ElementList -> ElementList COMMA Elision . SpreadElement]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [ElementList -> ElementList COMMA SpreadElement .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingIdentifier RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN ELLIPSIS BindingPattern RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS . BindingIdentifier RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS . BindingPattern RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty -> SUPER LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList -> ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [ArgumentList -> ArgumentList COMMA . ELLIPSIS AssignmentExpression_In]*
    // [ArgumentList -> ArgumentList COMMA . AssignmentExpression_In]*
    // [Arguments -> LPAREN ArgumentList COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // [Arguments -> LPAREN ArgumentList RPAREN .]*
    Goal::InputElementTemplateTail,
    // [SwitchStatement -> SWITCH LPAREN Expression_In RPAREN . CaseBlock]*
    Goal::InputElementDiv,
    // [Catch -> CATCH LPAREN . CatchParameter RPAREN Block]*
    Goal::InputElementDiv,
    // [Catch -> CATCH Block .]*
    Goal::InputElementRegExp,
    // [Finally -> FINALLY Block .]*
    Goal::InputElementRegExp,
    // [TryStatement -> TRY Block Catch Finally .]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [TemplateMiddleList -> TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList -> TemplateMiddleList TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // [TemplateSpans -> TemplateMiddleList TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [BindingRestProperty -> ELLIPSIS BindingIdentifier .]*
    Goal::InputElementDiv,
    // [SingleNameBinding -> BindingIdentifier Initializer_In .]*
    Goal::InputElementDiv,
    // [BindingPropertyList -> BindingPropertyList COMMA . BindingProperty]*
    // [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA . RBRACE]*
    // [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA . BindingRestProperty RBRACE]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern -> LBRACE BindingPropertyList RBRACE .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern -> LBRACE BindingRestProperty RBRACE .]*
    Goal::InputElementDiv,
    // [BindingProperty -> PropertyName COLON . BindingElement]*
    Goal::InputElementDiv,
    // [BindingRestElement -> ELLIPSIS BindingIdentifier .]*
    Goal::InputElementDiv,
    // [BindingRestElement -> ELLIPSIS BindingPattern .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA . RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA . BindingRestElement RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA . Elision RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA . Elision BindingRestElement RBRACK]*
    // [BindingElementList -> BindingElementList COMMA . BindingElisionElement]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElement -> BindingPattern Initializer_In .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElisionElement -> Elision BindingElement .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK Elision BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // [Initializer_In -> ASSIGN AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In -> VariableDeclarationList_In COMMA VariableDeclaration_In .]*
    Goal::InputElementDiv,
    // [WhileStatement -> WHILE LPAREN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [WithStatement -> WITH LPAREN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Return -> DO . Statement_Return WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR . LPAREN VAR ForBinding IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR . LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR . LPAREN ForDeclaration IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR . LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR . LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR . LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR . LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [IfStatement_Return -> IF . LPAREN Expression_In RPAREN Statement_Return ELSE Statement_Return]*
    // [IfStatement_Return -> IF . LPAREN Expression_In RPAREN Statement_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Return -> LBRACE . RBRACE]*
    // [Block_Return -> LBRACE . StatementList_Return RBRACE]*
    Goal::InputElementRegExp,
    // [ReturnStatement -> RETURN . SEMI_COLON]*
    // [ReturnStatement -> RETURN . Expression_In SEMI_COLON]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Return -> SWITCH . LPAREN Expression_In RPAREN CaseBlock_Return]*
    Goal::InputElementDiv,
    // [TryStatement_Return -> TRY . Block_Return Catch_Return]*
    // [TryStatement_Return -> TRY . Block_Return Catch_Return Finally_Return]*
    // [TryStatement_Return -> TRY . Block_Return Finally_Return]*
    Goal::InputElementDiv,
    // [WhileStatement_Return -> WHILE . LPAREN Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [WithStatement_Return -> WITH . LPAREN Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [Statement_Return -> BlockStatement_Return .]*
    Goal::InputElementRegExp,
    // [BlockStatement_Return -> Block_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> BreakStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> BreakableStatement_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> ContinueStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // [StatementListItem_Return -> Declaration .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Return -> DoWhileStatement_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> ExpressionStatement .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Return -> ForInOfStatement_Return .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Return -> ForStatement_Return .]*
    Goal::InputElementRegExp,
    // [ConciseBody_In -> LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionBody -> FunctionStatementList .]*
    Goal::InputElementDiv,
    // [Statement_Return -> IfStatement_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Return -> IterationStatement_Return .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Return -> LabelIdentifier . COLON LabelledItem_Return]*
    Goal::InputElementDiv,
    // [Statement_Return -> LabelledStatement_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> ReturnStatement .]*
    Goal::InputElementRegExp,
    // [StatementList_Return -> StatementListItem_Return .]*
    Goal::InputElementRegExp,
    // [FunctionStatementList -> StatementList_Return .]*
    // [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // [StatementListItem_Return -> Statement_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Return -> SwitchStatement_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> ThrowStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> TryStatement_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> VariableStatement .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Return -> WhileStatement_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Return -> WithStatement_Return .]*
    Goal::InputElementRegExp,
    // [CallExpression -> CallExpression LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [OptionalChain -> OPTIONAL_CHAINING LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // [TemplateMiddleList_Tagged -> TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Tagged -> TemplateMiddleList_Tagged . TemplateMiddle Expression_In]*
    // [TemplateSpans_Tagged -> TemplateMiddleList_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate_Tagged -> TemplateHead Expression_In TemplateSpans_Tagged .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OptionalChain DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OptionalChain DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [OptionalChain -> OptionalChain LBRACK Expression_In . RBRACK]*
    Goal::InputElementDiv,
    // [AwaitExpression -> AWAIT . UnaryExpression_Await]*
    Goal::InputElementRegExp,
    // [ObjectLiteral_Await -> LBRACE . RBRACE]*
    // [ObjectLiteral_Await -> LBRACE . PropertyDefinitionList_Await COMMA RBRACE]*
    // [ObjectLiteral_Await -> LBRACE . PropertyDefinitionList_Await RBRACE]*
    Goal::InputElementDiv,
    // [IdentifierReference_Await -> YIELD .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> CoverCallExpressionAndAsyncArrowHead_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> CoverParenthesizedExpressionAndArrowParameterList_Await .]*
    Goal::InputElementTemplateTail,
    // [IdentifierReference_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Await -> ObjectLiteral_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> ADD UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> UpdateExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Await -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [AwaitExpression -> AWAIT UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> BIT_NOT UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [ClassHeritage_Await -> EXTENDS . LeftHandSideExpression_Await]*
    Goal::InputElementRegExp,
    // [ClassTail_Await -> LBRACE . RBRACE]*
    // [ClassTail_Await -> LBRACE . ClassBody_Await RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression_Await -> CLASS BindingIdentifier_Await . ClassTail_Await]*
    Goal::InputElementDiv,
    // [ClassTail_Await -> ClassHeritage_Await . LBRACE RBRACE]*
    // [ClassTail_Await -> ClassHeritage_Await . LBRACE ClassBody_Await RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression_Await -> CLASS ClassTail_Await .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Await -> DEC UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> DELETE UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [ImportCall_Await -> IMPORT LPAREN . AssignmentExpression_In_Await RPAREN]*
    Goal::InputElementRegExp,
    // [UpdateExpression_Await -> INC UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    // [AsyncFunctionDeclaration_Await -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration_Await -> ASYNC . FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BreakStatement_Await -> BREAK . SEMI_COLON]*
    // [BreakStatement_Await -> BREAK . LabelIdentifier_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassDeclaration_Await -> CLASS . BindingIdentifier_Await ClassTail_Await]*
    Goal::InputElementDiv,
    // [ContinueStatement_Await -> CONTINUE . SEMI_COLON]*
    // [ContinueStatement_Await -> CONTINUE . LabelIdentifier_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await_Return -> DO . Statement_Await_Return WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR . AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Await -> FUNCTION . BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    // [GeneratorDeclaration_Await -> FUNCTION . MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Await_Return -> IF . LPAREN Expression_In_Await RPAREN Statement_Await_Return ELSE Statement_Await_Return]*
    // [IfStatement_Await_Return -> IF . LPAREN Expression_In_Await RPAREN Statement_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Await_Return -> LBRACE . RBRACE]*
    // [Block_Await_Return -> LBRACE . StatementList_Await_Return RBRACE]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Await -> RETURN . SEMI_COLON]*
    // [ReturnStatement_Await -> RETURN . Expression_In_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Await_Return -> SWITCH . LPAREN Expression_In_Await RPAREN CaseBlock_Await_Return]*
    Goal::InputElementDiv,
    // [ThrowStatement_Await -> THROW . Expression_In_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // [TryStatement_Await_Return -> TRY . Block_Await_Return Catch_Await_Return]*
    // [TryStatement_Await_Return -> TRY . Block_Await_Return Catch_Await_Return Finally_Await_Return]*
    // [TryStatement_Await_Return -> TRY . Block_Await_Return Finally_Await_Return]*
    Goal::InputElementDiv,
    // [VariableStatement_Await -> VAR . VariableDeclarationList_In_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [WhileStatement_Await_Return -> WHILE . LPAREN Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [WithStatement_Await_Return -> WITH . LPAREN Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Await -> YIELD .]*
    // [IdentifierReference_Await -> YIELD .]*
    // [LabelIdentifier_Await -> YIELD .]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncConciseBody_In -> LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Await -> AsyncFunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [HoistableDeclaration_Await -> AsyncGeneratorDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> BlockStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [BlockStatement_Await_Return -> Block_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> BreakStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> BreakableStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [Declaration_Await -> ClassDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> ContinueStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // [StatementListItem_Await_Return -> Declaration_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Await_Return -> DoWhileStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> ExpressionStatement_Await .]*
    Goal::InputElementRegExp,
    // [ExpressionStatement_Await -> Expression_In_Await . SEMI_COLON]*
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [IterationStatement_Await_Return -> ForInOfStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Await_Return -> ForStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [AsyncFunctionBody -> FunctionBody_Await .]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Await -> FunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [FunctionBody_Await -> FunctionStatementList_Await .]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Await -> GeneratorDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [Declaration_Await -> HoistableDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [BindingIdentifier_Await -> Identifier .]*
    // [IdentifierReference_Await -> Identifier .]*
    // [LabelIdentifier_Await -> Identifier .]*
    Goal::InputElementDiv,
    // [Statement_Await_Return -> IfStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Await_Return -> IterationStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Await_Return -> LabelIdentifier_Await . COLON LabelledItem_Await_Return]*
    Goal::InputElementDiv,
    // [Statement_Await_Return -> LabelledStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [LexicalDeclaration_In_Await -> LetOrConst . BindingList_In_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [Declaration_Await -> LexicalDeclaration_In_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> ReturnStatement_Await .]*
    Goal::InputElementRegExp,
    // [StatementList_Await_Return -> StatementListItem_Await_Return .]*
    Goal::InputElementRegExp,
    // [FunctionStatementList_Await -> StatementList_Await_Return .]*
    // [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // [StatementListItem_Await_Return -> Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Await_Return -> SwitchStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> ThrowStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> TryStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> VariableStatement_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Await_Return -> WhileStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Await_Return -> WithStatement_Await_Return .]*
    Goal::InputElementRegExp,
    // [SpreadElement_Await -> ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [ArrayLiteral_Await -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Await -> LBRACK ElementList_Await . COMMA RBRACK]*
    // [ArrayLiteral_Await -> LBRACK ElementList_Await . COMMA Elision RBRACK]*
    // [ArrayLiteral_Await -> LBRACK ElementList_Await . RBRACK]*
    // [ElementList_Await -> ElementList_Await . COMMA AssignmentExpression_In_Await]*
    // [ElementList_Await -> ElementList_Await . COMMA Elision AssignmentExpression_In_Await]*
    // [ElementList_Await -> ElementList_Await . COMMA Elision SpreadElement_Await]*
    // [ElementList_Await -> ElementList_Await . COMMA SpreadElement_Await]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Await -> LBRACK Elision . RBRACK]*
    // [ElementList_Await -> Elision . AssignmentExpression_In_Await]*
    // [ElementList_Await -> Elision . SpreadElement_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [ElementList_Await -> SpreadElement_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS . BindingIdentifier_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS . BindingPattern_Await RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . COMMA ELLIPSIS BindingIdentifier_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . COMMA ELLIPSIS BindingPattern_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await . RPAREN]*
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [SuperProperty_Await -> SUPER . DOT IdentifierName]*
    // [SuperProperty_Await -> SUPER . LBRACK Expression_In_Await RBRACK]*
    Goal::InputElementDiv,
    // [MemberExpression_Await -> NEW MemberExpression_Await . Arguments_Await]*
    // [MemberExpression_Await -> MemberExpression_Await . DOT IdentifierName]*
    // [MemberExpression_Await -> MemberExpression_Await . DOT PrivateIdentifier]*
    // [MemberExpression_Await -> MemberExpression_Await . LBRACK Expression_In_Await RBRACK]*
    // [MemberExpression_Await -> MemberExpression_Await . TemplateLiteral_Await_Tagged]*
    // [NewExpression_Await -> MemberExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [NewExpression_Await -> NEW NewExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> NOT UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> PrivateIdentifier IN . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Await -> SUB UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Await -> SUPER DOT . IdentifierName]*
    Goal::InputElementDiv,
    // [SuperProperty_Await -> SUPER LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // [Arguments_Await -> LPAREN . RPAREN]*
    // [Arguments_Await -> LPAREN . ArgumentList_Await COMMA RPAREN]*
    // [Arguments_Await -> LPAREN . ArgumentList_Await RPAREN]*
    Goal::InputElementRegExp,
    // [SuperCall_Await -> SUPER Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> TYPEOF UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [SubstitutionTemplate_Await -> TemplateHead Expression_In_Await . TemplateSpans_Await]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Await -> VOID UnaryExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> AdditiveExpression_Await ADD . MultiplicativeExpression_Await]*
    Goal::InputElementRegExp,
    // [AdditiveExpression_Await -> AdditiveExpression_Await SUB . MultiplicativeExpression_Await]*
    Goal::InputElementRegExp,
    // [ArrowFunction_In_Await -> ArrowParameters_Await ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await BIT_AND . EqualityExpression_In_Await]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await BIT_OR . BitwiseXORExpression_In_Await]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await BIT_XOR . BitwiseANDExpression_In_Await]*
    Goal::InputElementRegExp,
    // [CallExpression_Await -> CallExpression_Await DOT . IdentifierName]*
    // [CallExpression_Await -> CallExpression_Await DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [CallExpression_Await -> CallExpression_Await LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // [TemplateLiteral_Await_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OPTIONAL_CHAINING . IdentifierName]*
    // [OptionalChain_Await -> OPTIONAL_CHAINING . LBRACK Expression_In_Await RBRACK]*
    // [OptionalChain_Await -> OPTIONAL_CHAINING . PrivateIdentifier]*
    // [OptionalChain_Await -> OPTIONAL_CHAINING . Arguments_Await]*
    // [OptionalChain_Await -> OPTIONAL_CHAINING . TemplateLiteral_Await_Tagged]*
    Goal::InputElementDiv,
    // [SubstitutionTemplate_Await_Tagged -> TemplateHead . Expression_In_Await TemplateSpans_Await_Tagged]*
    Goal::InputElementRegExp,
    // [CallExpression_Await -> CallExpression_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OptionalChain_Await . DOT IdentifierName]*
    // [OptionalChain_Await -> OptionalChain_Await . DOT PrivateIdentifier]*
    // [OptionalChain_Await -> OptionalChain_Await . LBRACK Expression_In_Await RBRACK]*
    // [OptionalChain_Await -> OptionalChain_Await . Arguments_Await]*
    // [OptionalChain_Await -> OptionalChain_Await . TemplateLiteral_Await_Tagged]*
    // [OptionalExpression_Await -> CallExpression_Await OptionalChain_Await .]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral_Await_Tagged -> SubstitutionTemplate_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> CallExpression_Await TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CoalesceExpression_In_Await -> CoalesceExpressionHead_In_Await NULLISH . BitwiseORExpression_In_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ_STRICT . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await NE . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await NE_STRICT . RelationalExpression_In_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AND_ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [UpdateExpression_Await -> LeftHandSideExpression_Await DEC .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Await -> LeftHandSideExpression_Await INC .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await OR_ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AssignmentOperator . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await AND . BitwiseORExpression_In_Await]*
    Goal::InputElementRegExp,
    // [LogicalORExpression_In_Await -> LogicalORExpression_In_Await OR . LogicalANDExpression_In_Await]*
    Goal::InputElementRegExp,
    // [MemberExpression_Await -> MemberExpression_Await DOT . IdentifierName]*
    // [MemberExpression_Await -> MemberExpression_Await DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [MemberExpression_Await -> MemberExpression_Await LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // [CoverCallExpressionAndAsyncArrowHead_Await -> MemberExpression_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OptionalChain_Await . DOT IdentifierName]*
    // [OptionalChain_Await -> OptionalChain_Await . DOT PrivateIdentifier]*
    // [OptionalChain_Await -> OptionalChain_Await . LBRACK Expression_In_Await RBRACK]*
    // [OptionalChain_Await -> OptionalChain_Await . Arguments_Await]*
    // [OptionalChain_Await -> OptionalChain_Await . TemplateLiteral_Await_Tagged]*
    // [OptionalExpression_Await -> MemberExpression_Await OptionalChain_Await .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Await -> MemberExpression_Await TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeExpression_Await -> MultiplicativeExpression_Await MultiplicativeOperator . ExponentiationExpression_Await]*
    Goal::InputElementRegExp,
    // [OptionalChain_Await -> OptionalChain_Await . DOT IdentifierName]*
    // [OptionalChain_Await -> OptionalChain_Await . DOT PrivateIdentifier]*
    // [OptionalChain_Await -> OptionalChain_Await . LBRACK Expression_In_Await RBRACK]*
    // [OptionalChain_Await -> OptionalChain_Await . Arguments_Await]*
    // [OptionalChain_Await -> OptionalChain_Await . TemplateLiteral_Await_Tagged]*
    // [OptionalExpression_Await -> OptionalExpression_Await OptionalChain_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await GT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await GTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await IN . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await INSTANCEOF . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await LT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await LTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Await -> ShiftExpression_Await SAR . AdditiveExpression_Await]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Await -> ShiftExpression_Await SHL . AdditiveExpression_Await]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Await -> ShiftExpression_Await SHR . AdditiveExpression_Await]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL . AssignmentExpression_In_Await COLON AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [ExponentiationExpression_Await -> UpdateExpression_Await EXP . ExponentiationExpression_Await]*
    Goal::InputElementRegExp,
    // [BindingList_In -> BindingList_In COMMA LexicalBinding_In .]*
    Goal::InputElementDiv,
    // [MemberExpression -> MemberExpression LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL AssignmentExpression_In COLON . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [BindingRestElement_Await -> ELLIPSIS . BindingIdentifier_Await]*
    // [BindingRestElement_Await -> ELLIPSIS . BindingPattern_Await]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Await -> LBRACE . RBRACE]*
    // [ObjectBindingPattern_Await -> LBRACE . BindingPropertyList_Await COMMA RBRACE]*
    // [ObjectBindingPattern_Await -> LBRACE . BindingPropertyList_Await COMMA BindingRestProperty_Await RBRACE]*
    // [ObjectBindingPattern_Await -> LBRACE . BindingPropertyList_Await RBRACE]*
    // [ObjectBindingPattern_Await -> LBRACE . BindingRestProperty_Await RBRACE]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK . RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA BindingRestElement_Await RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA Elision RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await COMMA Elision BindingRestElement_Await RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . BindingElementList_Await RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . BindingRestElement_Await RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . Elision RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK . Elision BindingRestElement_Await RBRACK]*
    Goal::InputElementDiv,
    // [BindingPattern_Await -> ArrayBindingPattern_Await .]*
    Goal::InputElementDiv,
    // [FormalParameter_Await -> BindingElement_Await .]*
    Goal::InputElementDiv,
    // [SingleNameBinding_Await -> BindingIdentifier_Await .]*
    // [SingleNameBinding_Await -> BindingIdentifier_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // [BindingElement_Await -> BindingPattern_Await .]*
    // [BindingElement_Await -> BindingPattern_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // [FunctionRestParameter_Await -> BindingRestElement_Await .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Await -> FormalParameterList_Await . COMMA FormalParameter_Await]*
    // [FormalParameters_Await -> FormalParameterList_Await .]*
    // [FormalParameters_Await -> FormalParameterList_Await . COMMA]*
    // [FormalParameters_Await -> FormalParameterList_Await . COMMA FunctionRestParameter_Await]*
    Goal::InputElementDiv,
    // [FormalParameterList_Await -> FormalParameter_Await .]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters_Await -> FunctionRestParameter_Await .]*
    Goal::InputElementDiv,
    // [BindingPattern_Await -> ObjectBindingPattern_Await .]*
    Goal::InputElementDiv,
    // [BindingElement_Await -> SingleNameBinding_Await .]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield_Await -> AWAIT .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield_Await -> YIELD .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield_Await -> Identifier .]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [ClassStaticBlock -> STATIC LBRACE . ClassStaticBlockBody RBRACE]*
    // [ClassStaticBlockStatementList -> () .]*
    Goal::InputElementRegExp,
    // [ClassElement -> STATIC FieldDefinition . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement -> STATIC MethodDefinition .]*
    Goal::InputElementDiv,
    // [ClassTail -> LBRACE ClassBody RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElementList -> ClassElementList ClassElement .]*
    Goal::InputElementDiv,
    // [FieldDefinition -> ClassElementName Initializer_In .]*
    Goal::InputElementDiv,
    // [ClassElement -> FieldDefinition SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail -> ClassHeritage LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassTail -> ClassHeritage LBRACE ClassBody . RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameterList -> FormalParameterList COMMA . FormalParameter]*
    // [FormalParameters -> FormalParameterList COMMA .]*
    // [FormalParameters -> FormalParameterList COMMA . FunctionRestParameter]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingRestElement_Yield -> ELLIPSIS . BindingIdentifier_Yield]*
    // [BindingRestElement_Yield -> ELLIPSIS . BindingPattern_Yield]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield -> LBRACE . RBRACE]*
    // [ObjectBindingPattern_Yield -> LBRACE . BindingPropertyList_Yield COMMA RBRACE]*
    // [ObjectBindingPattern_Yield -> LBRACE . BindingPropertyList_Yield COMMA BindingRestProperty_Yield RBRACE]*
    // [ObjectBindingPattern_Yield -> LBRACE . BindingPropertyList_Yield RBRACE]*
    // [ObjectBindingPattern_Yield -> LBRACE . BindingRestProperty_Yield RBRACE]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK . RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA BindingRestElement_Yield RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA Elision RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield COMMA Elision BindingRestElement_Yield RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . BindingElementList_Yield RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . BindingRestElement_Yield RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . Elision RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK . Elision BindingRestElement_Yield RBRACK]*
    Goal::InputElementDiv,
    // [BindingPattern_Yield -> ArrayBindingPattern_Yield .]*
    Goal::InputElementDiv,
    // [FormalParameter_Yield -> BindingElement_Yield .]*
    Goal::InputElementDiv,
    // [SingleNameBinding_Yield -> BindingIdentifier_Yield .]*
    // [SingleNameBinding_Yield -> BindingIdentifier_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // [BindingElement_Yield -> BindingPattern_Yield .]*
    // [BindingElement_Yield -> BindingPattern_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // [FunctionRestParameter_Yield -> BindingRestElement_Yield .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield -> FormalParameterList_Yield . COMMA FormalParameter_Yield]*
    // [FormalParameters_Yield -> FormalParameterList_Yield .]*
    // [FormalParameters_Yield -> FormalParameterList_Yield . COMMA]*
    // [FormalParameters_Yield -> FormalParameterList_Yield . COMMA FunctionRestParameter_Yield]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield -> FormalParameter_Yield .]*
    Goal::InputElementDiv,
    // [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> FunctionRestParameter_Yield .]*
    Goal::InputElementDiv,
    // [BindingPattern_Yield -> ObjectBindingPattern_Yield .]*
    Goal::InputElementDiv,
    // [BindingElement_Yield -> SingleNameBinding_Yield .]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod -> ASYNC MUL ClassElementName . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod -> ASYNC ClassElementName LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> GET ClassElementName LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ComputedPropertyName -> LBRACK AssignmentExpression_In RBRACK .]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorMethod -> MUL ClassElementName LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> SET ClassElementName LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [UniqueFormalParameters -> FormalParameters .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ObjectLiteral -> LBRACE PropertyDefinitionList COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinitionList -> PropertyDefinitionList COMMA PropertyDefinition .]*
    Goal::InputElementDiv,
    // [PropertyDefinition -> PropertyName COLON AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement -> DO Statement WHILE LPAREN Expression_In . RPAREN SEMI_COLON]*
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [Initializer -> ASSIGN . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [VariableDeclaration -> BindingIdentifier Initializer .]*
    Goal::InputElementDiv,
    // [VariableDeclaration -> BindingPattern Initializer .]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding IN . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding OF . AssignmentExpression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [VariableDeclarationList -> VariableDeclarationList COMMA . VariableDeclaration]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [ConciseBody -> LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [ExpressionBody -> AssignmentExpression .]*
    Goal::InputElementDiv,
    // [ArrowFunction -> ArrowParameters ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // [ConciseBody -> ExpressionBody .]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . AssignmentOperator AssignmentExpression]*
    // [UpdateExpression -> LeftHandSideExpression .]*
    // [UpdateExpression -> LeftHandSideExpression . DEC]*
    // [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression -> BitwiseANDExpression BIT_AND EqualityExpression .]*
    // [EqualityExpression -> EqualityExpression . EQ RelationalExpression]*
    // [EqualityExpression -> EqualityExpression . EQ_STRICT RelationalExpression]*
    // [EqualityExpression -> EqualityExpression . NE RelationalExpression]*
    // [EqualityExpression -> EqualityExpression . NE_STRICT RelationalExpression]*
    Goal::InputElementDiv,
    // [BitwiseORExpression -> BitwiseORExpression BIT_OR BitwiseXORExpression .]*
    // [BitwiseXORExpression -> BitwiseXORExpression . BIT_XOR BitwiseANDExpression]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression -> BitwiseANDExpression . BIT_AND EqualityExpression]*
    // [BitwiseXORExpression -> BitwiseXORExpression BIT_XOR BitwiseANDExpression .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    // [CoalesceExpression -> CoalesceExpressionHead NULLISH BitwiseORExpression .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncConciseBody -> LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Await -> ArrowFunction_Await .]*
    Goal::InputElementDiv,
    // [ArrowFunction_Await -> ArrowParameters_Await . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // [ExpressionBody_Await -> AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> AsyncArrowFunction_Await .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction -> CoverCallExpressionAndAsyncArrowHead ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Await -> BitwiseANDExpression_Await . BIT_AND EqualityExpression_Await]*
    // [BitwiseXORExpression_Await -> BitwiseANDExpression_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    // [CoalesceExpressionHead_Await -> BitwiseORExpression_Await .]*
    // [LogicalANDExpression_Await -> BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Await -> BitwiseXORExpression_Await .]*
    // [BitwiseXORExpression_Await -> BitwiseXORExpression_Await . BIT_XOR BitwiseANDExpression_Await]*
    Goal::InputElementDiv,
    // [CoalesceExpression_Await -> CoalesceExpressionHead_Await . NULLISH BitwiseORExpression_Await]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead_Await -> CoalesceExpression_Await .]*
    // [ShortCircuitExpression_Await -> CoalesceExpression_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> ConditionalExpression_Await .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Await -> CoverCallExpressionAndAsyncArrowHead_Await . ARROW AsyncConciseBody]*
    // [CallExpression_Await -> CoverCallExpressionAndAsyncArrowHead_Await .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Await -> EqualityExpression_Await .]*
    // [EqualityExpression_Await -> EqualityExpression_Await . EQ RelationalExpression_Await]*
    // [EqualityExpression_Await -> EqualityExpression_Await . EQ_STRICT RelationalExpression_Await]*
    // [EqualityExpression_Await -> EqualityExpression_Await . NE RelationalExpression_Await]*
    // [EqualityExpression_Await -> EqualityExpression_Await . NE_STRICT RelationalExpression_Await]*
    Goal::InputElementDiv,
    // [AsyncConciseBody -> ExpressionBody_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_Await]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementDiv,
    // [LogicalANDExpression_Await -> LogicalANDExpression_Await . AND BitwiseORExpression_Await]*
    // [LogicalORExpression_Await -> LogicalANDExpression_Await .]*
    Goal::InputElementDiv,
    // [LogicalORExpression_Await -> LogicalORExpression_Await . OR LogicalANDExpression_Await]*
    // [ShortCircuitExpression_Await -> LogicalORExpression_Await .]*
    Goal::InputElementDiv,
    // [EqualityExpression_Await -> RelationalExpression_Await .]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Await -> ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Await -> ShortCircuitExpression_Await .]*
    // [ConditionalExpression_Await -> ShortCircuitExpression_Await . CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_Await]*
    Goal::InputElementDiv,
    // [EqualityExpression -> EqualityExpression EQ RelationalExpression .]*
    // [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // [EqualityExpression -> EqualityExpression EQ_STRICT RelationalExpression .]*
    // [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // [EqualityExpression -> EqualityExpression NE RelationalExpression .]*
    // [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // [EqualityExpression -> EqualityExpression NE_STRICT RelationalExpression .]*
    // [RelationalExpression -> RelationalExpression . GT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . GTE ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . INSTANCEOF ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LT ShiftExpression]*
    // [RelationalExpression -> RelationalExpression . LTE ShiftExpression]*
    Goal::InputElementDiv,
    // [Expression -> Expression COMMA AssignmentExpression .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForInOfStatement -> FOR LPAREN ForDeclaration IN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration OF AssignmentExpression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression AND_ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression NULLISH_ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression OR_ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression AssignmentOperator AssignmentExpression .]*
    Goal::InputElementDiv,
    // [LexicalBinding -> BindingIdentifier Initializer .]*
    Goal::InputElementDiv,
    // [BindingList -> BindingList COMMA . LexicalBinding]*
    Goal::InputElementDiv,
    // [LexicalDeclaration -> LetOrConst BindingList SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding -> BindingPattern Initializer .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    // [LogicalANDExpression -> LogicalANDExpression AND BitwiseORExpression .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression -> BitwiseORExpression . BIT_OR BitwiseXORExpression]*
    // [LogicalANDExpression -> BitwiseORExpression .]*
    Goal::InputElementDiv,
    // [LogicalANDExpression -> LogicalANDExpression . AND BitwiseORExpression]*
    // [LogicalORExpression -> LogicalORExpression OR LogicalANDExpression .]*
    Goal::InputElementDiv,
    // [RelationalExpression -> RelationalExpression GT ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // [RelationalExpression -> RelationalExpression GTE ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // [RelationalExpression -> RelationalExpression INSTANCEOF ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // [RelationalExpression -> RelationalExpression LT ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // [RelationalExpression -> RelationalExpression LTE ShiftExpression .]*
    // [ShiftExpression -> ShiftExpression . SAR AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHL AdditiveExpression]*
    // [ShiftExpression -> ShiftExpression . SHR AdditiveExpression]*
    Goal::InputElementDiv,
    // [ConditionalExpression -> ShortCircuitExpression CONDITIONAL AssignmentExpression_In . COLON AssignmentExpression]*
    Goal::InputElementDiv,
    // [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement -> IF LPAREN Expression_In RPAREN Statement . ELSE Statement]*
    // [IfStatement -> IF LPAREN Expression_In RPAREN Statement . !~[ELSE]]*
    // [IfStatement -> IF LPAREN Expression_In RPAREN Statement !~[ELSE] .]*
    Goal::InputElementRegExp,
    // [ArrayLiteral -> LBRACK ElementList COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList -> ElementList COMMA Elision AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [ElementList -> ElementList COMMA Elision SpreadElement .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingIdentifier . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingPattern . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList -> ArgumentList COMMA ELLIPSIS . AssignmentExpression_In]*
    Goal::InputElementRegExp,
    // [Arguments -> LPAREN ArgumentList COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList -> ArgumentList COMMA AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [CaseBlock -> LBRACE . RBRACE]*
    // [CaseBlock -> LBRACE . CaseClauses RBRACE]*
    // [CaseBlock -> LBRACE . CaseClauses DefaultClause RBRACE]*
    // [CaseBlock -> LBRACE . CaseClauses DefaultClause CaseClauses RBRACE]*
    // [CaseBlock -> LBRACE . DefaultClause RBRACE]*
    // [CaseBlock -> LBRACE . DefaultClause CaseClauses RBRACE]*
    Goal::InputElementDiv,
    // [SwitchStatement -> SWITCH LPAREN Expression_In RPAREN CaseBlock .]*
    Goal::InputElementRegExp,
    // [CatchParameter -> BindingIdentifier .]*
    Goal::InputElementDiv,
    // [CatchParameter -> BindingPattern .]*
    Goal::InputElementDiv,
    // [Catch -> CATCH LPAREN CatchParameter . RPAREN Block]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [TemplateMiddleList -> TemplateMiddleList TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA RBRACE .]*
    Goal::InputElementDiv,
    // [BindingPropertyList -> BindingPropertyList COMMA BindingProperty .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA BindingRestProperty . RBRACE]*
    Goal::InputElementDiv,
    // [BindingProperty -> PropertyName COLON BindingElement .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElementList -> BindingElementList COMMA BindingElisionElement .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision . RBRACK]*
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision . BindingRestElement RBRACK]*
    // [BindingElisionElement -> Elision . BindingElement]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK Elision BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // [WhileStatement -> WHILE LPAREN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [WithStatement -> WITH LPAREN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Return -> DO Statement_Return . WHILE LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Return -> FOR LPAREN . VAR ForBinding IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN . VAR ForBinding OF AssignmentExpression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN . ForDeclaration IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN . ForDeclaration OF AssignmentExpression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN . LeftHandSideExpression IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN . LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . LexicalDeclaration SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN . LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [IfStatement_Return -> IF LPAREN . Expression_In RPAREN Statement_Return ELSE Statement_Return]*
    // [IfStatement_Return -> IF LPAREN . Expression_In RPAREN Statement_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [Block_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [Block_Return -> LBRACE StatementList_Return . RBRACE]*
    // [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // [ReturnStatement -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ReturnStatement -> RETURN Expression_In . SEMI_COLON]*
    Goal::InputElementDiv,
    // [SwitchStatement_Return -> SWITCH LPAREN . Expression_In RPAREN CaseBlock_Return]*
    Goal::InputElementRegExp,
    // [TryStatement_Return -> TRY Block_Return . Catch_Return]*
    // [TryStatement_Return -> TRY Block_Return . Catch_Return Finally_Return]*
    // [TryStatement_Return -> TRY Block_Return . Finally_Return]*
    Goal::InputElementDiv,
    // [WhileStatement_Return -> WHILE LPAREN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Return -> WITH LPAREN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ConciseBody_In -> LBRACE FunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [LabelledStatement_Return -> LabelIdentifier COLON . LabelledItem_Return]*
    Goal::InputElementRegExp,
    // [StatementList_Return -> StatementList_Return StatementListItem_Return .]*
    Goal::InputElementRegExp,
    // [OptionalChain -> OPTIONAL_CHAINING LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [TemplateMiddleList_Tagged -> TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Tagged -> TemplateMiddleList_Tagged TemplateMiddle . Expression_In]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Tagged -> TemplateMiddleList_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain -> OptionalChain LBRACK Expression_In RBRACK .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod_Await -> ASYNC . MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncMethod_Await -> ASYNC . ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Await -> ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Await -> GET . ClassElementName_Await LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ComputedPropertyName_Await -> LBRACK . AssignmentExpression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // [GeneratorMethod_Await -> MUL . ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassElementName_Await -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Await -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // [MethodDefinition_Await -> SET . ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> AsyncGeneratorMethod_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> AsyncMethod_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> ClassElementName_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyName_Await -> ComputedPropertyName_Await .]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Await -> CoverInitializedName_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> GeneratorMethod_Await .]*
    Goal::InputElementDiv,
    // [CoverInitializedName_Await -> IdentifierReference_Await . Initializer_In_Await]*
    // [PropertyDefinition_Await -> IdentifierReference_Await .]*
    Goal::InputElementDiv,
    // [PropertyName_Await -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Await -> MethodDefinition_Await .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await . COMMA RBRACE]*
    // [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await . RBRACE]*
    // [PropertyDefinitionList_Await -> PropertyDefinitionList_Await . COMMA PropertyDefinition_Await]*
    Goal::InputElementDiv,
    // [PropertyDefinitionList_Await -> PropertyDefinition_Await .]*
    Goal::InputElementDiv,
    // [ClassElementName_Await -> PropertyName_Await .]*
    // [PropertyDefinition_Await -> PropertyName_Await . COLON AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In_Await -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [ClassHeritage_Await -> EXTENDS LeftHandSideExpression_Await .]*
    Goal::InputElementDiv,
    // [ClassTail_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElement_Await -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassElement_Await -> STATIC . FieldDefinition_Await SEMI_COLON]*
    // [ClassElement_Await -> STATIC . MethodDefinition_Await]*
    // [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassTail_Await -> LBRACE ClassBody_Await . RBRACE]*
    Goal::InputElementDiv,
    // [ClassBody_Await -> ClassElementList_Await .]*
    // [ClassElementList_Await -> ClassElementList_Await . ClassElement_Await]*
    Goal::InputElementDiv,
    // [FieldDefinition_Await -> ClassElementName_Await .]*
    // [FieldDefinition_Await -> ClassElementName_Await . Initializer_In_Await]*
    // [MethodDefinition_Await -> ClassElementName_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassElementList_Await -> ClassElement_Await .]*
    Goal::InputElementDiv,
    // [ClassElement_Await -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // [ClassElement_Await -> FieldDefinition_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement_Await -> MethodDefinition_Await .]*
    Goal::InputElementDiv,
    // [ClassElementName_Await -> PropertyName_Await .]*
    Goal::InputElementDiv,
    // [ClassExpression_Await -> CLASS BindingIdentifier_Await ClassTail_Await .]*
    Goal::InputElementTemplateTail,
    // [ClassTail_Await -> ClassHeritage_Await LBRACE . RBRACE]*
    // [ClassTail_Await -> ClassHeritage_Await LBRACE . ClassBody_Await RBRACE]*
    Goal::InputElementDiv,
    // [ImportCall_Await -> IMPORT LPAREN AssignmentExpression_In_Await . RPAREN]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION . BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION . MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BreakStatement_Await -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LabelIdentifier_Await -> YIELD .]*
    Goal::InputElementDiv,
    // [LabelIdentifier_Await -> Identifier .]*
    Goal::InputElementDiv,
    // [BreakStatement_Await -> BREAK LabelIdentifier_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassDeclaration_Await -> CLASS BindingIdentifier_Await . ClassTail_Await]*
    Goal::InputElementDiv,
    // [ContinueStatement_Await -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ContinueStatement_Await -> CONTINUE LabelIdentifier_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In_Await -> ASYNC . AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await_Return -> DO Statement_Await_Return . WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR AWAIT . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR AWAIT . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN . VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN . ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN . LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Await -> FUNCTION MUL . BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Await_Return -> IF LPAREN . Expression_In_Await RPAREN Statement_Await_Return ELSE Statement_Await_Return]*
    // [IfStatement_Await_Return -> IF LPAREN . Expression_In_Await RPAREN Statement_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [Block_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [Block_Await_Return -> LBRACE StatementList_Await_Return . RBRACE]*
    // [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Await -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ReturnStatement_Await -> RETURN Expression_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [SwitchStatement_Await_Return -> SWITCH LPAREN . Expression_In_Await RPAREN CaseBlock_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ThrowStatement_Await -> THROW Expression_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [TryStatement_Await_Return -> TRY Block_Await_Return . Catch_Await_Return]*
    // [TryStatement_Await_Return -> TRY Block_Await_Return . Catch_Await_Return Finally_Await_Return]*
    // [TryStatement_Await_Return -> TRY Block_Await_Return . Finally_Await_Return]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Await -> BindingIdentifier_Await .]*
    // [VariableDeclaration_In_Await -> BindingIdentifier_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Await -> BindingPattern_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Await -> VariableDeclarationList_In_Await . COMMA VariableDeclaration_In_Await]*
    // [VariableStatement_Await -> VAR VariableDeclarationList_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Await -> VariableDeclaration_In_Await .]*
    Goal::InputElementDiv,
    // [WhileStatement_Await_Return -> WHILE LPAREN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Await_Return -> WITH LPAREN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [AsyncConciseBody_In -> LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await COMMA . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [ExpressionStatement_Await -> Expression_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Await_Return -> LabelIdentifier_Await COLON . LabelledItem_Await_Return]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Await -> BindingIdentifier_Await .]*
    // [LexicalBinding_In_Await -> BindingIdentifier_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // [BindingList_In_Await -> BindingList_In_Await . COMMA LexicalBinding_In_Await]*
    // [LexicalDeclaration_In_Await -> LetOrConst BindingList_In_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [LexicalBinding_In_Await -> BindingPattern_Await . Initializer_In_Await]*
    Goal::InputElementDiv,
    // [BindingList_In_Await -> LexicalBinding_In_Await .]*
    Goal::InputElementDiv,
    // [StatementList_Await_Return -> StatementList_Await_Return StatementListItem_Await_Return .]*
    Goal::InputElementRegExp,
    // [SpreadElement_Await -> ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA . RBRACK]*
    // [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA . Elision RBRACK]*
    // [ElementList_Await -> ElementList_Await COMMA . AssignmentExpression_In_Await]*
    // [ElementList_Await -> ElementList_Await COMMA . Elision AssignmentExpression_In_Await]*
    // [ElementList_Await -> ElementList_Await COMMA . Elision SpreadElement_Await]*
    // [ElementList_Await -> ElementList_Await COMMA . SpreadElement_Await]*
    Goal::InputElementRegExp,
    // [ArrayLiteral_Await -> LBRACK ElementList_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ArrayLiteral_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Await -> Elision AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [ElementList_Await -> Elision SpreadElement_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingIdentifier_Await . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingPattern_Await . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA . ELLIPSIS BindingIdentifier_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA . ELLIPSIS BindingPattern_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA . RPAREN]*
    // [Expression_In_Await -> Expression_In_Await COMMA . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Await -> NEW MemberExpression_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> PrivateIdentifier IN ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Await -> SUPER DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [SuperProperty_Await -> SUPER LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // [ArgumentList_Await -> ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [Arguments_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Await -> ArgumentList_Await . COMMA ELLIPSIS AssignmentExpression_In_Await]*
    // [ArgumentList_Await -> ArgumentList_Await . COMMA AssignmentExpression_In_Await]*
    // [Arguments_Await -> LPAREN ArgumentList_Await . COMMA RPAREN]*
    // [Arguments_Await -> LPAREN ArgumentList_Await . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList_Await -> AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [TemplateMiddleList_Await -> TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Await -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Await -> TemplateMiddleList_Await . TemplateMiddle Expression_In_Await]*
    // [TemplateSpans_Await -> TemplateMiddleList_Await . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate_Await -> TemplateHead Expression_In_Await TemplateSpans_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> AdditiveExpression_Await ADD MultiplicativeExpression_Await .]*
    // [MultiplicativeExpression_Await -> MultiplicativeExpression_Await . MultiplicativeOperator ExponentiationExpression_Await]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> AdditiveExpression_Await SUB MultiplicativeExpression_Await .]*
    // [MultiplicativeExpression_Await -> MultiplicativeExpression_Await . MultiplicativeOperator ExponentiationExpression_Await]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In_Await -> ArrowParameters_Await ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await BIT_AND EqualityExpression_In_Await .]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ RelationalExpression_In_Await]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . EQ_STRICT RelationalExpression_In_Await]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE RelationalExpression_In_Await]*
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await . NE_STRICT RelationalExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await BIT_OR BitwiseXORExpression_In_Await .]*
    // [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await . BIT_XOR BitwiseANDExpression_In_Await]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Await -> BitwiseANDExpression_In_Await . BIT_AND EqualityExpression_In_Await]*
    // [BitwiseXORExpression_In_Await -> BitwiseXORExpression_In_Await BIT_XOR BitwiseANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> CallExpression_Await DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> CallExpression_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> CallExpression_Await LBRACK Expression_In_Await . RBRACK]*
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [OptionalChain_Await -> OPTIONAL_CHAINING IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OPTIONAL_CHAINING LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain_Await -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OPTIONAL_CHAINING Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OPTIONAL_CHAINING TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [SubstitutionTemplate_Await_Tagged -> TemplateHead Expression_In_Await . TemplateSpans_Await_Tagged]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OptionalChain_Await DOT . IdentifierName]*
    // [OptionalChain_Await -> OptionalChain_Await DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [OptionalChain_Await -> OptionalChain_Await LBRACK . Expression_In_Await RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain_Await -> OptionalChain_Await Arguments_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OptionalChain_Await TemplateLiteral_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    // [CoalesceExpression_In_Await -> CoalesceExpressionHead_In_Await NULLISH BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ RelationalExpression_In_Await .]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await EQ_STRICT RelationalExpression_In_Await .]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await NE RelationalExpression_In_Await .]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Await -> EqualityExpression_In_Await NE_STRICT RelationalExpression_In_Await .]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . IN ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await . LTE ShiftExpression_Await]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AND_ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await OR_ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Await -> LeftHandSideExpression_Await AssignmentOperator AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    // [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await AND BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Await -> BitwiseORExpression_In_Await . BIT_OR BitwiseXORExpression_In_Await]*
    // [LogicalANDExpression_In_Await -> BitwiseORExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In_Await -> LogicalANDExpression_In_Await . AND BitwiseORExpression_In_Await]*
    // [LogicalORExpression_In_Await -> LogicalORExpression_In_Await OR LogicalANDExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Await -> MemberExpression_Await DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Await -> MemberExpression_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [MemberExpression_Await -> MemberExpression_Await LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // [MultiplicativeExpression_Await -> MultiplicativeExpression_Await MultiplicativeOperator ExponentiationExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await GT ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await GTE ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await IN ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await INSTANCEOF ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await LT ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Await -> RelationalExpression_In_Await LTE ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    // [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await SAR AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    // [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await SHL AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Await -> AdditiveExpression_Await . ADD MultiplicativeExpression_Await]*
    // [AdditiveExpression_Await -> AdditiveExpression_Await . SUB MultiplicativeExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await SHR AdditiveExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL AssignmentExpression_In_Await . COLON AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [ExponentiationExpression_Await -> UpdateExpression_Await EXP ExponentiationExpression_Await .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In -> ShortCircuitExpression_In CONDITIONAL AssignmentExpression_In COLON AssignmentExpression_In .]*
    Goal::InputElementTemplateTail,
    // [BindingRestElement_Await -> ELLIPSIS BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // [BindingRestElement_Await -> ELLIPSIS BindingPattern_Await .]*
    Goal::InputElementDiv,
    // [BindingRestProperty_Await -> ELLIPSIS . BindingIdentifier_Await]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Await -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Await -> BindingPropertyList_Await . COMMA BindingProperty_Await]*
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await . COMMA RBRACE]*
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await . COMMA BindingRestProperty_Await RBRACE]*
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await . RBRACE]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Await -> BindingProperty_Await .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Await -> LBRACE BindingRestProperty_Await . RBRACE]*
    Goal::InputElementDiv,
    // [BindingProperty_Await -> PropertyName_Await . COLON BindingElement_Await]*
    Goal::InputElementDiv,
    // [BindingProperty_Await -> SingleNameBinding_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA BindingRestElement_Await RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA Elision RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . COMMA Elision BindingRestElement_Await RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await . RBRACK]*
    // [BindingElementList_Await -> BindingElementList_Await . COMMA BindingElisionElement_Await]*
    Goal::InputElementDiv,
    // [BindingElisionElement_Await -> BindingElement_Await .]*
    Goal::InputElementDiv,
    // [BindingElementList_Await -> BindingElisionElement_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK Elision . RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK Elision . BindingRestElement_Await RBRACK]*
    // [BindingElisionElement_Await -> Elision . BindingElement_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [Initializer_In_Await -> ASSIGN . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [SingleNameBinding_Await -> BindingIdentifier_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [BindingElement_Await -> BindingPattern_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Await -> FormalParameterList_Await COMMA . FormalParameter_Await]*
    // [FormalParameters_Await -> FormalParameterList_Await COMMA .]*
    // [FormalParameters_Await -> FormalParameterList_Await COMMA . FunctionRestParameter_Await]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingRestElement_Yield_Await -> ELLIPSIS . BindingIdentifier_Yield_Await]*
    // [BindingRestElement_Yield_Await -> ELLIPSIS . BindingPattern_Yield_Await]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield_Await -> LBRACE . RBRACE]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE . BindingPropertyList_Yield_Await COMMA RBRACE]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE . BindingPropertyList_Yield_Await COMMA BindingRestProperty_Yield_Await RBRACE]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE . BindingPropertyList_Yield_Await RBRACE]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE . BindingRestProperty_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK . RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA BindingRestElement_Yield_Await RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA Elision RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await COMMA Elision BindingRestElement_Yield_Await RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . BindingElementList_Yield_Await RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . BindingRestElement_Yield_Await RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . Elision RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK . Elision BindingRestElement_Yield_Await RBRACK]*
    Goal::InputElementDiv,
    // [BindingPattern_Yield_Await -> ArrayBindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // [FormalParameter_Yield_Await -> BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [SingleNameBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [SingleNameBinding_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // [BindingElement_Yield_Await -> BindingPattern_Yield_Await .]*
    // [BindingElement_Yield_Await -> BindingPattern_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // [FunctionRestParameter_Yield_Await -> BindingRestElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield_Await -> FormalParameterList_Yield_Await . COMMA FormalParameter_Yield_Await]*
    // [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await .]*
    // [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await . COMMA]*
    // [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await . COMMA FunctionRestParameter_Yield_Await]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield_Await -> FormalParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield_Await -> FunctionRestParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingPattern_Yield_Await -> ObjectBindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingElement_Yield_Await -> SingleNameBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await -> DO . Statement_Await WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR . AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR . LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [IfStatement_Await -> IF . LPAREN Expression_In_Await RPAREN Statement_Await ELSE Statement_Await]*
    // [IfStatement_Await -> IF . LPAREN Expression_In_Await RPAREN Statement_Await !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Await -> LBRACE . RBRACE]*
    // [Block_Await -> LBRACE . StatementList_Await RBRACE]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Await -> SWITCH . LPAREN Expression_In_Await RPAREN CaseBlock_Await]*
    Goal::InputElementDiv,
    // [TryStatement_Await -> TRY . Block_Await Catch_Await]*
    // [TryStatement_Await -> TRY . Block_Await Catch_Await Finally_Await]*
    // [TryStatement_Await -> TRY . Block_Await Finally_Await]*
    Goal::InputElementDiv,
    // [WhileStatement_Await -> WHILE . LPAREN Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [WithStatement_Await -> WITH . LPAREN Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [Statement_Await -> BlockStatement_Await .]*
    Goal::InputElementRegExp,
    // [BlockStatement_Await -> Block_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> BreakStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> BreakableStatement_Await .]*
    Goal::InputElementRegExp,
    // [ClassStaticBlock -> STATIC LBRACE ClassStaticBlockBody . RBRACE]*
    Goal::InputElementDiv,
    // [ClassStaticBlockBody -> ClassStaticBlockStatementList .]*
    Goal::InputElementDiv,
    // [Statement_Await -> ContinueStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // [StatementListItem_Await -> Declaration_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Await -> DoWhileStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> ExpressionStatement_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Await -> ForInOfStatement_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Await -> ForStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> IfStatement_Await .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Await -> IterationStatement_Await .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Await -> LabelIdentifier_Await . COLON LabelledItem_Await]*
    Goal::InputElementDiv,
    // [Statement_Await -> LabelledStatement_Await .]*
    Goal::InputElementRegExp,
    // [StatementList_Await -> StatementListItem_Await .]*
    Goal::InputElementRegExp,
    // [ClassStaticBlockStatementList -> StatementList_Await .]*
    // [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // [StatementListItem_Await -> Statement_Await .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Await -> SwitchStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> ThrowStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> TryStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> VariableStatement_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Await -> WhileStatement_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Await -> WithStatement_Await .]*
    Goal::InputElementRegExp,
    // [ClassElement -> STATIC FieldDefinition SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail -> ClassHeritage LBRACE ClassBody RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [FormalParameterList -> FormalParameterList COMMA FormalParameter .]*
    Goal::InputElementDiv,
    // [FormalParameters -> FormalParameterList COMMA FunctionRestParameter .]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [BindingRestElement_Yield -> ELLIPSIS BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // [BindingRestElement_Yield -> ELLIPSIS BindingPattern_Yield .]*
    Goal::InputElementDiv,
    // [BindingRestProperty_Yield -> ELLIPSIS . BindingIdentifier_Yield]*
    Goal::InputElementDiv,
    // [ComputedPropertyName_Yield -> LBRACK . AssignmentExpression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // [ObjectBindingPattern_Yield -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Yield -> BindingPropertyList_Yield . COMMA BindingProperty_Yield]*
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield . COMMA RBRACE]*
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield . COMMA BindingRestProperty_Yield RBRACE]*
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield . RBRACE]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Yield -> BindingProperty_Yield .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield -> LBRACE BindingRestProperty_Yield . RBRACE]*
    Goal::InputElementDiv,
    // [PropertyName_Yield -> ComputedPropertyName_Yield .]*
    Goal::InputElementDiv,
    // [PropertyName_Yield -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield -> PropertyName_Yield . COLON BindingElement_Yield]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield -> SingleNameBinding_Yield .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA BindingRestElement_Yield RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA Elision RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . COMMA Elision BindingRestElement_Yield RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield . RBRACK]*
    // [BindingElementList_Yield -> BindingElementList_Yield . COMMA BindingElisionElement_Yield]*
    Goal::InputElementDiv,
    // [BindingElisionElement_Yield -> BindingElement_Yield .]*
    Goal::InputElementDiv,
    // [BindingElementList_Yield -> BindingElisionElement_Yield .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK Elision . RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK Elision . BindingRestElement_Yield RBRACK]*
    // [BindingElisionElement_Yield -> Elision . BindingElement_Yield]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [Initializer_In_Yield -> ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [SingleNameBinding_Yield -> BindingIdentifier_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [BindingElement_Yield -> BindingPattern_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield -> FormalParameterList_Yield COMMA . FormalParameter_Yield]*
    // [FormalParameters_Yield -> FormalParameterList_Yield COMMA .]*
    // [FormalParameters_Yield -> FormalParameterList_Yield COMMA . FunctionRestParameter_Yield]*
    Goal::InputElementDiv,
    // [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [UniqueFormalParameters_Await -> FormalParameters_Await .]*
    Goal::InputElementDiv,
    // [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> GET ClassElementName LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [UniqueFormalParameters_Yield -> FormalParameters_Yield .]*
    Goal::InputElementDiv,
    // [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertySetParameterList -> FormalParameter .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement -> DO Statement WHILE LPAREN Expression_In RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [Initializer -> ASSIGN AssignmentExpression .]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding IN Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [VariableDeclaration -> BindingIdentifier .]*
    // [VariableDeclaration -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // [VariableDeclaration -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // [VariableDeclarationList -> VariableDeclarationList COMMA VariableDeclaration .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement]*
    Goal::InputElementDiv,
    // [ConciseBody -> LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Await -> ASYNC AsyncArrowBindingIdentifier . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // [AsyncConciseBody -> LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [ArrowFunction_Await -> ArrowParameters_Await ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // [BitwiseANDExpression_Await -> BitwiseANDExpression_Await BIT_AND . EqualityExpression_Await]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_Await -> BitwiseORExpression_Await BIT_OR . BitwiseXORExpression_Await]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression_Await -> BitwiseXORExpression_Await BIT_XOR . BitwiseANDExpression_Await]*
    Goal::InputElementRegExp,
    // [CoalesceExpression_Await -> CoalesceExpressionHead_Await NULLISH . BitwiseORExpression_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Await -> EqualityExpression_Await EQ . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Await -> EqualityExpression_Await EQ_STRICT . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Await -> EqualityExpression_Await NE . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Await -> EqualityExpression_Await NE_STRICT . RelationalExpression_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await AND_ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await OR_ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await AssignmentOperator . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [LogicalANDExpression_Await -> LogicalANDExpression_Await AND . BitwiseORExpression_Await]*
    Goal::InputElementRegExp,
    // [LogicalORExpression_Await -> LogicalORExpression_Await OR . LogicalANDExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Await -> RelationalExpression_Await GT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Await -> RelationalExpression_Await GTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Await -> RelationalExpression_Await INSTANCEOF . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Await -> RelationalExpression_Await LT . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Await -> RelationalExpression_Await LTE . ShiftExpression_Await]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL . AssignmentExpression_In_Await COLON AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration IN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [LexicalBinding -> BindingIdentifier .]*
    // [LexicalBinding -> BindingIdentifier . Initializer]*
    Goal::InputElementDiv,
    // [LexicalBinding -> BindingPattern . Initializer]*
    Goal::InputElementDiv,
    // [BindingList -> BindingList COMMA LexicalBinding .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ConditionalExpression -> ShortCircuitExpression CONDITIONAL AssignmentExpression_In COLON . AssignmentExpression]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [IfStatement -> IF LPAREN Expression_In RPAREN Statement ELSE . Statement]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingIdentifier RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList -> LPAREN Expression_In COMMA ELLIPSIS BindingPattern RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList -> ArgumentList COMMA ELLIPSIS AssignmentExpression_In .]*
    Goal::InputElementDiv,
    // [CaseClause -> CASE . Expression_In COLON]*
    // [CaseClause -> CASE . Expression_In COLON StatementList]*
    Goal::InputElementRegExp,
    // [DefaultClause -> DEFAULT . COLON]*
    // [DefaultClause -> DEFAULT . COLON StatementList]*
    Goal::InputElementDiv,
    // [CaseBlock -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses -> CaseClause .]*
    Goal::InputElementDiv,
    // [CaseBlock -> LBRACE CaseClauses . RBRACE]*
    // [CaseBlock -> LBRACE CaseClauses . DefaultClause RBRACE]*
    // [CaseBlock -> LBRACE CaseClauses . DefaultClause CaseClauses RBRACE]*
    // [CaseClauses -> CaseClauses . CaseClause]*
    Goal::InputElementDiv,
    // [CaseBlock -> LBRACE DefaultClause . RBRACE]*
    // [CaseBlock -> LBRACE DefaultClause . CaseClauses RBRACE]*
    Goal::InputElementDiv,
    // [Catch -> CATCH LPAREN CatchParameter RPAREN . Block]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern -> LBRACE BindingPropertyList COMMA BindingRestProperty RBRACE .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision BindingRestElement . RBRACK]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Return -> DO Statement_Return WHILE . LPAREN Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN VAR . ForBinding IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN VAR . ForBinding OF AssignmentExpression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR . VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [Expression -> Expression . COMMA AssignmentExpression]*
    // [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration . IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration . OF AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression -> LeftHandSideExpression . AND_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . NULLISH_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . OR_ASSIGN AssignmentExpression]*
    // [AssignmentExpression -> LeftHandSideExpression . AssignmentOperator AssignmentExpression]*
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression . IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression . OF AssignmentExpression_In RPAREN Statement_Return]*
    // [UpdateExpression -> LeftHandSideExpression .]*
    // [UpdateExpression -> LeftHandSideExpression . DEC]*
    // [UpdateExpression -> LeftHandSideExpression . INC]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration . SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [IfStatement_Return -> IF LPAREN Expression_In . RPAREN Statement_Return ELSE Statement_Return]*
    // [IfStatement_Return -> IF LPAREN Expression_In . RPAREN Statement_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Return -> LBRACE StatementList_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [ReturnStatement -> RETURN Expression_In SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [SwitchStatement_Return -> SWITCH LPAREN Expression_In . RPAREN CaseBlock_Return]*
    Goal::InputElementDiv,
    // [Catch_Return -> CATCH . LPAREN CatchParameter RPAREN Block_Return]*
    // [Catch_Return -> CATCH . Block_Return]*
    Goal::InputElementDiv,
    // [Finally_Return -> FINALLY . Block_Return]*
    Goal::InputElementDiv,
    // [TryStatement_Return -> TRY Block_Return Catch_Return .]*
    // [TryStatement_Return -> TRY Block_Return Catch_Return . Finally_Return]*
    Goal::InputElementRegExp,
    // [TryStatement_Return -> TRY Block_Return Finally_Return .]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [WhileStatement_Return -> WHILE LPAREN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [WithStatement_Return -> WITH LPAREN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [LabelledItem_Return -> FunctionDeclaration .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Return -> LabelIdentifier COLON LabelledItem_Return .]*
    Goal::InputElementRegExp,
    // [LabelledItem_Return -> Statement_Return .]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [TemplateMiddleList_Tagged -> TemplateMiddleList_Tagged TemplateMiddle Expression_In .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL . ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Await -> ASYNC ClassElementName_Await . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Await -> ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> GET ClassElementName_Await . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ComputedPropertyName_Await -> LBRACK AssignmentExpression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Await -> MUL ClassElementName_Await . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> SET ClassElementName_Await . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [MethodDefinition_Await -> ClassElementName_Await LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [CoverInitializedName_Await -> IdentifierReference_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await COMMA . RBRACE]*
    // [PropertyDefinitionList_Await -> PropertyDefinitionList_Await COMMA . PropertyDefinition_Await]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinition_Await -> PropertyName_Await COLON . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Await -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [ClassElement_Await -> STATIC FieldDefinition_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement_Await -> STATIC MethodDefinition_Await .]*
    Goal::InputElementDiv,
    // [ClassTail_Await -> LBRACE ClassBody_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElementList_Await -> ClassElementList_Await ClassElement_Await .]*
    Goal::InputElementDiv,
    // [FieldDefinition_Await -> ClassElementName_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [ClassElement_Await -> FieldDefinition_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail_Await -> ClassHeritage_Await LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassTail_Await -> ClassHeritage_Await LBRACE ClassBody_Await . RBRACE]*
    Goal::InputElementDiv,
    // [ImportCall_Await -> IMPORT LPAREN AssignmentExpression_In_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL . BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [BreakStatement_Await -> BREAK LabelIdentifier_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ClassDeclaration_Await -> CLASS BindingIdentifier_Await ClassTail_Await .]*
    Goal::InputElementRegExp,
    // [ContinueStatement_Await -> CONTINUE LabelIdentifier_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE . LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR . ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [Expression_Await -> AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [Expression_Await -> Expression_Await . COMMA AssignmentExpression_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await . IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_Await]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await . IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementDiv,
    // [ForDeclaration_Await -> LetOrConst . ForBinding_Await]*
    // [LexicalDeclaration_Await -> LetOrConst . BindingList_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await . RPAREN Statement_Await_Return ELSE Statement_Await_Return]*
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await . RPAREN Statement_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Await_Return -> LBRACE StatementList_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Await -> RETURN Expression_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [SwitchStatement_Await_Return -> SWITCH LPAREN Expression_In_Await . RPAREN CaseBlock_Await_Return]*
    Goal::InputElementDiv,
    // [ThrowStatement_Await -> THROW Expression_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Catch_Await_Return -> CATCH . LPAREN CatchParameter_Await RPAREN Block_Await_Return]*
    // [Catch_Await_Return -> CATCH . Block_Await_Return]*
    Goal::InputElementDiv,
    // [Finally_Await_Return -> FINALLY . Block_Await_Return]*
    Goal::InputElementDiv,
    // [TryStatement_Await_Return -> TRY Block_Await_Return Catch_Await_Return .]*
    // [TryStatement_Await_Return -> TRY Block_Await_Return Catch_Await_Return . Finally_Await_Return]*
    Goal::InputElementRegExp,
    // [TryStatement_Await_Return -> TRY Block_Await_Return Finally_Await_Return .]*
    Goal::InputElementRegExp,
    // [VariableDeclaration_In_Await -> BindingIdentifier_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Await -> BindingPattern_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Await -> VariableDeclarationList_In_Await COMMA . VariableDeclaration_In_Await]*
    Goal::InputElementDiv,
    // [VariableStatement_Await -> VAR VariableDeclarationList_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [WhileStatement_Await_Return -> WHILE LPAREN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [WithStatement_Await_Return -> WITH LPAREN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await COMMA AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [FunctionDeclaration_Await -> FUNCTION . BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [LabelledItem_Await_Return -> FunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Await_Return -> LabelIdentifier_Await COLON LabelledItem_Await_Return .]*
    Goal::InputElementRegExp,
    // [LabelledItem_Await_Return -> Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Await -> BindingIdentifier_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [BindingList_In_Await -> BindingList_In_Await COMMA . LexicalBinding_In_Await]*
    Goal::InputElementDiv,
    // [LexicalDeclaration_In_Await -> LetOrConst BindingList_In_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Await -> BindingPattern_Await Initializer_In_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Await -> ElementList_Await COMMA AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA Elision . RBRACK]*
    // [ElementList_Await -> ElementList_Await COMMA Elision . AssignmentExpression_In_Await]*
    // [ElementList_Await -> ElementList_Await COMMA Elision . SpreadElement_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [ElementList_Await -> ElementList_Await COMMA SpreadElement_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingIdentifier_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN ELLIPSIS BindingPattern_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS . BindingIdentifier_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS . BindingPattern_Await RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Await -> SUPER LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Await -> ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [ArgumentList_Await -> ArgumentList_Await COMMA . ELLIPSIS AssignmentExpression_In_Await]*
    // [ArgumentList_Await -> ArgumentList_Await COMMA . AssignmentExpression_In_Await]*
    // [Arguments_Await -> LPAREN ArgumentList_Await COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // [Arguments_Await -> LPAREN ArgumentList_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [TemplateMiddleList_Await -> TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Await -> TemplateMiddleList_Await TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Await -> TemplateMiddleList_Await TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Await -> CallExpression_Await LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [OptionalChain_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // [TemplateMiddleList_Await_Tagged -> TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Await_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Await_Tagged -> TemplateMiddleList_Await_Tagged . TemplateMiddle Expression_In_Await]*
    // [TemplateSpans_Await_Tagged -> TemplateMiddleList_Await_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate_Await_Tagged -> TemplateHead Expression_In_Await TemplateSpans_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OptionalChain_Await DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OptionalChain_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [OptionalChain_Await -> OptionalChain_Await LBRACK Expression_In_Await . RBRACK]*
    Goal::InputElementDiv,
    // [MemberExpression_Await -> MemberExpression_Await LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL AssignmentExpression_In_Await COLON . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [BindingRestProperty_Await -> ELLIPSIS BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Await -> BindingPropertyList_Await COMMA . BindingProperty_Await]*
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA . RBRACE]*
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA . BindingRestProperty_Await RBRACE]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await RBRACE .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Await -> LBRACE BindingRestProperty_Await RBRACE .]*
    Goal::InputElementDiv,
    // [BindingProperty_Await -> PropertyName_Await COLON . BindingElement_Await]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . BindingRestElement_Await RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . Elision RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA . Elision BindingRestElement_Await RBRACK]*
    // [BindingElementList_Await -> BindingElementList_Await COMMA . BindingElisionElement_Await]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElisionElement_Await -> Elision BindingElement_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK Elision BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // [Initializer_In_Await -> ASSIGN AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Await -> FormalParameterList_Await COMMA FormalParameter_Await .]*
    Goal::InputElementDiv,
    // [FormalParameters_Await -> FormalParameterList_Await COMMA FunctionRestParameter_Await .]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [BindingRestElement_Yield_Await -> ELLIPSIS BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingRestElement_Yield_Await -> ELLIPSIS BindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingRestProperty_Yield_Await -> ELLIPSIS . BindingIdentifier_Yield_Await]*
    Goal::InputElementDiv,
    // [ComputedPropertyName_Yield_Await -> LBRACK . AssignmentExpression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // [ObjectBindingPattern_Yield_Await -> LBRACE RBRACE .]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Yield_Await -> BindingPropertyList_Yield_Await . COMMA BindingProperty_Yield_Await]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await . COMMA RBRACE]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await . COMMA BindingRestProperty_Yield_Await RBRACE]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Yield_Await -> BindingProperty_Yield_Await .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingRestProperty_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // [PropertyName_Yield_Await -> ComputedPropertyName_Yield_Await .]*
    Goal::InputElementDiv,
    // [PropertyName_Yield_Await -> LiteralPropertyName .]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield_Await -> PropertyName_Yield_Await . COLON BindingElement_Yield_Await]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield_Await -> SingleNameBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA BindingRestElement_Yield_Await RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA Elision RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . COMMA Elision BindingRestElement_Yield_Await RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await . RBRACK]*
    // [BindingElementList_Yield_Await -> BindingElementList_Yield_Await . COMMA BindingElisionElement_Yield_Await]*
    Goal::InputElementDiv,
    // [BindingElisionElement_Yield_Await -> BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingElementList_Yield_Await -> BindingElisionElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK Elision . RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK Elision . BindingRestElement_Yield_Await RBRACK]*
    // [BindingElisionElement_Yield_Await -> Elision . BindingElement_Yield_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [Initializer_In_Yield_Await -> ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [SingleNameBinding_Yield_Await -> BindingIdentifier_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingElement_Yield_Await -> BindingPattern_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield_Await -> FormalParameterList_Yield_Await COMMA . FormalParameter_Yield_Await]*
    // [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await COMMA .]*
    // [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await COMMA . FunctionRestParameter_Yield_Await]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await -> DO Statement_Await . WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT . LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR AWAIT . LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR AWAIT . LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR LPAREN . VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN . ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN . LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN . LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [IfStatement_Await -> IF LPAREN . Expression_In_Await RPAREN Statement_Await ELSE Statement_Await]*
    // [IfStatement_Await -> IF LPAREN . Expression_In_Await RPAREN Statement_Await !~[ELSE]]*
    Goal::InputElementRegExp,
    // [Block_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [Block_Await -> LBRACE StatementList_Await . RBRACE]*
    // [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Await -> SWITCH LPAREN . Expression_In_Await RPAREN CaseBlock_Await]*
    Goal::InputElementRegExp,
    // [TryStatement_Await -> TRY Block_Await . Catch_Await]*
    // [TryStatement_Await -> TRY Block_Await . Catch_Await Finally_Await]*
    // [TryStatement_Await -> TRY Block_Await . Finally_Await]*
    Goal::InputElementDiv,
    // [WhileStatement_Await -> WHILE LPAREN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [WithStatement_Await -> WITH LPAREN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ClassStaticBlock -> STATIC LBRACE ClassStaticBlockBody RBRACE .]*
    Goal::InputElementDiv,
    // [LabelledStatement_Await -> LabelIdentifier_Await COLON . LabelledItem_Await]*
    Goal::InputElementRegExp,
    // [StatementList_Await -> StatementList_Await StatementListItem_Await .]*
    Goal::InputElementRegExp,
    // [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [BindingRestProperty_Yield -> ELLIPSIS BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // [UnaryExpression_Yield -> ADD . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield -> AWAIT .]*
    // [IdentifierReference_Yield -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> BIT_NOT . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [ClassExpression_Yield -> CLASS . BindingIdentifier_Yield ClassTail_Yield]*
    // [ClassExpression_Yield -> CLASS . ClassTail_Yield]*
    Goal::InputElementDiv,
    // [UpdateExpression_Yield -> DEC . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield -> DELETE . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [ImportCall_Yield -> IMPORT . LPAREN AssignmentExpression_In_Yield RPAREN]*
    // [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // [UpdateExpression_Yield -> INC . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [ObjectLiteral_Yield -> LBRACE . RBRACE]*
    // [ObjectLiteral_Yield -> LBRACE . PropertyDefinitionList_Yield COMMA RBRACE]*
    // [ObjectLiteral_Yield -> LBRACE . PropertyDefinitionList_Yield RBRACE]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield -> LBRACK . RBRACK]*
    // [ArrayLiteral_Yield -> LBRACK . ElementList_Yield COMMA RBRACK]*
    // [ArrayLiteral_Yield -> LBRACK . ElementList_Yield COMMA Elision RBRACK]*
    // [ArrayLiteral_Yield -> LBRACK . ElementList_Yield RBRACK]*
    // [ArrayLiteral_Yield -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . ELLIPSIS BindingIdentifier_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . ELLIPSIS BindingPattern_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield COMMA ELLIPSIS BindingIdentifier_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield COMMA ELLIPSIS BindingPattern_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN . Expression_In_Yield RPAREN]*
    Goal::InputElementRegExp,
    // [MemberExpression_Yield -> NEW . MemberExpression_Yield Arguments_Yield]*
    // [NewExpression_Yield -> NEW . NewExpression_Yield]*
    // [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield -> NOT . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [TemplateLiteral_Yield -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> PrivateIdentifier . IN ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // [PrimaryExpression_Yield -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> SUB . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [SuperCall_Yield -> SUPER . Arguments_Yield]*
    // [SuperProperty_Yield -> SUPER . DOT IdentifierName]*
    // [SuperProperty_Yield -> SUPER . LBRACK Expression_In_Yield RBRACK]*
    Goal::InputElementDiv,
    // [PrimaryExpression_Yield -> THIS .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> TYPEOF . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [SubstitutionTemplate_Yield -> TemplateHead . Expression_In_Yield TemplateSpans_Yield]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield -> VOID . UnaryExpression_Yield]*
    Goal::InputElementRegExp,
    // [BindingIdentifier_Yield -> YIELD .]*
    // [YieldExpression_In -> YIELD .]*
    // [YieldExpression_In -> YIELD . MUL AssignmentExpression_In_Yield]*
    // [YieldExpression_In -> YIELD . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExpOrTemplateTail,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    // [ShiftExpression_Yield -> AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> ArrayLiteral_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> ArrowFunction_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In_Yield -> ArrowParameters_Yield . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // [ComputedPropertyName_Yield -> LBRACK AssignmentExpression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [AssignmentExpression_In_Yield -> AsyncArrowFunction_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [ArrowParameters_Yield -> BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield . BIT_AND EqualityExpression_In_Yield]*
    // [BitwiseXORExpression_In_Yield -> BitwiseANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    // [CoalesceExpressionHead_In_Yield -> BitwiseORExpression_In_Yield .]*
    // [LogicalANDExpression_In_Yield -> BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield -> BitwiseXORExpression_In_Yield .]*
    // [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield . BIT_XOR BitwiseANDExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> CallExpression_Yield . DOT IdentifierName]*
    // [CallExpression_Yield -> CallExpression_Yield . DOT PrivateIdentifier]*
    // [CallExpression_Yield -> CallExpression_Yield . LBRACK Expression_In_Yield RBRACK]*
    // [CallExpression_Yield -> CallExpression_Yield . Arguments_Yield]*
    // [CallExpression_Yield -> CallExpression_Yield . TemplateLiteral_Yield_Tagged]*
    // [LeftHandSideExpression_Yield -> CallExpression_Yield .]*
    // [OptionalExpression_Yield -> CallExpression_Yield . OptionalChain_Yield]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> ClassExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [CoalesceExpression_In_Yield -> CoalesceExpressionHead_In_Yield . NULLISH BitwiseORExpression_In_Yield]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead_In_Yield -> CoalesceExpression_In_Yield .]*
    // [ShortCircuitExpression_In_Yield -> CoalesceExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> ConditionalExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield . ARROW AsyncConciseBody_In]*
    // [CallExpression_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield .]*
    Goal::InputElementTemplateTail,
    // [ArrowParameters_Yield -> CoverParenthesizedExpressionAndArrowParameterList_Yield .]*
    // [PrimaryExpression_Yield -> CoverParenthesizedExpressionAndArrowParameterList_Yield .]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Yield -> EqualityExpression_In_Yield .]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ RelationalExpression_In_Yield]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ_STRICT RelationalExpression_In_Yield]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE RelationalExpression_In_Yield]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE_STRICT RelationalExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeExpression_Yield -> ExponentiationExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [BindingIdentifier_Yield -> Identifier .]*
    // [IdentifierReference_Yield -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> IdentifierReference_Yield .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> ImportCall_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . AND_ASSIGN AssignmentExpression_In_Yield]*
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . ASSIGN AssignmentExpression_In_Yield]*
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . NULLISH_ASSIGN AssignmentExpression_In_Yield]*
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . OR_ASSIGN AssignmentExpression_In_Yield]*
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield . AssignmentOperator AssignmentExpression_In_Yield]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> Literal .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield . AND BitwiseORExpression_In_Yield]*
    // [LogicalORExpression_In_Yield -> LogicalANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [LogicalORExpression_In_Yield -> LogicalORExpression_In_Yield . OR LogicalANDExpression_In_Yield]*
    // [ShortCircuitExpression_In_Yield -> LogicalORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [CoverCallExpressionAndAsyncArrowHead_Yield -> MemberExpression_Yield . Arguments_Yield]*
    // [MemberExpression_Yield -> MemberExpression_Yield . DOT IdentifierName]*
    // [MemberExpression_Yield -> MemberExpression_Yield . DOT PrivateIdentifier]*
    // [MemberExpression_Yield -> MemberExpression_Yield . LBRACK Expression_In_Yield RBRACK]*
    // [MemberExpression_Yield -> MemberExpression_Yield . TemplateLiteral_Yield_Tagged]*
    // [NewExpression_Yield -> MemberExpression_Yield .]*
    // [OptionalExpression_Yield -> MemberExpression_Yield . OptionalChain_Yield]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield -> MultiplicativeExpression_Yield .]*
    // [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield . MultiplicativeOperator ExponentiationExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression_Yield -> NewExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> ObjectLiteral_Yield .]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression_Yield -> OptionalExpression_Yield .]*
    // [OptionalExpression_Yield -> OptionalExpression_Yield . OptionalChain_Yield]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield -> PrimaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield -> RelationalExpression_In_Yield .]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield .]*
    // [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield . CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral_Yield -> SubstitutionTemplate_Yield .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> SuperCall_Yield .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield -> SuperProperty_Yield .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> TemplateLiteral_Yield .]*
    Goal::InputElementTemplateTail,
    // [ExponentiationExpression_Yield -> UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [ExponentiationExpression_Yield -> UpdateExpression_Yield . EXP ExponentiationExpression_Yield]*
    // [UnaryExpression_Yield -> UpdateExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> YieldExpression_In .]*
    Goal::InputElementTemplateTail,
    // [BindingPropertyList_Yield -> BindingPropertyList_Yield COMMA . BindingProperty_Yield]*
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA . RBRACE]*
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA . BindingRestProperty_Yield RBRACE]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield RBRACE .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield -> LBRACE BindingRestProperty_Yield RBRACE .]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield -> PropertyName_Yield COLON . BindingElement_Yield]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . BindingRestElement_Yield RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . Elision RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA . Elision BindingRestElement_Yield RBRACK]*
    // [BindingElementList_Yield -> BindingElementList_Yield COMMA . BindingElisionElement_Yield]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElisionElement_Yield -> Elision BindingElement_Yield .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK Elision BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [Initializer_In_Yield -> ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield -> FormalParameterList_Yield COMMA FormalParameter_Yield .]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> FormalParameterList_Yield COMMA FunctionRestParameter_Yield .]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [UniqueFormalParameters_Yield_Await -> FormalParameters_Yield_Await .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition -> GET ClassElementName LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement -> DO Statement WHILE LPAREN Expression_In RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement]*
    Goal::InputElementRegExp,
    // [ConciseBody -> LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Await -> ASYNC AsyncArrowBindingIdentifier ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [AsyncConciseBody -> LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [ArrowFunction_Await -> ArrowParameters_Await ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Await -> BitwiseANDExpression_Await BIT_AND EqualityExpression_Await .]*
    // [EqualityExpression_Await -> EqualityExpression_Await . EQ RelationalExpression_Await]*
    // [EqualityExpression_Await -> EqualityExpression_Await . EQ_STRICT RelationalExpression_Await]*
    // [EqualityExpression_Await -> EqualityExpression_Await . NE RelationalExpression_Await]*
    // [EqualityExpression_Await -> EqualityExpression_Await . NE_STRICT RelationalExpression_Await]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Await -> BitwiseORExpression_Await BIT_OR BitwiseXORExpression_Await .]*
    // [BitwiseXORExpression_Await -> BitwiseXORExpression_Await . BIT_XOR BitwiseANDExpression_Await]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Await -> BitwiseANDExpression_Await . BIT_AND EqualityExpression_Await]*
    // [BitwiseXORExpression_Await -> BitwiseXORExpression_Await BIT_XOR BitwiseANDExpression_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    // [CoalesceExpression_Await -> CoalesceExpressionHead_Await NULLISH BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Await -> CoverCallExpressionAndAsyncArrowHead_Await ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [EqualityExpression_Await -> EqualityExpression_Await EQ RelationalExpression_Await .]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // [EqualityExpression_Await -> EqualityExpression_Await EQ_STRICT RelationalExpression_Await .]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // [EqualityExpression_Await -> EqualityExpression_Await NE RelationalExpression_Await .]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // [EqualityExpression_Await -> EqualityExpression_Await NE_STRICT RelationalExpression_Await .]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . GTE ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . INSTANCEOF ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LT ShiftExpression_Await]*
    // [RelationalExpression_Await -> RelationalExpression_Await . LTE ShiftExpression_Await]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await AND_ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await NULLISH_ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await OR_ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await AssignmentOperator AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    // [LogicalANDExpression_Await -> LogicalANDExpression_Await AND BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Await -> BitwiseORExpression_Await . BIT_OR BitwiseXORExpression_Await]*
    // [LogicalANDExpression_Await -> BitwiseORExpression_Await .]*
    Goal::InputElementDiv,
    // [LogicalANDExpression_Await -> LogicalANDExpression_Await . AND BitwiseORExpression_Await]*
    // [LogicalORExpression_Await -> LogicalORExpression_Await OR LogicalANDExpression_Await .]*
    Goal::InputElementDiv,
    // [RelationalExpression_Await -> RelationalExpression_Await GT ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Await -> RelationalExpression_Await GTE ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Await -> RelationalExpression_Await INSTANCEOF ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Await -> RelationalExpression_Await LT ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Await -> RelationalExpression_Await LTE ShiftExpression_Await .]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SAR AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHL AdditiveExpression_Await]*
    // [ShiftExpression_Await -> ShiftExpression_Await . SHR AdditiveExpression_Await]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL AssignmentExpression_In_Await . COLON AssignmentExpression_Await]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration IN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ConditionalExpression -> ShortCircuitExpression CONDITIONAL AssignmentExpression_In COLON AssignmentExpression .]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement -> IF LPAREN Expression_In RPAREN Statement ELSE Statement .]*
    Goal::InputElementRegExp,
    // [CaseClause -> CASE Expression_In . COLON]*
    // [CaseClause -> CASE Expression_In . COLON StatementList]*
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [DefaultClause -> DEFAULT COLON .]*
    // [DefaultClause -> DEFAULT COLON . StatementList]*
    Goal::InputElementRegExp,
    // [CaseBlock -> LBRACE CaseClauses RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses -> CaseClauses CaseClause .]*
    Goal::InputElementDiv,
    // [CaseBlock -> LBRACE CaseClauses DefaultClause . RBRACE]*
    // [CaseBlock -> LBRACE CaseClauses DefaultClause . CaseClauses RBRACE]*
    Goal::InputElementDiv,
    // [CaseBlock -> LBRACE DefaultClause RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock -> LBRACE DefaultClause CaseClauses . RBRACE]*
    // [CaseClauses -> CaseClauses . CaseClause]*
    Goal::InputElementDiv,
    // [Catch -> CATCH LPAREN CatchParameter RPAREN Block .]*
    Goal::InputElementRegExp,
    // [ArrayBindingPattern -> LBRACK BindingElementList COMMA Elision BindingRestElement RBRACK .]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN . Expression_In RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding . IN Expression_In RPAREN Statement_Return]*
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding . OF AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList . SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [VariableDeclarationList -> VariableDeclarationList . COMMA VariableDeclaration]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF . AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF . AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [IfStatement_Return -> IF LPAREN Expression_In RPAREN . Statement_Return ELSE Statement_Return]*
    // [IfStatement_Return -> IF LPAREN Expression_In RPAREN . Statement_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Return -> SWITCH LPAREN Expression_In RPAREN . CaseBlock_Return]*
    Goal::InputElementDiv,
    // [Catch_Return -> CATCH LPAREN . CatchParameter RPAREN Block_Return]*
    Goal::InputElementDiv,
    // [Catch_Return -> CATCH Block_Return .]*
    Goal::InputElementRegExp,
    // [Finally_Return -> FINALLY Block_Return .]*
    Goal::InputElementRegExp,
    // [TryStatement_Return -> TRY Block_Return Catch_Return Finally_Return .]*
    Goal::InputElementRegExp,
    // [WhileStatement_Return -> WHILE LPAREN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Return -> WITH LPAREN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> GET ClassElementName_Await LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ComputedPropertyName_Await -> LBRACK AssignmentExpression_In_Await RBRACK .]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> SET ClassElementName_Await LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Await -> LBRACE PropertyDefinitionList_Await COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinitionList_Await -> PropertyDefinitionList_Await COMMA PropertyDefinition_Await .]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Await -> PropertyName_Await COLON AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [ClassElement_Await -> STATIC FieldDefinition_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail_Await -> ClassHeritage_Await LBRACE ClassBody_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN . Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForDeclaration_Await -> LetOrConst . ForBinding_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForBinding_Await -> BindingIdentifier_Await .]*
    // [VariableDeclaration_Await -> BindingIdentifier_Await .]*
    // [VariableDeclaration_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [ForBinding_Await -> BindingPattern_Await .]*
    // [VariableDeclaration_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await . IN Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [VariableDeclarationList_Await -> VariableDeclarationList_Await . COMMA VariableDeclaration_Await]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_Await -> VariableDeclaration_Await .]*
    Goal::InputElementDiv,
    // [Expression_Await -> Expression_Await COMMA . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForBinding_Await -> BindingIdentifier_Await .]*
    // [LexicalBinding_Await -> BindingIdentifier_Await .]*
    // [LexicalBinding_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [BindingList_Await -> BindingList_Await . COMMA LexicalBinding_Await]*
    // [LexicalDeclaration_Await -> LetOrConst BindingList_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForBinding_Await -> BindingPattern_Await .]*
    // [LexicalBinding_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [ForDeclaration_Await -> LetOrConst ForBinding_Await .]*
    Goal::InputElementDiv,
    // [BindingList_Await -> LexicalBinding_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN . Statement_Await_Return ELSE Statement_Await_Return]*
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN . Statement_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Await_Return -> SWITCH LPAREN Expression_In_Await RPAREN . CaseBlock_Await_Return]*
    Goal::InputElementDiv,
    // [Catch_Await_Return -> CATCH LPAREN . CatchParameter_Await RPAREN Block_Await_Return]*
    Goal::InputElementDiv,
    // [Catch_Await_Return -> CATCH Block_Await_Return .]*
    Goal::InputElementRegExp,
    // [Finally_Await_Return -> FINALLY Block_Await_Return .]*
    Goal::InputElementRegExp,
    // [TryStatement_Await_Return -> TRY Block_Await_Return Catch_Await_Return Finally_Await_Return .]*
    Goal::InputElementRegExp,
    // [VariableDeclarationList_In_Await -> VariableDeclarationList_In_Await COMMA VariableDeclaration_In_Await .]*
    Goal::InputElementDiv,
    // [WhileStatement_Await_Return -> WHILE LPAREN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Await_Return -> WITH LPAREN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [BindingList_In_Await -> BindingList_In_Await COMMA LexicalBinding_In_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Await -> LBRACK ElementList_Await COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Await -> ElementList_Await COMMA Elision AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [ElementList_Await -> ElementList_Await COMMA Elision SpreadElement_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingIdentifier_Await . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingPattern_Await . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList_Await -> ArgumentList_Await COMMA ELLIPSIS . AssignmentExpression_In_Await]*
    Goal::InputElementRegExp,
    // [Arguments_Await -> LPAREN ArgumentList_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Await -> ArgumentList_Await COMMA AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [TemplateMiddleList_Await -> TemplateMiddleList_Await TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [TemplateMiddleList_Await_Tagged -> TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Await_Tagged -> TemplateMiddleList_Await_Tagged TemplateMiddle . Expression_In_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Await_Tagged -> TemplateMiddleList_Await_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Await -> OptionalChain_Await LBRACK Expression_In_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Await -> ShortCircuitExpression_In_Await CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA RBRACE .]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Await -> BindingPropertyList_Await COMMA BindingProperty_Await .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA BindingRestProperty_Await . RBRACE]*
    Goal::InputElementDiv,
    // [BindingProperty_Await -> PropertyName_Await COLON BindingElement_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElementList_Await -> BindingElementList_Await COMMA BindingElisionElement_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision . RBRACK]*
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision . BindingRestElement_Await RBRACK]*
    // [BindingElisionElement_Await -> Elision . BindingElement_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK Elision BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [BindingRestProperty_Yield_Await -> ELLIPSIS BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // [UnaryExpression_Yield_Await -> ADD . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AwaitExpression_Yield -> AWAIT . UnaryExpression_Yield_Await]*
    // [BindingIdentifier_Yield_Await -> AWAIT .]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield_Await -> BIT_NOT . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ClassExpression_Yield_Await -> CLASS . BindingIdentifier_Yield_Await ClassTail_Yield_Await]*
    // [ClassExpression_Yield_Await -> CLASS . ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // [UpdateExpression_Yield_Await -> DEC . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield_Await -> DELETE . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ImportCall_Yield_Await -> IMPORT . LPAREN AssignmentExpression_In_Yield_Await RPAREN]*
    // [ImportMeta -> IMPORT . DOT META]*
    Goal::InputElementDiv,
    // [UpdateExpression_Yield_Await -> INC . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ObjectLiteral_Yield_Await -> LBRACE . RBRACE]*
    // [ObjectLiteral_Yield_Await -> LBRACE . PropertyDefinitionList_Yield_Await COMMA RBRACE]*
    // [ObjectLiteral_Yield_Await -> LBRACE . PropertyDefinitionList_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield_Await -> LBRACK . RBRACK]*
    // [ArrayLiteral_Yield_Await -> LBRACK . ElementList_Yield_Await COMMA RBRACK]*
    // [ArrayLiteral_Yield_Await -> LBRACK . ElementList_Yield_Await COMMA Elision RBRACK]*
    // [ArrayLiteral_Yield_Await -> LBRACK . ElementList_Yield_Await RBRACK]*
    // [ArrayLiteral_Yield_Await -> LBRACK . Elision RBRACK]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await COMMA ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await COMMA ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN . Expression_In_Yield_Await RPAREN]*
    Goal::InputElementRegExp,
    // [MemberExpression_Yield_Await -> NEW . MemberExpression_Yield_Await Arguments_Yield_Await]*
    // [NewExpression_Yield_Await -> NEW . NewExpression_Yield_Await]*
    // [NewTarget -> NEW . DOT TARGET]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield_Await -> NOT . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [TemplateLiteral_Yield_Await -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> PrivateIdentifier . IN ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [PrimaryExpression_Yield_Await -> RegularExpressionLiteral .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> SUB . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [SuperCall_Yield_Await -> SUPER . Arguments_Yield_Await]*
    // [SuperProperty_Yield_Await -> SUPER . DOT IdentifierName]*
    // [SuperProperty_Yield_Await -> SUPER . LBRACK Expression_In_Yield_Await RBRACK]*
    Goal::InputElementDiv,
    // [PrimaryExpression_Yield_Await -> THIS .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> TYPEOF . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [SubstitutionTemplate_Yield_Await -> TemplateHead . Expression_In_Yield_Await TemplateSpans_Yield_Await]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield_Await -> VOID . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [BindingIdentifier_Yield_Await -> YIELD .]*
    // [YieldExpression_In_Await -> YIELD .]*
    // [YieldExpression_In_Await -> YIELD . MUL AssignmentExpression_In_Yield_Await]*
    // [YieldExpression_In_Await -> YIELD . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExpOrTemplateTail,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> ArrayLiteral_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> ArrowFunction_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In_Yield_Await -> ArrowParameters_Yield_Await . ARROW ConciseBody_In]*
    Goal::InputElementDiv,
    // [ComputedPropertyName_Yield_Await -> LBRACK AssignmentExpression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [AssignmentExpression_In_Yield_Await -> AsyncArrowFunction_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> AsyncFunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> AsyncGeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> AwaitExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [ArrowParameters_Yield_Await -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await . BIT_AND EqualityExpression_In_Yield_Await]*
    // [BitwiseXORExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    // [CoalesceExpressionHead_In_Yield_Await -> BitwiseORExpression_In_Yield_Await .]*
    // [LogicalANDExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await .]*
    // [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await . BIT_XOR BitwiseANDExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await . DOT IdentifierName]*
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await . DOT PrivateIdentifier]*
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await . Arguments_Yield_Await]*
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    // [LeftHandSideExpression_Yield_Await -> CallExpression_Yield_Await .]*
    // [OptionalExpression_Yield_Await -> CallExpression_Yield_Await . OptionalChain_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> ClassExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [CoalesceExpression_In_Yield_Await -> CoalesceExpressionHead_In_Yield_Await . NULLISH BitwiseORExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead_In_Yield_Await -> CoalesceExpression_In_Yield_Await .]*
    // [ShortCircuitExpression_In_Yield_Await -> CoalesceExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> ConditionalExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await . ARROW AsyncConciseBody_In]*
    // [CallExpression_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ArrowParameters_Yield_Await -> CoverParenthesizedExpressionAndArrowParameterList_Yield_Await .]*
    // [PrimaryExpression_Yield_Await -> CoverParenthesizedExpressionAndArrowParameterList_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await .]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ RelationalExpression_In_Yield_Await]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ_STRICT RelationalExpression_In_Yield_Await]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE RelationalExpression_In_Yield_Await]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE_STRICT RelationalExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeExpression_Yield_Await -> ExponentiationExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> FunctionExpression .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> GeneratorExpression .]*
    Goal::InputElementTemplateTail,
    // [BindingIdentifier_Yield_Await -> Identifier .]*
    // [IdentifierReference_Yield_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> IdentifierReference_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> ImportCall_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . AND_ASSIGN AssignmentExpression_In_Yield_Await]*
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . ASSIGN AssignmentExpression_In_Yield_Await]*
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . NULLISH_ASSIGN AssignmentExpression_In_Yield_Await]*
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . OR_ASSIGN AssignmentExpression_In_Yield_Await]*
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await . AssignmentOperator AssignmentExpression_In_Yield_Await]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> Literal .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await . AND BitwiseORExpression_In_Yield_Await]*
    // [LogicalORExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [LogicalORExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await . OR LogicalANDExpression_In_Yield_Await]*
    // [ShortCircuitExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [CoverCallExpressionAndAsyncArrowHead_Yield_Await -> MemberExpression_Yield_Await . Arguments_Yield_Await]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT IdentifierName]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT PrivateIdentifier]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    // [NewExpression_Yield_Await -> MemberExpression_Yield_Await .]*
    // [OptionalExpression_Yield_Await -> MemberExpression_Yield_Await . OptionalChain_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield_Await -> MetaProperty .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield_Await -> MultiplicativeExpression_Yield_Await .]*
    // [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await . MultiplicativeOperator ExponentiationExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression_Yield_Await -> NewExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> ObjectLiteral_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [LeftHandSideExpression_Yield_Await -> OptionalExpression_Yield_Await .]*
    // [OptionalExpression_Yield_Await -> OptionalExpression_Yield_Await . OptionalChain_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield_Await -> PrimaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await .]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await .]*
    // [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await . CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral_Yield_Await -> SubstitutionTemplate_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> SuperCall_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield_Await -> SuperProperty_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> TemplateLiteral_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ExponentiationExpression_Yield_Await -> UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ExponentiationExpression_Yield_Await -> UpdateExpression_Yield_Await . EXP ExponentiationExpression_Yield_Await]*
    // [UnaryExpression_Yield_Await -> UpdateExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> YieldExpression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [BindingPropertyList_Yield_Await -> BindingPropertyList_Yield_Await COMMA . BindingProperty_Yield_Await]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA . RBRACE]*
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA . BindingRestProperty_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await RBRACE .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingRestProperty_Yield_Await RBRACE .]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield_Await -> PropertyName_Yield_Await COLON . BindingElement_Yield_Await]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . BindingRestElement_Yield_Await RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . Elision RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA . Elision BindingRestElement_Yield_Await RBRACK]*
    // [BindingElementList_Yield_Await -> BindingElementList_Yield_Await COMMA . BindingElisionElement_Yield_Await]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElisionElement_Yield_Await -> Elision BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK Elision BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [Initializer_In_Yield_Await -> ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [FormalParameterList_Yield_Await -> FormalParameterList_Yield_Await COMMA FormalParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield_Await -> FormalParameterList_Yield_Await COMMA FunctionRestParameter_Yield_Await .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Await -> DO Statement_Await WHILE . LPAREN Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN . VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN . ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN . LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN VAR . ForBinding_Await IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR . VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [Expression_Await -> Expression_Await . COMMA AssignmentExpression_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await . IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . AND_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . NULLISH_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . OR_ASSIGN AssignmentExpression_Await]*
    // [AssignmentExpression_Await -> LeftHandSideExpression_Await . AssignmentOperator AssignmentExpression_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await . IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await .]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . DEC]*
    // [UpdateExpression_Await -> LeftHandSideExpression_Await . INC]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [IfStatement_Await -> IF LPAREN Expression_In_Await . RPAREN Statement_Await ELSE Statement_Await]*
    // [IfStatement_Await -> IF LPAREN Expression_In_Await . RPAREN Statement_Await !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Await -> LBRACE StatementList_Await RBRACE .]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [SwitchStatement_Await -> SWITCH LPAREN Expression_In_Await . RPAREN CaseBlock_Await]*
    Goal::InputElementDiv,
    // [Catch_Await -> CATCH . LPAREN CatchParameter_Await RPAREN Block_Await]*
    // [Catch_Await -> CATCH . Block_Await]*
    Goal::InputElementDiv,
    // [Finally_Await -> FINALLY . Block_Await]*
    Goal::InputElementDiv,
    // [TryStatement_Await -> TRY Block_Await Catch_Await .]*
    // [TryStatement_Await -> TRY Block_Await Catch_Await . Finally_Await]*
    Goal::InputElementRegExp,
    // [TryStatement_Await -> TRY Block_Await Finally_Await .]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [WhileStatement_Await -> WHILE LPAREN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [WithStatement_Await -> WITH LPAREN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [LabelledItem_Await -> FunctionDeclaration_Await .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Await -> LabelIdentifier_Await COLON LabelledItem_Await .]*
    Goal::InputElementRegExp,
    // [LabelledItem_Await -> Statement_Await .]*
    Goal::InputElementRegExp,
    // [FunctionExpression -> FUNCTION LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [IdentifierReference_Yield -> AWAIT .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield -> CoverParenthesizedExpressionAndArrowParameterList_Yield .]*
    Goal::InputElementTemplateTail,
    // [IdentifierReference_Yield -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> ADD UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> UpdateExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [AsyncArrowBindingIdentifier_Yield -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // [UnaryExpression_Yield -> BIT_NOT UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [ClassHeritage_Yield -> EXTENDS . LeftHandSideExpression_Yield]*
    Goal::InputElementRegExp,
    // [ClassTail_Yield -> LBRACE . RBRACE]*
    // [ClassTail_Yield -> LBRACE . ClassBody_Yield RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression_Yield -> CLASS BindingIdentifier_Yield . ClassTail_Yield]*
    Goal::InputElementDiv,
    // [ClassTail_Yield -> ClassHeritage_Yield . LBRACE RBRACE]*
    // [ClassTail_Yield -> ClassHeritage_Yield . LBRACE ClassBody_Yield RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression_Yield -> CLASS ClassTail_Yield .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Yield -> DEC UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> DELETE UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [ImportCall_Yield -> IMPORT LPAREN . AssignmentExpression_In_Yield RPAREN]*
    Goal::InputElementRegExp,
    // [UpdateExpression_Yield -> INC UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod_Yield -> ASYNC . MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncMethod_Yield -> ASYNC . ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield -> ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Yield -> GET . ClassElementName_Yield LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield -> MUL . ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassElementName_Yield -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // [MethodDefinition_Yield -> SET . ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> AsyncGeneratorMethod_Yield .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> AsyncMethod_Yield .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> ClassElementName_Yield . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield -> CoverInitializedName_Yield .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> GeneratorMethod_Yield .]*
    Goal::InputElementDiv,
    // [CoverInitializedName_Yield -> IdentifierReference_Yield . Initializer_In_Yield]*
    // [PropertyDefinition_Yield -> IdentifierReference_Yield .]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield -> MethodDefinition_Yield .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield . COMMA RBRACE]*
    // [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield . RBRACE]*
    // [PropertyDefinitionList_Yield -> PropertyDefinitionList_Yield . COMMA PropertyDefinition_Yield]*
    Goal::InputElementDiv,
    // [PropertyDefinitionList_Yield -> PropertyDefinition_Yield .]*
    Goal::InputElementDiv,
    // [ClassElementName_Yield -> PropertyName_Yield .]*
    // [PropertyDefinition_Yield -> PropertyName_Yield . COLON AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // [SpreadElement_Yield -> ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [ArrayLiteral_Yield -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield -> AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield . COMMA RBRACK]*
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield . COMMA Elision RBRACK]*
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield . RBRACK]*
    // [ElementList_Yield -> ElementList_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ElementList_Yield -> ElementList_Yield . COMMA Elision AssignmentExpression_In_Yield]*
    // [ElementList_Yield -> ElementList_Yield . COMMA Elision SpreadElement_Yield]*
    // [ElementList_Yield -> ElementList_Yield . COMMA SpreadElement_Yield]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield -> LBRACK Elision . RBRACK]*
    // [ElementList_Yield -> Elision . AssignmentExpression_In_Yield]*
    // [ElementList_Yield -> Elision . SpreadElement_Yield]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [ElementList_Yield -> SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS . BindingIdentifier_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS . BindingPattern_Yield RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . COMMA ELLIPSIS BindingIdentifier_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . COMMA ELLIPSIS BindingPattern_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield . RPAREN]*
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // [SuperProperty_Yield -> SUPER . DOT IdentifierName]*
    // [SuperProperty_Yield -> SUPER . LBRACK Expression_In_Yield RBRACK]*
    Goal::InputElementDiv,
    // [MemberExpression_Yield -> NEW MemberExpression_Yield . Arguments_Yield]*
    // [MemberExpression_Yield -> MemberExpression_Yield . DOT IdentifierName]*
    // [MemberExpression_Yield -> MemberExpression_Yield . DOT PrivateIdentifier]*
    // [MemberExpression_Yield -> MemberExpression_Yield . LBRACK Expression_In_Yield RBRACK]*
    // [MemberExpression_Yield -> MemberExpression_Yield . TemplateLiteral_Yield_Tagged]*
    // [NewExpression_Yield -> MemberExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [NewExpression_Yield -> NEW NewExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> NOT UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> PrivateIdentifier IN . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield -> SUB UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Yield -> SUPER DOT . IdentifierName]*
    Goal::InputElementDiv,
    // [SuperProperty_Yield -> SUPER LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // [Arguments_Yield -> LPAREN . RPAREN]*
    // [Arguments_Yield -> LPAREN . ArgumentList_Yield COMMA RPAREN]*
    // [Arguments_Yield -> LPAREN . ArgumentList_Yield RPAREN]*
    Goal::InputElementRegExp,
    // [SuperCall_Yield -> SUPER Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> TYPEOF UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [SubstitutionTemplate_Yield -> TemplateHead Expression_In_Yield . TemplateSpans_Yield]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield -> VOID UnaryExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [YieldExpression_In -> YIELD MUL . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [YieldExpression_In -> YIELD AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield ADD . MultiplicativeExpression_Yield]*
    Goal::InputElementRegExp,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield SUB . MultiplicativeExpression_Yield]*
    Goal::InputElementRegExp,
    // [ArrowFunction_In_Yield -> ArrowParameters_Yield ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // [ComputedPropertyName_Yield -> LBRACK AssignmentExpression_In_Yield RBRACK .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield BIT_AND . EqualityExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield BIT_OR . BitwiseXORExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield BIT_XOR . BitwiseANDExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [CallExpression_Yield -> CallExpression_Yield DOT . IdentifierName]*
    // [CallExpression_Yield -> CallExpression_Yield DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [CallExpression_Yield -> CallExpression_Yield LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // [TemplateLiteral_Yield_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OPTIONAL_CHAINING . IdentifierName]*
    // [OptionalChain_Yield -> OPTIONAL_CHAINING . LBRACK Expression_In_Yield RBRACK]*
    // [OptionalChain_Yield -> OPTIONAL_CHAINING . PrivateIdentifier]*
    // [OptionalChain_Yield -> OPTIONAL_CHAINING . Arguments_Yield]*
    // [OptionalChain_Yield -> OPTIONAL_CHAINING . TemplateLiteral_Yield_Tagged]*
    Goal::InputElementDiv,
    // [SubstitutionTemplate_Yield_Tagged -> TemplateHead . Expression_In_Yield TemplateSpans_Yield_Tagged]*
    Goal::InputElementRegExp,
    // [CallExpression_Yield -> CallExpression_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OptionalChain_Yield . DOT IdentifierName]*
    // [OptionalChain_Yield -> OptionalChain_Yield . DOT PrivateIdentifier]*
    // [OptionalChain_Yield -> OptionalChain_Yield . LBRACK Expression_In_Yield RBRACK]*
    // [OptionalChain_Yield -> OptionalChain_Yield . Arguments_Yield]*
    // [OptionalChain_Yield -> OptionalChain_Yield . TemplateLiteral_Yield_Tagged]*
    // [OptionalExpression_Yield -> CallExpression_Yield OptionalChain_Yield .]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral_Yield_Tagged -> SubstitutionTemplate_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> CallExpression_Yield TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CoalesceExpression_In_Yield -> CoalesceExpressionHead_In_Yield NULLISH . BitwiseORExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ_STRICT . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE_STRICT . RelationalExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AND_ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield DEC .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield INC .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield OR_ASSIGN . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AssignmentOperator . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield AND . BitwiseORExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [LogicalORExpression_In_Yield -> LogicalORExpression_In_Yield OR . LogicalANDExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [MemberExpression_Yield -> MemberExpression_Yield DOT . IdentifierName]*
    // [MemberExpression_Yield -> MemberExpression_Yield DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [MemberExpression_Yield -> MemberExpression_Yield LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // [CoverCallExpressionAndAsyncArrowHead_Yield -> MemberExpression_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OptionalChain_Yield . DOT IdentifierName]*
    // [OptionalChain_Yield -> OptionalChain_Yield . DOT PrivateIdentifier]*
    // [OptionalChain_Yield -> OptionalChain_Yield . LBRACK Expression_In_Yield RBRACK]*
    // [OptionalChain_Yield -> OptionalChain_Yield . Arguments_Yield]*
    // [OptionalChain_Yield -> OptionalChain_Yield . TemplateLiteral_Yield_Tagged]*
    // [OptionalExpression_Yield -> MemberExpression_Yield OptionalChain_Yield .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield -> MemberExpression_Yield TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield MultiplicativeOperator . ExponentiationExpression_Yield]*
    Goal::InputElementRegExp,
    // [OptionalChain_Yield -> OptionalChain_Yield . DOT IdentifierName]*
    // [OptionalChain_Yield -> OptionalChain_Yield . DOT PrivateIdentifier]*
    // [OptionalChain_Yield -> OptionalChain_Yield . LBRACK Expression_In_Yield RBRACK]*
    // [OptionalChain_Yield -> OptionalChain_Yield . Arguments_Yield]*
    // [OptionalChain_Yield -> OptionalChain_Yield . TemplateLiteral_Yield_Tagged]*
    // [OptionalExpression_Yield -> OptionalExpression_Yield OptionalChain_Yield .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield IN . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield INSTANCEOF . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Yield -> ShiftExpression_Yield SAR . AdditiveExpression_Yield]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Yield -> ShiftExpression_Yield SHL . AdditiveExpression_Yield]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Yield -> ShiftExpression_Yield SHR . AdditiveExpression_Yield]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL . AssignmentExpression_In_Yield COLON AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [ExponentiationExpression_Yield -> UpdateExpression_Yield EXP . ExponentiationExpression_Yield]*
    Goal::InputElementRegExp,
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA RBRACE .]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Yield -> BindingPropertyList_Yield COMMA BindingProperty_Yield .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA BindingRestProperty_Yield . RBRACE]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield -> PropertyName_Yield COLON BindingElement_Yield .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElementList_Yield -> BindingElementList_Yield COMMA BindingElisionElement_Yield .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision . RBRACK]*
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision . BindingRestElement_Yield RBRACK]*
    // [BindingElisionElement_Yield -> Elision . BindingElement_Yield]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK Elision BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    // [AsyncFunctionDeclaration_Yield -> ASYNC . FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration_Yield -> ASYNC . FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield -> AWAIT .]*
    // [IdentifierReference_Yield -> AWAIT .]*
    // [LabelIdentifier_Yield -> AWAIT .]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield -> BREAK . SEMI_COLON]*
    // [BreakStatement_Yield -> BREAK . LabelIdentifier_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassDeclaration_Yield -> CLASS . BindingIdentifier_Yield ClassTail_Yield]*
    Goal::InputElementDiv,
    // [ContinueStatement_Yield -> CONTINUE . SEMI_COLON]*
    // [ContinueStatement_Yield -> CONTINUE . LabelIdentifier_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Return -> DO . Statement_Yield_Return WHILE LPAREN Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR . LPAREN VAR ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR . LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR . LPAREN ForDeclaration_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR . LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR . LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR . LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR . LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield -> FUNCTION . BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    // [GeneratorDeclaration_Yield -> FUNCTION . MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Return -> IF . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return ELSE Statement_Yield_Return]*
    // [IfStatement_Yield_Return -> IF . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Yield_Return -> LBRACE . RBRACE]*
    // [Block_Yield_Return -> LBRACE . StatementList_Yield_Return RBRACE]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Yield -> RETURN . SEMI_COLON]*
    // [ReturnStatement_Yield -> RETURN . Expression_In_Yield SEMI_COLON]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Yield_Return -> SWITCH . LPAREN Expression_In_Yield RPAREN CaseBlock_Yield_Return]*
    Goal::InputElementDiv,
    // [ThrowStatement_Yield -> THROW . Expression_In_Yield SEMI_COLON]*
    Goal::InputElementRegExp,
    // [TryStatement_Yield_Return -> TRY . Block_Yield_Return Catch_Yield_Return]*
    // [TryStatement_Yield_Return -> TRY . Block_Yield_Return Catch_Yield_Return Finally_Yield_Return]*
    // [TryStatement_Yield_Return -> TRY . Block_Yield_Return Finally_Yield_Return]*
    Goal::InputElementDiv,
    // [VariableStatement_Yield -> VAR . VariableDeclarationList_In_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Return -> WHILE . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [WithStatement_Yield_Return -> WITH . LPAREN Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Yield -> AsyncFunctionDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // [HoistableDeclaration_Yield -> AsyncGeneratorDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> BlockStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [BlockStatement_Yield_Return -> Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> BreakStatement_Yield .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> BreakableStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [Declaration_Yield -> ClassDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> ContinueStatement_Yield .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // [StatementListItem_Yield_Return -> Declaration_Yield .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Yield_Return -> DoWhileStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> ExpressionStatement_Yield .]*
    Goal::InputElementRegExp,
    // [ExpressionStatement_Yield -> Expression_In_Yield . SEMI_COLON]*
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // [IterationStatement_Yield_Return -> ForInOfStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Yield_Return -> ForStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorBody -> FunctionBody_Yield .]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Yield -> FunctionDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // [FunctionBody_Yield -> FunctionStatementList_Yield .]*
    Goal::InputElementDiv,
    // [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Yield -> GeneratorDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // [Declaration_Yield -> HoistableDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // [BindingIdentifier_Yield -> Identifier .]*
    // [IdentifierReference_Yield -> Identifier .]*
    // [LabelIdentifier_Yield -> Identifier .]*
    Goal::InputElementDiv,
    // [Statement_Yield_Return -> IfStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Yield_Return -> IterationStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Yield_Return -> LabelIdentifier_Yield . COLON LabelledItem_Yield_Return]*
    Goal::InputElementDiv,
    // [Statement_Yield_Return -> LabelledStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [LexicalDeclaration_In_Yield -> LetOrConst . BindingList_In_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // [Declaration_Yield -> LexicalDeclaration_In_Yield .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> ReturnStatement_Yield .]*
    Goal::InputElementRegExp,
    // [StatementList_Yield_Return -> StatementListItem_Yield_Return .]*
    Goal::InputElementRegExp,
    // [FunctionStatementList_Yield -> StatementList_Yield_Return .]*
    // [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // [StatementListItem_Yield_Return -> Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Yield_Return -> SwitchStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> ThrowStatement_Yield .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> TryStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> VariableStatement_Yield .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Yield_Return -> WhileStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Return -> WithStatement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [MethodDefinition -> GET ClassElementName LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Await -> ASYNC AsyncArrowBindingIdentifier ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL AssignmentExpression_In_Await COLON . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause -> CASE Expression_In COLON .]*
    // [CaseClause -> CASE Expression_In COLON . StatementList]*
    Goal::InputElementRegExp,
    // [DefaultClause -> DEFAULT COLON StatementList .]*
    // [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // [CaseBlock -> LBRACE CaseClauses DefaultClause RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock -> LBRACE CaseClauses DefaultClause CaseClauses . RBRACE]*
    // [CaseClauses -> CaseClauses . CaseClause]*
    Goal::InputElementDiv,
    // [CaseBlock -> LBRACE DefaultClause CaseClauses RBRACE .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN Expression_In . RPAREN SEMI_COLON]*
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF . AssignmentExpression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . SEMI_COLON Expression_In RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON . Expression_In SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF AssignmentExpression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return . ELSE Statement_Return]*
    // [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return . !~[ELSE]]*
    // [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Return -> LBRACE . RBRACE]*
    // [CaseBlock_Return -> LBRACE . CaseClauses_Return RBRACE]*
    // [CaseBlock_Return -> LBRACE . CaseClauses_Return DefaultClause_Return RBRACE]*
    // [CaseBlock_Return -> LBRACE . CaseClauses_Return DefaultClause_Return CaseClauses_Return RBRACE]*
    // [CaseBlock_Return -> LBRACE . DefaultClause_Return RBRACE]*
    // [CaseBlock_Return -> LBRACE . DefaultClause_Return CaseClauses_Return RBRACE]*
    Goal::InputElementDiv,
    // [SwitchStatement_Return -> SWITCH LPAREN Expression_In RPAREN CaseBlock_Return .]*
    Goal::InputElementRegExp,
    // [Catch_Return -> CATCH LPAREN CatchParameter . RPAREN Block_Return]*
    Goal::InputElementDiv,
    // [WhileStatement_Return -> WHILE LPAREN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [WithStatement_Return -> WITH LPAREN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN Expression_In_Await . RPAREN SEMI_COLON]*
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [ForBinding_Await -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // [ForBinding_Await -> BindingPattern_Await .]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Initializer_Await -> ASSIGN . AssignmentExpression_Await]*
    Goal::InputElementRegExp,
    // [VariableDeclaration_Await -> BindingIdentifier_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Await -> BindingPattern_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [VariableDeclarationList_Await -> VariableDeclarationList_Await COMMA . VariableDeclaration_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_Await -> Expression_Await COMMA AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [LexicalBinding_Await -> BindingIdentifier_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // [BindingList_Await -> BindingList_Await COMMA . LexicalBinding_Await]*
    Goal::InputElementDiv,
    // [LexicalDeclaration_Await -> LetOrConst BindingList_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_Await -> BindingPattern_Await Initializer_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return . ELSE Statement_Await_Return]*
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return . !~[ELSE]]*
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await_Return -> LBRACE . RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE . CaseClauses_Await_Return RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE . CaseClauses_Await_Return DefaultClause_Await_Return RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE . CaseClauses_Await_Return DefaultClause_Await_Return CaseClauses_Await_Return RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE . DefaultClause_Await_Return RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE . DefaultClause_Await_Return CaseClauses_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // [SwitchStatement_Await_Return -> SWITCH LPAREN Expression_In_Await RPAREN CaseBlock_Await_Return .]*
    Goal::InputElementRegExp,
    // [CatchParameter_Await -> BindingIdentifier_Await .]*
    Goal::InputElementDiv,
    // [CatchParameter_Await -> BindingPattern_Await .]*
    Goal::InputElementDiv,
    // [Catch_Await_Return -> CATCH LPAREN CatchParameter_Await . RPAREN Block_Await_Return]*
    Goal::InputElementDiv,
    // [WhileStatement_Await_Return -> WHILE LPAREN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [WithStatement_Await_Return -> WITH LPAREN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingIdentifier_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Await -> LPAREN Expression_In_Await COMMA ELLIPSIS BindingPattern_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Await -> ArgumentList_Await COMMA ELLIPSIS AssignmentExpression_In_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [TemplateMiddleList_Await_Tagged -> TemplateMiddleList_Await_Tagged TemplateMiddle Expression_In_Await .]*
    Goal::InputElementTemplateTail,
    // [ObjectBindingPattern_Await -> LBRACE BindingPropertyList_Await COMMA BindingRestProperty_Await RBRACE .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision BindingRestElement_Await . RBRACK]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [AwaitExpression_Yield -> AWAIT . UnaryExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [CallExpression_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [PrimaryExpression_Yield_Await -> CoverParenthesizedExpressionAndArrowParameterList_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [IdentifierReference_Yield_Await -> Identifier .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> ADD UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> UpdateExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [AwaitExpression_Yield -> AWAIT UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> BIT_NOT UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ClassHeritage_Yield_Await -> EXTENDS . LeftHandSideExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ClassTail_Yield_Await -> LBRACE . RBRACE]*
    // [ClassTail_Yield_Await -> LBRACE . ClassBody_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression_Yield_Await -> CLASS BindingIdentifier_Yield_Await . ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // [ClassTail_Yield_Await -> ClassHeritage_Yield_Await . LBRACE RBRACE]*
    // [ClassTail_Yield_Await -> ClassHeritage_Yield_Await . LBRACE ClassBody_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // [ClassExpression_Yield_Await -> CLASS ClassTail_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Yield_Await -> DEC UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> DELETE UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ImportCall_Yield_Await -> IMPORT LPAREN . AssignmentExpression_In_Yield_Await RPAREN]*
    Goal::InputElementRegExp,
    // [UpdateExpression_Yield_Await -> INC UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC . MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncMethod_Yield_Await -> ASYNC . ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield_Await -> ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Yield_Await -> GET . ClassElementName_Yield_Await LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield_Await -> MUL . ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassElementName_Yield_Await -> PrivateIdentifier .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield_Await -> LBRACE RBRACE .]*
    Goal::InputElementTemplateTail,
    // [MethodDefinition_Yield_Await -> SET . ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> AsyncGeneratorMethod_Yield_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> AsyncMethod_Yield_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield_Await -> CoverInitializedName_Yield_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> GeneratorMethod_Yield_Await .]*
    Goal::InputElementDiv,
    // [CoverInitializedName_Yield_Await -> IdentifierReference_Yield_Await . Initializer_In_Yield_Await]*
    // [PropertyDefinition_Yield_Await -> IdentifierReference_Yield_Await .]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield_Await -> MethodDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await . COMMA RBRACE]*
    // [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await . RBRACE]*
    // [PropertyDefinitionList_Yield_Await -> PropertyDefinitionList_Yield_Await . COMMA PropertyDefinition_Yield_Await]*
    Goal::InputElementDiv,
    // [PropertyDefinitionList_Yield_Await -> PropertyDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // [ClassElementName_Yield_Await -> PropertyName_Yield_Await .]*
    // [PropertyDefinition_Yield_Await -> PropertyName_Yield_Await . COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [SpreadElement_Yield_Await -> ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [ArrayLiteral_Yield_Await -> LBRACK RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield_Await -> AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await . COMMA RBRACK]*
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await . COMMA Elision RBRACK]*
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await . RBRACK]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA Elision AssignmentExpression_In_Yield_Await]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA Elision SpreadElement_Yield_Await]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await . COMMA SpreadElement_Yield_Await]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield_Await -> LBRACK Elision . RBRACK]*
    // [ElementList_Yield_Await -> Elision . AssignmentExpression_In_Yield_Await]*
    // [ElementList_Yield_Await -> Elision . SpreadElement_Yield_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [ElementList_Yield_Await -> SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS . BindingIdentifier_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS . BindingPattern_Yield_Await RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . COMMA ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . COMMA ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . COMMA RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await . RPAREN]*
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [SuperProperty_Yield_Await -> SUPER . DOT IdentifierName]*
    // [SuperProperty_Yield_Await -> SUPER . LBRACK Expression_In_Yield_Await RBRACK]*
    Goal::InputElementDiv,
    // [MemberExpression_Yield_Await -> NEW MemberExpression_Yield_Await . Arguments_Yield_Await]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT IdentifierName]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . DOT PrivateIdentifier]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    // [NewExpression_Yield_Await -> MemberExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [NewExpression_Yield_Await -> NEW NewExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> NOT UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> PrivateIdentifier IN . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [UnaryExpression_Yield_Await -> SUB UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Yield_Await -> SUPER DOT . IdentifierName]*
    Goal::InputElementDiv,
    // [SuperProperty_Yield_Await -> SUPER LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // [Arguments_Yield_Await -> LPAREN . RPAREN]*
    // [Arguments_Yield_Await -> LPAREN . ArgumentList_Yield_Await COMMA RPAREN]*
    // [Arguments_Yield_Await -> LPAREN . ArgumentList_Yield_Await RPAREN]*
    Goal::InputElementRegExp,
    // [SuperCall_Yield_Await -> SUPER Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> TYPEOF UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [SubstitutionTemplate_Yield_Await -> TemplateHead Expression_In_Yield_Await . TemplateSpans_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [UnaryExpression_Yield_Await -> VOID UnaryExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [YieldExpression_In_Await -> YIELD MUL . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [YieldExpression_In_Await -> YIELD AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await ADD . MultiplicativeExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await SUB . MultiplicativeExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ArrowFunction_In_Yield_Await -> ArrowParameters_Yield_Await ARROW . ConciseBody_In]*
    Goal::InputElementRegExp,
    // [ComputedPropertyName_Yield_Await -> LBRACK AssignmentExpression_In_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await BIT_AND . EqualityExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await BIT_OR . BitwiseXORExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await BIT_XOR . BitwiseANDExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT . IdentifierName]*
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // [TemplateLiteral_Yield_Await_Tagged -> NoSubstitutionTemplate .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . IdentifierName]*
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . LBRACK Expression_In_Yield_Await RBRACK]*
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . PrivateIdentifier]*
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . Arguments_Yield_Await]*
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING . TemplateLiteral_Yield_Await_Tagged]*
    Goal::InputElementDiv,
    // [SubstitutionTemplate_Yield_Await_Tagged -> TemplateHead . Expression_In_Yield_Await TemplateSpans_Yield_Await_Tagged]*
    Goal::InputElementRegExp,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT IdentifierName]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT PrivateIdentifier]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . Arguments_Yield_Await]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    // [OptionalExpression_Yield_Await -> CallExpression_Yield_Await OptionalChain_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [TemplateLiteral_Yield_Await_Tagged -> SubstitutionTemplate_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [CoalesceExpression_In_Yield_Await -> CoalesceExpressionHead_In_Yield_Await NULLISH . BitwiseORExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ_STRICT . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE_STRICT . RelationalExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await DEC .]*
    Goal::InputElementTemplateTail,
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await INC .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await AND . BitwiseORExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [LogicalORExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await OR . LogicalANDExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT . IdentifierName]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // [CoverCallExpressionAndAsyncArrowHead_Yield_Await -> MemberExpression_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT IdentifierName]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT PrivateIdentifier]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . Arguments_Yield_Await]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    // [OptionalExpression_Yield_Await -> MemberExpression_Yield_Await OptionalChain_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await MultiplicativeOperator . ExponentiationExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT IdentifierName]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . DOT PrivateIdentifier]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . LBRACK Expression_In_Yield_Await RBRACK]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . Arguments_Yield_Await]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await . TemplateLiteral_Yield_Await_Tagged]*
    // [OptionalExpression_Yield_Await -> OptionalExpression_Yield_Await OptionalChain_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await IN . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await INSTANCEOF . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SAR . AdditiveExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHL . AdditiveExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHR . AdditiveExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL . AssignmentExpression_In_Yield_Await COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [ExponentiationExpression_Yield_Await -> UpdateExpression_Yield_Await EXP . ExponentiationExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA RBRACE .]*
    Goal::InputElementDiv,
    // [BindingPropertyList_Yield_Await -> BindingPropertyList_Yield_Await COMMA BindingProperty_Yield_Await .]*
    Goal::InputElementDiv,
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA BindingRestProperty_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // [BindingProperty_Yield_Await -> PropertyName_Yield_Await COLON BindingElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA RBRACK .]*
    Goal::InputElementDiv,
    // [BindingElementList_Yield_Await -> BindingElementList_Yield_Await COMMA BindingElisionElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision . RBRACK]*
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision . BindingRestElement_Yield_Await RBRACK]*
    // [BindingElisionElement_Yield_Await -> Elision . BindingElement_Yield_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK Elision BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC . FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield_Await -> BREAK . SEMI_COLON]*
    // [BreakStatement_Yield_Await -> BREAK . LabelIdentifier_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassDeclaration_Yield_Await -> CLASS . BindingIdentifier_Yield_Await ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // [ContinueStatement_Yield_Await -> CONTINUE . SEMI_COLON]*
    // [ContinueStatement_Yield_Await -> CONTINUE . LabelIdentifier_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Await_Return -> DO . Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR . AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR . LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR . LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield_Await -> FUNCTION . BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    // [GeneratorDeclaration_Yield_Await -> FUNCTION . MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Await_Return -> IF . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    // [IfStatement_Yield_Await_Return -> IF . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Yield_Await_Return -> LBRACE . RBRACE]*
    // [Block_Yield_Await_Return -> LBRACE . StatementList_Yield_Await_Return RBRACE]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Yield_Await -> RETURN . SEMI_COLON]*
    // [ReturnStatement_Yield_Await -> RETURN . Expression_In_Yield_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Yield_Await_Return -> SWITCH . LPAREN Expression_In_Yield_Await RPAREN CaseBlock_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ThrowStatement_Yield_Await -> THROW . Expression_In_Yield_Await SEMI_COLON]*
    Goal::InputElementRegExp,
    // [TryStatement_Yield_Await_Return -> TRY . Block_Yield_Await_Return Catch_Yield_Await_Return]*
    // [TryStatement_Yield_Await_Return -> TRY . Block_Yield_Await_Return Catch_Yield_Await_Return Finally_Yield_Await_Return]*
    // [TryStatement_Yield_Await_Return -> TRY . Block_Yield_Await_Return Finally_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [VariableStatement_Yield_Await -> VAR . VariableDeclarationList_In_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Await_Return -> WHILE . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [WithStatement_Yield_Await_Return -> WITH . LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Yield_Await -> AsyncFunctionDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Yield_Await -> AsyncGeneratorDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> BlockStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [BlockStatement_Yield_Await_Return -> Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> BreakStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> BreakableStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [Declaration_Yield_Await -> ClassDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> ContinueStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> DebuggerStatement .]*
    Goal::InputElementRegExp,
    // [StatementListItem_Yield_Await_Return -> Declaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Yield_Await_Return -> DoWhileStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> EmptyStatement .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> ExpressionStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // [ExpressionStatement_Yield_Await -> Expression_In_Yield_Await . SEMI_COLON]*
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [IterationStatement_Yield_Await_Return -> ForInOfStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Yield_Await_Return -> ForStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorBody -> FunctionBody_Yield_Await .]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Yield_Await -> FunctionDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [FunctionBody_Yield_Await -> FunctionStatementList_Yield_Await .]*
    Goal::InputElementDiv,
    // [HoistableDeclaration_Yield_Await -> GeneratorDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [Declaration_Yield_Await -> HoistableDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [BindingIdentifier_Yield_Await -> Identifier .]*
    // [IdentifierReference_Yield_Await -> Identifier .]*
    // [LabelIdentifier_Yield_Await -> Identifier .]*
    Goal::InputElementDiv,
    // [Statement_Yield_Await_Return -> IfStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Yield_Await_Return -> IterationStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Yield_Await_Return -> LabelIdentifier_Yield_Await . COLON LabelledItem_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Statement_Yield_Await_Return -> LabelledStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [LexicalDeclaration_In_Yield_Await -> LetOrConst . BindingList_In_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [Declaration_Yield_Await -> LexicalDeclaration_In_Yield_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> ReturnStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // [StatementList_Yield_Await_Return -> StatementListItem_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [FunctionStatementList_Yield_Await -> StatementList_Yield_Await_Return .]*
    // [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [StatementListItem_Yield_Await_Return -> Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [BreakableStatement_Yield_Await_Return -> SwitchStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> ThrowStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> TryStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> VariableStatement_Yield_Await .]*
    Goal::InputElementRegExp,
    // [IterationStatement_Yield_Await_Return -> WhileStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [Statement_Yield_Await_Return -> WithStatement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN . Expression_In_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR . ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await . IN Expression_In_Await RPAREN Statement_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await . SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [VariableDeclarationList_Await -> VariableDeclarationList_Await . COMMA VariableDeclaration_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN . Statement_Await ELSE Statement_Await]*
    // [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN . Statement_Await !~[ELSE]]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Await -> SWITCH LPAREN Expression_In_Await RPAREN . CaseBlock_Await]*
    Goal::InputElementDiv,
    // [Catch_Await -> CATCH LPAREN . CatchParameter_Await RPAREN Block_Await]*
    Goal::InputElementDiv,
    // [Catch_Await -> CATCH Block_Await .]*
    Goal::InputElementRegExp,
    // [Finally_Await -> FINALLY Block_Await .]*
    Goal::InputElementRegExp,
    // [TryStatement_Await -> TRY Block_Await Catch_Await Finally_Await .]*
    Goal::InputElementRegExp,
    // [WhileStatement_Await -> WHILE LPAREN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [WithStatement_Await -> WITH LPAREN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [ClassHeritage_Yield -> EXTENDS LeftHandSideExpression_Yield .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElement_Yield -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield -> STATIC . FieldDefinition_Yield SEMI_COLON]*
    // [ClassElement_Yield -> STATIC . MethodDefinition_Yield]*
    // [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassTail_Yield -> LBRACE ClassBody_Yield . RBRACE]*
    Goal::InputElementDiv,
    // [ClassBody_Yield -> ClassElementList_Yield .]*
    // [ClassElementList_Yield -> ClassElementList_Yield . ClassElement_Yield]*
    Goal::InputElementDiv,
    // [FieldDefinition_Yield -> ClassElementName_Yield .]*
    // [FieldDefinition_Yield -> ClassElementName_Yield . Initializer_In_Yield]*
    // [MethodDefinition_Yield -> ClassElementName_Yield . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassElementList_Yield -> ClassElement_Yield .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield -> FieldDefinition_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement_Yield -> MethodDefinition_Yield .]*
    Goal::InputElementDiv,
    // [ClassElementName_Yield -> PropertyName_Yield .]*
    Goal::InputElementDiv,
    // [ClassExpression_Yield -> CLASS BindingIdentifier_Yield ClassTail_Yield .]*
    Goal::InputElementTemplateTail,
    // [ClassTail_Yield -> ClassHeritage_Yield LBRACE . RBRACE]*
    // [ClassTail_Yield -> ClassHeritage_Yield LBRACE . ClassBody_Yield RBRACE]*
    Goal::InputElementDiv,
    // [ImportCall_Yield -> IMPORT LPAREN AssignmentExpression_In_Yield . RPAREN]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL . ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield -> ASYNC ClassElementName_Yield . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield -> ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> GET ClassElementName_Yield . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield -> MUL ClassElementName_Yield . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> SET ClassElementName_Yield . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [MethodDefinition_Yield -> ClassElementName_Yield LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [CoverInitializedName_Yield -> IdentifierReference_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield COMMA . RBRACE]*
    // [PropertyDefinitionList_Yield -> PropertyDefinitionList_Yield COMMA . PropertyDefinition_Yield]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinition_Yield -> PropertyName_Yield COLON . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [SpreadElement_Yield -> ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA . RBRACK]*
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA . Elision RBRACK]*
    // [ElementList_Yield -> ElementList_Yield COMMA . AssignmentExpression_In_Yield]*
    // [ElementList_Yield -> ElementList_Yield COMMA . Elision AssignmentExpression_In_Yield]*
    // [ElementList_Yield -> ElementList_Yield COMMA . Elision SpreadElement_Yield]*
    // [ElementList_Yield -> ElementList_Yield COMMA . SpreadElement_Yield]*
    Goal::InputElementRegExp,
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ArrayLiteral_Yield -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield -> Elision AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [ElementList_Yield -> Elision SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingIdentifier_Yield . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingPattern_Yield . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA . ELLIPSIS BindingIdentifier_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA . ELLIPSIS BindingPattern_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA . RPAREN]*
    // [Expression_In_Yield -> Expression_In_Yield COMMA . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield -> NEW MemberExpression_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> PrivateIdentifier IN ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Yield -> SUPER DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [SuperProperty_Yield -> SUPER LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield -> ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [Arguments_Yield -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield -> ArgumentList_Yield . COMMA ELLIPSIS AssignmentExpression_In_Yield]*
    // [ArgumentList_Yield -> ArgumentList_Yield . COMMA AssignmentExpression_In_Yield]*
    // [Arguments_Yield -> LPAREN ArgumentList_Yield . COMMA RPAREN]*
    // [Arguments_Yield -> LPAREN ArgumentList_Yield . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield -> AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield COMMA . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [TemplateMiddleList_Yield -> TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield -> TemplateMiddleList_Yield . TemplateMiddle Expression_In_Yield]*
    // [TemplateSpans_Yield -> TemplateMiddleList_Yield . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate_Yield -> TemplateHead Expression_In_Yield TemplateSpans_Yield .]*
    Goal::InputElementTemplateTail,
    // [YieldExpression_In -> YIELD MUL AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield ADD MultiplicativeExpression_Yield .]*
    // [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield . MultiplicativeOperator ExponentiationExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield SUB MultiplicativeExpression_Yield .]*
    // [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield . MultiplicativeOperator ExponentiationExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In_Yield -> ArrowParameters_Yield ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield BIT_AND EqualityExpression_In_Yield .]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ RelationalExpression_In_Yield]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . EQ_STRICT RelationalExpression_In_Yield]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE RelationalExpression_In_Yield]*
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield . NE_STRICT RelationalExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield BIT_OR BitwiseXORExpression_In_Yield .]*
    // [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield . BIT_XOR BitwiseANDExpression_In_Yield]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Yield -> BitwiseANDExpression_In_Yield . BIT_AND EqualityExpression_In_Yield]*
    // [BitwiseXORExpression_In_Yield -> BitwiseXORExpression_In_Yield BIT_XOR BitwiseANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> CallExpression_Yield DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> CallExpression_Yield DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> CallExpression_Yield LBRACK Expression_In_Yield . RBRACK]*
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // [OptionalChain_Yield -> OPTIONAL_CHAINING IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OPTIONAL_CHAINING LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain_Yield -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OPTIONAL_CHAINING Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OPTIONAL_CHAINING TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [SubstitutionTemplate_Yield_Tagged -> TemplateHead Expression_In_Yield . TemplateSpans_Yield_Tagged]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OptionalChain_Yield DOT . IdentifierName]*
    // [OptionalChain_Yield -> OptionalChain_Yield DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [OptionalChain_Yield -> OptionalChain_Yield LBRACK . Expression_In_Yield RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain_Yield -> OptionalChain_Yield Arguments_Yield .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OptionalChain_Yield TemplateLiteral_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    // [CoalesceExpression_In_Yield -> CoalesceExpressionHead_In_Yield NULLISH BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ RelationalExpression_In_Yield .]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield EQ_STRICT RelationalExpression_In_Yield .]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE RelationalExpression_In_Yield .]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield -> EqualityExpression_In_Yield NE_STRICT RelationalExpression_In_Yield .]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . IN ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AND_ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield OR_ASSIGN AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield -> LeftHandSideExpression_Yield AssignmentOperator AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    // [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield AND BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield -> BitwiseORExpression_In_Yield . BIT_OR BitwiseXORExpression_In_Yield]*
    // [LogicalANDExpression_In_Yield -> BitwiseORExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In_Yield -> LogicalANDExpression_In_Yield . AND BitwiseORExpression_In_Yield]*
    // [LogicalORExpression_In_Yield -> LogicalORExpression_In_Yield OR LogicalANDExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield -> MemberExpression_Yield DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield -> MemberExpression_Yield DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [MemberExpression_Yield -> MemberExpression_Yield LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [MultiplicativeExpression_Yield -> MultiplicativeExpression_Yield MultiplicativeOperator ExponentiationExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GT ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield GTE ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield IN ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield INSTANCEOF ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LT ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield -> RelationalExpression_In_Yield LTE ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield SAR AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield SHL AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . ADD MultiplicativeExpression_Yield]*
    // [AdditiveExpression_Yield -> AdditiveExpression_Yield . SUB MultiplicativeExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield SHR AdditiveExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL AssignmentExpression_In_Yield . COLON AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // [ExponentiationExpression_Yield -> UpdateExpression_Yield EXP ExponentiationExpression_Yield .]*
    Goal::InputElementTemplateTail,
    // [ObjectBindingPattern_Yield -> LBRACE BindingPropertyList_Yield COMMA BindingRestProperty_Yield RBRACE .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision BindingRestElement_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION . BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION . MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [LabelIdentifier_Yield -> AWAIT .]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LabelIdentifier_Yield -> Identifier .]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield -> BREAK LabelIdentifier_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassDeclaration_Yield -> CLASS BindingIdentifier_Yield . ClassTail_Yield]*
    Goal::InputElementDiv,
    // [ContinueStatement_Yield -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ContinueStatement_Yield -> CONTINUE LabelIdentifier_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return . WHILE LPAREN Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN . VAR ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN . VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN . ForDeclaration_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN . ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN . LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN . LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN . LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield -> FUNCTION MUL . BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Return -> IF LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return ELSE Statement_Yield_Return]*
    // [IfStatement_Yield_Return -> IF LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [Block_Yield_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [Block_Yield_Return -> LBRACE StatementList_Yield_Return . RBRACE]*
    // [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Yield -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ReturnStatement_Yield -> RETURN Expression_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [SwitchStatement_Yield_Return -> SWITCH LPAREN . Expression_In_Yield RPAREN CaseBlock_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ThrowStatement_Yield -> THROW Expression_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [TryStatement_Yield_Return -> TRY Block_Yield_Return . Catch_Yield_Return]*
    // [TryStatement_Yield_Return -> TRY Block_Yield_Return . Catch_Yield_Return Finally_Yield_Return]*
    // [TryStatement_Yield_Return -> TRY Block_Yield_Return . Finally_Yield_Return]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Yield -> BindingIdentifier_Yield .]*
    // [VariableDeclaration_In_Yield -> BindingIdentifier_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Yield -> BindingPattern_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Yield -> VariableDeclarationList_In_Yield . COMMA VariableDeclaration_In_Yield]*
    // [VariableStatement_Yield -> VAR VariableDeclarationList_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Yield -> VariableDeclaration_In_Yield .]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Return -> WHILE LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Yield_Return -> WITH LPAREN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ExpressionStatement_Yield -> Expression_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [GeneratorExpression -> FUNCTION MUL LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [LabelledStatement_Yield_Return -> LabelIdentifier_Yield COLON . LabelledItem_Yield_Return]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Yield -> BindingIdentifier_Yield .]*
    // [LexicalBinding_In_Yield -> BindingIdentifier_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // [BindingList_In_Yield -> BindingList_In_Yield . COMMA LexicalBinding_In_Yield]*
    // [LexicalDeclaration_In_Yield -> LetOrConst BindingList_In_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [LexicalBinding_In_Yield -> BindingPattern_Yield . Initializer_In_Yield]*
    Goal::InputElementDiv,
    // [BindingList_In_Yield -> LexicalBinding_In_Yield .]*
    Goal::InputElementDiv,
    // [StatementList_Yield_Return -> StatementList_Yield_Return StatementListItem_Yield_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionExpression -> FUNCTION BindingIdentifier LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> GET ClassElementName LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition -> ClassElementName LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration -> ASYNC FUNCTION BindingIdentifier LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_Await -> ShortCircuitExpression_Await CONDITIONAL AssignmentExpression_In_Await COLON AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [ForStatement -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration -> FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause -> CASE Expression_In COLON StatementList .]*
    // [StatementList -> StatementList . StatementListItem]*
    Goal::InputElementRegExp,
    // [CaseBlock -> LBRACE CaseClauses DefaultClause CaseClauses RBRACE .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN Expression_In RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In . SEMI_COLON Expression_In RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return ELSE . Statement_Return]*
    Goal::InputElementRegExp,
    // [CaseClause_Return -> CASE . Expression_In COLON]*
    // [CaseClause_Return -> CASE . Expression_In COLON StatementList_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Return -> DEFAULT . COLON]*
    // [DefaultClause_Return -> DEFAULT . COLON StatementList_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Return -> CaseClause_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Return -> LBRACE CaseClauses_Return . RBRACE]*
    // [CaseBlock_Return -> LBRACE CaseClauses_Return . DefaultClause_Return RBRACE]*
    // [CaseBlock_Return -> LBRACE CaseClauses_Return . DefaultClause_Return CaseClauses_Return RBRACE]*
    // [CaseClauses_Return -> CaseClauses_Return . CaseClause_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Return -> LBRACE DefaultClause_Return . RBRACE]*
    // [CaseBlock_Return -> LBRACE DefaultClause_Return . CaseClauses_Return RBRACE]*
    Goal::InputElementDiv,
    // [Catch_Return -> CATCH LPAREN CatchParameter RPAREN . Block_Return]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN Expression_In_Await RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [Initializer_Await -> ASSIGN AssignmentExpression_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Await -> BindingIdentifier_Await .]*
    // [VariableDeclaration_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_Await -> VariableDeclarationList_Await COMMA VariableDeclaration_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [LexicalBinding_Await -> BindingIdentifier_Await .]*
    // [LexicalBinding_Await -> BindingIdentifier_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [LexicalBinding_Await -> BindingPattern_Await . Initializer_Await]*
    Goal::InputElementDiv,
    // [BindingList_Await -> BindingList_Await COMMA LexicalBinding_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return ELSE . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseClause_Await_Return -> CASE . Expression_In_Await COLON]*
    // [CaseClause_Await_Return -> CASE . Expression_In_Await COLON StatementList_Await_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Await_Return -> DEFAULT . COLON]*
    // [DefaultClause_Await_Return -> DEFAULT . COLON StatementList_Await_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Await_Return -> CaseClause_Await_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return . RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return . DefaultClause_Await_Return RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return . DefaultClause_Await_Return CaseClauses_Await_Return RBRACE]*
    // [CaseClauses_Await_Return -> CaseClauses_Await_Return . CaseClause_Await_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return . RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return . CaseClauses_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // [Catch_Await_Return -> CATCH LPAREN CatchParameter_Await RPAREN . Block_Await_Return]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Await -> LBRACK BindingElementList_Await COMMA Elision BindingRestElement_Await RBRACK .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody_In]*
    Goal::InputElementRegExp,
    // [ClassHeritage_Yield_Await -> EXTENDS LeftHandSideExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElement_Yield_Await -> SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield_Await -> STATIC . FieldDefinition_Yield_Await SEMI_COLON]*
    // [ClassElement_Yield_Await -> STATIC . MethodDefinition_Yield_Await]*
    // [ClassStaticBlock -> STATIC . LBRACE ClassStaticBlockBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassTail_Yield_Await -> LBRACE ClassBody_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // [ClassBody_Yield_Await -> ClassElementList_Yield_Await .]*
    // [ClassElementList_Yield_Await -> ClassElementList_Yield_Await . ClassElement_Yield_Await]*
    Goal::InputElementDiv,
    // [FieldDefinition_Yield_Await -> ClassElementName_Yield_Await .]*
    // [FieldDefinition_Yield_Await -> ClassElementName_Yield_Await . Initializer_In_Yield_Await]*
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await . LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ClassElementList_Yield_Await -> ClassElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield_Await -> ClassStaticBlock .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield_Await -> FieldDefinition_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement_Yield_Await -> MethodDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // [ClassElementName_Yield_Await -> PropertyName_Yield_Await .]*
    Goal::InputElementDiv,
    // [ClassExpression_Yield_Await -> CLASS BindingIdentifier_Yield_Await ClassTail_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE . RBRACE]*
    // [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE . ClassBody_Yield_Await RBRACE]*
    Goal::InputElementDiv,
    // [ImportCall_Yield_Await -> IMPORT LPAREN AssignmentExpression_In_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL . ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await . LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield_Await -> ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await . LPAREN RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await . LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await . LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN . UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [CoverInitializedName_Yield_Await -> IdentifierReference_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await COMMA . RBRACE]*
    // [PropertyDefinitionList_Yield_Await -> PropertyDefinitionList_Yield_Await COMMA . PropertyDefinition_Yield_Await]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinition_Yield_Await -> PropertyName_Yield_Await COLON . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [SpreadElement_Yield_Await -> ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA . RBRACK]*
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA . Elision RBRACK]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . Elision AssignmentExpression_In_Yield_Await]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . Elision SpreadElement_Yield_Await]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA . SpreadElement_Yield_Await]*
    Goal::InputElementRegExp,
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ArrayLiteral_Yield_Await -> LBRACK Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield_Await -> Elision AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ElementList_Yield_Await -> Elision SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingIdentifier_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingPattern_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA . ELLIPSIS BindingIdentifier_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA . ELLIPSIS BindingPattern_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA . RPAREN]*
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield_Await -> NEW MemberExpression_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> PrivateIdentifier IN ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Yield_Await -> SUPER DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [SuperProperty_Yield_Await -> SUPER LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield_Await -> ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [Arguments_Yield_Await -> LPAREN RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield_Await -> ArgumentList_Yield_Await . COMMA ELLIPSIS AssignmentExpression_In_Yield_Await]*
    // [ArgumentList_Yield_Await -> ArgumentList_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await . COMMA RPAREN]*
    // [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield_Await -> AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [TemplateMiddleList_Yield_Await -> TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield_Await -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield_Await -> TemplateMiddleList_Yield_Await . TemplateMiddle Expression_In_Yield_Await]*
    // [TemplateSpans_Yield_Await -> TemplateMiddleList_Yield_Await . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate_Yield_Await -> TemplateHead Expression_In_Yield_Await TemplateSpans_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [YieldExpression_In_Await -> YIELD MUL AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await ADD MultiplicativeExpression_Yield_Await .]*
    // [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await . MultiplicativeOperator ExponentiationExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await SUB MultiplicativeExpression_Yield_Await .]*
    // [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await . MultiplicativeOperator ExponentiationExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [ArrowFunction_In_Yield_Await -> ArrowParameters_Yield_Await ARROW ConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await BIT_AND EqualityExpression_In_Yield_Await .]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ RelationalExpression_In_Yield_Await]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . EQ_STRICT RelationalExpression_In_Yield_Await]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE RelationalExpression_In_Yield_Await]*
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await . NE_STRICT RelationalExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await BIT_OR BitwiseXORExpression_In_Yield_Await .]*
    // [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await . BIT_XOR BitwiseANDExpression_In_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [BitwiseANDExpression_In_Yield_Await -> BitwiseANDExpression_In_Yield_Await . BIT_AND EqualityExpression_In_Yield_Await]*
    // [BitwiseXORExpression_In_Yield_Await -> BitwiseXORExpression_In_Yield_Await BIT_XOR BitwiseANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await LBRACK Expression_In_Yield_Await . RBRACK]*
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [SubstitutionTemplate_Yield_Await_Tagged -> TemplateHead Expression_In_Yield_Await . TemplateSpans_Yield_Await_Tagged]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT . IdentifierName]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT . PrivateIdentifier]*
    Goal::InputElementDiv,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await LBRACK . Expression_In_Yield_Await RBRACK]*
    Goal::InputElementRegExp,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await Arguments_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await TemplateLiteral_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    // [CoalesceExpression_In_Yield_Await -> CoalesceExpressionHead_In_Yield_Await NULLISH BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncArrowFunction_In_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ RelationalExpression_In_Yield_Await .]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await EQ_STRICT RelationalExpression_In_Yield_Await .]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE RelationalExpression_In_Yield_Await .]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [EqualityExpression_In_Yield_Await -> EqualityExpression_In_Yield_Await NE_STRICT RelationalExpression_In_Yield_Await .]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . IN ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AssignmentExpression_In_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    // [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await AND BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [BitwiseORExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await . BIT_OR BitwiseXORExpression_In_Yield_Await]*
    // [LogicalANDExpression_In_Yield_Await -> BitwiseORExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [LogicalANDExpression_In_Yield_Await -> LogicalANDExpression_In_Yield_Await . AND BitwiseORExpression_In_Yield_Await]*
    // [LogicalORExpression_In_Yield_Await -> LogicalORExpression_In_Yield_Await OR LogicalANDExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [MultiplicativeExpression_Yield_Await -> MultiplicativeExpression_Yield_Await MultiplicativeOperator ExponentiationExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GT ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await GTE ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await IN ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await INSTANCEOF ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LT ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [RelationalExpression_In_Yield_Await -> RelationalExpression_In_Yield_Await LTE ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SAR AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHL AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . ADD MultiplicativeExpression_Yield_Await]*
    // [AdditiveExpression_Yield_Await -> AdditiveExpression_Yield_Await . SUB MultiplicativeExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await SHR AdditiveExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await . COLON AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [ExponentiationExpression_Yield_Await -> UpdateExpression_Yield_Await EXP ExponentiationExpression_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [ObjectBindingPattern_Yield_Await -> LBRACE BindingPropertyList_Yield_Await COMMA BindingRestProperty_Yield_Await RBRACE .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision RBRACK .]*
    Goal::InputElementDiv,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision BindingRestElement_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION . BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION . MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield_Await -> BREAK SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LabelIdentifier_Yield_Await -> Identifier .]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield_Await -> BREAK LabelIdentifier_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassDeclaration_Yield_Await -> CLASS BindingIdentifier_Yield_Await . ClassTail_Yield_Await]*
    Goal::InputElementDiv,
    // [ContinueStatement_Yield_Await -> CONTINUE SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ContinueStatement_Yield_Await -> CONTINUE LabelIdentifier_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_In_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return . WHILE LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT . LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT . LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT . LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN . LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN . LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL . BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await . LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Await_Return -> IF LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    // [IfStatement_Yield_Await_Return -> IF LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [Block_Yield_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [Block_Yield_Await_Return -> LBRACE StatementList_Yield_Await_Return . RBRACE]*
    // [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Yield_Await -> RETURN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ReturnStatement_Yield_Await -> RETURN Expression_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN . Expression_In_Yield_Await RPAREN CaseBlock_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ThrowStatement_Yield_Await -> THROW Expression_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return . Catch_Yield_Await_Return]*
    // [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return . Catch_Yield_Await_Return Finally_Yield_Await_Return]*
    // [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return . Finally_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [VariableDeclaration_In_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Yield_Await -> BindingPattern_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Yield_Await -> VariableDeclarationList_In_Yield_Await . COMMA VariableDeclaration_In_Yield_Await]*
    // [VariableStatement_Yield_Await -> VAR VariableDeclarationList_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Yield_Await -> VariableDeclaration_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Await_Return -> WHILE LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Yield_Await_Return -> WITH LPAREN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [ExpressionStatement_Yield_Await -> Expression_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Yield_Await_Return -> LabelIdentifier_Yield_Await COLON . LabelledItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [LexicalBinding_In_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // [BindingList_In_Yield_Await -> BindingList_In_Yield_Await . COMMA LexicalBinding_In_Yield_Await]*
    // [LexicalDeclaration_In_Yield_Await -> LetOrConst BindingList_In_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [LexicalBinding_In_Yield_Await -> BindingPattern_Yield_Await . Initializer_In_Yield_Await]*
    Goal::InputElementDiv,
    // [BindingList_In_Yield_Await -> LexicalBinding_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return StatementListItem_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionExpression -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN Expression_In_Await . RPAREN SEMI_COLON]*
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await . OF AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON . Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await . ELSE Statement_Await]*
    // [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await . !~[ELSE]]*
    // [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await !~[ELSE] .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await -> LBRACE . RBRACE]*
    // [CaseBlock_Await -> LBRACE . CaseClauses_Await RBRACE]*
    // [CaseBlock_Await -> LBRACE . CaseClauses_Await DefaultClause_Await RBRACE]*
    // [CaseBlock_Await -> LBRACE . CaseClauses_Await DefaultClause_Await CaseClauses_Await RBRACE]*
    // [CaseBlock_Await -> LBRACE . DefaultClause_Await RBRACE]*
    // [CaseBlock_Await -> LBRACE . DefaultClause_Await CaseClauses_Await RBRACE]*
    Goal::InputElementDiv,
    // [SwitchStatement_Await -> SWITCH LPAREN Expression_In_Await RPAREN CaseBlock_Await .]*
    Goal::InputElementRegExp,
    // [Catch_Await -> CATCH LPAREN CatchParameter_Await . RPAREN Block_Await]*
    Goal::InputElementDiv,
    // [WhileStatement_Await -> WHILE LPAREN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [WithStatement_Await -> WITH LPAREN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [ClassElement_Yield -> STATIC FieldDefinition_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement_Yield -> STATIC MethodDefinition_Yield .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield -> LBRACE ClassBody_Yield RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElementList_Yield -> ClassElementList_Yield ClassElement_Yield .]*
    Goal::InputElementDiv,
    // [FieldDefinition_Yield -> ClassElementName_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield -> FieldDefinition_Yield SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield -> ClassHeritage_Yield LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassTail_Yield -> ClassHeritage_Yield LBRACE ClassBody_Yield . RBRACE]*
    Goal::InputElementDiv,
    // [ImportCall_Yield -> IMPORT LPAREN AssignmentExpression_In_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield -> LBRACE PropertyDefinitionList_Yield COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinitionList_Yield -> PropertyDefinitionList_Yield COMMA PropertyDefinition_Yield .]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield -> PropertyName_Yield COLON AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield -> ElementList_Yield COMMA AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA Elision . RBRACK]*
    // [ElementList_Yield -> ElementList_Yield COMMA Elision . AssignmentExpression_In_Yield]*
    // [ElementList_Yield -> ElementList_Yield COMMA Elision . SpreadElement_Yield]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [ElementList_Yield -> ElementList_Yield COMMA SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingIdentifier_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN ELLIPSIS BindingPattern_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS . BindingIdentifier_Yield RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS . BindingPattern_Yield RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield COMMA AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Yield -> SUPER LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield -> ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield -> ArgumentList_Yield COMMA . ELLIPSIS AssignmentExpression_In_Yield]*
    // [ArgumentList_Yield -> ArgumentList_Yield COMMA . AssignmentExpression_In_Yield]*
    // [Arguments_Yield -> LPAREN ArgumentList_Yield COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // [Arguments_Yield -> LPAREN ArgumentList_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [TemplateMiddleList_Yield -> TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield -> TemplateMiddleList_Yield TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield -> TemplateMiddleList_Yield TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield -> CallExpression_Yield LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [OptionalChain_Yield -> OPTIONAL_CHAINING LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [TemplateMiddleList_Yield_Tagged -> TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield_Tagged -> TemplateMiddleList_Yield_Tagged . TemplateMiddle Expression_In_Yield]*
    // [TemplateSpans_Yield_Tagged -> TemplateMiddleList_Yield_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate_Yield_Tagged -> TemplateHead Expression_In_Yield TemplateSpans_Yield_Tagged .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OptionalChain_Yield DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OptionalChain_Yield DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [OptionalChain_Yield -> OptionalChain_Yield LBRACK Expression_In_Yield . RBRACK]*
    Goal::InputElementDiv,
    // [MemberExpression_Yield -> MemberExpression_Yield LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL AssignmentExpression_In_Yield COLON . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [ArrayBindingPattern_Yield -> LBRACK BindingElementList_Yield COMMA Elision BindingRestElement_Yield RBRACK .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL . BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield -> BREAK LabelIdentifier_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ClassDeclaration_Yield -> CLASS BindingIdentifier_Yield ClassTail_Yield .]*
    Goal::InputElementRegExp,
    // [ContinueStatement_Yield -> CONTINUE LabelIdentifier_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE . LPAREN Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR . ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR . ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield -> YIELD .]*
    // [YieldExpression -> YIELD .]*
    // [YieldExpression -> YIELD . MUL AssignmentExpression_Yield]*
    // [YieldExpression -> YIELD . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield -> ArrowFunction_Yield .]*
    Goal::InputElementDiv,
    // [ArrowFunction_Yield -> ArrowParameters_Yield . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // [Expression_Yield -> AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> AsyncArrowFunction_Yield .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield . BIT_AND EqualityExpression_Yield]*
    // [BitwiseXORExpression_Yield -> BitwiseANDExpression_Yield .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    // [CoalesceExpressionHead_Yield -> BitwiseORExpression_Yield .]*
    // [LogicalANDExpression_Yield -> BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield -> BitwiseXORExpression_Yield .]*
    // [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield . BIT_XOR BitwiseANDExpression_Yield]*
    Goal::InputElementDiv,
    // [CoalesceExpression_Yield -> CoalesceExpressionHead_Yield . NULLISH BitwiseORExpression_Yield]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead_Yield -> CoalesceExpression_Yield .]*
    // [ShortCircuitExpression_Yield -> CoalesceExpression_Yield .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> ConditionalExpression_Yield .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield . ARROW AsyncConciseBody]*
    // [CallExpression_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield -> EqualityExpression_Yield .]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . EQ RelationalExpression_Yield]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . EQ_STRICT RelationalExpression_Yield]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . NE RelationalExpression_Yield]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . NE_STRICT RelationalExpression_Yield]*
    Goal::InputElementDiv,
    // [Expression_Yield -> Expression_Yield . COMMA AssignmentExpression_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield . IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield . OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AND_ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . NULLISH_ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . OR_ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AssignmentOperator AssignmentExpression_Yield]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield . IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield . OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementDiv,
    // [ForDeclaration_Yield -> LetOrConst . ForBinding_Yield]*
    // [LexicalDeclaration_Yield -> LetOrConst . BindingList_Yield SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [LogicalANDExpression_Yield -> LogicalANDExpression_Yield . AND BitwiseORExpression_Yield]*
    // [LogicalORExpression_Yield -> LogicalANDExpression_Yield .]*
    Goal::InputElementDiv,
    // [LogicalORExpression_Yield -> LogicalORExpression_Yield . OR LogicalANDExpression_Yield]*
    // [ShortCircuitExpression_Yield -> LogicalORExpression_Yield .]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield -> RelationalExpression_Yield .]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield -> ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Yield -> ShortCircuitExpression_Yield .]*
    // [ConditionalExpression_Yield -> ShortCircuitExpression_Yield . CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_Yield]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> YieldExpression .]*
    Goal::InputElementDiv,
    // [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return ELSE Statement_Yield_Return]*
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Yield_Return -> LBRACE StatementList_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Yield -> RETURN Expression_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [SwitchStatement_Yield_Return -> SWITCH LPAREN Expression_In_Yield . RPAREN CaseBlock_Yield_Return]*
    Goal::InputElementDiv,
    // [ThrowStatement_Yield -> THROW Expression_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Catch_Yield_Return -> CATCH . LPAREN CatchParameter_Yield RPAREN Block_Yield_Return]*
    // [Catch_Yield_Return -> CATCH . Block_Yield_Return]*
    Goal::InputElementDiv,
    // [Finally_Yield_Return -> FINALLY . Block_Yield_Return]*
    Goal::InputElementDiv,
    // [TryStatement_Yield_Return -> TRY Block_Yield_Return Catch_Yield_Return .]*
    // [TryStatement_Yield_Return -> TRY Block_Yield_Return Catch_Yield_Return . Finally_Yield_Return]*
    Goal::InputElementRegExp,
    // [TryStatement_Yield_Return -> TRY Block_Yield_Return Finally_Yield_Return .]*
    Goal::InputElementRegExp,
    // [VariableDeclaration_In_Yield -> BindingIdentifier_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Yield -> BindingPattern_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Yield -> VariableDeclarationList_In_Yield COMMA . VariableDeclaration_In_Yield]*
    Goal::InputElementDiv,
    // [VariableStatement_Yield -> VAR VariableDeclarationList_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [WhileStatement_Yield_Return -> WHILE LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [WithStatement_Yield_Return -> WITH LPAREN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield -> FUNCTION . BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [LabelledItem_Yield_Return -> FunctionDeclaration_Yield .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Yield_Return -> LabelIdentifier_Yield COLON LabelledItem_Yield_Return .]*
    Goal::InputElementRegExp,
    // [LabelledItem_Yield_Return -> Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Yield -> BindingIdentifier_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [BindingList_In_Yield -> BindingList_In_Yield COMMA . LexicalBinding_In_Yield]*
    Goal::InputElementDiv,
    // [LexicalDeclaration_In_Yield -> LetOrConst BindingList_In_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Yield -> BindingPattern_Yield Initializer_In_Yield .]*
    Goal::InputElementDiv,
    // [GeneratorExpression -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod -> ASYNC ClassElementName LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod -> MUL ClassElementName LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [MethodDefinition -> SET ClassElementName LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration -> ASYNC FUNCTION MUL BindingIdentifier LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForStatement -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Return -> DO Statement_Return WHILE LPAREN Expression_In RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . RPAREN Statement_Return]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON . Expression_In RPAREN Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration IN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN ForDeclaration OF AssignmentExpression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression IN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN LeftHandSideExpression OF AssignmentExpression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [IfStatement_Return -> IF LPAREN Expression_In RPAREN Statement_Return ELSE Statement_Return .]*
    Goal::InputElementRegExp,
    // [CaseClause_Return -> CASE Expression_In . COLON]*
    // [CaseClause_Return -> CASE Expression_In . COLON StatementList_Return]*
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    Goal::InputElementDiv,
    // [DefaultClause_Return -> DEFAULT COLON .]*
    // [DefaultClause_Return -> DEFAULT COLON . StatementList_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Return -> LBRACE CaseClauses_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Return -> CaseClauses_Return CaseClause_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return . RBRACE]*
    // [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return . CaseClauses_Return RBRACE]*
    Goal::InputElementDiv,
    // [CaseBlock_Return -> LBRACE DefaultClause_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Return -> LBRACE DefaultClause_Return CaseClauses_Return . RBRACE]*
    // [CaseClauses_Return -> CaseClauses_Return . CaseClause_Return]*
    Goal::InputElementDiv,
    // [Catch_Return -> CATCH LPAREN CatchParameter RPAREN Block_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Await_Return -> DO Statement_Await_Return WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await_Return]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Await_Return -> IF LPAREN Expression_In_Await RPAREN Statement_Await_Return ELSE Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [CaseClause_Await_Return -> CASE Expression_In_Await . COLON]*
    // [CaseClause_Await_Return -> CASE Expression_In_Await . COLON StatementList_Await_Return]*
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [DefaultClause_Await_Return -> DEFAULT COLON .]*
    // [DefaultClause_Await_Return -> DEFAULT COLON . StatementList_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Await_Return -> CaseClauses_Await_Return CaseClause_Await_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return . RBRACE]*
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return . CaseClauses_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return CaseClauses_Await_Return . RBRACE]*
    // [CaseClauses_Await_Return -> CaseClauses_Await_Return . CaseClause_Await_Return]*
    Goal::InputElementDiv,
    // [Catch_Await_Return -> CATCH LPAREN CatchParameter_Await RPAREN Block_Await_Return .]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_In_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody_In .]*
    Goal::InputElementTemplateTail,
    // [ClassElement_Yield_Await -> STATIC FieldDefinition_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ClassElement_Yield_Await -> STATIC MethodDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield_Await -> LBRACE ClassBody_Yield_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassElementList_Yield_Await -> ClassElementList_Yield_Await ClassElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [FieldDefinition_Yield_Await -> ClassElementName_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ClassElement_Yield_Await -> FieldDefinition_Yield_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE ClassBody_Yield_Await . RBRACE]*
    Goal::InputElementDiv,
    // [ImportCall_Yield_Await -> IMPORT LPAREN AssignmentExpression_In_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await . LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN . UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN . UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN . PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ObjectLiteral_Yield_Await -> LBRACE PropertyDefinitionList_Yield_Await COMMA RBRACE .]*
    Goal::InputElementTemplateTail,
    // [PropertyDefinitionList_Yield_Await -> PropertyDefinitionList_Yield_Await COMMA PropertyDefinition_Yield_Await .]*
    Goal::InputElementDiv,
    // [PropertyDefinition_Yield_Await -> PropertyName_Yield_Await COLON AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA Elision . RBRACK]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision . AssignmentExpression_In_Yield_Await]*
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision . SpreadElement_Yield_Await]*
    // [Elision -> Elision . COMMA]*
    Goal::InputElementRegExp,
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingIdentifier_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN ELLIPSIS BindingPattern_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS . BindingIdentifier_Yield_Await RPAREN]*
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS . BindingPattern_Yield_Await RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await COMMA AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [SuperProperty_Yield_Await -> SUPER LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield_Await -> ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA . ELLIPSIS AssignmentExpression_In_Yield_Await]*
    // [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA . AssignmentExpression_In_Yield_Await]*
    // [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await COMMA . RPAREN]*
    Goal::InputElementRegExp,
    // [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [TemplateMiddleList_Yield_Await -> TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield_Await -> TemplateMiddleList_Yield_Await TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield_Await -> TemplateMiddleList_Yield_Await TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [CallExpression_Yield_Await -> CallExpression_Yield_Await LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield_Await_Tagged -> TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged . TemplateMiddle Expression_In_Yield_Await]*
    // [TemplateSpans_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged . TemplateTail]*
    Goal::InputElementTemplateTail,
    // [SubstitutionTemplate_Yield_Await_Tagged -> TemplateHead Expression_In_Yield_Await TemplateSpans_Yield_Await_Tagged .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT IdentifierName .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await DOT PrivateIdentifier .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await LBRACK Expression_In_Yield_Await . RBRACK]*
    Goal::InputElementDiv,
    // [MemberExpression_Yield_Await -> MemberExpression_Yield_Await LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [ArrayBindingPattern_Yield_Await -> LBRACK BindingElementList_Yield_Await COMMA Elision BindingRestElement_Yield_Await RBRACK .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL . BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await . LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [BreakStatement_Yield_Await -> BREAK LabelIdentifier_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ClassDeclaration_Yield_Await -> CLASS BindingIdentifier_Yield_Await ClassTail_Yield_Await .]*
    Goal::InputElementRegExp,
    // [ContinueStatement_Yield_Await -> CONTINUE LabelIdentifier_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE . LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN . VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN . ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN . LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_Yield_Await -> ASYNC . AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncFunctionExpression -> ASYNC . FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [AsyncGeneratorExpression -> ASYNC . FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR . ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR . ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR . VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [BindingIdentifier_Yield_Await -> YIELD .]*
    // [YieldExpression_Await -> YIELD .]*
    // [YieldExpression_Await -> YIELD . MUL AssignmentExpression_Yield_Await]*
    // [YieldExpression_Await -> YIELD . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield_Await -> ArrowFunction_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrowFunction_Yield_Await -> ArrowParameters_Yield_Await . ARROW ConciseBody]*
    Goal::InputElementDiv,
    // [Expression_Yield_Await -> AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> AsyncArrowFunction_Yield_Await .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await . BIT_AND EqualityExpression_Yield_Await]*
    // [BitwiseXORExpression_Yield_Await -> BitwiseANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    // [CoalesceExpressionHead_Yield_Await -> BitwiseORExpression_Yield_Await .]*
    // [LogicalANDExpression_Yield_Await -> BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await .]*
    // [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await . BIT_XOR BitwiseANDExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [CoalesceExpression_Yield_Await -> CoalesceExpressionHead_Yield_Await . NULLISH BitwiseORExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [CoalesceExpressionHead_Yield_Await -> CoalesceExpression_Yield_Await .]*
    // [ShortCircuitExpression_Yield_Await -> CoalesceExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> ConditionalExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await . ARROW AsyncConciseBody]*
    // [CallExpression_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield_Await -> EqualityExpression_Yield_Await .]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ RelationalExpression_Yield_Await]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ_STRICT RelationalExpression_Yield_Await]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE RelationalExpression_Yield_Await]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE_STRICT RelationalExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [Expression_Yield_Await -> Expression_Yield_Await . COMMA AssignmentExpression_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await . IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AND_ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . NULLISH_ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . OR_ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AssignmentOperator AssignmentExpression_Yield_Await]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await . IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementDiv,
    // [ForDeclaration_Yield_Await -> LetOrConst . ForBinding_Yield_Await]*
    // [LexicalDeclaration_Yield_Await -> LetOrConst . BindingList_Yield_Await SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await . AND BitwiseORExpression_Yield_Await]*
    // [LogicalORExpression_Yield_Await -> LogicalANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [LogicalORExpression_Yield_Await -> LogicalORExpression_Yield_Await . OR LogicalANDExpression_Yield_Await]*
    // [ShortCircuitExpression_Yield_Await -> LogicalORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield_Await -> RelationalExpression_Yield_Await .]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield_Await -> ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await .]*
    // [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await . CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> YieldExpression_Await .]*
    Goal::InputElementDiv,
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await . LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FormalParameters -> () .]*
    // [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN . FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementDiv,
    // [Block_Yield_Await_Return -> LBRACE StatementList_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [ReturnStatement_Yield_Await -> RETURN Expression_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN Expression_In_Yield_Await . RPAREN CaseBlock_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ThrowStatement_Yield_Await -> THROW Expression_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Catch_Yield_Await_Return -> CATCH . LPAREN CatchParameter_Yield_Await RPAREN Block_Yield_Await_Return]*
    // [Catch_Yield_Await_Return -> CATCH . Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Finally_Yield_Await_Return -> FINALLY . Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Catch_Yield_Await_Return .]*
    // [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Catch_Yield_Await_Return . Finally_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Finally_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [VariableDeclaration_In_Yield_Await -> BindingIdentifier_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_In_Yield_Await -> BindingPattern_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_In_Yield_Await -> VariableDeclarationList_In_Yield_Await COMMA . VariableDeclaration_In_Yield_Await]*
    Goal::InputElementDiv,
    // [VariableStatement_Yield_Await -> VAR VariableDeclarationList_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [WhileStatement_Yield_Await_Return -> WHILE LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [WithStatement_Yield_Await_Return -> WITH LPAREN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield_Await -> FUNCTION . BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [LabelledItem_Yield_Await_Return -> FunctionDeclaration_Yield_Await .]*
    Goal::InputElementRegExp,
    // [LabelledStatement_Yield_Await_Return -> LabelIdentifier_Yield_Await COLON LabelledItem_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [LabelledItem_Yield_Await_Return -> Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Yield_Await -> BindingIdentifier_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingList_In_Yield_Await -> BindingList_In_Yield_Await COMMA . LexicalBinding_In_Yield_Await]*
    Goal::InputElementDiv,
    // [LexicalDeclaration_In_Yield_Await -> LetOrConst BindingList_In_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_In_Yield_Await -> BindingPattern_Yield_Await Initializer_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorExpression -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementTemplateTail,
    // [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN Expression_In_Await RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF . AssignmentExpression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await . SEMI_COLON Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await ELSE . Statement_Await]*
    Goal::InputElementRegExp,
    // [CaseClause_Await -> CASE . Expression_In_Await COLON]*
    // [CaseClause_Await -> CASE . Expression_In_Await COLON StatementList_Await]*
    Goal::InputElementRegExp,
    // [DefaultClause_Await -> DEFAULT . COLON]*
    // [DefaultClause_Await -> DEFAULT . COLON StatementList_Await]*
    Goal::InputElementDiv,
    // [CaseBlock_Await -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Await -> CaseClause_Await .]*
    Goal::InputElementDiv,
    // [CaseBlock_Await -> LBRACE CaseClauses_Await . RBRACE]*
    // [CaseBlock_Await -> LBRACE CaseClauses_Await . DefaultClause_Await RBRACE]*
    // [CaseBlock_Await -> LBRACE CaseClauses_Await . DefaultClause_Await CaseClauses_Await RBRACE]*
    // [CaseClauses_Await -> CaseClauses_Await . CaseClause_Await]*
    Goal::InputElementDiv,
    // [CaseBlock_Await -> LBRACE DefaultClause_Await . RBRACE]*
    // [CaseBlock_Await -> LBRACE DefaultClause_Await . CaseClauses_Await RBRACE]*
    Goal::InputElementDiv,
    // [Catch_Await -> CATCH LPAREN CatchParameter_Await RPAREN . Block_Await]*
    Goal::InputElementDiv,
    // [ClassElement_Yield -> STATIC FieldDefinition_Yield SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield -> ClassHeritage_Yield LBRACE ClassBody_Yield RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield -> LBRACK ElementList_Yield COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield -> ElementList_Yield COMMA Elision AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [ElementList_Yield -> ElementList_Yield COMMA Elision SpreadElement_Yield .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingIdentifier_Yield . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingPattern_Yield . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield -> ArgumentList_Yield COMMA ELLIPSIS . AssignmentExpression_In_Yield]*
    Goal::InputElementRegExp,
    // [Arguments_Yield -> LPAREN ArgumentList_Yield COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield -> ArgumentList_Yield COMMA AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [TemplateMiddleList_Yield -> TemplateMiddleList_Yield TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OPTIONAL_CHAINING LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [TemplateMiddleList_Yield_Tagged -> TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield_Tagged -> TemplateMiddleList_Yield_Tagged TemplateMiddle . Expression_In_Yield]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield_Tagged -> TemplateMiddleList_Yield_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield -> OptionalChain_Yield LBRACK Expression_In_Yield RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield -> ShortCircuitExpression_In_Yield CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN . Expression_In_Yield RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForBinding_Yield -> BindingIdentifier_Yield .]*
    // [VariableDeclaration_Yield -> BindingIdentifier_Yield .]*
    // [VariableDeclaration_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [ForBinding_Yield -> BindingPattern_Yield .]*
    // [VariableDeclaration_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield . IN Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield . OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield . SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [VariableDeclarationList_Yield -> VariableDeclarationList_Yield . COMMA VariableDeclaration_Yield]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_Yield -> VariableDeclaration_Yield .]*
    Goal::InputElementDiv,
    // [YieldExpression -> YIELD MUL . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [YieldExpression -> YIELD AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AND_ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . NULLISH_ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . OR_ASSIGN AssignmentExpression_Yield]*
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield . AssignmentOperator AssignmentExpression_Yield]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield .]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . DEC]*
    // [UpdateExpression_Yield -> LeftHandSideExpression_Yield . INC]*
    Goal::InputElementDiv,
    // [ArrowFunction_Yield -> ArrowParameters_Yield ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield BIT_AND . EqualityExpression_Yield]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_Yield -> BitwiseORExpression_Yield BIT_OR . BitwiseXORExpression_Yield]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield BIT_XOR . BitwiseANDExpression_Yield]*
    Goal::InputElementRegExp,
    // [CoalesceExpression_Yield -> CoalesceExpressionHead_Yield NULLISH . BitwiseORExpression_Yield]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield -> EqualityExpression_Yield EQ . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield -> EqualityExpression_Yield EQ_STRICT . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield -> EqualityExpression_Yield NE . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield -> EqualityExpression_Yield NE_STRICT . RelationalExpression_Yield]*
    Goal::InputElementRegExp,
    // [Expression_Yield -> Expression_Yield COMMA . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF . AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AND_ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF . AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield OR_ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AssignmentOperator . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [ForBinding_Yield -> BindingIdentifier_Yield .]*
    // [LexicalBinding_Yield -> BindingIdentifier_Yield .]*
    // [LexicalBinding_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [BindingList_Yield -> BindingList_Yield . COMMA LexicalBinding_Yield]*
    // [LexicalDeclaration_Yield -> LetOrConst BindingList_Yield . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForBinding_Yield -> BindingPattern_Yield .]*
    // [LexicalBinding_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [ForDeclaration_Yield -> LetOrConst ForBinding_Yield .]*
    Goal::InputElementDiv,
    // [BindingList_Yield -> LexicalBinding_Yield .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [LogicalANDExpression_Yield -> LogicalANDExpression_Yield AND . BitwiseORExpression_Yield]*
    Goal::InputElementRegExp,
    // [LogicalORExpression_Yield -> LogicalORExpression_Yield OR . LogicalANDExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield -> RelationalExpression_Yield GT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield -> RelationalExpression_Yield GTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield -> RelationalExpression_Yield INSTANCEOF . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield -> RelationalExpression_Yield LT . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield -> RelationalExpression_Yield LTE . ShiftExpression_Yield]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL . AssignmentExpression_In_Yield COLON AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return ELSE Statement_Yield_Return]*
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Yield_Return -> SWITCH LPAREN Expression_In_Yield RPAREN . CaseBlock_Yield_Return]*
    Goal::InputElementDiv,
    // [Catch_Yield_Return -> CATCH LPAREN . CatchParameter_Yield RPAREN Block_Yield_Return]*
    Goal::InputElementDiv,
    // [Catch_Yield_Return -> CATCH Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // [Finally_Yield_Return -> FINALLY Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // [TryStatement_Yield_Return -> TRY Block_Yield_Return Catch_Yield_Return Finally_Yield_Return .]*
    Goal::InputElementRegExp,
    // [VariableDeclarationList_In_Yield -> VariableDeclarationList_In_Yield COMMA VariableDeclaration_In_Yield .]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Return -> WHILE LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Yield_Return -> WITH LPAREN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [BindingList_In_Yield -> BindingList_In_Yield COMMA LexicalBinding_In_Yield .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorMethod -> ASYNC MUL ClassElementName LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding IN Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Return -> FOR LPAREN VAR ForBinding OF AssignmentExpression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [Expression_In -> Expression_In . COMMA AssignmentExpression_In]*
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In . RPAREN Statement_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN LexicalDeclaration Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [CaseClause_Return -> CASE Expression_In COLON .]*
    // [CaseClause_Return -> CASE Expression_In COLON . StatementList_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Return -> DEFAULT COLON StatementList_Return .]*
    // [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return CaseClauses_Return . RBRACE]*
    // [CaseClauses_Return -> CaseClauses_Return . CaseClause_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Return -> LBRACE DefaultClause_Return CaseClauses_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> GET ClassElementName_Await LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> ClassElementName_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Await -> FUNCTION BindingIdentifier_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause_Await_Return -> CASE Expression_In_Await COLON .]*
    // [CaseClause_Await_Return -> CASE Expression_In_Await COLON . StatementList_Await_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Await_Return -> DEFAULT COLON StatementList_Await_Return .]*
    // [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return CaseClauses_Await_Return . RBRACE]*
    // [CaseClauses_Await_Return -> CaseClauses_Await_Return . CaseClause_Await_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Await_Return -> LBRACE DefaultClause_Await_Return CaseClauses_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [ClassElement_Yield_Await -> STATIC FieldDefinition_Yield_Await SEMI_COLON .]*
    Goal::InputElementDiv,
    // [ClassTail_Yield_Await -> ClassHeritage_Yield_Await LBRACE ClassBody_Yield_Await RBRACE .]*
    Goal::InputElementRegExpOrTemplateTail,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN . UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [ArrayLiteral_Yield_Await -> LBRACK ElementList_Yield_Await COMMA Elision RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [ElementList_Yield_Await -> ElementList_Yield_Await COMMA Elision SpreadElement_Yield_Await .]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingIdentifier_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingPattern_Yield_Await . RPAREN]*
    Goal::InputElementDiv,
    // [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA ELLIPSIS . AssignmentExpression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [Arguments_Yield_Await -> LPAREN ArgumentList_Yield_Await COMMA RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [TemplateMiddleList_Yield_Await -> TemplateMiddleList_Yield_Await TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OPTIONAL_CHAINING LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged TemplateMiddle . Expression_In_Yield_Await]*
    Goal::InputElementRegExp,
    // [TemplateSpans_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged TemplateTail .]*
    Goal::InputElementTemplateTail,
    // [OptionalChain_Yield_Await -> OptionalChain_Yield_Await LBRACK Expression_In_Yield_Await RBRACK .]*
    Goal::InputElementTemplateTail,
    // [ConditionalExpression_In_Yield_Await -> ShortCircuitExpression_In_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await . LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN . FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE]*
    // [FormalParameters_Await -> () .]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN . Expression_In_Yield_Await RPAREN SEMI_COLON]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR . ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForDeclaration_Yield_Await -> LetOrConst . ForBinding_Yield_Await]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield . ARROW AsyncConciseBody]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [ForBinding_Yield_Await -> BindingPattern_Yield_Await .]*
    // [VariableDeclaration_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await . IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await . SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [VariableDeclarationList_Yield_Await -> VariableDeclarationList_Yield_Await . COMMA VariableDeclaration_Yield_Await]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_Yield_Await -> VariableDeclaration_Yield_Await .]*
    Goal::InputElementDiv,
    // [YieldExpression_Await -> YIELD MUL . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [YieldExpression_Await -> YIELD AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AND_ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . NULLISH_ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . OR_ASSIGN AssignmentExpression_Yield_Await]*
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . AssignmentOperator AssignmentExpression_Yield_Await]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await .]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . DEC]*
    // [UpdateExpression_Yield_Await -> LeftHandSideExpression_Yield_Await . INC]*
    Goal::InputElementDiv,
    // [ArrowFunction_Yield_Await -> ArrowParameters_Yield_Await ARROW . ConciseBody]*
    Goal::InputElementRegExp,
    // [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await BIT_AND . EqualityExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await BIT_OR . BitwiseXORExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await BIT_XOR . BitwiseANDExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [CoalesceExpression_Yield_Await -> CoalesceExpressionHead_Yield_Await NULLISH . BitwiseORExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ_STRICT . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE_STRICT . RelationalExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [Expression_Yield_Await -> Expression_Yield_Await COMMA . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ForBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [BindingList_Yield_Await -> BindingList_Yield_Await . COMMA LexicalBinding_Yield_Await]*
    // [LexicalDeclaration_Yield_Await -> LetOrConst BindingList_Yield_Await . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForBinding_Yield_Await -> BindingPattern_Yield_Await .]*
    // [LexicalBinding_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [ForDeclaration_Yield_Await -> LetOrConst ForBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingList_Yield_Await -> LexicalBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await AND . BitwiseORExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [LogicalORExpression_Yield_Await -> LogicalORExpression_Yield_Await OR . LogicalANDExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await INSTANCEOF . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LT . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LTE . ShiftExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL . AssignmentExpression_In_Yield_Await COLON AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [FormalParameters_Yield -> () .]*
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN . FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters . RPAREN LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return]*
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return !~[ELSE]]*
    Goal::InputElementRegExp,
    // [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN Expression_In_Yield_Await RPAREN . CaseBlock_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Catch_Yield_Await_Return -> CATCH LPAREN . CatchParameter_Yield_Await RPAREN Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Catch_Yield_Await_Return -> CATCH Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [Finally_Yield_Await_Return -> FINALLY Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [TryStatement_Yield_Await_Return -> TRY Block_Yield_Await_Return Catch_Yield_Await_Return Finally_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [VariableDeclarationList_In_Yield_Await -> VariableDeclarationList_In_Yield_Await COMMA VariableDeclaration_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Await_Return -> WHILE LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [WithStatement_Yield_Await_Return -> WITH LPAREN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [BindingList_In_Yield_Await -> BindingList_In_Yield_Await COMMA LexicalBinding_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Await -> DO Statement_Await WHILE LPAREN Expression_In_Await RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . RPAREN Statement_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON . Expression_In_Await RPAREN Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await IN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await IN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [IfStatement_Await -> IF LPAREN Expression_In_Await RPAREN Statement_Await ELSE Statement_Await .]*
    Goal::InputElementRegExp,
    // [CaseClause_Await -> CASE Expression_In_Await . COLON]*
    // [CaseClause_Await -> CASE Expression_In_Await . COLON StatementList_Await]*
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    Goal::InputElementDiv,
    // [DefaultClause_Await -> DEFAULT COLON .]*
    // [DefaultClause_Await -> DEFAULT COLON . StatementList_Await]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await -> LBRACE CaseClauses_Await RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Await -> CaseClauses_Await CaseClause_Await .]*
    Goal::InputElementDiv,
    // [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await . RBRACE]*
    // [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await . CaseClauses_Await RBRACE]*
    Goal::InputElementDiv,
    // [CaseBlock_Await -> LBRACE DefaultClause_Await RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await -> LBRACE DefaultClause_Await CaseClauses_Await . RBRACE]*
    // [CaseClauses_Await -> CaseClauses_Await . CaseClause_Await]*
    Goal::InputElementDiv,
    // [Catch_Await -> CATCH LPAREN CatchParameter_Await RPAREN Block_Await .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingIdentifier_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield -> LPAREN Expression_In_Yield COMMA ELLIPSIS BindingPattern_Yield RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield -> ArgumentList_Yield COMMA ELLIPSIS AssignmentExpression_In_Yield .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [TemplateMiddleList_Yield_Tagged -> TemplateMiddleList_Yield_Tagged TemplateMiddle Expression_In_Yield .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN Expression_In_Yield . RPAREN SEMI_COLON]*
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Initializer_Yield -> ASSIGN . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [VariableDeclaration_Yield -> BindingIdentifier_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Yield -> BindingPattern_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF . AssignmentExpression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [VariableDeclarationList_Yield -> VariableDeclarationList_Yield COMMA . VariableDeclaration_Yield]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON . Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [YieldExpression -> YIELD MUL AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [ArrowFunction_Yield -> ArrowParameters_Yield ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield BIT_AND EqualityExpression_Yield .]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . EQ RelationalExpression_Yield]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . EQ_STRICT RelationalExpression_Yield]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . NE RelationalExpression_Yield]*
    // [EqualityExpression_Yield -> EqualityExpression_Yield . NE_STRICT RelationalExpression_Yield]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield -> BitwiseORExpression_Yield BIT_OR BitwiseXORExpression_Yield .]*
    // [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield . BIT_XOR BitwiseANDExpression_Yield]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield -> BitwiseANDExpression_Yield . BIT_AND EqualityExpression_Yield]*
    // [BitwiseXORExpression_Yield -> BitwiseXORExpression_Yield BIT_XOR BitwiseANDExpression_Yield .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    // [CoalesceExpression_Yield -> CoalesceExpressionHead_Yield NULLISH BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield -> CoverCallExpressionAndAsyncArrowHead_Yield ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield -> EqualityExpression_Yield EQ RelationalExpression_Yield .]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield -> EqualityExpression_Yield EQ_STRICT RelationalExpression_Yield .]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield -> EqualityExpression_Yield NE RelationalExpression_Yield .]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield -> EqualityExpression_Yield NE_STRICT RelationalExpression_Yield .]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . GTE ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . INSTANCEOF ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LT ShiftExpression_Yield]*
    // [RelationalExpression_Yield -> RelationalExpression_Yield . LTE ShiftExpression_Yield]*
    Goal::InputElementDiv,
    // [Expression_Yield -> Expression_Yield COMMA AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AND_ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield NULLISH_ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield OR_ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield -> LeftHandSideExpression_Yield AssignmentOperator AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [LexicalBinding_Yield -> BindingIdentifier_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // [BindingList_Yield -> BindingList_Yield COMMA . LexicalBinding_Yield]*
    Goal::InputElementDiv,
    // [LexicalDeclaration_Yield -> LetOrConst BindingList_Yield SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_Yield -> BindingPattern_Yield Initializer_Yield .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    // [LogicalANDExpression_Yield -> LogicalANDExpression_Yield AND BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield -> BitwiseORExpression_Yield . BIT_OR BitwiseXORExpression_Yield]*
    // [LogicalANDExpression_Yield -> BitwiseORExpression_Yield .]*
    Goal::InputElementDiv,
    // [LogicalANDExpression_Yield -> LogicalANDExpression_Yield . AND BitwiseORExpression_Yield]*
    // [LogicalORExpression_Yield -> LogicalORExpression_Yield OR LogicalANDExpression_Yield .]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield -> RelationalExpression_Yield GT ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield -> RelationalExpression_Yield GTE ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield -> RelationalExpression_Yield INSTANCEOF ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield -> RelationalExpression_Yield LT ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield -> RelationalExpression_Yield LTE ShiftExpression_Yield .]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SAR AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHL AdditiveExpression_Yield]*
    // [ShiftExpression_Yield -> ShiftExpression_Yield . SHR AdditiveExpression_Yield]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL AssignmentExpression_In_Yield . COLON AssignmentExpression_Yield]*
    Goal::InputElementDiv,
    // [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return . ELSE Statement_Yield_Return]*
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return . !~[ELSE]]*
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Return -> LBRACE . RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE . CaseClauses_Yield_Return RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE . CaseClauses_Yield_Return DefaultClause_Yield_Return RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE . CaseClauses_Yield_Return DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE . DefaultClause_Yield_Return RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE . DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE]*
    Goal::InputElementDiv,
    // [SwitchStatement_Yield_Return -> SWITCH LPAREN Expression_In_Yield RPAREN CaseBlock_Yield_Return .]*
    Goal::InputElementRegExp,
    // [CatchParameter_Yield -> BindingIdentifier_Yield .]*
    Goal::InputElementDiv,
    // [CatchParameter_Yield -> BindingPattern_Yield .]*
    Goal::InputElementDiv,
    // [Catch_Yield_Return -> CATCH LPAREN CatchParameter_Yield . RPAREN Block_Yield_Return]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Return -> WHILE LPAREN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [WithStatement_Yield_Return -> WITH LPAREN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN . Statement_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Return -> FOR LPAREN Expression SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [CaseClause_Return -> CASE Expression_In COLON StatementList_Return .]*
    // [StatementList_Return -> StatementList_Return . StatementListItem_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Return -> LBRACE CaseClauses_Return DefaultClause_Return CaseClauses_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Await -> ASYNC ClassElementName_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Await -> MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Await -> SET ClassElementName_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Await -> ASYNC FUNCTION BindingIdentifier_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Await -> FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause_Await_Return -> CASE Expression_In_Await COLON StatementList_Await_Return .]*
    // [StatementList_Await_Return -> StatementList_Await_Return . StatementListItem_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await_Return -> LBRACE CaseClauses_Await_Return DefaultClause_Await_Return CaseClauses_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingIdentifier_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [CoverParenthesizedExpressionAndArrowParameterList_Yield_Await -> LPAREN Expression_In_Yield_Await COMMA ELLIPSIS BindingPattern_Yield_Await RPAREN .]*
    Goal::InputElementTemplateTail,
    // [ArgumentList_Yield_Await -> ArgumentList_Yield_Await COMMA ELLIPSIS AssignmentExpression_In_Yield_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [TemplateMiddleList_Yield_Await_Tagged -> TemplateMiddleList_Yield_Await_Tagged TemplateMiddle Expression_In_Yield_Await .]*
    Goal::InputElementTemplateTail,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN . FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    // [FormalParameters_Yield_Await -> () .]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await . RPAREN LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await . RPAREN SEMI_COLON]*
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [ForBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForBinding_Yield_Await -> BindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await . OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [AsyncArrowFunction_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW . AsyncConciseBody]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Initializer_Yield_Await -> ASSIGN . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Yield_Await -> BindingPattern_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [VariableDeclarationList_Yield_Await -> VariableDeclarationList_Yield_Await COMMA . VariableDeclaration_Yield_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON . Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [YieldExpression_Await -> YIELD MUL AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [ArrowFunction_Yield_Await -> ArrowParameters_Yield_Await ARROW ConciseBody .]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await BIT_AND EqualityExpression_Yield_Await .]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ RelationalExpression_Yield_Await]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . EQ_STRICT RelationalExpression_Yield_Await]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE RelationalExpression_Yield_Await]*
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await . NE_STRICT RelationalExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await BIT_OR BitwiseXORExpression_Yield_Await .]*
    // [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await . BIT_XOR BitwiseANDExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [BitwiseANDExpression_Yield_Await -> BitwiseANDExpression_Yield_Await . BIT_AND EqualityExpression_Yield_Await]*
    // [BitwiseXORExpression_Yield_Await -> BitwiseXORExpression_Yield_Await BIT_XOR BitwiseANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    // [CoalesceExpression_Yield_Await -> CoalesceExpressionHead_Yield_Await NULLISH BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield_Await -> CoverCallExpressionAndAsyncArrowHead_Yield_Await ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ RelationalExpression_Yield_Await .]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await EQ_STRICT RelationalExpression_Yield_Await .]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE RelationalExpression_Yield_Await .]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [EqualityExpression_Yield_Await -> EqualityExpression_Yield_Await NE_STRICT RelationalExpression_Yield_Await .]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . GTE ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . INSTANCEOF ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LT ShiftExpression_Yield_Await]*
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await . LTE ShiftExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [Expression_Yield_Await -> Expression_Yield_Await COMMA AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AND_ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await NULLISH_ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await OR_ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [AssignmentExpression_Yield_Await -> LeftHandSideExpression_Yield_Await AssignmentOperator AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // [BindingList_Yield_Await -> BindingList_Yield_Await COMMA . LexicalBinding_Yield_Await]*
    Goal::InputElementDiv,
    // [LexicalDeclaration_Yield_Await -> LetOrConst BindingList_Yield_Await SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [LexicalBinding_Yield_Await -> BindingPattern_Yield_Await Initializer_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    // [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await AND BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [BitwiseORExpression_Yield_Await -> BitwiseORExpression_Yield_Await . BIT_OR BitwiseXORExpression_Yield_Await]*
    // [LogicalANDExpression_Yield_Await -> BitwiseORExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [LogicalANDExpression_Yield_Await -> LogicalANDExpression_Yield_Await . AND BitwiseORExpression_Yield_Await]*
    // [LogicalORExpression_Yield_Await -> LogicalORExpression_Yield_Await OR LogicalANDExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GT ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await GTE ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await INSTANCEOF ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LT ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [RelationalExpression_Yield_Await -> RelationalExpression_Yield_Await LTE ShiftExpression_Yield_Await .]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SAR AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHL AdditiveExpression_Yield_Await]*
    // [ShiftExpression_Yield_Await -> ShiftExpression_Yield_Await . SHR AdditiveExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await . COLON AssignmentExpression_Yield_Await]*
    Goal::InputElementDiv,
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield . RPAREN LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN . LBRACE FunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return . ELSE Statement_Yield_Await_Return]*
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return . !~[ELSE]]*
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return !~[ELSE] .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Await_Return -> LBRACE . RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE . CaseClauses_Yield_Await_Return RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE . CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE . CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE . DefaultClause_Yield_Await_Return RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE . DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // [SwitchStatement_Yield_Await_Return -> SWITCH LPAREN Expression_In_Yield_Await RPAREN CaseBlock_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [CatchParameter_Yield_Await -> BindingIdentifier_Yield_Await .]*
    Goal::InputElementDiv,
    // [CatchParameter_Yield_Await -> BindingPattern_Yield_Await .]*
    Goal::InputElementDiv,
    // [Catch_Yield_Await_Return -> CATCH LPAREN CatchParameter_Yield_Await . RPAREN Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [WhileStatement_Yield_Await_Return -> WHILE LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [WithStatement_Yield_Await_Return -> WITH LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN ForDeclaration_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN LeftHandSideExpression_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await IN Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Await -> FOR LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [Expression_In_Await -> Expression_In_Await . COMMA AssignmentExpression_In_Await]*
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await . RPAREN Statement_Await]*
    Goal::InputElementDiv,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN LexicalDeclaration_Await Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [CaseClause_Await -> CASE Expression_In_Await COLON .]*
    // [CaseClause_Await -> CASE Expression_In_Await COLON . StatementList_Await]*
    Goal::InputElementRegExp,
    // [DefaultClause_Await -> DEFAULT COLON StatementList_Await .]*
    // [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await CaseClauses_Await . RBRACE]*
    // [CaseClauses_Await -> CaseClauses_Await . CaseClause_Await]*
    Goal::InputElementDiv,
    // [CaseBlock_Await -> LBRACE DefaultClause_Await CaseClauses_Await RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN Expression_In_Yield RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [Initializer_Yield -> ASSIGN AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Yield -> BindingIdentifier_Yield .]*
    // [VariableDeclaration_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_Yield -> VariableDeclarationList_Yield COMMA VariableDeclaration_Yield .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield . SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [LexicalBinding_Yield -> BindingIdentifier_Yield .]*
    // [LexicalBinding_Yield -> BindingIdentifier_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [LexicalBinding_Yield -> BindingPattern_Yield . Initializer_Yield]*
    Goal::InputElementDiv,
    // [BindingList_Yield -> BindingList_Yield COMMA LexicalBinding_Yield .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL AssignmentExpression_In_Yield COLON . AssignmentExpression_Yield]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return ELSE . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Return -> CASE . Expression_In_Yield COLON]*
    // [CaseClause_Yield_Return -> CASE . Expression_In_Yield COLON StatementList_Yield_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Yield_Return -> DEFAULT . COLON]*
    // [DefaultClause_Yield_Return -> DEFAULT . COLON StatementList_Yield_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Yield_Return -> CaseClause_Yield_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return . RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return . DefaultClause_Yield_Return RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return . DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE]*
    // [CaseClauses_Yield_Return -> CaseClauses_Yield_Return . CaseClause_Yield_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return . RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return . CaseClauses_Yield_Return RBRACE]*
    Goal::InputElementDiv,
    // [Catch_Yield_Return -> CATCH LPAREN CatchParameter_Yield RPAREN . Block_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Return -> FOR LPAREN VAR VariableDeclarationList SEMI_COLON Expression_In SEMI_COLON Expression_In RPAREN Statement_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Await -> ASYNC MUL ClassElementName_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Await -> ASYNC FUNCTION MUL BindingIdentifier_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionStatementList -> () .]*
    // [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE . FunctionBody RBRACE]*
    Goal::InputElementRegExp,
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await . RPAREN LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN . LBRACE AsyncFunctionBody RBRACE]*
    Goal::InputElementDiv,
    // [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await RPAREN . SEMI_COLON]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF . AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [AsyncArrowFunction_Yield_Await -> ASYNC AsyncArrowBindingIdentifier_Yield ARROW AsyncConciseBody .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Initializer_Yield_Await -> ASSIGN AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [VariableDeclaration_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [VariableDeclaration_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [VariableDeclarationList_Yield_Await -> VariableDeclarationList_Yield_Await COMMA VariableDeclaration_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await . SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await .]*
    // [LexicalBinding_Yield_Await -> BindingIdentifier_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [LexicalBinding_Yield_Await -> BindingPattern_Yield_Await . Initializer_Yield_Await]*
    Goal::InputElementDiv,
    // [BindingList_Yield_Await -> BindingList_Yield_Await COMMA LexicalBinding_Yield_Await .]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON . AssignmentExpression_Yield_Await]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN . LBRACE GeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE . FunctionBody RBRACE]*
    // [FunctionStatementList -> () .]*
    Goal::InputElementRegExp,
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Await_Return -> CASE . Expression_In_Yield_Await COLON]*
    // [CaseClause_Yield_Await_Return -> CASE . Expression_In_Yield_Await COLON StatementList_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Yield_Await_Return -> DEFAULT . COLON]*
    // [DefaultClause_Yield_Await_Return -> DEFAULT . COLON StatementList_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Await_Return -> LBRACE RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Yield_Await_Return -> CaseClause_Yield_Await_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return . RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return . DefaultClause_Yield_Await_Return RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return . DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE]*
    // [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return . CaseClause_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return . RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return . CaseClauses_Yield_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // [Catch_Yield_Await_Return -> CATCH LPAREN CatchParameter_Yield_Await RPAREN . Block_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Await -> FOR AWAIT LPAREN VAR ForBinding_Await OF AssignmentExpression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN . Statement_Await]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN Expression_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [CaseClause_Await -> CASE Expression_In_Await COLON StatementList_Await .]*
    // [StatementList_Await -> StatementList_Await . StatementListItem_Await]*
    Goal::InputElementRegExp,
    // [CaseBlock_Await -> LBRACE CaseClauses_Await DefaultClause_Await CaseClauses_Await RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> GET ClassElementName_Yield LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> ClassElementName_Yield LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Yield_Return -> DO Statement_Yield_Return WHILE LPAREN Expression_In_Yield RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . RPAREN Statement_Yield_Return]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON . Expression_In_Yield RPAREN Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN ForDeclaration_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN LeftHandSideExpression_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_Yield -> ShortCircuitExpression_Yield CONDITIONAL AssignmentExpression_In_Yield COLON AssignmentExpression_Yield .]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Return -> IF LPAREN Expression_In_Yield RPAREN Statement_Yield_Return ELSE Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Return -> CASE Expression_In_Yield . COLON]*
    // [CaseClause_Yield_Return -> CASE Expression_In_Yield . COLON StatementList_Yield_Return]*
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    Goal::InputElementDiv,
    // [DefaultClause_Yield_Return -> DEFAULT COLON .]*
    // [DefaultClause_Yield_Return -> DEFAULT COLON . StatementList_Yield_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Yield_Return -> CaseClauses_Yield_Return CaseClause_Yield_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return . RBRACE]*
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return . CaseClauses_Yield_Return RBRACE]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return CaseClauses_Yield_Return . RBRACE]*
    // [CaseClauses_Yield_Return -> CaseClauses_Yield_Return . CaseClause_Yield_Return]*
    Goal::InputElementDiv,
    // [Catch_Yield_Return -> CATCH LPAREN CatchParameter_Yield RPAREN Block_Yield_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> GET ClassElementName_Yield_Await LPAREN RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> ClassElementName_Yield_Await LPAREN UniqueFormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN . LBRACE AsyncGeneratorBody RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE . AsyncFunctionBody RBRACE]*
    // [FunctionStatementList_Await -> () .]*
    Goal::InputElementRegExp,
    // [DoWhileStatement_Yield_Await_Return -> DO Statement_Yield_Await_Return WHILE LPAREN Expression_In_Yield_Await RPAREN SEMI_COLON .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . RPAREN Statement_Yield_Await_Return]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON . Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ConditionalExpression_Yield_Await -> ShortCircuitExpression_Yield_Await CONDITIONAL AssignmentExpression_In_Yield_Await COLON AssignmentExpression_Yield_Await .]*
    Goal::InputElementDiv,
    // [FunctionStatementList_Yield -> () .]*
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE . GeneratorBody RBRACE]*
    Goal::InputElementRegExp,
    // [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [IfStatement_Yield_Await_Return -> IF LPAREN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return ELSE Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await . COLON]*
    // [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await . COLON StatementList_Yield_Await_Return]*
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    Goal::InputElementDiv,
    // [DefaultClause_Yield_Await_Return -> DEFAULT COLON .]*
    // [DefaultClause_Yield_Await_Return -> DEFAULT COLON . StatementList_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return CaseClause_Yield_Await_Return .]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return . RBRACE]*
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return . CaseClauses_Yield_Await_Return RBRACE]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return . RBRACE]*
    // [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return . CaseClause_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [Catch_Yield_Await_Return -> CATCH LPAREN CatchParameter_Yield_Await RPAREN Block_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Await -> FOR LPAREN VAR VariableDeclarationList_Await SEMI_COLON Expression_In_Await SEMI_COLON Expression_In_Await RPAREN Statement_Await .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield -> ASYNC ClassElementName_Yield LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield -> MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield -> SET ClassElementName_Yield LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield IN Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Return -> FOR LPAREN VAR ForBinding_Yield OF AssignmentExpression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield -> Expression_In_Yield . COMMA AssignmentExpression_In_Yield]*
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield . RPAREN Statement_Yield_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN LexicalDeclaration_Yield Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield -> FUNCTION BindingIdentifier_Yield LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Return -> CASE Expression_In_Yield COLON .]*
    // [CaseClause_Yield_Return -> CASE Expression_In_Yield COLON . StatementList_Yield_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Yield_Return -> DEFAULT COLON StatementList_Yield_Return .]*
    // [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return CaseClauses_Yield_Return . RBRACE]*
    // [CaseClauses_Yield_Return -> CaseClauses_Yield_Return . CaseClause_Yield_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Return -> LBRACE DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncMethod_Yield_Await -> ASYNC ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [GeneratorMethod_Yield_Await -> MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [MethodDefinition_Yield_Await -> SET ClassElementName_Yield_Await LPAREN PropertySetParameterList RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE . AsyncGeneratorBody RBRACE]*
    // [FunctionStatementList_Yield_Await -> () .]*
    Goal::InputElementRegExp,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody . RBRACE]*
    Goal::InputElementDiv,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN ForDeclaration_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN LeftHandSideExpression_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await IN Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [Expression_In_Yield_Await -> Expression_In_Yield_Await . COMMA AssignmentExpression_In_Yield_Await]*
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await . RPAREN Statement_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN LexicalDeclaration_Yield_Await Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [FunctionDeclaration_Yield_Await -> FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters RPAREN LBRACE FunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await COLON .]*
    // [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await COLON . StatementList_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [DefaultClause_Yield_Await_Return -> DEFAULT COLON StatementList_Yield_Await_Return .]*
    // [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return . RBRACE]*
    // [CaseClauses_Yield_Await_Return -> CaseClauses_Yield_Await_Return . CaseClause_Yield_Await_Return]*
    Goal::InputElementDiv,
    // [CaseBlock_Yield_Await_Return -> LBRACE DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield -> ASYNC MUL ClassElementName_Yield LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield -> ASYNC FUNCTION BindingIdentifier_Yield LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN . Statement_Yield_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN Expression_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield -> FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Return -> CASE Expression_In_Yield COLON StatementList_Yield_Return .]*
    // [StatementList_Yield_Return -> StatementList_Yield_Return . StatementListItem_Yield_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Return -> LBRACE CaseClauses_Yield_Return DefaultClause_Yield_Return CaseClauses_Yield_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorMethod_Yield_Await -> ASYNC MUL ClassElementName_Yield_Await LPAREN UniqueFormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementDiv,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody . RBRACE]*
    Goal::InputElementDiv,
    // [AsyncFunctionDeclaration_Yield_Await -> ASYNC FUNCTION BindingIdentifier_Yield_Await LPAREN FormalParameters_Await RPAREN LBRACE AsyncFunctionBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForInOfStatement_Yield_Await_Return -> FOR AWAIT LPAREN VAR ForBinding_Yield_Await OF AssignmentExpression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN . Statement_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN Expression_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
    // [GeneratorDeclaration_Yield_Await -> FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield RPAREN LBRACE GeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [CaseClause_Yield_Await_Return -> CASE Expression_In_Yield_Await COLON StatementList_Yield_Await_Return .]*
    // [StatementList_Yield_Await_Return -> StatementList_Yield_Await_Return . StatementListItem_Yield_Await_Return]*
    Goal::InputElementRegExp,
    // [CaseBlock_Yield_Await_Return -> LBRACE CaseClauses_Yield_Await_Return DefaultClause_Yield_Await_Return CaseClauses_Yield_Await_Return RBRACE .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorDeclaration_Yield -> ASYNC FUNCTION MUL BindingIdentifier_Yield LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Return -> FOR LPAREN VAR VariableDeclarationList_Yield SEMI_COLON Expression_In_Yield SEMI_COLON Expression_In_Yield RPAREN Statement_Yield_Return .]*
    Goal::InputElementRegExp,
    // [AsyncGeneratorDeclaration_Yield_Await -> ASYNC FUNCTION MUL BindingIdentifier_Yield_Await LPAREN FormalParameters_Yield_Await RPAREN LBRACE AsyncGeneratorBody RBRACE .]*
    Goal::InputElementRegExp,
    // [ForStatement_Yield_Await_Return -> FOR LPAREN VAR VariableDeclarationList_Yield_Await SEMI_COLON Expression_In_Yield_Await SEMI_COLON Expression_In_Yield_Await RPAREN Statement_Yield_Await_Return .]*
    Goal::InputElementRegExp,
];
