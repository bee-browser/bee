// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated with:
// template: libs/jsruntime/src/llvmir/type_holder.hh.njk

#pragma once

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-parameter"
#include "llvm/IR/IRBuilder.h"
#include "llvm/IR/LLVMContext.h"
#include "llvm/IR/Module.h"
#pragma GCC diagnostic pop

class TypeHolder {
 public:
  TypeHolder(llvm::LLVMContext& context, llvm::Module& module, llvm::IRBuilder<>& builder)
      : context_(context), module_(module), builder_(builder) {}

  llvm::StructType* CreateValueType();
  llvm::Function* CreateRuntimeDeclareImmutable();
  llvm::Function* CreateRuntimeDeclareImmutableUndefined();
  llvm::Function* CreateRuntimeDeclareImmutableBoolean();
  llvm::Function* CreateRuntimeDeclareImmutableNumber();
  llvm::Function* CreateRuntimeDeclareMutable();
  llvm::Function* CreateRuntimeDeclareMutableUndefined();
  llvm::Function* CreateRuntimeDeclareMutableBoolean();
  llvm::Function* CreateRuntimeDeclareMutableNumber();
  llvm::Function* CreateRuntimeDeclareFunction();
  llvm::Function* CreateRuntimeGetBinding();
  llvm::Function* CreateRuntimeGetBindingBoolean();
  llvm::Function* CreateRuntimeGetBindingNumber();
  llvm::Function* CreateRuntimePutBinding();
  llvm::Function* CreateRuntimePutBindingUndefined();
  llvm::Function* CreateRuntimePutBindingBoolean();
  llvm::Function* CreateRuntimePutBindingNumber();
  llvm::Function* CreateRuntimePushArgument();
  llvm::Function* CreateRuntimePushArgumentUndefined();
  llvm::Function* CreateRuntimePushArgumentBoolean();
  llvm::Function* CreateRuntimePushArgumentNumber();
  llvm::Function* CreateRuntimeCall();
  llvm::Function* CreateRuntimeReturnValue();
  llvm::Function* CreateRuntimeReturnBoolean();
  llvm::Function* CreateRuntimeReturnNumber();
  llvm::Function* CreateRuntimeAllocateBindings();
  llvm::Function* CreateRuntimeReleaseBindings();
  llvm::Function* CreateRuntimeInspect();
  llvm::Function* CreateRuntimeInspectBoolean();
  llvm::Function* CreateRuntimeInspectNumber();

 private:
  llvm::LLVMContext& context_;
  llvm::Module& module_;
  llvm::IRBuilder<>& builder_;
  llvm::StructType* value_type_ = nullptr;
  llvm::Function* runtime_declare_immutable_ = nullptr;
  llvm::Function* runtime_declare_immutable_undefined_ = nullptr;
  llvm::Function* runtime_declare_immutable_boolean_ = nullptr;
  llvm::Function* runtime_declare_immutable_number_ = nullptr;
  llvm::Function* runtime_declare_mutable_ = nullptr;
  llvm::Function* runtime_declare_mutable_undefined_ = nullptr;
  llvm::Function* runtime_declare_mutable_boolean_ = nullptr;
  llvm::Function* runtime_declare_mutable_number_ = nullptr;
  llvm::Function* runtime_declare_function_ = nullptr;
  llvm::Function* runtime_get_binding_ = nullptr;
  llvm::Function* runtime_get_binding_boolean_ = nullptr;
  llvm::Function* runtime_get_binding_number_ = nullptr;
  llvm::Function* runtime_put_binding_ = nullptr;
  llvm::Function* runtime_put_binding_undefined_ = nullptr;
  llvm::Function* runtime_put_binding_boolean_ = nullptr;
  llvm::Function* runtime_put_binding_number_ = nullptr;
  llvm::Function* runtime_push_argument_ = nullptr;
  llvm::Function* runtime_push_argument_undefined_ = nullptr;
  llvm::Function* runtime_push_argument_boolean_ = nullptr;
  llvm::Function* runtime_push_argument_number_ = nullptr;
  llvm::Function* runtime_call_ = nullptr;
  llvm::Function* runtime_return_value_ = nullptr;
  llvm::Function* runtime_return_boolean_ = nullptr;
  llvm::Function* runtime_return_number_ = nullptr;
  llvm::Function* runtime_allocate_bindings_ = nullptr;
  llvm::Function* runtime_release_bindings_ = nullptr;
  llvm::Function* runtime_inspect_ = nullptr;
  llvm::Function* runtime_inspect_boolean_ = nullptr;
  llvm::Function* runtime_inspect_number_ = nullptr;
};
