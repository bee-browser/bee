jobs:
  build:
    strategy:
      matrix:
        runner:
          - macos-latest
          - ubuntu-latest
        rust:
          - stable
          #- nightly
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      # Took from rust-analyzer/rust-analyzer#6208
      - name: Install GNU tar (workaround for actions/cache#403)
        if: matrix.runner == 'macos-latest'
        run: |
          brew install gnu-tar
          echo PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH" >>$GITHUB_ENV
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cache for cargo
        uses: actions/cache@v2
        with:
          path: |
            $CARGO_HOME/registry
            $CARGO_HOME/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
      - uses: denolib/setup-deno@v2
        with:
          deno-version: v1.x
      - uses: actions/setup-node@v2
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache for npm
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Prepare GitHub CI
        run: |
          make github-ci
      - name: Build
        run: |
          make
        env:
          CARGO_TERM_VERBOSE: true
      - name: Run tests
        run: |
          make test
        env:
          CARGO_TERM_VERBOSE: true
