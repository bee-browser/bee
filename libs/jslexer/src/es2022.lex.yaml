# DO NOT EDIT THIS FILE BY HAND.
#
# This file was automagically generated by transpile.js.

SourceCharacter:
  type: any
InputElementDiv:
  type: one-of
  data:
    - type: non-terminal
      data: WhiteSpace
    - type: non-terminal
      data: LineTerminator
    - type: non-terminal
      data: Comment
    - type: non-terminal
      data: CommonToken
    - type: non-terminal
      data: DivPunctuator
    - type: non-terminal
      data: RightBracePunctuator
InputElementRegExp:
  type: one-of
  data:
    - type: non-terminal
      data: WhiteSpace
    - type: non-terminal
      data: LineTerminator
    - type: non-terminal
      data: Comment
    - type: non-terminal
      data: CommonToken
    - type: non-terminal
      data: RightBracePunctuator
    - type: non-terminal
      data: RegularExpressionLiteral
InputElementRegExpOrTemplateTail:
  type: one-of
  data:
    - type: non-terminal
      data: WhiteSpace
    - type: non-terminal
      data: LineTerminator
    - type: non-terminal
      data: Comment
    - type: non-terminal
      data: CommonToken
    - type: non-terminal
      data: RegularExpressionLiteral
    - type: non-terminal
      data: TemplateSubstitutionTail
InputElementTemplateTail:
  type: one-of
  data:
    - type: non-terminal
      data: WhiteSpace
    - type: non-terminal
      data: LineTerminator
    - type: non-terminal
      data: Comment
    - type: non-terminal
      data: CommonToken
    - type: non-terminal
      data: DivPunctuator
    - type: non-terminal
      data: TemplateSubstitutionTail
WhiteSpace:
  type: char-class
  data:
    - type: built-in
      data: TAB
    - type: built-in
      data: VT
    - type: built-in
      data: FF
    - type: built-in
      data: ZWNBSP
    - type: built-in
      data: USP
LineTerminator:
  type: char-class
  data:
    - type: built-in
      data: LF
    - type: built-in
      data: CR
    - type: built-in
      data: LS
    - type: built-in
      data: PS
LineTerminatorSequence:
  type: one-of
  data:
    - type: char-class
      data:
        - type: built-in
          data: LF
    - type: sequence
      data:
        - type: char-class
          data:
            - type: built-in
              data: CR
        - type: lookahead
          data:
            - type: built-in
              data: LF
          negate: true
    - type: char-class
      data:
        - type: built-in
          data: LS
    - type: char-class
      data:
        - type: built-in
          data: PS
    - type: sequence
      data:
        - type: char-class
          data:
            - type: built-in
              data: CR
        - type: char-class
          data:
            - type: built-in
              data: LF
Comment:
  type: one-of
  data:
    - type: non-terminal
      data: MultiLineComment
    - type: non-terminal
      data: SingleLineComment
MultiLineComment:
  type: one-of
  data:
    - type: sequence
      data:
        - type: word
          data: /*
        - type: word
          data: '*/'
    - type: sequence
      data:
        - type: word
          data: /*
        - type: non-terminal
          data: MultiLineCommentChars
        - type: word
          data: '*/'
MultiLineCommentChars:
  type: one-of
  data:
    - type: non-terminal
      data: MultiLineNotAsteriskChar
    - type: sequence
      data:
        - type: non-terminal
          data: MultiLineNotAsteriskChar
        - type: non-terminal
          data: MultiLineCommentChars
    - type: char-class
      data:
        - type: char
          data: '*'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '*'
        - type: non-terminal
          data: PostAsteriskCommentChars
PostAsteriskCommentChars:
  type: one-of
  data:
    - type: non-terminal
      data: MultiLineNotForwardSlashOrAsteriskChar
    - type: sequence
      data:
        - type: non-terminal
          data: MultiLineNotForwardSlashOrAsteriskChar
        - type: non-terminal
          data: MultiLineCommentChars
    - type: char-class
      data:
        - type: char
          data: '*'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '*'
        - type: non-terminal
          data: PostAsteriskCommentChars
MultiLineNotAsteriskChar:
  type: char-class
  data:
    - type: non-terminal
      data: SourceCharacter
    - type: exclude
      data: '*'
MultiLineNotForwardSlashOrAsteriskChar:
  type: char-class
  data:
    - type: non-terminal
      data: SourceCharacter
    - type: exclude
      data: /
    - type: exclude
      data: '*'
SingleLineComment:
  type: one-of
  data:
    - type: word
      data: //
    - type: sequence
      data:
        - type: word
          data: //
        - type: non-terminal
          data: SingleLineCommentChars
SingleLineCommentChars:
  type: one-of
  data:
    - type: non-terminal
      data: SingleLineCommentChar
    - type: sequence
      data:
        - type: non-terminal
          data: SingleLineCommentChar
        - type: non-terminal
          data: SingleLineCommentChars
SingleLineCommentChar:
  type: char-class
  data:
    - type: non-terminal
      data: SourceCharacter
    - type: exclude
      data: LineTerminator
CommonToken:
  type: one-of
  data:
    - type: non-terminal
      data: IdentifierName
    - type: non-terminal
      data: PrivateIdentifier
    - type: non-terminal
      data: Punctuator
    - type: non-terminal
      data: NumericLiteral
    - type: non-terminal
      data: StringLiteral
    - type: non-terminal
      data: Template
PrivateIdentifier:
  type: sequence
  data:
    - type: char-class
      data:
        - type: char
          data: '#'
    - type: non-terminal
      data: IdentifierName
IdentifierName:
  type: one-of
  data:
    - type: non-terminal
      data: IdentifierStart
    - type: sequence
      data:
        - type: non-terminal
          data: IdentifierName
        - type: non-terminal
          data: IdentifierPart
IdentifierStart:
  type: one-of
  data:
    - type: non-terminal
      data: IdentifierStartChar
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: \
        - type: non-terminal
          data: UnicodeEscapeSequence
IdentifierPart:
  type: one-of
  data:
    - type: non-terminal
      data: IdentifierPartChar
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: \
        - type: non-terminal
          data: UnicodeEscapeSequence
IdentifierStartChar:
  type: one-of
  data:
    - type: non-terminal
      data: UnicodeIDStart
    - type: char-class
      data:
        - type: char
          data: $
    - type: char-class
      data:
        - type: char
          data: _
IdentifierPartChar:
  type: one-of
  data:
    - type: non-terminal
      data: UnicodeIDContinue
    - type: char-class
      data:
        - type: char
          data: $
    - type: char-class
      data:
        - type: built-in
          data: ZWNJ
    - type: char-class
      data:
        - type: built-in
          data: ZWJ
UnicodeIDStart:
  type: char-class
  data:
    - type: span
      data:
        - a
        - z
    - type: span
      data:
        - A
        - Z
    - type: char
      data: $
    - type: char
      data: _
UnicodeIDContinue:
  type: char-class
  data:
    - type: span
      data:
        - '0'
        - '9'
    - type: span
      data:
        - a
        - z
    - type: span
      data:
        - A
        - Z
    - type: char
      data: $
    - type: char
      data: _
ReservedWord:
  type: one-of
  data:
    - type: non-terminal
      data: AWAIT
    - type: non-terminal
      data: BREAK
    - type: non-terminal
      data: CASE
    - type: non-terminal
      data: CATCH
    - type: non-terminal
      data: CLASS
    - type: non-terminal
      data: CONST
    - type: non-terminal
      data: CONTINUE
    - type: non-terminal
      data: DEBUGGER
    - type: non-terminal
      data: DEFAULT
    - type: non-terminal
      data: DELETE
    - type: non-terminal
      data: DO
    - type: non-terminal
      data: ELSE
    - type: non-terminal
      data: ENUM
    - type: non-terminal
      data: EXPORT
    - type: non-terminal
      data: EXTENDS
    - type: non-terminal
      data: 'FALSE'
    - type: non-terminal
      data: FINALLY
    - type: non-terminal
      data: FOR
    - type: non-terminal
      data: FUNCTION
    - type: non-terminal
      data: IF
    - type: non-terminal
      data: IMPORT
    - type: non-terminal
      data: IN
    - type: non-terminal
      data: INSTANCEOF
    - type: non-terminal
      data: NEW
    - type: non-terminal
      data: 'NULL'
    - type: non-terminal
      data: RETURN
    - type: non-terminal
      data: SUPER
    - type: non-terminal
      data: SWITCH
    - type: non-terminal
      data: THIS
    - type: non-terminal
      data: THROW
    - type: non-terminal
      data: 'TRUE'
    - type: non-terminal
      data: TRY
    - type: non-terminal
      data: TYPEOF
    - type: non-terminal
      data: VAR
    - type: non-terminal
      data: VOID
    - type: non-terminal
      data: WHILE
    - type: non-terminal
      data: WITH
    - type: non-terminal
      data: YIELD
    - type: non-terminal
      data: ASYNC
    - type: non-terminal
      data: FROM
    - type: non-terminal
      data: GET
    - type: non-terminal
      data: META
    - type: non-terminal
      data: OF
    - type: non-terminal
      data: SET
    - type: non-terminal
      data: TARGET
    - type: non-terminal
      data: LET
    - type: non-terminal
      data: STATIC
    - type: non-terminal
      data: IMPLEMENTS
    - type: non-terminal
      data: INTERFACE
    - type: non-terminal
      data: PACKEGE
    - type: non-terminal
      data: PRIVATE
    - type: non-terminal
      data: PROTECTED
    - type: non-terminal
      data: PUBLIC
Punctuator:
  type: one-of
  data:
    - type: non-terminal
      data: OptionalChainingPunctuator
    - type: non-terminal
      data: OtherPunctuator
OptionalChainingPunctuator:
  type: non-terminal
  data: OPTIONAL_CHAINING
OtherPunctuator:
  type: one-of
  data:
    - type: non-terminal
      data: LBRACE
    - type: non-terminal
      data: LPAREN
    - type: non-terminal
      data: RPAREN
    - type: non-terminal
      data: LBRACK
    - type: non-terminal
      data: RBRACK
    - type: non-terminal
      data: DOT
    - type: non-terminal
      data: ELLIPSIS
    - type: non-terminal
      data: SEMI_COLON
    - type: non-terminal
      data: COMMA
    - type: non-terminal
      data: LT
    - type: non-terminal
      data: GT
    - type: non-terminal
      data: LTE
    - type: non-terminal
      data: GTE
    - type: non-terminal
      data: EQ
    - type: non-terminal
      data: NE
    - type: non-terminal
      data: EQ_STRICT
    - type: non-terminal
      data: NE_STRICT
    - type: non-terminal
      data: ADD
    - type: non-terminal
      data: SUB
    - type: non-terminal
      data: MUL
    - type: non-terminal
      data: MOD
    - type: non-terminal
      data: EXP
    - type: non-terminal
      data: INC
    - type: non-terminal
      data: DEC
    - type: non-terminal
      data: SHL
    - type: non-terminal
      data: SAR
    - type: non-terminal
      data: SHR
    - type: non-terminal
      data: BIT_AND
    - type: non-terminal
      data: BIT_OR
    - type: non-terminal
      data: BIT_XOR
    - type: non-terminal
      data: NOT
    - type: non-terminal
      data: BIT_NOT
    - type: non-terminal
      data: AND
    - type: non-terminal
      data: OR
    - type: non-terminal
      data: NULLISH
    - type: non-terminal
      data: CONDITIONAL
    - type: non-terminal
      data: COLON
    - type: non-terminal
      data: ASSIGN
    - type: non-terminal
      data: ADD_ASSIGN
    - type: non-terminal
      data: SUB_ASSIGN
    - type: non-terminal
      data: MUL_ASSIGN
    - type: non-terminal
      data: MOD_ASSIGN
    - type: non-terminal
      data: EXP_ASSIGN
    - type: non-terminal
      data: SHL_ASSIGN
    - type: non-terminal
      data: SAR_ASSIGN
    - type: non-terminal
      data: SHR_ASSIGN
    - type: non-terminal
      data: BIT_AND_ASSIGN
    - type: non-terminal
      data: BIT_OR_ASSIGN
    - type: non-terminal
      data: BIT_XOR_ASSIGN
    - type: non-terminal
      data: AND_ASSIGN
    - type: non-terminal
      data: OR_ASSIGN
    - type: non-terminal
      data: NULLISH_ASSIGN
    - type: non-terminal
      data: ARROW
DivPunctuator:
  type: one-of
  data:
    - type: non-terminal
      data: DIV
    - type: non-terminal
      data: DIV_ASSIGN
RightBracePunctuator:
  type: non-terminal
  data: RBRACE
NullLiteral:
  type: word
  data: 'null'
BooleanLiteral:
  type: one-of
  data:
    - type: word
      data: 'true'
    - type: word
      data: 'false'
NumericLiteralSeparator:
  type: char-class
  data:
    - type: char
      data: _
NumericLiteral:
  type: one-of
  data:
    - type: non-terminal
      data: DecimalLiteral
    - type: non-terminal
      data: DecimalBigIntegerLiteral
    - type: non-terminal
      data: NonDecimalIntegerLiteral_Sep
    - type: sequence
      data:
        - type: non-terminal
          data: NonDecimalIntegerLiteral_Sep
        - type: non-terminal
          data: BigIntLiteralSuffix
    - type: non-terminal
      data: LegacyOctalIntegerLiteral
DecimalBigIntegerLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: non-terminal
          data: BigIntLiteralSuffix
    - type: sequence
      data:
        - type: non-terminal
          data: NonZeroDigit
        - type: non-terminal
          data: BigIntLiteralSuffix
    - type: sequence
      data:
        - type: non-terminal
          data: NonZeroDigit
        - type: non-terminal
          data: DecimalDigits_Sep
        - type: non-terminal
          data: BigIntLiteralSuffix
    - type: sequence
      data:
        - type: non-terminal
          data: NonZeroDigit
        - type: non-terminal
          data: NumericLiteralSeparator
        - type: non-terminal
          data: DecimalDigits_Sep
        - type: non-terminal
          data: BigIntLiteralSuffix
NonDecimalIntegerLiteral:
  type: one-of
  data:
    - type: non-terminal
      data: BinaryIntegerLiteral
    - type: non-terminal
      data: OctalIntegerLiteral
    - type: non-terminal
      data: HexIntegerLiteral
NonDecimalIntegerLiteral_Sep:
  type: one-of
  data:
    - type: non-terminal
      data: BinaryIntegerLiteral_Sep
    - type: non-terminal
      data: OctalIntegerLiteral_Sep
    - type: non-terminal
      data: HexIntegerLiteral_Sep
BigIntLiteralSuffix:
  type: char-class
  data:
    - type: char
      data: 'n'
DecimalLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalIntegerLiteral
        - type: char-class
          data:
            - type: char
              data: .
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalIntegerLiteral
        - type: char-class
          data:
            - type: char
              data: .
        - type: non-terminal
          data: DecimalDigits_Sep
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalIntegerLiteral
        - type: char-class
          data:
            - type: char
              data: .
        - type: non-terminal
          data: ExponentPart_Sep
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalIntegerLiteral
        - type: char-class
          data:
            - type: char
              data: .
        - type: non-terminal
          data: DecimalDigits_Sep
        - type: non-terminal
          data: ExponentPart_Sep
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: .
        - type: non-terminal
          data: DecimalDigits_Sep
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: .
        - type: non-terminal
          data: DecimalDigits_Sep
        - type: non-terminal
          data: ExponentPart_Sep
    - type: non-terminal
      data: DecimalIntegerLiteral
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalIntegerLiteral
        - type: non-terminal
          data: ExponentPart_Sep
DecimalIntegerLiteral:
  type: one-of
  data:
    - type: char-class
      data:
        - type: char
          data: '0'
    - type: non-terminal
      data: NonZeroDigit
    - type: sequence
      data:
        - type: non-terminal
          data: NonZeroDigit
        - type: non-terminal
          data: DecimalDigits_Sep
    - type: sequence
      data:
        - type: non-terminal
          data: NonZeroDigit
        - type: non-terminal
          data: NumericLiteralSeparator
        - type: non-terminal
          data: DecimalDigits_Sep
    - type: non-terminal
      data: NonOctalDecimalIntegerLiteral
DecimalDigits:
  type: one-of
  data:
    - type: non-terminal
      data: DecimalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalDigits
        - type: non-terminal
          data: DecimalDigit
DecimalDigits_Sep:
  type: one-of
  data:
    - type: non-terminal
      data: DecimalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalDigits_Sep
        - type: non-terminal
          data: DecimalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: DecimalDigits_Sep
        - type: non-terminal
          data: NumericLiteralSeparator
        - type: non-terminal
          data: DecimalDigit
DecimalDigit:
  type: char-class
  data:
    - type: char
      data: '0'
    - type: char
      data: '1'
    - type: char
      data: '2'
    - type: char
      data: '3'
    - type: char
      data: '4'
    - type: char
      data: '5'
    - type: char
      data: '6'
    - type: char
      data: '7'
    - type: char
      data: '8'
    - type: char
      data: '9'
NonZeroDigit:
  type: char-class
  data:
    - type: char
      data: '1'
    - type: char
      data: '2'
    - type: char
      data: '3'
    - type: char
      data: '4'
    - type: char
      data: '5'
    - type: char
      data: '6'
    - type: char
      data: '7'
    - type: char
      data: '8'
    - type: char
      data: '9'
ExponentPart:
  type: sequence
  data:
    - type: non-terminal
      data: ExponentIndicator
    - type: non-terminal
      data: SignedInteger
ExponentPart_Sep:
  type: sequence
  data:
    - type: non-terminal
      data: ExponentIndicator
    - type: non-terminal
      data: SignedInteger_Sep
ExponentIndicator:
  type: char-class
  data:
    - type: char
      data: e
    - type: char
      data: E
SignedInteger:
  type: one-of
  data:
    - type: non-terminal
      data: DecimalDigits
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: +
        - type: non-terminal
          data: DecimalDigits
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '-'
        - type: non-terminal
          data: DecimalDigits
SignedInteger_Sep:
  type: one-of
  data:
    - type: non-terminal
      data: DecimalDigits_Sep
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: +
        - type: non-terminal
          data: DecimalDigits_Sep
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '-'
        - type: non-terminal
          data: DecimalDigits_Sep
BinaryIntegerLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: word
          data: 0b
        - type: non-terminal
          data: BinaryDigits
    - type: sequence
      data:
        - type: word
          data: 0B
        - type: non-terminal
          data: BinaryDigits
BinaryIntegerLiteral_Sep:
  type: one-of
  data:
    - type: sequence
      data:
        - type: word
          data: 0b
        - type: non-terminal
          data: BinaryDigits_Sep
    - type: sequence
      data:
        - type: word
          data: 0B
        - type: non-terminal
          data: BinaryDigits_Sep
BinaryDigits:
  type: one-of
  data:
    - type: non-terminal
      data: BinaryDigit
    - type: sequence
      data:
        - type: non-terminal
          data: BinaryDigits
        - type: non-terminal
          data: BinaryDigit
BinaryDigits_Sep:
  type: one-of
  data:
    - type: non-terminal
      data: BinaryDigit
    - type: sequence
      data:
        - type: non-terminal
          data: BinaryDigits_Sep
        - type: non-terminal
          data: BinaryDigit
    - type: sequence
      data:
        - type: non-terminal
          data: BinaryDigits_Sep
        - type: non-terminal
          data: NumericLiteralSeparator
        - type: non-terminal
          data: BinaryDigit
BinaryDigit:
  type: char-class
  data:
    - type: char
      data: '0'
    - type: char
      data: '1'
OctalIntegerLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: word
          data: 0o
        - type: non-terminal
          data: OctalDigits
    - type: sequence
      data:
        - type: word
          data: 0O
        - type: non-terminal
          data: OctalDigits
OctalIntegerLiteral_Sep:
  type: one-of
  data:
    - type: sequence
      data:
        - type: word
          data: 0o
        - type: non-terminal
          data: OctalDigits_Sep
    - type: sequence
      data:
        - type: word
          data: 0O
        - type: non-terminal
          data: OctalDigits_Sep
OctalDigits:
  type: one-of
  data:
    - type: non-terminal
      data: OctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: OctalDigits
        - type: non-terminal
          data: OctalDigit
OctalDigits_Sep:
  type: one-of
  data:
    - type: non-terminal
      data: OctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: OctalDigits_Sep
        - type: non-terminal
          data: OctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: OctalDigits_Sep
        - type: non-terminal
          data: NumericLiteralSeparator
        - type: non-terminal
          data: OctalDigit
LegacyOctalIntegerLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: non-terminal
          data: OctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: LegacyOctalIntegerLiteral
        - type: non-terminal
          data: OctalDigit
NonOctalDecimalIntegerLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: non-terminal
          data: NonOctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: LegacyOctalLikeDecimalIntegerLiteral
        - type: non-terminal
          data: NonOctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: NonOctalDecimalIntegerLiteral
        - type: non-terminal
          data: DecimalDigit
LegacyOctalLikeDecimalIntegerLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: non-terminal
          data: OctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: LegacyOctalLikeDecimalIntegerLiteral
        - type: non-terminal
          data: OctalDigit
OctalDigit:
  type: char-class
  data:
    - type: char
      data: '0'
    - type: char
      data: '1'
    - type: char
      data: '2'
    - type: char
      data: '3'
    - type: char
      data: '4'
    - type: char
      data: '5'
    - type: char
      data: '6'
    - type: char
      data: '7'
NonOctalDigit:
  type: char-class
  data:
    - type: char
      data: '8'
    - type: char
      data: '9'
HexIntegerLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: word
          data: 0x
        - type: non-terminal
          data: HexDigits
    - type: sequence
      data:
        - type: word
          data: 0X
        - type: non-terminal
          data: HexDigits
HexIntegerLiteral_Sep:
  type: one-of
  data:
    - type: sequence
      data:
        - type: word
          data: 0x
        - type: non-terminal
          data: HexDigits_Sep
    - type: sequence
      data:
        - type: word
          data: 0X
        - type: non-terminal
          data: HexDigits_Sep
HexDigits:
  type: one-of
  data:
    - type: non-terminal
      data: HexDigit
    - type: sequence
      data:
        - type: non-terminal
          data: HexDigits
        - type: non-terminal
          data: HexDigit
HexDigits_Sep:
  type: one-of
  data:
    - type: non-terminal
      data: HexDigit
    - type: sequence
      data:
        - type: non-terminal
          data: HexDigits_Sep
        - type: non-terminal
          data: HexDigit
    - type: sequence
      data:
        - type: non-terminal
          data: HexDigits_Sep
        - type: non-terminal
          data: NumericLiteralSeparator
        - type: non-terminal
          data: HexDigit
HexDigit:
  type: char-class
  data:
    - type: char
      data: '0'
    - type: char
      data: '1'
    - type: char
      data: '2'
    - type: char
      data: '3'
    - type: char
      data: '4'
    - type: char
      data: '5'
    - type: char
      data: '6'
    - type: char
      data: '7'
    - type: char
      data: '8'
    - type: char
      data: '9'
    - type: char
      data: a
    - type: char
      data: b
    - type: char
      data: c
    - type: char
      data: d
    - type: char
      data: e
    - type: char
      data: f
    - type: char
      data: A
    - type: char
      data: B
    - type: char
      data: C
    - type: char
      data: D
    - type: char
      data: E
    - type: char
      data: F
StringLiteral:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '"'
        - type: char-class
          data:
            - type: char
              data: '"'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '"'
        - type: non-terminal
          data: DoubleStringCharacters
        - type: char-class
          data:
            - type: char
              data: '"'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: ''''
        - type: char-class
          data:
            - type: char
              data: ''''
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: ''''
        - type: non-terminal
          data: SingleStringCharacters
        - type: char-class
          data:
            - type: char
              data: ''''
DoubleStringCharacters:
  type: one-of
  data:
    - type: non-terminal
      data: DoubleStringCharacter
    - type: sequence
      data:
        - type: non-terminal
          data: DoubleStringCharacter
        - type: non-terminal
          data: DoubleStringCharacters
SingleStringCharacters:
  type: one-of
  data:
    - type: non-terminal
      data: SingleStringCharacter
    - type: sequence
      data:
        - type: non-terminal
          data: SingleStringCharacter
        - type: non-terminal
          data: SingleStringCharacters
DoubleStringCharacter:
  type: one-of
  data:
    - type: char-class
      data:
        - type: non-terminal
          data: SourceCharacter
        - type: exclude
          data: '"'
        - type: exclude
          data: \
        - type: exclude
          data: LineTerminator
    - type: char-class
      data:
        - type: built-in
          data: LS
    - type: char-class
      data:
        - type: built-in
          data: PS
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: \
        - type: non-terminal
          data: EscapeSequence
    - type: non-terminal
      data: LineContinuation
SingleStringCharacter:
  type: one-of
  data:
    - type: char-class
      data:
        - type: non-terminal
          data: SourceCharacter
        - type: exclude
          data: ''''
        - type: exclude
          data: \
        - type: exclude
          data: LineTerminator
    - type: char-class
      data:
        - type: built-in
          data: LS
    - type: char-class
      data:
        - type: built-in
          data: PS
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: \
        - type: non-terminal
          data: EscapeSequence
    - type: non-terminal
      data: LineContinuation
LineContinuation:
  type: sequence
  data:
    - type: char-class
      data:
        - type: char
          data: \
    - type: non-terminal
      data: LineTerminatorSequence
EscapeSequence:
  type: one-of
  data:
    - type: non-terminal
      data: CharacterEscapeSequence
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: lookahead
          data:
            - type: non-terminal
              data: DecimalDigit
          negate: true
    - type: non-terminal
      data: LegacyOctalEscapeSequence
    - type: non-terminal
      data: NonOctalDecimalEscapeSequence
    - type: non-terminal
      data: HexEscapeSequence
    - type: non-terminal
      data: UnicodeEscapeSequence
CharacterEscapeSequence:
  type: one-of
  data:
    - type: non-terminal
      data: SingleEscapeCharacter
    - type: non-terminal
      data: NonEscapeCharacter
SingleEscapeCharacter:
  type: char-class
  data:
    - type: char
      data: ''''
    - type: char
      data: '"'
    - type: char
      data: \
    - type: char
      data: b
    - type: char
      data: f
    - type: char
      data: 'n'
    - type: char
      data: r
    - type: char
      data: t
    - type: char
      data: v
NonEscapeCharacter:
  type: char-class
  data:
    - type: non-terminal
      data: SourceCharacter
    - type: exclude
      data: EscapeCharacter
    - type: exclude
      data: LineTerminator
EscapeCharacter:
  type: one-of
  data:
    - type: non-terminal
      data: SingleEscapeCharacter
    - type: non-terminal
      data: DecimalDigit
    - type: char-class
      data:
        - type: char
          data: x
    - type: char-class
      data:
        - type: char
          data: u
LegacyOctalEscapeSequence:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: lookahead
          data:
            - type: char
              data: '8'
            - type: char
              data: '9'
          negate: false
    - type: sequence
      data:
        - type: non-terminal
          data: NonZeroOctalDigit
        - type: lookahead
          data:
            - type: non-terminal
              data: OctalDigit
          negate: true
    - type: sequence
      data:
        - type: non-terminal
          data: ZeroToThree
        - type: non-terminal
          data: OctalDigit
        - type: lookahead
          data:
            - type: non-terminal
              data: OctalDigit
          negate: true
    - type: sequence
      data:
        - type: non-terminal
          data: FourToSeven
        - type: non-terminal
          data: OctalDigit
    - type: sequence
      data:
        - type: non-terminal
          data: ZeroToThree
        - type: non-terminal
          data: OctalDigit
        - type: non-terminal
          data: OctalDigit
NonZeroOctalDigit:
  type: char-class
  data:
    - type: non-terminal
      data: OctalDigit
    - type: exclude
      data: '0'
ZeroToThree:
  type: char-class
  data:
    - type: char
      data: '0'
    - type: char
      data: '1'
    - type: char
      data: '2'
    - type: char
      data: '3'
FourToSeven:
  type: char-class
  data:
    - type: char
      data: '4'
    - type: char
      data: '5'
    - type: char
      data: '6'
    - type: char
      data: '7'
NonOctalDecimalEscapeSequence:
  type: char-class
  data:
    - type: char
      data: '8'
    - type: char
      data: '9'
HexEscapeSequence:
  type: sequence
  data:
    - type: char-class
      data:
        - type: char
          data: x
    - type: non-terminal
      data: HexDigit
    - type: non-terminal
      data: HexDigit
UnicodeEscapeSequence:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: non-terminal
          data: Hex4Digits
    - type: sequence
      data:
        - type: word
          data: 'u{'
        - type: non-terminal
          data: CodePoint
        - type: char-class
          data:
            - type: char
              data: '}'
Hex4Digits:
  type: sequence
  data:
    - type: non-terminal
      data: HexDigit
    - type: non-terminal
      data: HexDigit
    - type: non-terminal
      data: HexDigit
    - type: non-terminal
      data: HexDigit
RegularExpressionLiteral:
  type: sequence
  data:
    - type: char-class
      data:
        - type: char
          data: /
    - type: non-terminal
      data: RegularExpressionBody
    - type: char-class
      data:
        - type: char
          data: /
    - type: non-terminal
      data: RegularExpressionFlags
RegularExpressionBody:
  type: sequence
  data:
    - type: non-terminal
      data: RegularExpressionFirstChar
    - type: non-terminal
      data: RegularExpressionChars
RegularExpressionChars:
  type: one-of
  data:
    - type: empty
    - type: sequence
      data:
        - type: non-terminal
          data: RegularExpressionChars
        - type: non-terminal
          data: RegularExpressionChar
RegularExpressionFirstChar:
  type: one-of
  data:
    - type: char-class
      data:
        - type: non-terminal
          data: RegularExpressionNonTerminator
        - type: exclude
          data: '*'
        - type: exclude
          data: \
        - type: exclude
          data: /
        - type: exclude
          data: '['
    - type: non-terminal
      data: RegularExpressionBackslashSequence
    - type: non-terminal
      data: RegularExpressionClass
RegularExpressionChar:
  type: one-of
  data:
    - type: char-class
      data:
        - type: non-terminal
          data: RegularExpressionNonTerminator
        - type: exclude
          data: \
        - type: exclude
          data: /
        - type: exclude
          data: '['
    - type: non-terminal
      data: RegularExpressionBackslashSequence
    - type: non-terminal
      data: RegularExpressionClass
RegularExpressionBackslashSequence:
  type: sequence
  data:
    - type: char-class
      data:
        - type: char
          data: \
    - type: non-terminal
      data: RegularExpressionNonTerminator
RegularExpressionNonTerminator:
  type: char-class
  data:
    - type: non-terminal
      data: SourceCharacter
    - type: exclude
      data: LineTerminator
RegularExpressionClass:
  type: sequence
  data:
    - type: char-class
      data:
        - type: char
          data: '['
    - type: non-terminal
      data: RegularExpressionClassChars
    - type: char-class
      data:
        - type: char
          data: ']'
RegularExpressionClassChars:
  type: one-of
  data:
    - type: empty
    - type: sequence
      data:
        - type: non-terminal
          data: RegularExpressionClassChars
        - type: non-terminal
          data: RegularExpressionClassChar
RegularExpressionClassChar:
  type: one-of
  data:
    - type: char-class
      data:
        - type: non-terminal
          data: RegularExpressionNonTerminator
        - type: exclude
          data: ']'
        - type: exclude
          data: \
    - type: non-terminal
      data: RegularExpressionBackslashSequence
RegularExpressionFlags:
  type: one-of
  data:
    - type: empty
    - type: sequence
      data:
        - type: non-terminal
          data: RegularExpressionFlags
        - type: non-terminal
          data: IdentifierPartChar
Template:
  type: one-of
  data:
    - type: non-terminal
      data: NoSubstitutionTemplate
    - type: non-terminal
      data: TemplateHead
NoSubstitutionTemplate:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '`'
        - type: char-class
          data:
            - type: char
              data: '`'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '`'
        - type: non-terminal
          data: TemplateCharacters
        - type: char-class
          data:
            - type: char
              data: '`'
TemplateHead:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '`'
        - type: word
          data: '${'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '`'
        - type: non-terminal
          data: TemplateCharacters
        - type: word
          data: '${'
TemplateSubstitutionTail:
  type: one-of
  data:
    - type: non-terminal
      data: TemplateMiddle
    - type: non-terminal
      data: TemplateTail
TemplateMiddle:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '}'
        - type: word
          data: '${'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '}'
        - type: non-terminal
          data: TemplateCharacters
        - type: word
          data: '${'
TemplateTail:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '}'
        - type: char-class
          data:
            - type: char
              data: '`'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '}'
        - type: non-terminal
          data: TemplateCharacters
        - type: char-class
          data:
            - type: char
              data: '`'
TemplateCharacters:
  type: one-of
  data:
    - type: non-terminal
      data: TemplateCharacter
    - type: sequence
      data:
        - type: non-terminal
          data: TemplateCharacter
        - type: non-terminal
          data: TemplateCharacters
TemplateCharacter:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: $
        - type: lookahead
          data:
            - type: char
              data: '{'
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: \
        - type: non-terminal
          data: TemplateEscapeSequence
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: \
        - type: non-terminal
          data: NotEscapeSequence
    - type: non-terminal
      data: LineContinuation
    - type: non-terminal
      data: LineTerminatorSequence
    - type: char-class
      data:
        - type: non-terminal
          data: SourceCharacter
        - type: exclude
          data: '`'
        - type: exclude
          data: \
        - type: exclude
          data: $
        - type: exclude
          data: LineTerminator
TemplateEscapeSequence:
  type: one-of
  data:
    - type: non-terminal
      data: CharacterEscapeSequence
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: lookahead
          data:
            - type: non-terminal
              data: DecimalDigit
          negate: true
    - type: non-terminal
      data: HexEscapeSequence
    - type: non-terminal
      data: UnicodeEscapeSequence
NotEscapeSequence:
  type: one-of
  data:
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: non-terminal
          data: DecimalDigit
    - type: char-class
      data:
        - type: non-terminal
          data: DecimalDigit
        - type: exclude
          data: '0'
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: x
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: x
        - type: non-terminal
          data: HexDigit
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
        - type: lookahead
          data:
            - type: char
              data: '{'
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: non-terminal
          data: HexDigit
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: HexDigit
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: HexDigit
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: char-class
          data:
            - type: char
              data: '{'
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: char-class
          data:
            - type: char
              data: '{'
        - type: non-terminal
          data: NotCodePoint
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: u
        - type: char-class
          data:
            - type: char
              data: '{'
        - type: non-terminal
          data: CodePoint
        - type: lookahead
          data:
            - type: non-terminal
              data: HexDigit
          negate: true
        - type: lookahead
          data:
            - type: char
              data: '}'
          negate: true
NotCodePoint:
  type: one-of
  data:
    - type: sequence
      data:
        - type: non-terminal
          data: NonZeroHexDigit
        - type: non-terminal
          data: NonZeroHexDigit
        - type: non-terminal
          data: Hex4Digits
    - type: sequence
      data:
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: NotCodePoint
CodePoint:
  type: one-of
  data:
    - type: non-terminal
      data: HexDigit
    - type: sequence
      data:
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: HexDigit
    - type: sequence
      data:
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: HexDigit
    - type: non-terminal
      data: Hex4Digits
    - type: sequence
      data:
        - type: non-terminal
          data: HexDigit
        - type: non-terminal
          data: Hex4Digits
    - type: sequence
      data:
        - type: word
          data: '10'
        - type: non-terminal
          data: Hex4Digits
    - type: sequence
      data:
        - type: char-class
          data:
            - type: char
              data: '0'
        - type: non-terminal
          data: CodePoint
NonZeroHexDigit:
  type: char-class
  data:
    - type: non-terminal
      data: HexDigit
    - type: exclude
      data: '0'
WhiteSpaceSequence:
  type: one-of
  data:
    - type: non-terminal
      data: WhiteSpace
    - type: sequence
      data:
        - type: non-terminal
          data: WhiteSpace
        - type: non-terminal
          data: WhiteSpaceSequence
AWAIT:
  type: word
  data: await
BREAK:
  type: word
  data: break
CASE:
  type: word
  data: case
CATCH:
  type: word
  data: catch
CLASS:
  type: word
  data: class
CONST:
  type: word
  data: const
CONTINUE:
  type: word
  data: continue
DEBUGGER:
  type: word
  data: debugger
DEFAULT:
  type: word
  data: default
DELETE:
  type: word
  data: delete
DO:
  type: word
  data: do
ELSE:
  type: word
  data: else
ENUM:
  type: word
  data: enum
EXPORT:
  type: word
  data: export
EXTENDS:
  type: word
  data: extends
'FALSE':
  type: word
  data: 'false'
FINALLY:
  type: word
  data: finally
FOR:
  type: word
  data: for
FUNCTION:
  type: word
  data: function
IF:
  type: word
  data: if
IMPORT:
  type: word
  data: import
IN:
  type: word
  data: in
INSTANCEOF:
  type: word
  data: instanceof
NEW:
  type: word
  data: new
'NULL':
  type: word
  data: 'null'
RETURN:
  type: word
  data: return
SUPER:
  type: word
  data: super
SWITCH:
  type: word
  data: switch
THIS:
  type: word
  data: this
THROW:
  type: word
  data: throw
'TRUE':
  type: word
  data: 'true'
TRY:
  type: word
  data: try
TYPEOF:
  type: word
  data: typeof
VAR:
  type: word
  data: var
VOID:
  type: word
  data: void
WHILE:
  type: word
  data: while
WITH:
  type: word
  data: with
YIELD:
  type: word
  data: yield
ASYNC:
  type: word
  data: async
FROM:
  type: word
  data: from
GET:
  type: word
  data: get
META:
  type: word
  data: meta
OF:
  type: word
  data: of
SET:
  type: word
  data: set
TARGET:
  type: word
  data: target
LET:
  type: word
  data: let
STATIC:
  type: word
  data: static
IMPLEMENTS:
  type: word
  data: implements
INTERFACE:
  type: word
  data: interface
PACKEGE:
  type: word
  data: packege
PRIVATE:
  type: word
  data: private
PROTECTED:
  type: word
  data: protected
PUBLIC:
  type: word
  data: public
OPTIONAL_CHAINING:
  type: sequence
  data:
    - type: word
      data: '?.'
    - type: lookahead
      data:
        - type: non-terminal
          data: DecimalDigit
      negate: true
LBRACE:
  type: char-class
  data:
    - type: char
      data: '{'
LPAREN:
  type: char-class
  data:
    - type: char
      data: (
RPAREN:
  type: char-class
  data:
    - type: char
      data: )
LBRACK:
  type: char-class
  data:
    - type: char
      data: '['
RBRACK:
  type: char-class
  data:
    - type: char
      data: ']'
DOT:
  type: char-class
  data:
    - type: char
      data: .
ELLIPSIS:
  type: word
  data: ...
SEMI_COLON:
  type: char-class
  data:
    - type: char
      data: ;
COMMA:
  type: char-class
  data:
    - type: char
      data: ','
LT:
  type: char-class
  data:
    - type: char
      data: <
GT:
  type: char-class
  data:
    - type: char
      data: '>'
LTE:
  type: word
  data: <=
GTE:
  type: word
  data: '>='
EQ:
  type: word
  data: ==
NE:
  type: word
  data: '!='
EQ_STRICT:
  type: word
  data: ===
NE_STRICT:
  type: word
  data: '!=='
ADD:
  type: char-class
  data:
    - type: char
      data: +
SUB:
  type: char-class
  data:
    - type: char
      data: '-'
MUL:
  type: char-class
  data:
    - type: char
      data: '*'
MOD:
  type: char-class
  data:
    - type: char
      data: '%'
EXP:
  type: word
  data: '**'
INC:
  type: word
  data: ++
DEC:
  type: word
  data: '--'
SHL:
  type: word
  data: '<<'
SAR:
  type: word
  data: '>>'
SHR:
  type: word
  data: '>>>'
BIT_AND:
  type: char-class
  data:
    - type: char
      data: '&'
BIT_OR:
  type: char-class
  data:
    - type: char
      data: '|'
BIT_XOR:
  type: char-class
  data:
    - type: char
      data: ^
NOT:
  type: char-class
  data:
    - type: char
      data: '!'
BIT_NOT:
  type: char-class
  data:
    - type: char
      data: '~'
AND:
  type: word
  data: '&&'
OR:
  type: word
  data: '||'
NULLISH:
  type: word
  data: '??'
CONDITIONAL:
  type: char-class
  data:
    - type: char
      data: '?'
COLON:
  type: char-class
  data:
    - type: char
      data: ':'
ASSIGN:
  type: char-class
  data:
    - type: char
      data: =
ADD_ASSIGN:
  type: word
  data: +=
SUB_ASSIGN:
  type: word
  data: '-='
MUL_ASSIGN:
  type: word
  data: '*='
MOD_ASSIGN:
  type: word
  data: '%='
EXP_ASSIGN:
  type: word
  data: '**='
SHL_ASSIGN:
  type: word
  data: <<=
SAR_ASSIGN:
  type: word
  data: '>>='
SHR_ASSIGN:
  type: word
  data: '>>>='
BIT_AND_ASSIGN:
  type: word
  data: '&='
BIT_OR_ASSIGN:
  type: word
  data: '|='
BIT_XOR_ASSIGN:
  type: word
  data: ^=
AND_ASSIGN:
  type: word
  data: '&&='
OR_ASSIGN:
  type: word
  data: '||='
NULLISH_ASSIGN:
  type: word
  data: '??='
ARROW:
  type: word
  data: =>
DIV:
  type: char-class
  data:
    - type: char
      data: /
DIV_ASSIGN:
  type: word
  data: /=
RBRACE:
  type: char-class
  data:
    - type: char
      data: '}'
