// DO NOT EDIT THIS FILE BY HAND.
//
// This file was automagically generated with:
// template: {{ template }}

#include "executor.hh"

#include <cmath>
#include <cstring>
#include <limits>

static llvm::ExitOnError ExitOnErr;

void Executor::RegisterRuntime(const Runtime* runtime) {
  llvm::orc::SymbolMap symbols;
  symbols[exec_session().intern("memcpy")] = {
    llvm::orc::ExecutorAddr::fromPtr(std::memcpy),
    llvm::JITSymbolFlags::Exported,
  };
  symbols[exec_session().intern("memset")] = {
    llvm::orc::ExecutorAddr::fromPtr(std::memset),
    llvm::JITSymbolFlags::Exported,
  };
  {%- for function in data.functions %}
  symbols[exec_session().intern("runtime_{{ function.name }}")] = {
    llvm::orc::ExecutorAddr::fromPtr(runtime->{{ function.name }}),
    llvm::JITSymbolFlags::Exported,
  };
  {%- endfor %}
  ExitOnErr(main_jd().define(llvm::orc::absoluteSymbols(std::move(symbols))));
}
