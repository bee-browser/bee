//<coverage:exclude>
use super::helper::tokenize;

#[test]
fn test_0() {
    tokenize(
        r##"{"description":"Named entity: AElig without a semi-colon","initialState":"Data","input":"&AElig","inputUtf16":[38,65,69,108,105,103],"output":[{"Character":{"data":"√Ü"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1() {
    tokenize(
        r##"{"description":"Named entity: AElig; with a semi-colon","initialState":"Data","input":"&AElig;","inputUtf16":[38,65,69,108,105,103,59],"output":[{"Character":{"data":"√Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2() {
    tokenize(
        r##"{"description":"Named entity: AMP without a semi-colon","initialState":"Data","input":"&AMP","inputUtf16":[38,65,77,80],"output":[{"Character":{"data":"&"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_3() {
    tokenize(
        r##"{"description":"Named entity: AMP; with a semi-colon","initialState":"Data","input":"&AMP;","inputUtf16":[38,65,77,80,59],"output":[{"Character":{"data":"&"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4() {
    tokenize(
        r##"{"description":"Named entity: Aacute without a semi-colon","initialState":"Data","input":"&Aacute","inputUtf16":[38,65,97,99,117,116,101],"output":[{"Character":{"data":"√Å"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_5() {
    tokenize(
        r##"{"description":"Named entity: Aacute; with a semi-colon","initialState":"Data","input":"&Aacute;","inputUtf16":[38,65,97,99,117,116,101,59],"output":[{"Character":{"data":"√Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_6() {
    tokenize(
        r##"{"description":"Bad named entity: Abreve without a semi-colon","initialState":"Data","input":"&Abreve","inputUtf16":[38,65,98,114,101,118,101],"output":[{"Character":{"data":"&Abreve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_7() {
    tokenize(
        r##"{"description":"Named entity: Abreve; with a semi-colon","initialState":"Data","input":"&Abreve;","inputUtf16":[38,65,98,114,101,118,101,59],"output":[{"Character":{"data":"ƒÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_8() {
    tokenize(
        r##"{"description":"Named entity: Acirc without a semi-colon","initialState":"Data","input":"&Acirc","inputUtf16":[38,65,99,105,114,99],"output":[{"Character":{"data":"√Ç"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_9() {
    tokenize(
        r##"{"description":"Named entity: Acirc; with a semi-colon","initialState":"Data","input":"&Acirc;","inputUtf16":[38,65,99,105,114,99,59],"output":[{"Character":{"data":"√Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_10() {
    tokenize(
        r##"{"description":"Bad named entity: Acy without a semi-colon","initialState":"Data","input":"&Acy","inputUtf16":[38,65,99,121],"output":[{"Character":{"data":"&Acy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_11() {
    tokenize(
        r##"{"description":"Named entity: Acy; with a semi-colon","initialState":"Data","input":"&Acy;","inputUtf16":[38,65,99,121,59],"output":[{"Character":{"data":"–ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_12() {
    tokenize(
        r##"{"description":"Bad named entity: Afr without a semi-colon","initialState":"Data","input":"&Afr","inputUtf16":[38,65,102,114],"output":[{"Character":{"data":"&Afr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_13() {
    tokenize(
        r##"{"description":"Named entity: Afr; with a semi-colon","initialState":"Data","input":"&Afr;","inputUtf16":[38,65,102,114,59],"output":[{"Character":{"data":"ùîÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_14() {
    tokenize(
        r##"{"description":"Named entity: Agrave without a semi-colon","initialState":"Data","input":"&Agrave","inputUtf16":[38,65,103,114,97,118,101],"output":[{"Character":{"data":"√Ä"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_15() {
    tokenize(
        r##"{"description":"Named entity: Agrave; with a semi-colon","initialState":"Data","input":"&Agrave;","inputUtf16":[38,65,103,114,97,118,101,59],"output":[{"Character":{"data":"√Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_16() {
    tokenize(
        r##"{"description":"Bad named entity: Alpha without a semi-colon","initialState":"Data","input":"&Alpha","inputUtf16":[38,65,108,112,104,97],"output":[{"Character":{"data":"&Alpha"}}],"errors":[]}"##,
    );
}

#[test]
fn test_17() {
    tokenize(
        r##"{"description":"Named entity: Alpha; with a semi-colon","initialState":"Data","input":"&Alpha;","inputUtf16":[38,65,108,112,104,97,59],"output":[{"Character":{"data":"Œë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_18() {
    tokenize(
        r##"{"description":"Bad named entity: Amacr without a semi-colon","initialState":"Data","input":"&Amacr","inputUtf16":[38,65,109,97,99,114],"output":[{"Character":{"data":"&Amacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_19() {
    tokenize(
        r##"{"description":"Named entity: Amacr; with a semi-colon","initialState":"Data","input":"&Amacr;","inputUtf16":[38,65,109,97,99,114,59],"output":[{"Character":{"data":"ƒÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_20() {
    tokenize(
        r##"{"description":"Bad named entity: And without a semi-colon","initialState":"Data","input":"&And","inputUtf16":[38,65,110,100],"output":[{"Character":{"data":"&And"}}],"errors":[]}"##,
    );
}

#[test]
fn test_21() {
    tokenize(
        r##"{"description":"Named entity: And; with a semi-colon","initialState":"Data","input":"&And;","inputUtf16":[38,65,110,100,59],"output":[{"Character":{"data":"‚©ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_22() {
    tokenize(
        r##"{"description":"Bad named entity: Aogon without a semi-colon","initialState":"Data","input":"&Aogon","inputUtf16":[38,65,111,103,111,110],"output":[{"Character":{"data":"&Aogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_23() {
    tokenize(
        r##"{"description":"Named entity: Aogon; with a semi-colon","initialState":"Data","input":"&Aogon;","inputUtf16":[38,65,111,103,111,110,59],"output":[{"Character":{"data":"ƒÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_24() {
    tokenize(
        r##"{"description":"Bad named entity: Aopf without a semi-colon","initialState":"Data","input":"&Aopf","inputUtf16":[38,65,111,112,102],"output":[{"Character":{"data":"&Aopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_25() {
    tokenize(
        r##"{"description":"Named entity: Aopf; with a semi-colon","initialState":"Data","input":"&Aopf;","inputUtf16":[38,65,111,112,102,59],"output":[{"Character":{"data":"ùî∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_26() {
    tokenize(
        r##"{"description":"Bad named entity: ApplyFunction without a semi-colon","initialState":"Data","input":"&ApplyFunction","inputUtf16":[38,65,112,112,108,121,70,117,110,99,116,105,111,110],"output":[{"Character":{"data":"&ApplyFunction"}}],"errors":[]}"##,
    );
}

#[test]
fn test_27() {
    tokenize(
        r##"{"description":"Named entity: ApplyFunction; with a semi-colon","initialState":"Data","input":"&ApplyFunction;","inputUtf16":[38,65,112,112,108,121,70,117,110,99,116,105,111,110,59],"output":[{"Character":{"data":"‚Å°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_28() {
    tokenize(
        r##"{"description":"Named entity: Aring without a semi-colon","initialState":"Data","input":"&Aring","inputUtf16":[38,65,114,105,110,103],"output":[{"Character":{"data":"√Ö"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_29() {
    tokenize(
        r##"{"description":"Named entity: Aring; with a semi-colon","initialState":"Data","input":"&Aring;","inputUtf16":[38,65,114,105,110,103,59],"output":[{"Character":{"data":"√Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_30() {
    tokenize(
        r##"{"description":"Bad named entity: Ascr without a semi-colon","initialState":"Data","input":"&Ascr","inputUtf16":[38,65,115,99,114],"output":[{"Character":{"data":"&Ascr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_31() {
    tokenize(
        r##"{"description":"Named entity: Ascr; with a semi-colon","initialState":"Data","input":"&Ascr;","inputUtf16":[38,65,115,99,114,59],"output":[{"Character":{"data":"ùíú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_32() {
    tokenize(
        r##"{"description":"Bad named entity: Assign without a semi-colon","initialState":"Data","input":"&Assign","inputUtf16":[38,65,115,115,105,103,110],"output":[{"Character":{"data":"&Assign"}}],"errors":[]}"##,
    );
}

#[test]
fn test_33() {
    tokenize(
        r##"{"description":"Named entity: Assign; with a semi-colon","initialState":"Data","input":"&Assign;","inputUtf16":[38,65,115,115,105,103,110,59],"output":[{"Character":{"data":"‚âî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_34() {
    tokenize(
        r##"{"description":"Named entity: Atilde without a semi-colon","initialState":"Data","input":"&Atilde","inputUtf16":[38,65,116,105,108,100,101],"output":[{"Character":{"data":"√É"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_35() {
    tokenize(
        r##"{"description":"Named entity: Atilde; with a semi-colon","initialState":"Data","input":"&Atilde;","inputUtf16":[38,65,116,105,108,100,101,59],"output":[{"Character":{"data":"√É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_36() {
    tokenize(
        r##"{"description":"Named entity: Auml without a semi-colon","initialState":"Data","input":"&Auml","inputUtf16":[38,65,117,109,108],"output":[{"Character":{"data":"√Ñ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_37() {
    tokenize(
        r##"{"description":"Named entity: Auml; with a semi-colon","initialState":"Data","input":"&Auml;","inputUtf16":[38,65,117,109,108,59],"output":[{"Character":{"data":"√Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_38() {
    tokenize(
        r##"{"description":"Bad named entity: Backslash without a semi-colon","initialState":"Data","input":"&Backslash","inputUtf16":[38,66,97,99,107,115,108,97,115,104],"output":[{"Character":{"data":"&Backslash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_39() {
    tokenize(
        r##"{"description":"Named entity: Backslash; with a semi-colon","initialState":"Data","input":"&Backslash;","inputUtf16":[38,66,97,99,107,115,108,97,115,104,59],"output":[{"Character":{"data":"‚àñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_40() {
    tokenize(
        r##"{"description":"Bad named entity: Barv without a semi-colon","initialState":"Data","input":"&Barv","inputUtf16":[38,66,97,114,118],"output":[{"Character":{"data":"&Barv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_41() {
    tokenize(
        r##"{"description":"Named entity: Barv; with a semi-colon","initialState":"Data","input":"&Barv;","inputUtf16":[38,66,97,114,118,59],"output":[{"Character":{"data":"‚´ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_42() {
    tokenize(
        r##"{"description":"Bad named entity: Barwed without a semi-colon","initialState":"Data","input":"&Barwed","inputUtf16":[38,66,97,114,119,101,100],"output":[{"Character":{"data":"&Barwed"}}],"errors":[]}"##,
    );
}

#[test]
fn test_43() {
    tokenize(
        r##"{"description":"Named entity: Barwed; with a semi-colon","initialState":"Data","input":"&Barwed;","inputUtf16":[38,66,97,114,119,101,100,59],"output":[{"Character":{"data":"‚åÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_44() {
    tokenize(
        r##"{"description":"Bad named entity: Bcy without a semi-colon","initialState":"Data","input":"&Bcy","inputUtf16":[38,66,99,121],"output":[{"Character":{"data":"&Bcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_45() {
    tokenize(
        r##"{"description":"Named entity: Bcy; with a semi-colon","initialState":"Data","input":"&Bcy;","inputUtf16":[38,66,99,121,59],"output":[{"Character":{"data":"–ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_46() {
    tokenize(
        r##"{"description":"Bad named entity: Because without a semi-colon","initialState":"Data","input":"&Because","inputUtf16":[38,66,101,99,97,117,115,101],"output":[{"Character":{"data":"&Because"}}],"errors":[]}"##,
    );
}

#[test]
fn test_47() {
    tokenize(
        r##"{"description":"Named entity: Because; with a semi-colon","initialState":"Data","input":"&Because;","inputUtf16":[38,66,101,99,97,117,115,101,59],"output":[{"Character":{"data":"‚àµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_48() {
    tokenize(
        r##"{"description":"Bad named entity: Bernoullis without a semi-colon","initialState":"Data","input":"&Bernoullis","inputUtf16":[38,66,101,114,110,111,117,108,108,105,115],"output":[{"Character":{"data":"&Bernoullis"}}],"errors":[]}"##,
    );
}

#[test]
fn test_49() {
    tokenize(
        r##"{"description":"Named entity: Bernoullis; with a semi-colon","initialState":"Data","input":"&Bernoullis;","inputUtf16":[38,66,101,114,110,111,117,108,108,105,115,59],"output":[{"Character":{"data":"‚Ñ¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_50() {
    tokenize(
        r##"{"description":"Bad named entity: Beta without a semi-colon","initialState":"Data","input":"&Beta","inputUtf16":[38,66,101,116,97],"output":[{"Character":{"data":"&Beta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_51() {
    tokenize(
        r##"{"description":"Named entity: Beta; with a semi-colon","initialState":"Data","input":"&Beta;","inputUtf16":[38,66,101,116,97,59],"output":[{"Character":{"data":"Œí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_52() {
    tokenize(
        r##"{"description":"Bad named entity: Bfr without a semi-colon","initialState":"Data","input":"&Bfr","inputUtf16":[38,66,102,114],"output":[{"Character":{"data":"&Bfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_53() {
    tokenize(
        r##"{"description":"Named entity: Bfr; with a semi-colon","initialState":"Data","input":"&Bfr;","inputUtf16":[38,66,102,114,59],"output":[{"Character":{"data":"ùîÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_54() {
    tokenize(
        r##"{"description":"Bad named entity: Bopf without a semi-colon","initialState":"Data","input":"&Bopf","inputUtf16":[38,66,111,112,102],"output":[{"Character":{"data":"&Bopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_55() {
    tokenize(
        r##"{"description":"Named entity: Bopf; with a semi-colon","initialState":"Data","input":"&Bopf;","inputUtf16":[38,66,111,112,102,59],"output":[{"Character":{"data":"ùîπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_56() {
    tokenize(
        r##"{"description":"Bad named entity: Breve without a semi-colon","initialState":"Data","input":"&Breve","inputUtf16":[38,66,114,101,118,101],"output":[{"Character":{"data":"&Breve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_57() {
    tokenize(
        r##"{"description":"Named entity: Breve; with a semi-colon","initialState":"Data","input":"&Breve;","inputUtf16":[38,66,114,101,118,101,59],"output":[{"Character":{"data":"Àò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_58() {
    tokenize(
        r##"{"description":"Bad named entity: Bscr without a semi-colon","initialState":"Data","input":"&Bscr","inputUtf16":[38,66,115,99,114],"output":[{"Character":{"data":"&Bscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_59() {
    tokenize(
        r##"{"description":"Named entity: Bscr; with a semi-colon","initialState":"Data","input":"&Bscr;","inputUtf16":[38,66,115,99,114,59],"output":[{"Character":{"data":"‚Ñ¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_60() {
    tokenize(
        r##"{"description":"Bad named entity: Bumpeq without a semi-colon","initialState":"Data","input":"&Bumpeq","inputUtf16":[38,66,117,109,112,101,113],"output":[{"Character":{"data":"&Bumpeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_61() {
    tokenize(
        r##"{"description":"Named entity: Bumpeq; with a semi-colon","initialState":"Data","input":"&Bumpeq;","inputUtf16":[38,66,117,109,112,101,113,59],"output":[{"Character":{"data":"‚âé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_62() {
    tokenize(
        r##"{"description":"Bad named entity: CHcy without a semi-colon","initialState":"Data","input":"&CHcy","inputUtf16":[38,67,72,99,121],"output":[{"Character":{"data":"&CHcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_63() {
    tokenize(
        r##"{"description":"Named entity: CHcy; with a semi-colon","initialState":"Data","input":"&CHcy;","inputUtf16":[38,67,72,99,121,59],"output":[{"Character":{"data":"–ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_64() {
    tokenize(
        r##"{"description":"Named entity: COPY without a semi-colon","initialState":"Data","input":"&COPY","inputUtf16":[38,67,79,80,89],"output":[{"Character":{"data":"¬©"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_65() {
    tokenize(
        r##"{"description":"Named entity: COPY; with a semi-colon","initialState":"Data","input":"&COPY;","inputUtf16":[38,67,79,80,89,59],"output":[{"Character":{"data":"¬©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_66() {
    tokenize(
        r##"{"description":"Bad named entity: Cacute without a semi-colon","initialState":"Data","input":"&Cacute","inputUtf16":[38,67,97,99,117,116,101],"output":[{"Character":{"data":"&Cacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_67() {
    tokenize(
        r##"{"description":"Named entity: Cacute; with a semi-colon","initialState":"Data","input":"&Cacute;","inputUtf16":[38,67,97,99,117,116,101,59],"output":[{"Character":{"data":"ƒÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_68() {
    tokenize(
        r##"{"description":"Bad named entity: Cap without a semi-colon","initialState":"Data","input":"&Cap","inputUtf16":[38,67,97,112],"output":[{"Character":{"data":"&Cap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_69() {
    tokenize(
        r##"{"description":"Named entity: Cap; with a semi-colon","initialState":"Data","input":"&Cap;","inputUtf16":[38,67,97,112,59],"output":[{"Character":{"data":"‚ãí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_70() {
    tokenize(
        r##"{"description":"Bad named entity: CapitalDifferentialD without a semi-colon","initialState":"Data","input":"&CapitalDifferentialD","inputUtf16":[38,67,97,112,105,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68],"output":[{"Character":{"data":"&CapitalDifferentialD"}}],"errors":[]}"##,
    );
}

#[test]
fn test_71() {
    tokenize(
        r##"{"description":"Named entity: CapitalDifferentialD; with a semi-colon","initialState":"Data","input":"&CapitalDifferentialD;","inputUtf16":[38,67,97,112,105,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59],"output":[{"Character":{"data":"‚ÖÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_72() {
    tokenize(
        r##"{"description":"Bad named entity: Cayleys without a semi-colon","initialState":"Data","input":"&Cayleys","inputUtf16":[38,67,97,121,108,101,121,115],"output":[{"Character":{"data":"&Cayleys"}}],"errors":[]}"##,
    );
}

#[test]
fn test_73() {
    tokenize(
        r##"{"description":"Named entity: Cayleys; with a semi-colon","initialState":"Data","input":"&Cayleys;","inputUtf16":[38,67,97,121,108,101,121,115,59],"output":[{"Character":{"data":"‚Ñ≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_74() {
    tokenize(
        r##"{"description":"Bad named entity: Ccaron without a semi-colon","initialState":"Data","input":"&Ccaron","inputUtf16":[38,67,99,97,114,111,110],"output":[{"Character":{"data":"&Ccaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_75() {
    tokenize(
        r##"{"description":"Named entity: Ccaron; with a semi-colon","initialState":"Data","input":"&Ccaron;","inputUtf16":[38,67,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_76() {
    tokenize(
        r##"{"description":"Named entity: Ccedil without a semi-colon","initialState":"Data","input":"&Ccedil","inputUtf16":[38,67,99,101,100,105,108],"output":[{"Character":{"data":"√á"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_77() {
    tokenize(
        r##"{"description":"Named entity: Ccedil; with a semi-colon","initialState":"Data","input":"&Ccedil;","inputUtf16":[38,67,99,101,100,105,108,59],"output":[{"Character":{"data":"√á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_78() {
    tokenize(
        r##"{"description":"Bad named entity: Ccirc without a semi-colon","initialState":"Data","input":"&Ccirc","inputUtf16":[38,67,99,105,114,99],"output":[{"Character":{"data":"&Ccirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_79() {
    tokenize(
        r##"{"description":"Named entity: Ccirc; with a semi-colon","initialState":"Data","input":"&Ccirc;","inputUtf16":[38,67,99,105,114,99,59],"output":[{"Character":{"data":"ƒà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_80() {
    tokenize(
        r##"{"description":"Bad named entity: Cconint without a semi-colon","initialState":"Data","input":"&Cconint","inputUtf16":[38,67,99,111,110,105,110,116],"output":[{"Character":{"data":"&Cconint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_81() {
    tokenize(
        r##"{"description":"Named entity: Cconint; with a semi-colon","initialState":"Data","input":"&Cconint;","inputUtf16":[38,67,99,111,110,105,110,116,59],"output":[{"Character":{"data":"‚à∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_82() {
    tokenize(
        r##"{"description":"Bad named entity: Cdot without a semi-colon","initialState":"Data","input":"&Cdot","inputUtf16":[38,67,100,111,116],"output":[{"Character":{"data":"&Cdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_83() {
    tokenize(
        r##"{"description":"Named entity: Cdot; with a semi-colon","initialState":"Data","input":"&Cdot;","inputUtf16":[38,67,100,111,116,59],"output":[{"Character":{"data":"ƒä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_84() {
    tokenize(
        r##"{"description":"Bad named entity: Cedilla without a semi-colon","initialState":"Data","input":"&Cedilla","inputUtf16":[38,67,101,100,105,108,108,97],"output":[{"Character":{"data":"&Cedilla"}}],"errors":[]}"##,
    );
}

#[test]
fn test_85() {
    tokenize(
        r##"{"description":"Named entity: Cedilla; with a semi-colon","initialState":"Data","input":"&Cedilla;","inputUtf16":[38,67,101,100,105,108,108,97,59],"output":[{"Character":{"data":"¬∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_86() {
    tokenize(
        r##"{"description":"Bad named entity: CenterDot without a semi-colon","initialState":"Data","input":"&CenterDot","inputUtf16":[38,67,101,110,116,101,114,68,111,116],"output":[{"Character":{"data":"&CenterDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_87() {
    tokenize(
        r##"{"description":"Named entity: CenterDot; with a semi-colon","initialState":"Data","input":"&CenterDot;","inputUtf16":[38,67,101,110,116,101,114,68,111,116,59],"output":[{"Character":{"data":"¬∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_88() {
    tokenize(
        r##"{"description":"Bad named entity: Cfr without a semi-colon","initialState":"Data","input":"&Cfr","inputUtf16":[38,67,102,114],"output":[{"Character":{"data":"&Cfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_89() {
    tokenize(
        r##"{"description":"Named entity: Cfr; with a semi-colon","initialState":"Data","input":"&Cfr;","inputUtf16":[38,67,102,114,59],"output":[{"Character":{"data":"‚Ñ≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_90() {
    tokenize(
        r##"{"description":"Bad named entity: Chi without a semi-colon","initialState":"Data","input":"&Chi","inputUtf16":[38,67,104,105],"output":[{"Character":{"data":"&Chi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_91() {
    tokenize(
        r##"{"description":"Named entity: Chi; with a semi-colon","initialState":"Data","input":"&Chi;","inputUtf16":[38,67,104,105,59],"output":[{"Character":{"data":"Œß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_92() {
    tokenize(
        r##"{"description":"Bad named entity: CircleDot without a semi-colon","initialState":"Data","input":"&CircleDot","inputUtf16":[38,67,105,114,99,108,101,68,111,116],"output":[{"Character":{"data":"&CircleDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_93() {
    tokenize(
        r##"{"description":"Named entity: CircleDot; with a semi-colon","initialState":"Data","input":"&CircleDot;","inputUtf16":[38,67,105,114,99,108,101,68,111,116,59],"output":[{"Character":{"data":"‚äô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_94() {
    tokenize(
        r##"{"description":"Bad named entity: CircleMinus without a semi-colon","initialState":"Data","input":"&CircleMinus","inputUtf16":[38,67,105,114,99,108,101,77,105,110,117,115],"output":[{"Character":{"data":"&CircleMinus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_95() {
    tokenize(
        r##"{"description":"Named entity: CircleMinus; with a semi-colon","initialState":"Data","input":"&CircleMinus;","inputUtf16":[38,67,105,114,99,108,101,77,105,110,117,115,59],"output":[{"Character":{"data":"‚äñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_96() {
    tokenize(
        r##"{"description":"Bad named entity: CirclePlus without a semi-colon","initialState":"Data","input":"&CirclePlus","inputUtf16":[38,67,105,114,99,108,101,80,108,117,115],"output":[{"Character":{"data":"&CirclePlus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_97() {
    tokenize(
        r##"{"description":"Named entity: CirclePlus; with a semi-colon","initialState":"Data","input":"&CirclePlus;","inputUtf16":[38,67,105,114,99,108,101,80,108,117,115,59],"output":[{"Character":{"data":"‚äï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_98() {
    tokenize(
        r##"{"description":"Bad named entity: CircleTimes without a semi-colon","initialState":"Data","input":"&CircleTimes","inputUtf16":[38,67,105,114,99,108,101,84,105,109,101,115],"output":[{"Character":{"data":"&CircleTimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_99() {
    tokenize(
        r##"{"description":"Named entity: CircleTimes; with a semi-colon","initialState":"Data","input":"&CircleTimes;","inputUtf16":[38,67,105,114,99,108,101,84,105,109,101,115,59],"output":[{"Character":{"data":"‚äó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_100() {
    tokenize(
        r##"{"description":"Bad named entity: ClockwiseContourIntegral without a semi-colon","initialState":"Data","input":"&ClockwiseContourIntegral","inputUtf16":[38,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108],"output":[{"Character":{"data":"&ClockwiseContourIntegral"}}],"errors":[]}"##,
    );
}

#[test]
fn test_101() {
    tokenize(
        r##"{"description":"Named entity: ClockwiseContourIntegral; with a semi-colon","initialState":"Data","input":"&ClockwiseContourIntegral;","inputUtf16":[38,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],"output":[{"Character":{"data":"‚à≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_102() {
    tokenize(
        r##"{"description":"Bad named entity: CloseCurlyDoubleQuote without a semi-colon","initialState":"Data","input":"&CloseCurlyDoubleQuote","inputUtf16":[38,67,108,111,115,101,67,117,114,108,121,68,111,117,98,108,101,81,117,111,116,101],"output":[{"Character":{"data":"&CloseCurlyDoubleQuote"}}],"errors":[]}"##,
    );
}

#[test]
fn test_103() {
    tokenize(
        r##"{"description":"Named entity: CloseCurlyDoubleQuote; with a semi-colon","initialState":"Data","input":"&CloseCurlyDoubleQuote;","inputUtf16":[38,67,108,111,115,101,67,117,114,108,121,68,111,117,98,108,101,81,117,111,116,101,59],"output":[{"Character":{"data":"‚Äù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_104() {
    tokenize(
        r##"{"description":"Bad named entity: CloseCurlyQuote without a semi-colon","initialState":"Data","input":"&CloseCurlyQuote","inputUtf16":[38,67,108,111,115,101,67,117,114,108,121,81,117,111,116,101],"output":[{"Character":{"data":"&CloseCurlyQuote"}}],"errors":[]}"##,
    );
}

#[test]
fn test_105() {
    tokenize(
        r##"{"description":"Named entity: CloseCurlyQuote; with a semi-colon","initialState":"Data","input":"&CloseCurlyQuote;","inputUtf16":[38,67,108,111,115,101,67,117,114,108,121,81,117,111,116,101,59],"output":[{"Character":{"data":"‚Äô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_106() {
    tokenize(
        r##"{"description":"Bad named entity: Colon without a semi-colon","initialState":"Data","input":"&Colon","inputUtf16":[38,67,111,108,111,110],"output":[{"Character":{"data":"&Colon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_107() {
    tokenize(
        r##"{"description":"Named entity: Colon; with a semi-colon","initialState":"Data","input":"&Colon;","inputUtf16":[38,67,111,108,111,110,59],"output":[{"Character":{"data":"‚à∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_108() {
    tokenize(
        r##"{"description":"Bad named entity: Colone without a semi-colon","initialState":"Data","input":"&Colone","inputUtf16":[38,67,111,108,111,110,101],"output":[{"Character":{"data":"&Colone"}}],"errors":[]}"##,
    );
}

#[test]
fn test_109() {
    tokenize(
        r##"{"description":"Named entity: Colone; with a semi-colon","initialState":"Data","input":"&Colone;","inputUtf16":[38,67,111,108,111,110,101,59],"output":[{"Character":{"data":"‚©¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_110() {
    tokenize(
        r##"{"description":"Bad named entity: Congruent without a semi-colon","initialState":"Data","input":"&Congruent","inputUtf16":[38,67,111,110,103,114,117,101,110,116],"output":[{"Character":{"data":"&Congruent"}}],"errors":[]}"##,
    );
}

#[test]
fn test_111() {
    tokenize(
        r##"{"description":"Named entity: Congruent; with a semi-colon","initialState":"Data","input":"&Congruent;","inputUtf16":[38,67,111,110,103,114,117,101,110,116,59],"output":[{"Character":{"data":"‚â°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_112() {
    tokenize(
        r##"{"description":"Bad named entity: Conint without a semi-colon","initialState":"Data","input":"&Conint","inputUtf16":[38,67,111,110,105,110,116],"output":[{"Character":{"data":"&Conint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_113() {
    tokenize(
        r##"{"description":"Named entity: Conint; with a semi-colon","initialState":"Data","input":"&Conint;","inputUtf16":[38,67,111,110,105,110,116,59],"output":[{"Character":{"data":"‚àØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_114() {
    tokenize(
        r##"{"description":"Bad named entity: ContourIntegral without a semi-colon","initialState":"Data","input":"&ContourIntegral","inputUtf16":[38,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108],"output":[{"Character":{"data":"&ContourIntegral"}}],"errors":[]}"##,
    );
}

#[test]
fn test_115() {
    tokenize(
        r##"{"description":"Named entity: ContourIntegral; with a semi-colon","initialState":"Data","input":"&ContourIntegral;","inputUtf16":[38,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],"output":[{"Character":{"data":"‚àÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_116() {
    tokenize(
        r##"{"description":"Bad named entity: Copf without a semi-colon","initialState":"Data","input":"&Copf","inputUtf16":[38,67,111,112,102],"output":[{"Character":{"data":"&Copf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_117() {
    tokenize(
        r##"{"description":"Named entity: Copf; with a semi-colon","initialState":"Data","input":"&Copf;","inputUtf16":[38,67,111,112,102,59],"output":[{"Character":{"data":"‚ÑÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_118() {
    tokenize(
        r##"{"description":"Bad named entity: Coproduct without a semi-colon","initialState":"Data","input":"&Coproduct","inputUtf16":[38,67,111,112,114,111,100,117,99,116],"output":[{"Character":{"data":"&Coproduct"}}],"errors":[]}"##,
    );
}

#[test]
fn test_119() {
    tokenize(
        r##"{"description":"Named entity: Coproduct; with a semi-colon","initialState":"Data","input":"&Coproduct;","inputUtf16":[38,67,111,112,114,111,100,117,99,116,59],"output":[{"Character":{"data":"‚àê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_120() {
    tokenize(
        r##"{"description":"Bad named entity: CounterClockwiseContourIntegral without a semi-colon","initialState":"Data","input":"&CounterClockwiseContourIntegral","inputUtf16":[38,67,111,117,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108],"output":[{"Character":{"data":"&CounterClockwiseContourIntegral"}}],"errors":[]}"##,
    );
}

#[test]
fn test_121() {
    tokenize(
        r##"{"description":"Named entity: CounterClockwiseContourIntegral; with a semi-colon","initialState":"Data","input":"&CounterClockwiseContourIntegral;","inputUtf16":[38,67,111,117,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],"output":[{"Character":{"data":"‚à≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_122() {
    tokenize(
        r##"{"description":"Bad named entity: Cross without a semi-colon","initialState":"Data","input":"&Cross","inputUtf16":[38,67,114,111,115,115],"output":[{"Character":{"data":"&Cross"}}],"errors":[]}"##,
    );
}

#[test]
fn test_123() {
    tokenize(
        r##"{"description":"Named entity: Cross; with a semi-colon","initialState":"Data","input":"&Cross;","inputUtf16":[38,67,114,111,115,115,59],"output":[{"Character":{"data":"‚®Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_124() {
    tokenize(
        r##"{"description":"Bad named entity: Cscr without a semi-colon","initialState":"Data","input":"&Cscr","inputUtf16":[38,67,115,99,114],"output":[{"Character":{"data":"&Cscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_125() {
    tokenize(
        r##"{"description":"Named entity: Cscr; with a semi-colon","initialState":"Data","input":"&Cscr;","inputUtf16":[38,67,115,99,114,59],"output":[{"Character":{"data":"ùíû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_126() {
    tokenize(
        r##"{"description":"Bad named entity: Cup without a semi-colon","initialState":"Data","input":"&Cup","inputUtf16":[38,67,117,112],"output":[{"Character":{"data":"&Cup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_127() {
    tokenize(
        r##"{"description":"Named entity: Cup; with a semi-colon","initialState":"Data","input":"&Cup;","inputUtf16":[38,67,117,112,59],"output":[{"Character":{"data":"‚ãì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_128() {
    tokenize(
        r##"{"description":"Bad named entity: CupCap without a semi-colon","initialState":"Data","input":"&CupCap","inputUtf16":[38,67,117,112,67,97,112],"output":[{"Character":{"data":"&CupCap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_129() {
    tokenize(
        r##"{"description":"Named entity: CupCap; with a semi-colon","initialState":"Data","input":"&CupCap;","inputUtf16":[38,67,117,112,67,97,112,59],"output":[{"Character":{"data":"‚âç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_130() {
    tokenize(
        r##"{"description":"Bad named entity: DD without a semi-colon","initialState":"Data","input":"&DD","inputUtf16":[38,68,68],"output":[{"Character":{"data":"&DD"}}],"errors":[]}"##,
    );
}

#[test]
fn test_131() {
    tokenize(
        r##"{"description":"Named entity: DD; with a semi-colon","initialState":"Data","input":"&DD;","inputUtf16":[38,68,68,59],"output":[{"Character":{"data":"‚ÖÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_132() {
    tokenize(
        r##"{"description":"Bad named entity: DDotrahd without a semi-colon","initialState":"Data","input":"&DDotrahd","inputUtf16":[38,68,68,111,116,114,97,104,100],"output":[{"Character":{"data":"&DDotrahd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_133() {
    tokenize(
        r##"{"description":"Named entity: DDotrahd; with a semi-colon","initialState":"Data","input":"&DDotrahd;","inputUtf16":[38,68,68,111,116,114,97,104,100,59],"output":[{"Character":{"data":"‚§ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_134() {
    tokenize(
        r##"{"description":"Bad named entity: DJcy without a semi-colon","initialState":"Data","input":"&DJcy","inputUtf16":[38,68,74,99,121],"output":[{"Character":{"data":"&DJcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_135() {
    tokenize(
        r##"{"description":"Named entity: DJcy; with a semi-colon","initialState":"Data","input":"&DJcy;","inputUtf16":[38,68,74,99,121,59],"output":[{"Character":{"data":"–Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_136() {
    tokenize(
        r##"{"description":"Bad named entity: DScy without a semi-colon","initialState":"Data","input":"&DScy","inputUtf16":[38,68,83,99,121],"output":[{"Character":{"data":"&DScy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_137() {
    tokenize(
        r##"{"description":"Named entity: DScy; with a semi-colon","initialState":"Data","input":"&DScy;","inputUtf16":[38,68,83,99,121,59],"output":[{"Character":{"data":"–Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_138() {
    tokenize(
        r##"{"description":"Bad named entity: DZcy without a semi-colon","initialState":"Data","input":"&DZcy","inputUtf16":[38,68,90,99,121],"output":[{"Character":{"data":"&DZcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_139() {
    tokenize(
        r##"{"description":"Named entity: DZcy; with a semi-colon","initialState":"Data","input":"&DZcy;","inputUtf16":[38,68,90,99,121,59],"output":[{"Character":{"data":"–è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_140() {
    tokenize(
        r##"{"description":"Bad named entity: Dagger without a semi-colon","initialState":"Data","input":"&Dagger","inputUtf16":[38,68,97,103,103,101,114],"output":[{"Character":{"data":"&Dagger"}}],"errors":[]}"##,
    );
}

#[test]
fn test_141() {
    tokenize(
        r##"{"description":"Named entity: Dagger; with a semi-colon","initialState":"Data","input":"&Dagger;","inputUtf16":[38,68,97,103,103,101,114,59],"output":[{"Character":{"data":"‚Ä°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_142() {
    tokenize(
        r##"{"description":"Bad named entity: Darr without a semi-colon","initialState":"Data","input":"&Darr","inputUtf16":[38,68,97,114,114],"output":[{"Character":{"data":"&Darr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_143() {
    tokenize(
        r##"{"description":"Named entity: Darr; with a semi-colon","initialState":"Data","input":"&Darr;","inputUtf16":[38,68,97,114,114,59],"output":[{"Character":{"data":"‚Ü°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_144() {
    tokenize(
        r##"{"description":"Bad named entity: Dashv without a semi-colon","initialState":"Data","input":"&Dashv","inputUtf16":[38,68,97,115,104,118],"output":[{"Character":{"data":"&Dashv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_145() {
    tokenize(
        r##"{"description":"Named entity: Dashv; with a semi-colon","initialState":"Data","input":"&Dashv;","inputUtf16":[38,68,97,115,104,118,59],"output":[{"Character":{"data":"‚´§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_146() {
    tokenize(
        r##"{"description":"Bad named entity: Dcaron without a semi-colon","initialState":"Data","input":"&Dcaron","inputUtf16":[38,68,99,97,114,111,110],"output":[{"Character":{"data":"&Dcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_147() {
    tokenize(
        r##"{"description":"Named entity: Dcaron; with a semi-colon","initialState":"Data","input":"&Dcaron;","inputUtf16":[38,68,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_148() {
    tokenize(
        r##"{"description":"Bad named entity: Dcy without a semi-colon","initialState":"Data","input":"&Dcy","inputUtf16":[38,68,99,121],"output":[{"Character":{"data":"&Dcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_149() {
    tokenize(
        r##"{"description":"Named entity: Dcy; with a semi-colon","initialState":"Data","input":"&Dcy;","inputUtf16":[38,68,99,121,59],"output":[{"Character":{"data":"–î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_150() {
    tokenize(
        r##"{"description":"Bad named entity: Del without a semi-colon","initialState":"Data","input":"&Del","inputUtf16":[38,68,101,108],"output":[{"Character":{"data":"&Del"}}],"errors":[]}"##,
    );
}

#[test]
fn test_151() {
    tokenize(
        r##"{"description":"Named entity: Del; with a semi-colon","initialState":"Data","input":"&Del;","inputUtf16":[38,68,101,108,59],"output":[{"Character":{"data":"‚àá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_152() {
    tokenize(
        r##"{"description":"Bad named entity: Delta without a semi-colon","initialState":"Data","input":"&Delta","inputUtf16":[38,68,101,108,116,97],"output":[{"Character":{"data":"&Delta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_153() {
    tokenize(
        r##"{"description":"Named entity: Delta; with a semi-colon","initialState":"Data","input":"&Delta;","inputUtf16":[38,68,101,108,116,97,59],"output":[{"Character":{"data":"Œî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_154() {
    tokenize(
        r##"{"description":"Bad named entity: Dfr without a semi-colon","initialState":"Data","input":"&Dfr","inputUtf16":[38,68,102,114],"output":[{"Character":{"data":"&Dfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_155() {
    tokenize(
        r##"{"description":"Named entity: Dfr; with a semi-colon","initialState":"Data","input":"&Dfr;","inputUtf16":[38,68,102,114,59],"output":[{"Character":{"data":"ùîá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_156() {
    tokenize(
        r##"{"description":"Bad named entity: DiacriticalAcute without a semi-colon","initialState":"Data","input":"&DiacriticalAcute","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,65,99,117,116,101],"output":[{"Character":{"data":"&DiacriticalAcute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_157() {
    tokenize(
        r##"{"description":"Named entity: DiacriticalAcute; with a semi-colon","initialState":"Data","input":"&DiacriticalAcute;","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,65,99,117,116,101,59],"output":[{"Character":{"data":"¬¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_158() {
    tokenize(
        r##"{"description":"Bad named entity: DiacriticalDot without a semi-colon","initialState":"Data","input":"&DiacriticalDot","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,68,111,116],"output":[{"Character":{"data":"&DiacriticalDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_159() {
    tokenize(
        r##"{"description":"Named entity: DiacriticalDot; with a semi-colon","initialState":"Data","input":"&DiacriticalDot;","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,68,111,116,59],"output":[{"Character":{"data":"Àô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_160() {
    tokenize(
        r##"{"description":"Bad named entity: DiacriticalDoubleAcute without a semi-colon","initialState":"Data","input":"&DiacriticalDoubleAcute","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,68,111,117,98,108,101,65,99,117,116,101],"output":[{"Character":{"data":"&DiacriticalDoubleAcute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_161() {
    tokenize(
        r##"{"description":"Named entity: DiacriticalDoubleAcute; with a semi-colon","initialState":"Data","input":"&DiacriticalDoubleAcute;","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,68,111,117,98,108,101,65,99,117,116,101,59],"output":[{"Character":{"data":"Àù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_162() {
    tokenize(
        r##"{"description":"Bad named entity: DiacriticalGrave without a semi-colon","initialState":"Data","input":"&DiacriticalGrave","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,71,114,97,118,101],"output":[{"Character":{"data":"&DiacriticalGrave"}}],"errors":[]}"##,
    );
}

#[test]
fn test_163() {
    tokenize(
        r##"{"description":"Named entity: DiacriticalGrave; with a semi-colon","initialState":"Data","input":"&DiacriticalGrave;","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,71,114,97,118,101,59],"output":[{"Character":{"data":"`"}}],"errors":[]}"##,
    );
}

#[test]
fn test_164() {
    tokenize(
        r##"{"description":"Bad named entity: DiacriticalTilde without a semi-colon","initialState":"Data","input":"&DiacriticalTilde","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,84,105,108,100,101],"output":[{"Character":{"data":"&DiacriticalTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_165() {
    tokenize(
        r##"{"description":"Named entity: DiacriticalTilde; with a semi-colon","initialState":"Data","input":"&DiacriticalTilde;","inputUtf16":[38,68,105,97,99,114,105,116,105,99,97,108,84,105,108,100,101,59],"output":[{"Character":{"data":"Àú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_166() {
    tokenize(
        r##"{"description":"Bad named entity: Diamond without a semi-colon","initialState":"Data","input":"&Diamond","inputUtf16":[38,68,105,97,109,111,110,100],"output":[{"Character":{"data":"&Diamond"}}],"errors":[]}"##,
    );
}

#[test]
fn test_167() {
    tokenize(
        r##"{"description":"Named entity: Diamond; with a semi-colon","initialState":"Data","input":"&Diamond;","inputUtf16":[38,68,105,97,109,111,110,100,59],"output":[{"Character":{"data":"‚ãÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_168() {
    tokenize(
        r##"{"description":"Bad named entity: DifferentialD without a semi-colon","initialState":"Data","input":"&DifferentialD","inputUtf16":[38,68,105,102,102,101,114,101,110,116,105,97,108,68],"output":[{"Character":{"data":"&DifferentialD"}}],"errors":[]}"##,
    );
}

#[test]
fn test_169() {
    tokenize(
        r##"{"description":"Named entity: DifferentialD; with a semi-colon","initialState":"Data","input":"&DifferentialD;","inputUtf16":[38,68,105,102,102,101,114,101,110,116,105,97,108,68,59],"output":[{"Character":{"data":"‚ÖÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_170() {
    tokenize(
        r##"{"description":"Bad named entity: Dopf without a semi-colon","initialState":"Data","input":"&Dopf","inputUtf16":[38,68,111,112,102],"output":[{"Character":{"data":"&Dopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_171() {
    tokenize(
        r##"{"description":"Named entity: Dopf; with a semi-colon","initialState":"Data","input":"&Dopf;","inputUtf16":[38,68,111,112,102,59],"output":[{"Character":{"data":"ùîª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_172() {
    tokenize(
        r##"{"description":"Bad named entity: Dot without a semi-colon","initialState":"Data","input":"&Dot","inputUtf16":[38,68,111,116],"output":[{"Character":{"data":"&Dot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_173() {
    tokenize(
        r##"{"description":"Named entity: Dot; with a semi-colon","initialState":"Data","input":"&Dot;","inputUtf16":[38,68,111,116,59],"output":[{"Character":{"data":"¬®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_174() {
    tokenize(
        r##"{"description":"Bad named entity: DotDot without a semi-colon","initialState":"Data","input":"&DotDot","inputUtf16":[38,68,111,116,68,111,116],"output":[{"Character":{"data":"&DotDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_175() {
    tokenize(
        r##"{"description":"Named entity: DotDot; with a semi-colon","initialState":"Data","input":"&DotDot;","inputUtf16":[38,68,111,116,68,111,116,59],"output":[{"Character":{"data":"‚Éú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_176() {
    tokenize(
        r##"{"description":"Bad named entity: DotEqual without a semi-colon","initialState":"Data","input":"&DotEqual","inputUtf16":[38,68,111,116,69,113,117,97,108],"output":[{"Character":{"data":"&DotEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_177() {
    tokenize(
        r##"{"description":"Named entity: DotEqual; with a semi-colon","initialState":"Data","input":"&DotEqual;","inputUtf16":[38,68,111,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_178() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleContourIntegral without a semi-colon","initialState":"Data","input":"&DoubleContourIntegral","inputUtf16":[38,68,111,117,98,108,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108],"output":[{"Character":{"data":"&DoubleContourIntegral"}}],"errors":[]}"##,
    );
}

#[test]
fn test_179() {
    tokenize(
        r##"{"description":"Named entity: DoubleContourIntegral; with a semi-colon","initialState":"Data","input":"&DoubleContourIntegral;","inputUtf16":[38,68,111,117,98,108,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],"output":[{"Character":{"data":"‚àØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_180() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleDot without a semi-colon","initialState":"Data","input":"&DoubleDot","inputUtf16":[38,68,111,117,98,108,101,68,111,116],"output":[{"Character":{"data":"&DoubleDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_181() {
    tokenize(
        r##"{"description":"Named entity: DoubleDot; with a semi-colon","initialState":"Data","input":"&DoubleDot;","inputUtf16":[38,68,111,117,98,108,101,68,111,116,59],"output":[{"Character":{"data":"¬®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_182() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleDownArrow without a semi-colon","initialState":"Data","input":"&DoubleDownArrow","inputUtf16":[38,68,111,117,98,108,101,68,111,119,110,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleDownArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_183() {
    tokenize(
        r##"{"description":"Named entity: DoubleDownArrow; with a semi-colon","initialState":"Data","input":"&DoubleDownArrow;","inputUtf16":[38,68,111,117,98,108,101,68,111,119,110,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_184() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleLeftArrow without a semi-colon","initialState":"Data","input":"&DoubleLeftArrow","inputUtf16":[38,68,111,117,98,108,101,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleLeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_185() {
    tokenize(
        r##"{"description":"Named entity: DoubleLeftArrow; with a semi-colon","initialState":"Data","input":"&DoubleLeftArrow;","inputUtf16":[38,68,111,117,98,108,101,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_186() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleLeftRightArrow without a semi-colon","initialState":"Data","input":"&DoubleLeftRightArrow","inputUtf16":[38,68,111,117,98,108,101,76,101,102,116,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleLeftRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_187() {
    tokenize(
        r##"{"description":"Named entity: DoubleLeftRightArrow; with a semi-colon","initialState":"Data","input":"&DoubleLeftRightArrow;","inputUtf16":[38,68,111,117,98,108,101,76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_188() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleLeftTee without a semi-colon","initialState":"Data","input":"&DoubleLeftTee","inputUtf16":[38,68,111,117,98,108,101,76,101,102,116,84,101,101],"output":[{"Character":{"data":"&DoubleLeftTee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_189() {
    tokenize(
        r##"{"description":"Named entity: DoubleLeftTee; with a semi-colon","initialState":"Data","input":"&DoubleLeftTee;","inputUtf16":[38,68,111,117,98,108,101,76,101,102,116,84,101,101,59],"output":[{"Character":{"data":"‚´§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_190() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleLongLeftArrow without a semi-colon","initialState":"Data","input":"&DoubleLongLeftArrow","inputUtf16":[38,68,111,117,98,108,101,76,111,110,103,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleLongLeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_191() {
    tokenize(
        r##"{"description":"Named entity: DoubleLongLeftArrow; with a semi-colon","initialState":"Data","input":"&DoubleLongLeftArrow;","inputUtf16":[38,68,111,117,98,108,101,76,111,110,103,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_192() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleLongLeftRightArrow without a semi-colon","initialState":"Data","input":"&DoubleLongLeftRightArrow","inputUtf16":[38,68,111,117,98,108,101,76,111,110,103,76,101,102,116,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleLongLeftRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_193() {
    tokenize(
        r##"{"description":"Named entity: DoubleLongLeftRightArrow; with a semi-colon","initialState":"Data","input":"&DoubleLongLeftRightArrow;","inputUtf16":[38,68,111,117,98,108,101,76,111,110,103,76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_194() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleLongRightArrow without a semi-colon","initialState":"Data","input":"&DoubleLongRightArrow","inputUtf16":[38,68,111,117,98,108,101,76,111,110,103,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleLongRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_195() {
    tokenize(
        r##"{"description":"Named entity: DoubleLongRightArrow; with a semi-colon","initialState":"Data","input":"&DoubleLongRightArrow;","inputUtf16":[38,68,111,117,98,108,101,76,111,110,103,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚üπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_196() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleRightArrow without a semi-colon","initialState":"Data","input":"&DoubleRightArrow","inputUtf16":[38,68,111,117,98,108,101,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_197() {
    tokenize(
        r##"{"description":"Named entity: DoubleRightArrow; with a semi-colon","initialState":"Data","input":"&DoubleRightArrow;","inputUtf16":[38,68,111,117,98,108,101,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_198() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleRightTee without a semi-colon","initialState":"Data","input":"&DoubleRightTee","inputUtf16":[38,68,111,117,98,108,101,82,105,103,104,116,84,101,101],"output":[{"Character":{"data":"&DoubleRightTee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_199() {
    tokenize(
        r##"{"description":"Named entity: DoubleRightTee; with a semi-colon","initialState":"Data","input":"&DoubleRightTee;","inputUtf16":[38,68,111,117,98,108,101,82,105,103,104,116,84,101,101,59],"output":[{"Character":{"data":"‚ä®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_200() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleUpArrow without a semi-colon","initialState":"Data","input":"&DoubleUpArrow","inputUtf16":[38,68,111,117,98,108,101,85,112,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleUpArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_201() {
    tokenize(
        r##"{"description":"Named entity: DoubleUpArrow; with a semi-colon","initialState":"Data","input":"&DoubleUpArrow;","inputUtf16":[38,68,111,117,98,108,101,85,112,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_202() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleUpDownArrow without a semi-colon","initialState":"Data","input":"&DoubleUpDownArrow","inputUtf16":[38,68,111,117,98,108,101,85,112,68,111,119,110,65,114,114,111,119],"output":[{"Character":{"data":"&DoubleUpDownArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_203() {
    tokenize(
        r##"{"description":"Named entity: DoubleUpDownArrow; with a semi-colon","initialState":"Data","input":"&DoubleUpDownArrow;","inputUtf16":[38,68,111,117,98,108,101,85,112,68,111,119,110,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_204() {
    tokenize(
        r##"{"description":"Bad named entity: DoubleVerticalBar without a semi-colon","initialState":"Data","input":"&DoubleVerticalBar","inputUtf16":[38,68,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114],"output":[{"Character":{"data":"&DoubleVerticalBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_205() {
    tokenize(
        r##"{"description":"Named entity: DoubleVerticalBar; with a semi-colon","initialState":"Data","input":"&DoubleVerticalBar;","inputUtf16":[38,68,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59],"output":[{"Character":{"data":"‚à•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_206() {
    tokenize(
        r##"{"description":"Bad named entity: DownArrow without a semi-colon","initialState":"Data","input":"&DownArrow","inputUtf16":[38,68,111,119,110,65,114,114,111,119],"output":[{"Character":{"data":"&DownArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_207() {
    tokenize(
        r##"{"description":"Named entity: DownArrow; with a semi-colon","initialState":"Data","input":"&DownArrow;","inputUtf16":[38,68,111,119,110,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_208() {
    tokenize(
        r##"{"description":"Bad named entity: DownArrowBar without a semi-colon","initialState":"Data","input":"&DownArrowBar","inputUtf16":[38,68,111,119,110,65,114,114,111,119,66,97,114],"output":[{"Character":{"data":"&DownArrowBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_209() {
    tokenize(
        r##"{"description":"Named entity: DownArrowBar; with a semi-colon","initialState":"Data","input":"&DownArrowBar;","inputUtf16":[38,68,111,119,110,65,114,114,111,119,66,97,114,59],"output":[{"Character":{"data":"‚§ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_210() {
    tokenize(
        r##"{"description":"Bad named entity: DownArrowUpArrow without a semi-colon","initialState":"Data","input":"&DownArrowUpArrow","inputUtf16":[38,68,111,119,110,65,114,114,111,119,85,112,65,114,114,111,119],"output":[{"Character":{"data":"&DownArrowUpArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_211() {
    tokenize(
        r##"{"description":"Named entity: DownArrowUpArrow; with a semi-colon","initialState":"Data","input":"&DownArrowUpArrow;","inputUtf16":[38,68,111,119,110,65,114,114,111,119,85,112,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_212() {
    tokenize(
        r##"{"description":"Bad named entity: DownBreve without a semi-colon","initialState":"Data","input":"&DownBreve","inputUtf16":[38,68,111,119,110,66,114,101,118,101],"output":[{"Character":{"data":"&DownBreve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_213() {
    tokenize(
        r##"{"description":"Named entity: DownBreve; with a semi-colon","initialState":"Data","input":"&DownBreve;","inputUtf16":[38,68,111,119,110,66,114,101,118,101,59],"output":[{"Character":{"data":"Ãë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_214() {
    tokenize(
        r##"{"description":"Bad named entity: DownLeftRightVector without a semi-colon","initialState":"Data","input":"&DownLeftRightVector","inputUtf16":[38,68,111,119,110,76,101,102,116,82,105,103,104,116,86,101,99,116,111,114],"output":[{"Character":{"data":"&DownLeftRightVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_215() {
    tokenize(
        r##"{"description":"Named entity: DownLeftRightVector; with a semi-colon","initialState":"Data","input":"&DownLeftRightVector;","inputUtf16":[38,68,111,119,110,76,101,102,116,82,105,103,104,116,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_216() {
    tokenize(
        r##"{"description":"Bad named entity: DownLeftTeeVector without a semi-colon","initialState":"Data","input":"&DownLeftTeeVector","inputUtf16":[38,68,111,119,110,76,101,102,116,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&DownLeftTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_217() {
    tokenize(
        r##"{"description":"Named entity: DownLeftTeeVector; with a semi-colon","initialState":"Data","input":"&DownLeftTeeVector;","inputUtf16":[38,68,111,119,110,76,101,102,116,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•û"}}],"errors":[]}"##,
    );
}

#[test]
fn test_218() {
    tokenize(
        r##"{"description":"Bad named entity: DownLeftVector without a semi-colon","initialState":"Data","input":"&DownLeftVector","inputUtf16":[38,68,111,119,110,76,101,102,116,86,101,99,116,111,114],"output":[{"Character":{"data":"&DownLeftVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_219() {
    tokenize(
        r##"{"description":"Named entity: DownLeftVector; with a semi-colon","initialState":"Data","input":"&DownLeftVector;","inputUtf16":[38,68,111,119,110,76,101,102,116,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚ÜΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_220() {
    tokenize(
        r##"{"description":"Bad named entity: DownLeftVectorBar without a semi-colon","initialState":"Data","input":"&DownLeftVectorBar","inputUtf16":[38,68,111,119,110,76,101,102,116,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&DownLeftVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_221() {
    tokenize(
        r##"{"description":"Named entity: DownLeftVectorBar; with a semi-colon","initialState":"Data","input":"&DownLeftVectorBar;","inputUtf16":[38,68,111,119,110,76,101,102,116,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_222() {
    tokenize(
        r##"{"description":"Bad named entity: DownRightTeeVector without a semi-colon","initialState":"Data","input":"&DownRightTeeVector","inputUtf16":[38,68,111,119,110,82,105,103,104,116,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&DownRightTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_223() {
    tokenize(
        r##"{"description":"Named entity: DownRightTeeVector; with a semi-colon","initialState":"Data","input":"&DownRightTeeVector;","inputUtf16":[38,68,111,119,110,82,105,103,104,116,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_224() {
    tokenize(
        r##"{"description":"Bad named entity: DownRightVector without a semi-colon","initialState":"Data","input":"&DownRightVector","inputUtf16":[38,68,111,119,110,82,105,103,104,116,86,101,99,116,111,114],"output":[{"Character":{"data":"&DownRightVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_225() {
    tokenize(
        r##"{"description":"Named entity: DownRightVector; with a semi-colon","initialState":"Data","input":"&DownRightVector;","inputUtf16":[38,68,111,119,110,82,105,103,104,116,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚áÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_226() {
    tokenize(
        r##"{"description":"Bad named entity: DownRightVectorBar without a semi-colon","initialState":"Data","input":"&DownRightVectorBar","inputUtf16":[38,68,111,119,110,82,105,103,104,116,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&DownRightVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_227() {
    tokenize(
        r##"{"description":"Named entity: DownRightVectorBar; with a semi-colon","initialState":"Data","input":"&DownRightVectorBar;","inputUtf16":[38,68,111,119,110,82,105,103,104,116,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_228() {
    tokenize(
        r##"{"description":"Bad named entity: DownTee without a semi-colon","initialState":"Data","input":"&DownTee","inputUtf16":[38,68,111,119,110,84,101,101],"output":[{"Character":{"data":"&DownTee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_229() {
    tokenize(
        r##"{"description":"Named entity: DownTee; with a semi-colon","initialState":"Data","input":"&DownTee;","inputUtf16":[38,68,111,119,110,84,101,101,59],"output":[{"Character":{"data":"‚ä§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_230() {
    tokenize(
        r##"{"description":"Bad named entity: DownTeeArrow without a semi-colon","initialState":"Data","input":"&DownTeeArrow","inputUtf16":[38,68,111,119,110,84,101,101,65,114,114,111,119],"output":[{"Character":{"data":"&DownTeeArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_231() {
    tokenize(
        r##"{"description":"Named entity: DownTeeArrow; with a semi-colon","initialState":"Data","input":"&DownTeeArrow;","inputUtf16":[38,68,111,119,110,84,101,101,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_232() {
    tokenize(
        r##"{"description":"Bad named entity: Downarrow without a semi-colon","initialState":"Data","input":"&Downarrow","inputUtf16":[38,68,111,119,110,97,114,114,111,119],"output":[{"Character":{"data":"&Downarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_233() {
    tokenize(
        r##"{"description":"Named entity: Downarrow; with a semi-colon","initialState":"Data","input":"&Downarrow;","inputUtf16":[38,68,111,119,110,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_234() {
    tokenize(
        r##"{"description":"Bad named entity: Dscr without a semi-colon","initialState":"Data","input":"&Dscr","inputUtf16":[38,68,115,99,114],"output":[{"Character":{"data":"&Dscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_235() {
    tokenize(
        r##"{"description":"Named entity: Dscr; with a semi-colon","initialState":"Data","input":"&Dscr;","inputUtf16":[38,68,115,99,114,59],"output":[{"Character":{"data":"ùíü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_236() {
    tokenize(
        r##"{"description":"Bad named entity: Dstrok without a semi-colon","initialState":"Data","input":"&Dstrok","inputUtf16":[38,68,115,116,114,111,107],"output":[{"Character":{"data":"&Dstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_237() {
    tokenize(
        r##"{"description":"Named entity: Dstrok; with a semi-colon","initialState":"Data","input":"&Dstrok;","inputUtf16":[38,68,115,116,114,111,107,59],"output":[{"Character":{"data":"ƒê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_238() {
    tokenize(
        r##"{"description":"Bad named entity: ENG without a semi-colon","initialState":"Data","input":"&ENG","inputUtf16":[38,69,78,71],"output":[{"Character":{"data":"&ENG"}}],"errors":[]}"##,
    );
}

#[test]
fn test_239() {
    tokenize(
        r##"{"description":"Named entity: ENG; with a semi-colon","initialState":"Data","input":"&ENG;","inputUtf16":[38,69,78,71,59],"output":[{"Character":{"data":"≈ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_240() {
    tokenize(
        r##"{"description":"Named entity: ETH without a semi-colon","initialState":"Data","input":"&ETH","inputUtf16":[38,69,84,72],"output":[{"Character":{"data":"√ê"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_241() {
    tokenize(
        r##"{"description":"Named entity: ETH; with a semi-colon","initialState":"Data","input":"&ETH;","inputUtf16":[38,69,84,72,59],"output":[{"Character":{"data":"√ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_242() {
    tokenize(
        r##"{"description":"Named entity: Eacute without a semi-colon","initialState":"Data","input":"&Eacute","inputUtf16":[38,69,97,99,117,116,101],"output":[{"Character":{"data":"√â"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_243() {
    tokenize(
        r##"{"description":"Named entity: Eacute; with a semi-colon","initialState":"Data","input":"&Eacute;","inputUtf16":[38,69,97,99,117,116,101,59],"output":[{"Character":{"data":"√â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_244() {
    tokenize(
        r##"{"description":"Bad named entity: Ecaron without a semi-colon","initialState":"Data","input":"&Ecaron","inputUtf16":[38,69,99,97,114,111,110],"output":[{"Character":{"data":"&Ecaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_245() {
    tokenize(
        r##"{"description":"Named entity: Ecaron; with a semi-colon","initialState":"Data","input":"&Ecaron;","inputUtf16":[38,69,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_246() {
    tokenize(
        r##"{"description":"Named entity: Ecirc without a semi-colon","initialState":"Data","input":"&Ecirc","inputUtf16":[38,69,99,105,114,99],"output":[{"Character":{"data":"√ä"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_247() {
    tokenize(
        r##"{"description":"Named entity: Ecirc; with a semi-colon","initialState":"Data","input":"&Ecirc;","inputUtf16":[38,69,99,105,114,99,59],"output":[{"Character":{"data":"√ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_248() {
    tokenize(
        r##"{"description":"Bad named entity: Ecy without a semi-colon","initialState":"Data","input":"&Ecy","inputUtf16":[38,69,99,121],"output":[{"Character":{"data":"&Ecy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_249() {
    tokenize(
        r##"{"description":"Named entity: Ecy; with a semi-colon","initialState":"Data","input":"&Ecy;","inputUtf16":[38,69,99,121,59],"output":[{"Character":{"data":"–≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_250() {
    tokenize(
        r##"{"description":"Bad named entity: Edot without a semi-colon","initialState":"Data","input":"&Edot","inputUtf16":[38,69,100,111,116],"output":[{"Character":{"data":"&Edot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_251() {
    tokenize(
        r##"{"description":"Named entity: Edot; with a semi-colon","initialState":"Data","input":"&Edot;","inputUtf16":[38,69,100,111,116,59],"output":[{"Character":{"data":"ƒñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_252() {
    tokenize(
        r##"{"description":"Bad named entity: Efr without a semi-colon","initialState":"Data","input":"&Efr","inputUtf16":[38,69,102,114],"output":[{"Character":{"data":"&Efr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_253() {
    tokenize(
        r##"{"description":"Named entity: Efr; with a semi-colon","initialState":"Data","input":"&Efr;","inputUtf16":[38,69,102,114,59],"output":[{"Character":{"data":"ùîà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_254() {
    tokenize(
        r##"{"description":"Named entity: Egrave without a semi-colon","initialState":"Data","input":"&Egrave","inputUtf16":[38,69,103,114,97,118,101],"output":[{"Character":{"data":"√à"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_255() {
    tokenize(
        r##"{"description":"Named entity: Egrave; with a semi-colon","initialState":"Data","input":"&Egrave;","inputUtf16":[38,69,103,114,97,118,101,59],"output":[{"Character":{"data":"√à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_256() {
    tokenize(
        r##"{"description":"Bad named entity: Element without a semi-colon","initialState":"Data","input":"&Element","inputUtf16":[38,69,108,101,109,101,110,116],"output":[{"Character":{"data":"&Element"}}],"errors":[]}"##,
    );
}

#[test]
fn test_257() {
    tokenize(
        r##"{"description":"Named entity: Element; with a semi-colon","initialState":"Data","input":"&Element;","inputUtf16":[38,69,108,101,109,101,110,116,59],"output":[{"Character":{"data":"‚àà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_258() {
    tokenize(
        r##"{"description":"Bad named entity: Emacr without a semi-colon","initialState":"Data","input":"&Emacr","inputUtf16":[38,69,109,97,99,114],"output":[{"Character":{"data":"&Emacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_259() {
    tokenize(
        r##"{"description":"Named entity: Emacr; with a semi-colon","initialState":"Data","input":"&Emacr;","inputUtf16":[38,69,109,97,99,114,59],"output":[{"Character":{"data":"ƒí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_260() {
    tokenize(
        r##"{"description":"Bad named entity: EmptySmallSquare without a semi-colon","initialState":"Data","input":"&EmptySmallSquare","inputUtf16":[38,69,109,112,116,121,83,109,97,108,108,83,113,117,97,114,101],"output":[{"Character":{"data":"&EmptySmallSquare"}}],"errors":[]}"##,
    );
}

#[test]
fn test_261() {
    tokenize(
        r##"{"description":"Named entity: EmptySmallSquare; with a semi-colon","initialState":"Data","input":"&EmptySmallSquare;","inputUtf16":[38,69,109,112,116,121,83,109,97,108,108,83,113,117,97,114,101,59],"output":[{"Character":{"data":"‚óª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_262() {
    tokenize(
        r##"{"description":"Bad named entity: EmptyVerySmallSquare without a semi-colon","initialState":"Data","input":"&EmptyVerySmallSquare","inputUtf16":[38,69,109,112,116,121,86,101,114,121,83,109,97,108,108,83,113,117,97,114,101],"output":[{"Character":{"data":"&EmptyVerySmallSquare"}}],"errors":[]}"##,
    );
}

#[test]
fn test_263() {
    tokenize(
        r##"{"description":"Named entity: EmptyVerySmallSquare; with a semi-colon","initialState":"Data","input":"&EmptyVerySmallSquare;","inputUtf16":[38,69,109,112,116,121,86,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59],"output":[{"Character":{"data":"‚ñ´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_264() {
    tokenize(
        r##"{"description":"Bad named entity: Eogon without a semi-colon","initialState":"Data","input":"&Eogon","inputUtf16":[38,69,111,103,111,110],"output":[{"Character":{"data":"&Eogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_265() {
    tokenize(
        r##"{"description":"Named entity: Eogon; with a semi-colon","initialState":"Data","input":"&Eogon;","inputUtf16":[38,69,111,103,111,110,59],"output":[{"Character":{"data":"ƒò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_266() {
    tokenize(
        r##"{"description":"Bad named entity: Eopf without a semi-colon","initialState":"Data","input":"&Eopf","inputUtf16":[38,69,111,112,102],"output":[{"Character":{"data":"&Eopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_267() {
    tokenize(
        r##"{"description":"Named entity: Eopf; with a semi-colon","initialState":"Data","input":"&Eopf;","inputUtf16":[38,69,111,112,102,59],"output":[{"Character":{"data":"ùîº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_268() {
    tokenize(
        r##"{"description":"Bad named entity: Epsilon without a semi-colon","initialState":"Data","input":"&Epsilon","inputUtf16":[38,69,112,115,105,108,111,110],"output":[{"Character":{"data":"&Epsilon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_269() {
    tokenize(
        r##"{"description":"Named entity: Epsilon; with a semi-colon","initialState":"Data","input":"&Epsilon;","inputUtf16":[38,69,112,115,105,108,111,110,59],"output":[{"Character":{"data":"Œï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_270() {
    tokenize(
        r##"{"description":"Bad named entity: Equal without a semi-colon","initialState":"Data","input":"&Equal","inputUtf16":[38,69,113,117,97,108],"output":[{"Character":{"data":"&Equal"}}],"errors":[]}"##,
    );
}

#[test]
fn test_271() {
    tokenize(
        r##"{"description":"Named entity: Equal; with a semi-colon","initialState":"Data","input":"&Equal;","inputUtf16":[38,69,113,117,97,108,59],"output":[{"Character":{"data":"‚©µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_272() {
    tokenize(
        r##"{"description":"Bad named entity: EqualTilde without a semi-colon","initialState":"Data","input":"&EqualTilde","inputUtf16":[38,69,113,117,97,108,84,105,108,100,101],"output":[{"Character":{"data":"&EqualTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_273() {
    tokenize(
        r##"{"description":"Named entity: EqualTilde; with a semi-colon","initialState":"Data","input":"&EqualTilde;","inputUtf16":[38,69,113,117,97,108,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_274() {
    tokenize(
        r##"{"description":"Bad named entity: Equilibrium without a semi-colon","initialState":"Data","input":"&Equilibrium","inputUtf16":[38,69,113,117,105,108,105,98,114,105,117,109],"output":[{"Character":{"data":"&Equilibrium"}}],"errors":[]}"##,
    );
}

#[test]
fn test_275() {
    tokenize(
        r##"{"description":"Named entity: Equilibrium; with a semi-colon","initialState":"Data","input":"&Equilibrium;","inputUtf16":[38,69,113,117,105,108,105,98,114,105,117,109,59],"output":[{"Character":{"data":"‚áå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_276() {
    tokenize(
        r##"{"description":"Bad named entity: Escr without a semi-colon","initialState":"Data","input":"&Escr","inputUtf16":[38,69,115,99,114],"output":[{"Character":{"data":"&Escr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_277() {
    tokenize(
        r##"{"description":"Named entity: Escr; with a semi-colon","initialState":"Data","input":"&Escr;","inputUtf16":[38,69,115,99,114,59],"output":[{"Character":{"data":"‚Ñ∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_278() {
    tokenize(
        r##"{"description":"Bad named entity: Esim without a semi-colon","initialState":"Data","input":"&Esim","inputUtf16":[38,69,115,105,109],"output":[{"Character":{"data":"&Esim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_279() {
    tokenize(
        r##"{"description":"Named entity: Esim; with a semi-colon","initialState":"Data","input":"&Esim;","inputUtf16":[38,69,115,105,109,59],"output":[{"Character":{"data":"‚©≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_280() {
    tokenize(
        r##"{"description":"Bad named entity: Eta without a semi-colon","initialState":"Data","input":"&Eta","inputUtf16":[38,69,116,97],"output":[{"Character":{"data":"&Eta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_281() {
    tokenize(
        r##"{"description":"Named entity: Eta; with a semi-colon","initialState":"Data","input":"&Eta;","inputUtf16":[38,69,116,97,59],"output":[{"Character":{"data":"Œó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_282() {
    tokenize(
        r##"{"description":"Named entity: Euml without a semi-colon","initialState":"Data","input":"&Euml","inputUtf16":[38,69,117,109,108],"output":[{"Character":{"data":"√ã"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_283() {
    tokenize(
        r##"{"description":"Named entity: Euml; with a semi-colon","initialState":"Data","input":"&Euml;","inputUtf16":[38,69,117,109,108,59],"output":[{"Character":{"data":"√ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_284() {
    tokenize(
        r##"{"description":"Bad named entity: Exists without a semi-colon","initialState":"Data","input":"&Exists","inputUtf16":[38,69,120,105,115,116,115],"output":[{"Character":{"data":"&Exists"}}],"errors":[]}"##,
    );
}

#[test]
fn test_285() {
    tokenize(
        r##"{"description":"Named entity: Exists; with a semi-colon","initialState":"Data","input":"&Exists;","inputUtf16":[38,69,120,105,115,116,115,59],"output":[{"Character":{"data":"‚àÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_286() {
    tokenize(
        r##"{"description":"Bad named entity: ExponentialE without a semi-colon","initialState":"Data","input":"&ExponentialE","inputUtf16":[38,69,120,112,111,110,101,110,116,105,97,108,69],"output":[{"Character":{"data":"&ExponentialE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_287() {
    tokenize(
        r##"{"description":"Named entity: ExponentialE; with a semi-colon","initialState":"Data","input":"&ExponentialE;","inputUtf16":[38,69,120,112,111,110,101,110,116,105,97,108,69,59],"output":[{"Character":{"data":"‚Öá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_288() {
    tokenize(
        r##"{"description":"Bad named entity: Fcy without a semi-colon","initialState":"Data","input":"&Fcy","inputUtf16":[38,70,99,121],"output":[{"Character":{"data":"&Fcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_289() {
    tokenize(
        r##"{"description":"Named entity: Fcy; with a semi-colon","initialState":"Data","input":"&Fcy;","inputUtf16":[38,70,99,121,59],"output":[{"Character":{"data":"–§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_290() {
    tokenize(
        r##"{"description":"Bad named entity: Ffr without a semi-colon","initialState":"Data","input":"&Ffr","inputUtf16":[38,70,102,114],"output":[{"Character":{"data":"&Ffr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_291() {
    tokenize(
        r##"{"description":"Named entity: Ffr; with a semi-colon","initialState":"Data","input":"&Ffr;","inputUtf16":[38,70,102,114,59],"output":[{"Character":{"data":"ùîâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_292() {
    tokenize(
        r##"{"description":"Bad named entity: FilledSmallSquare without a semi-colon","initialState":"Data","input":"&FilledSmallSquare","inputUtf16":[38,70,105,108,108,101,100,83,109,97,108,108,83,113,117,97,114,101],"output":[{"Character":{"data":"&FilledSmallSquare"}}],"errors":[]}"##,
    );
}

#[test]
fn test_293() {
    tokenize(
        r##"{"description":"Named entity: FilledSmallSquare; with a semi-colon","initialState":"Data","input":"&FilledSmallSquare;","inputUtf16":[38,70,105,108,108,101,100,83,109,97,108,108,83,113,117,97,114,101,59],"output":[{"Character":{"data":"‚óº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_294() {
    tokenize(
        r##"{"description":"Bad named entity: FilledVerySmallSquare without a semi-colon","initialState":"Data","input":"&FilledVerySmallSquare","inputUtf16":[38,70,105,108,108,101,100,86,101,114,121,83,109,97,108,108,83,113,117,97,114,101],"output":[{"Character":{"data":"&FilledVerySmallSquare"}}],"errors":[]}"##,
    );
}

#[test]
fn test_295() {
    tokenize(
        r##"{"description":"Named entity: FilledVerySmallSquare; with a semi-colon","initialState":"Data","input":"&FilledVerySmallSquare;","inputUtf16":[38,70,105,108,108,101,100,86,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59],"output":[{"Character":{"data":"‚ñ™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_296() {
    tokenize(
        r##"{"description":"Bad named entity: Fopf without a semi-colon","initialState":"Data","input":"&Fopf","inputUtf16":[38,70,111,112,102],"output":[{"Character":{"data":"&Fopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_297() {
    tokenize(
        r##"{"description":"Named entity: Fopf; with a semi-colon","initialState":"Data","input":"&Fopf;","inputUtf16":[38,70,111,112,102,59],"output":[{"Character":{"data":"ùîΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_298() {
    tokenize(
        r##"{"description":"Bad named entity: ForAll without a semi-colon","initialState":"Data","input":"&ForAll","inputUtf16":[38,70,111,114,65,108,108],"output":[{"Character":{"data":"&ForAll"}}],"errors":[]}"##,
    );
}

#[test]
fn test_299() {
    tokenize(
        r##"{"description":"Named entity: ForAll; with a semi-colon","initialState":"Data","input":"&ForAll;","inputUtf16":[38,70,111,114,65,108,108,59],"output":[{"Character":{"data":"‚àÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_300() {
    tokenize(
        r##"{"description":"Bad named entity: Fouriertrf without a semi-colon","initialState":"Data","input":"&Fouriertrf","inputUtf16":[38,70,111,117,114,105,101,114,116,114,102],"output":[{"Character":{"data":"&Fouriertrf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_301() {
    tokenize(
        r##"{"description":"Named entity: Fouriertrf; with a semi-colon","initialState":"Data","input":"&Fouriertrf;","inputUtf16":[38,70,111,117,114,105,101,114,116,114,102,59],"output":[{"Character":{"data":"‚Ñ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_302() {
    tokenize(
        r##"{"description":"Bad named entity: Fscr without a semi-colon","initialState":"Data","input":"&Fscr","inputUtf16":[38,70,115,99,114],"output":[{"Character":{"data":"&Fscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_303() {
    tokenize(
        r##"{"description":"Named entity: Fscr; with a semi-colon","initialState":"Data","input":"&Fscr;","inputUtf16":[38,70,115,99,114,59],"output":[{"Character":{"data":"‚Ñ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_304() {
    tokenize(
        r##"{"description":"Bad named entity: GJcy without a semi-colon","initialState":"Data","input":"&GJcy","inputUtf16":[38,71,74,99,121],"output":[{"Character":{"data":"&GJcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_305() {
    tokenize(
        r##"{"description":"Named entity: GJcy; with a semi-colon","initialState":"Data","input":"&GJcy;","inputUtf16":[38,71,74,99,121,59],"output":[{"Character":{"data":"–É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_306() {
    tokenize(
        r##"{"description":"Named entity: GT without a semi-colon","initialState":"Data","input":"&GT","inputUtf16":[38,71,84],"output":[{"Character":{"data":">"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":4}}]}"##,
    );
}

#[test]
fn test_307() {
    tokenize(
        r##"{"description":"Named entity: GT; with a semi-colon","initialState":"Data","input":"&GT;","inputUtf16":[38,71,84,59],"output":[{"Character":{"data":">"}}],"errors":[]}"##,
    );
}

#[test]
fn test_308() {
    tokenize(
        r##"{"description":"Bad named entity: Gamma without a semi-colon","initialState":"Data","input":"&Gamma","inputUtf16":[38,71,97,109,109,97],"output":[{"Character":{"data":"&Gamma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_309() {
    tokenize(
        r##"{"description":"Named entity: Gamma; with a semi-colon","initialState":"Data","input":"&Gamma;","inputUtf16":[38,71,97,109,109,97,59],"output":[{"Character":{"data":"Œì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_310() {
    tokenize(
        r##"{"description":"Bad named entity: Gammad without a semi-colon","initialState":"Data","input":"&Gammad","inputUtf16":[38,71,97,109,109,97,100],"output":[{"Character":{"data":"&Gammad"}}],"errors":[]}"##,
    );
}

#[test]
fn test_311() {
    tokenize(
        r##"{"description":"Named entity: Gammad; with a semi-colon","initialState":"Data","input":"&Gammad;","inputUtf16":[38,71,97,109,109,97,100,59],"output":[{"Character":{"data":"œú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_312() {
    tokenize(
        r##"{"description":"Bad named entity: Gbreve without a semi-colon","initialState":"Data","input":"&Gbreve","inputUtf16":[38,71,98,114,101,118,101],"output":[{"Character":{"data":"&Gbreve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_313() {
    tokenize(
        r##"{"description":"Named entity: Gbreve; with a semi-colon","initialState":"Data","input":"&Gbreve;","inputUtf16":[38,71,98,114,101,118,101,59],"output":[{"Character":{"data":"ƒû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_314() {
    tokenize(
        r##"{"description":"Bad named entity: Gcedil without a semi-colon","initialState":"Data","input":"&Gcedil","inputUtf16":[38,71,99,101,100,105,108],"output":[{"Character":{"data":"&Gcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_315() {
    tokenize(
        r##"{"description":"Named entity: Gcedil; with a semi-colon","initialState":"Data","input":"&Gcedil;","inputUtf16":[38,71,99,101,100,105,108,59],"output":[{"Character":{"data":"ƒ¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_316() {
    tokenize(
        r##"{"description":"Bad named entity: Gcirc without a semi-colon","initialState":"Data","input":"&Gcirc","inputUtf16":[38,71,99,105,114,99],"output":[{"Character":{"data":"&Gcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_317() {
    tokenize(
        r##"{"description":"Named entity: Gcirc; with a semi-colon","initialState":"Data","input":"&Gcirc;","inputUtf16":[38,71,99,105,114,99,59],"output":[{"Character":{"data":"ƒú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_318() {
    tokenize(
        r##"{"description":"Bad named entity: Gcy without a semi-colon","initialState":"Data","input":"&Gcy","inputUtf16":[38,71,99,121],"output":[{"Character":{"data":"&Gcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_319() {
    tokenize(
        r##"{"description":"Named entity: Gcy; with a semi-colon","initialState":"Data","input":"&Gcy;","inputUtf16":[38,71,99,121,59],"output":[{"Character":{"data":"–ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_320() {
    tokenize(
        r##"{"description":"Bad named entity: Gdot without a semi-colon","initialState":"Data","input":"&Gdot","inputUtf16":[38,71,100,111,116],"output":[{"Character":{"data":"&Gdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_321() {
    tokenize(
        r##"{"description":"Named entity: Gdot; with a semi-colon","initialState":"Data","input":"&Gdot;","inputUtf16":[38,71,100,111,116,59],"output":[{"Character":{"data":"ƒ†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_322() {
    tokenize(
        r##"{"description":"Bad named entity: Gfr without a semi-colon","initialState":"Data","input":"&Gfr","inputUtf16":[38,71,102,114],"output":[{"Character":{"data":"&Gfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_323() {
    tokenize(
        r##"{"description":"Named entity: Gfr; with a semi-colon","initialState":"Data","input":"&Gfr;","inputUtf16":[38,71,102,114,59],"output":[{"Character":{"data":"ùîä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_324() {
    tokenize(
        r##"{"description":"Bad named entity: Gg without a semi-colon","initialState":"Data","input":"&Gg","inputUtf16":[38,71,103],"output":[{"Character":{"data":"&Gg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_325() {
    tokenize(
        r##"{"description":"Named entity: Gg; with a semi-colon","initialState":"Data","input":"&Gg;","inputUtf16":[38,71,103,59],"output":[{"Character":{"data":"‚ãô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_326() {
    tokenize(
        r##"{"description":"Bad named entity: Gopf without a semi-colon","initialState":"Data","input":"&Gopf","inputUtf16":[38,71,111,112,102],"output":[{"Character":{"data":"&Gopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_327() {
    tokenize(
        r##"{"description":"Named entity: Gopf; with a semi-colon","initialState":"Data","input":"&Gopf;","inputUtf16":[38,71,111,112,102,59],"output":[{"Character":{"data":"ùîæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_328() {
    tokenize(
        r##"{"description":"Bad named entity: GreaterEqual without a semi-colon","initialState":"Data","input":"&GreaterEqual","inputUtf16":[38,71,114,101,97,116,101,114,69,113,117,97,108],"output":[{"Character":{"data":"&GreaterEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_329() {
    tokenize(
        r##"{"description":"Named entity: GreaterEqual; with a semi-colon","initialState":"Data","input":"&GreaterEqual;","inputUtf16":[38,71,114,101,97,116,101,114,69,113,117,97,108,59],"output":[{"Character":{"data":"‚â•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_330() {
    tokenize(
        r##"{"description":"Bad named entity: GreaterEqualLess without a semi-colon","initialState":"Data","input":"&GreaterEqualLess","inputUtf16":[38,71,114,101,97,116,101,114,69,113,117,97,108,76,101,115,115],"output":[{"Character":{"data":"&GreaterEqualLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_331() {
    tokenize(
        r##"{"description":"Named entity: GreaterEqualLess; with a semi-colon","initialState":"Data","input":"&GreaterEqualLess;","inputUtf16":[38,71,114,101,97,116,101,114,69,113,117,97,108,76,101,115,115,59],"output":[{"Character":{"data":"‚ãõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_332() {
    tokenize(
        r##"{"description":"Bad named entity: GreaterFullEqual without a semi-colon","initialState":"Data","input":"&GreaterFullEqual","inputUtf16":[38,71,114,101,97,116,101,114,70,117,108,108,69,113,117,97,108],"output":[{"Character":{"data":"&GreaterFullEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_333() {
    tokenize(
        r##"{"description":"Named entity: GreaterFullEqual; with a semi-colon","initialState":"Data","input":"&GreaterFullEqual;","inputUtf16":[38,71,114,101,97,116,101,114,70,117,108,108,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_334() {
    tokenize(
        r##"{"description":"Bad named entity: GreaterGreater without a semi-colon","initialState":"Data","input":"&GreaterGreater","inputUtf16":[38,71,114,101,97,116,101,114,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&GreaterGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_335() {
    tokenize(
        r##"{"description":"Named entity: GreaterGreater; with a semi-colon","initialState":"Data","input":"&GreaterGreater;","inputUtf16":[38,71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚™¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_336() {
    tokenize(
        r##"{"description":"Bad named entity: GreaterLess without a semi-colon","initialState":"Data","input":"&GreaterLess","inputUtf16":[38,71,114,101,97,116,101,114,76,101,115,115],"output":[{"Character":{"data":"&GreaterLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_337() {
    tokenize(
        r##"{"description":"Named entity: GreaterLess; with a semi-colon","initialState":"Data","input":"&GreaterLess;","inputUtf16":[38,71,114,101,97,116,101,114,76,101,115,115,59],"output":[{"Character":{"data":"‚â∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_338() {
    tokenize(
        r##"{"description":"Bad named entity: GreaterSlantEqual without a semi-colon","initialState":"Data","input":"&GreaterSlantEqual","inputUtf16":[38,71,114,101,97,116,101,114,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&GreaterSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_339() {
    tokenize(
        r##"{"description":"Named entity: GreaterSlantEqual; with a semi-colon","initialState":"Data","input":"&GreaterSlantEqual;","inputUtf16":[38,71,114,101,97,116,101,114,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚©æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_340() {
    tokenize(
        r##"{"description":"Bad named entity: GreaterTilde without a semi-colon","initialState":"Data","input":"&GreaterTilde","inputUtf16":[38,71,114,101,97,116,101,114,84,105,108,100,101],"output":[{"Character":{"data":"&GreaterTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_341() {
    tokenize(
        r##"{"description":"Named entity: GreaterTilde; with a semi-colon","initialState":"Data","input":"&GreaterTilde;","inputUtf16":[38,71,114,101,97,116,101,114,84,105,108,100,101,59],"output":[{"Character":{"data":"‚â≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_342() {
    tokenize(
        r##"{"description":"Bad named entity: Gscr without a semi-colon","initialState":"Data","input":"&Gscr","inputUtf16":[38,71,115,99,114],"output":[{"Character":{"data":"&Gscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_343() {
    tokenize(
        r##"{"description":"Named entity: Gscr; with a semi-colon","initialState":"Data","input":"&Gscr;","inputUtf16":[38,71,115,99,114,59],"output":[{"Character":{"data":"ùí¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_344() {
    tokenize(
        r##"{"description":"Bad named entity: Gt without a semi-colon","initialState":"Data","input":"&Gt","inputUtf16":[38,71,116],"output":[{"Character":{"data":"&Gt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_345() {
    tokenize(
        r##"{"description":"Named entity: Gt; with a semi-colon","initialState":"Data","input":"&Gt;","inputUtf16":[38,71,116,59],"output":[{"Character":{"data":"‚â´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_346() {
    tokenize(
        r##"{"description":"Bad named entity: HARDcy without a semi-colon","initialState":"Data","input":"&HARDcy","inputUtf16":[38,72,65,82,68,99,121],"output":[{"Character":{"data":"&HARDcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_347() {
    tokenize(
        r##"{"description":"Named entity: HARDcy; with a semi-colon","initialState":"Data","input":"&HARDcy;","inputUtf16":[38,72,65,82,68,99,121,59],"output":[{"Character":{"data":"–™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_348() {
    tokenize(
        r##"{"description":"Bad named entity: Hacek without a semi-colon","initialState":"Data","input":"&Hacek","inputUtf16":[38,72,97,99,101,107],"output":[{"Character":{"data":"&Hacek"}}],"errors":[]}"##,
    );
}

#[test]
fn test_349() {
    tokenize(
        r##"{"description":"Named entity: Hacek; with a semi-colon","initialState":"Data","input":"&Hacek;","inputUtf16":[38,72,97,99,101,107,59],"output":[{"Character":{"data":"Àá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_350() {
    tokenize(
        r##"{"description":"Bad named entity: Hat without a semi-colon","initialState":"Data","input":"&Hat","inputUtf16":[38,72,97,116],"output":[{"Character":{"data":"&Hat"}}],"errors":[]}"##,
    );
}

#[test]
fn test_351() {
    tokenize(
        r##"{"description":"Named entity: Hat; with a semi-colon","initialState":"Data","input":"&Hat;","inputUtf16":[38,72,97,116,59],"output":[{"Character":{"data":"^"}}],"errors":[]}"##,
    );
}

#[test]
fn test_352() {
    tokenize(
        r##"{"description":"Bad named entity: Hcirc without a semi-colon","initialState":"Data","input":"&Hcirc","inputUtf16":[38,72,99,105,114,99],"output":[{"Character":{"data":"&Hcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_353() {
    tokenize(
        r##"{"description":"Named entity: Hcirc; with a semi-colon","initialState":"Data","input":"&Hcirc;","inputUtf16":[38,72,99,105,114,99,59],"output":[{"Character":{"data":"ƒ§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_354() {
    tokenize(
        r##"{"description":"Bad named entity: Hfr without a semi-colon","initialState":"Data","input":"&Hfr","inputUtf16":[38,72,102,114],"output":[{"Character":{"data":"&Hfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_355() {
    tokenize(
        r##"{"description":"Named entity: Hfr; with a semi-colon","initialState":"Data","input":"&Hfr;","inputUtf16":[38,72,102,114,59],"output":[{"Character":{"data":"‚Ñå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_356() {
    tokenize(
        r##"{"description":"Bad named entity: HilbertSpace without a semi-colon","initialState":"Data","input":"&HilbertSpace","inputUtf16":[38,72,105,108,98,101,114,116,83,112,97,99,101],"output":[{"Character":{"data":"&HilbertSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_357() {
    tokenize(
        r##"{"description":"Named entity: HilbertSpace; with a semi-colon","initialState":"Data","input":"&HilbertSpace;","inputUtf16":[38,72,105,108,98,101,114,116,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Ñã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_358() {
    tokenize(
        r##"{"description":"Bad named entity: Hopf without a semi-colon","initialState":"Data","input":"&Hopf","inputUtf16":[38,72,111,112,102],"output":[{"Character":{"data":"&Hopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_359() {
    tokenize(
        r##"{"description":"Named entity: Hopf; with a semi-colon","initialState":"Data","input":"&Hopf;","inputUtf16":[38,72,111,112,102,59],"output":[{"Character":{"data":"‚Ñç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_360() {
    tokenize(
        r##"{"description":"Bad named entity: HorizontalLine without a semi-colon","initialState":"Data","input":"&HorizontalLine","inputUtf16":[38,72,111,114,105,122,111,110,116,97,108,76,105,110,101],"output":[{"Character":{"data":"&HorizontalLine"}}],"errors":[]}"##,
    );
}

#[test]
fn test_361() {
    tokenize(
        r##"{"description":"Named entity: HorizontalLine; with a semi-colon","initialState":"Data","input":"&HorizontalLine;","inputUtf16":[38,72,111,114,105,122,111,110,116,97,108,76,105,110,101,59],"output":[{"Character":{"data":"‚îÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_362() {
    tokenize(
        r##"{"description":"Bad named entity: Hscr without a semi-colon","initialState":"Data","input":"&Hscr","inputUtf16":[38,72,115,99,114],"output":[{"Character":{"data":"&Hscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_363() {
    tokenize(
        r##"{"description":"Named entity: Hscr; with a semi-colon","initialState":"Data","input":"&Hscr;","inputUtf16":[38,72,115,99,114,59],"output":[{"Character":{"data":"‚Ñã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_364() {
    tokenize(
        r##"{"description":"Bad named entity: Hstrok without a semi-colon","initialState":"Data","input":"&Hstrok","inputUtf16":[38,72,115,116,114,111,107],"output":[{"Character":{"data":"&Hstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_365() {
    tokenize(
        r##"{"description":"Named entity: Hstrok; with a semi-colon","initialState":"Data","input":"&Hstrok;","inputUtf16":[38,72,115,116,114,111,107,59],"output":[{"Character":{"data":"ƒ¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_366() {
    tokenize(
        r##"{"description":"Bad named entity: HumpDownHump without a semi-colon","initialState":"Data","input":"&HumpDownHump","inputUtf16":[38,72,117,109,112,68,111,119,110,72,117,109,112],"output":[{"Character":{"data":"&HumpDownHump"}}],"errors":[]}"##,
    );
}

#[test]
fn test_367() {
    tokenize(
        r##"{"description":"Named entity: HumpDownHump; with a semi-colon","initialState":"Data","input":"&HumpDownHump;","inputUtf16":[38,72,117,109,112,68,111,119,110,72,117,109,112,59],"output":[{"Character":{"data":"‚âé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_368() {
    tokenize(
        r##"{"description":"Bad named entity: HumpEqual without a semi-colon","initialState":"Data","input":"&HumpEqual","inputUtf16":[38,72,117,109,112,69,113,117,97,108],"output":[{"Character":{"data":"&HumpEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_369() {
    tokenize(
        r##"{"description":"Named entity: HumpEqual; with a semi-colon","initialState":"Data","input":"&HumpEqual;","inputUtf16":[38,72,117,109,112,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_370() {
    tokenize(
        r##"{"description":"Bad named entity: IEcy without a semi-colon","initialState":"Data","input":"&IEcy","inputUtf16":[38,73,69,99,121],"output":[{"Character":{"data":"&IEcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_371() {
    tokenize(
        r##"{"description":"Named entity: IEcy; with a semi-colon","initialState":"Data","input":"&IEcy;","inputUtf16":[38,73,69,99,121,59],"output":[{"Character":{"data":"–ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_372() {
    tokenize(
        r##"{"description":"Bad named entity: IJlig without a semi-colon","initialState":"Data","input":"&IJlig","inputUtf16":[38,73,74,108,105,103],"output":[{"Character":{"data":"&IJlig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_373() {
    tokenize(
        r##"{"description":"Named entity: IJlig; with a semi-colon","initialState":"Data","input":"&IJlig;","inputUtf16":[38,73,74,108,105,103,59],"output":[{"Character":{"data":"ƒ≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_374() {
    tokenize(
        r##"{"description":"Bad named entity: IOcy without a semi-colon","initialState":"Data","input":"&IOcy","inputUtf16":[38,73,79,99,121],"output":[{"Character":{"data":"&IOcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_375() {
    tokenize(
        r##"{"description":"Named entity: IOcy; with a semi-colon","initialState":"Data","input":"&IOcy;","inputUtf16":[38,73,79,99,121,59],"output":[{"Character":{"data":"–Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_376() {
    tokenize(
        r##"{"description":"Named entity: Iacute without a semi-colon","initialState":"Data","input":"&Iacute","inputUtf16":[38,73,97,99,117,116,101],"output":[{"Character":{"data":"√ç"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_377() {
    tokenize(
        r##"{"description":"Named entity: Iacute; with a semi-colon","initialState":"Data","input":"&Iacute;","inputUtf16":[38,73,97,99,117,116,101,59],"output":[{"Character":{"data":"√ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_378() {
    tokenize(
        r##"{"description":"Named entity: Icirc without a semi-colon","initialState":"Data","input":"&Icirc","inputUtf16":[38,73,99,105,114,99],"output":[{"Character":{"data":"√é"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_379() {
    tokenize(
        r##"{"description":"Named entity: Icirc; with a semi-colon","initialState":"Data","input":"&Icirc;","inputUtf16":[38,73,99,105,114,99,59],"output":[{"Character":{"data":"√é"}}],"errors":[]}"##,
    );
}

#[test]
fn test_380() {
    tokenize(
        r##"{"description":"Bad named entity: Icy without a semi-colon","initialState":"Data","input":"&Icy","inputUtf16":[38,73,99,121],"output":[{"Character":{"data":"&Icy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_381() {
    tokenize(
        r##"{"description":"Named entity: Icy; with a semi-colon","initialState":"Data","input":"&Icy;","inputUtf16":[38,73,99,121,59],"output":[{"Character":{"data":"–ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_382() {
    tokenize(
        r##"{"description":"Bad named entity: Idot without a semi-colon","initialState":"Data","input":"&Idot","inputUtf16":[38,73,100,111,116],"output":[{"Character":{"data":"&Idot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_383() {
    tokenize(
        r##"{"description":"Named entity: Idot; with a semi-colon","initialState":"Data","input":"&Idot;","inputUtf16":[38,73,100,111,116,59],"output":[{"Character":{"data":"ƒ∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_384() {
    tokenize(
        r##"{"description":"Bad named entity: Ifr without a semi-colon","initialState":"Data","input":"&Ifr","inputUtf16":[38,73,102,114],"output":[{"Character":{"data":"&Ifr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_385() {
    tokenize(
        r##"{"description":"Named entity: Ifr; with a semi-colon","initialState":"Data","input":"&Ifr;","inputUtf16":[38,73,102,114,59],"output":[{"Character":{"data":"‚Ñë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_386() {
    tokenize(
        r##"{"description":"Named entity: Igrave without a semi-colon","initialState":"Data","input":"&Igrave","inputUtf16":[38,73,103,114,97,118,101],"output":[{"Character":{"data":"√å"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_387() {
    tokenize(
        r##"{"description":"Named entity: Igrave; with a semi-colon","initialState":"Data","input":"&Igrave;","inputUtf16":[38,73,103,114,97,118,101,59],"output":[{"Character":{"data":"√å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_388() {
    tokenize(
        r##"{"description":"Bad named entity: Im without a semi-colon","initialState":"Data","input":"&Im","inputUtf16":[38,73,109],"output":[{"Character":{"data":"&Im"}}],"errors":[]}"##,
    );
}

#[test]
fn test_389() {
    tokenize(
        r##"{"description":"Named entity: Im; with a semi-colon","initialState":"Data","input":"&Im;","inputUtf16":[38,73,109,59],"output":[{"Character":{"data":"‚Ñë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_390() {
    tokenize(
        r##"{"description":"Bad named entity: Imacr without a semi-colon","initialState":"Data","input":"&Imacr","inputUtf16":[38,73,109,97,99,114],"output":[{"Character":{"data":"&Imacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_391() {
    tokenize(
        r##"{"description":"Named entity: Imacr; with a semi-colon","initialState":"Data","input":"&Imacr;","inputUtf16":[38,73,109,97,99,114,59],"output":[{"Character":{"data":"ƒ™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_392() {
    tokenize(
        r##"{"description":"Bad named entity: ImaginaryI without a semi-colon","initialState":"Data","input":"&ImaginaryI","inputUtf16":[38,73,109,97,103,105,110,97,114,121,73],"output":[{"Character":{"data":"&ImaginaryI"}}],"errors":[]}"##,
    );
}

#[test]
fn test_393() {
    tokenize(
        r##"{"description":"Named entity: ImaginaryI; with a semi-colon","initialState":"Data","input":"&ImaginaryI;","inputUtf16":[38,73,109,97,103,105,110,97,114,121,73,59],"output":[{"Character":{"data":"‚Öà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_394() {
    tokenize(
        r##"{"description":"Bad named entity: Implies without a semi-colon","initialState":"Data","input":"&Implies","inputUtf16":[38,73,109,112,108,105,101,115],"output":[{"Character":{"data":"&Implies"}}],"errors":[]}"##,
    );
}

#[test]
fn test_395() {
    tokenize(
        r##"{"description":"Named entity: Implies; with a semi-colon","initialState":"Data","input":"&Implies;","inputUtf16":[38,73,109,112,108,105,101,115,59],"output":[{"Character":{"data":"‚áí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_396() {
    tokenize(
        r##"{"description":"Bad named entity: Int without a semi-colon","initialState":"Data","input":"&Int","inputUtf16":[38,73,110,116],"output":[{"Character":{"data":"&Int"}}],"errors":[]}"##,
    );
}

#[test]
fn test_397() {
    tokenize(
        r##"{"description":"Named entity: Int; with a semi-colon","initialState":"Data","input":"&Int;","inputUtf16":[38,73,110,116,59],"output":[{"Character":{"data":"‚à¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_398() {
    tokenize(
        r##"{"description":"Bad named entity: Integral without a semi-colon","initialState":"Data","input":"&Integral","inputUtf16":[38,73,110,116,101,103,114,97,108],"output":[{"Character":{"data":"&Integral"}}],"errors":[]}"##,
    );
}

#[test]
fn test_399() {
    tokenize(
        r##"{"description":"Named entity: Integral; with a semi-colon","initialState":"Data","input":"&Integral;","inputUtf16":[38,73,110,116,101,103,114,97,108,59],"output":[{"Character":{"data":"‚à´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_400() {
    tokenize(
        r##"{"description":"Bad named entity: Intersection without a semi-colon","initialState":"Data","input":"&Intersection","inputUtf16":[38,73,110,116,101,114,115,101,99,116,105,111,110],"output":[{"Character":{"data":"&Intersection"}}],"errors":[]}"##,
    );
}

#[test]
fn test_401() {
    tokenize(
        r##"{"description":"Named entity: Intersection; with a semi-colon","initialState":"Data","input":"&Intersection;","inputUtf16":[38,73,110,116,101,114,115,101,99,116,105,111,110,59],"output":[{"Character":{"data":"‚ãÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_402() {
    tokenize(
        r##"{"description":"Bad named entity: InvisibleComma without a semi-colon","initialState":"Data","input":"&InvisibleComma","inputUtf16":[38,73,110,118,105,115,105,98,108,101,67,111,109,109,97],"output":[{"Character":{"data":"&InvisibleComma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_403() {
    tokenize(
        r##"{"description":"Named entity: InvisibleComma; with a semi-colon","initialState":"Data","input":"&InvisibleComma;","inputUtf16":[38,73,110,118,105,115,105,98,108,101,67,111,109,109,97,59],"output":[{"Character":{"data":"‚Å£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_404() {
    tokenize(
        r##"{"description":"Bad named entity: InvisibleTimes without a semi-colon","initialState":"Data","input":"&InvisibleTimes","inputUtf16":[38,73,110,118,105,115,105,98,108,101,84,105,109,101,115],"output":[{"Character":{"data":"&InvisibleTimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_405() {
    tokenize(
        r##"{"description":"Named entity: InvisibleTimes; with a semi-colon","initialState":"Data","input":"&InvisibleTimes;","inputUtf16":[38,73,110,118,105,115,105,98,108,101,84,105,109,101,115,59],"output":[{"Character":{"data":"‚Å¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_406() {
    tokenize(
        r##"{"description":"Bad named entity: Iogon without a semi-colon","initialState":"Data","input":"&Iogon","inputUtf16":[38,73,111,103,111,110],"output":[{"Character":{"data":"&Iogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_407() {
    tokenize(
        r##"{"description":"Named entity: Iogon; with a semi-colon","initialState":"Data","input":"&Iogon;","inputUtf16":[38,73,111,103,111,110,59],"output":[{"Character":{"data":"ƒÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_408() {
    tokenize(
        r##"{"description":"Bad named entity: Iopf without a semi-colon","initialState":"Data","input":"&Iopf","inputUtf16":[38,73,111,112,102],"output":[{"Character":{"data":"&Iopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_409() {
    tokenize(
        r##"{"description":"Named entity: Iopf; with a semi-colon","initialState":"Data","input":"&Iopf;","inputUtf16":[38,73,111,112,102,59],"output":[{"Character":{"data":"ùïÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_410() {
    tokenize(
        r##"{"description":"Bad named entity: Iota without a semi-colon","initialState":"Data","input":"&Iota","inputUtf16":[38,73,111,116,97],"output":[{"Character":{"data":"&Iota"}}],"errors":[]}"##,
    );
}

#[test]
fn test_411() {
    tokenize(
        r##"{"description":"Named entity: Iota; with a semi-colon","initialState":"Data","input":"&Iota;","inputUtf16":[38,73,111,116,97,59],"output":[{"Character":{"data":"Œô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_412() {
    tokenize(
        r##"{"description":"Bad named entity: Iscr without a semi-colon","initialState":"Data","input":"&Iscr","inputUtf16":[38,73,115,99,114],"output":[{"Character":{"data":"&Iscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_413() {
    tokenize(
        r##"{"description":"Named entity: Iscr; with a semi-colon","initialState":"Data","input":"&Iscr;","inputUtf16":[38,73,115,99,114,59],"output":[{"Character":{"data":"‚Ñê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_414() {
    tokenize(
        r##"{"description":"Bad named entity: Itilde without a semi-colon","initialState":"Data","input":"&Itilde","inputUtf16":[38,73,116,105,108,100,101],"output":[{"Character":{"data":"&Itilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_415() {
    tokenize(
        r##"{"description":"Named entity: Itilde; with a semi-colon","initialState":"Data","input":"&Itilde;","inputUtf16":[38,73,116,105,108,100,101,59],"output":[{"Character":{"data":"ƒ®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_416() {
    tokenize(
        r##"{"description":"Bad named entity: Iukcy without a semi-colon","initialState":"Data","input":"&Iukcy","inputUtf16":[38,73,117,107,99,121],"output":[{"Character":{"data":"&Iukcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_417() {
    tokenize(
        r##"{"description":"Named entity: Iukcy; with a semi-colon","initialState":"Data","input":"&Iukcy;","inputUtf16":[38,73,117,107,99,121,59],"output":[{"Character":{"data":"–Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_418() {
    tokenize(
        r##"{"description":"Named entity: Iuml without a semi-colon","initialState":"Data","input":"&Iuml","inputUtf16":[38,73,117,109,108],"output":[{"Character":{"data":"√è"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_419() {
    tokenize(
        r##"{"description":"Named entity: Iuml; with a semi-colon","initialState":"Data","input":"&Iuml;","inputUtf16":[38,73,117,109,108,59],"output":[{"Character":{"data":"√è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_420() {
    tokenize(
        r##"{"description":"Bad named entity: Jcirc without a semi-colon","initialState":"Data","input":"&Jcirc","inputUtf16":[38,74,99,105,114,99],"output":[{"Character":{"data":"&Jcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_421() {
    tokenize(
        r##"{"description":"Named entity: Jcirc; with a semi-colon","initialState":"Data","input":"&Jcirc;","inputUtf16":[38,74,99,105,114,99,59],"output":[{"Character":{"data":"ƒ¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_422() {
    tokenize(
        r##"{"description":"Bad named entity: Jcy without a semi-colon","initialState":"Data","input":"&Jcy","inputUtf16":[38,74,99,121],"output":[{"Character":{"data":"&Jcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_423() {
    tokenize(
        r##"{"description":"Named entity: Jcy; with a semi-colon","initialState":"Data","input":"&Jcy;","inputUtf16":[38,74,99,121,59],"output":[{"Character":{"data":"–ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_424() {
    tokenize(
        r##"{"description":"Bad named entity: Jfr without a semi-colon","initialState":"Data","input":"&Jfr","inputUtf16":[38,74,102,114],"output":[{"Character":{"data":"&Jfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_425() {
    tokenize(
        r##"{"description":"Named entity: Jfr; with a semi-colon","initialState":"Data","input":"&Jfr;","inputUtf16":[38,74,102,114,59],"output":[{"Character":{"data":"ùîç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_426() {
    tokenize(
        r##"{"description":"Bad named entity: Jopf without a semi-colon","initialState":"Data","input":"&Jopf","inputUtf16":[38,74,111,112,102],"output":[{"Character":{"data":"&Jopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_427() {
    tokenize(
        r##"{"description":"Named entity: Jopf; with a semi-colon","initialState":"Data","input":"&Jopf;","inputUtf16":[38,74,111,112,102,59],"output":[{"Character":{"data":"ùïÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_428() {
    tokenize(
        r##"{"description":"Bad named entity: Jscr without a semi-colon","initialState":"Data","input":"&Jscr","inputUtf16":[38,74,115,99,114],"output":[{"Character":{"data":"&Jscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_429() {
    tokenize(
        r##"{"description":"Named entity: Jscr; with a semi-colon","initialState":"Data","input":"&Jscr;","inputUtf16":[38,74,115,99,114,59],"output":[{"Character":{"data":"ùí•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_430() {
    tokenize(
        r##"{"description":"Bad named entity: Jsercy without a semi-colon","initialState":"Data","input":"&Jsercy","inputUtf16":[38,74,115,101,114,99,121],"output":[{"Character":{"data":"&Jsercy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_431() {
    tokenize(
        r##"{"description":"Named entity: Jsercy; with a semi-colon","initialState":"Data","input":"&Jsercy;","inputUtf16":[38,74,115,101,114,99,121,59],"output":[{"Character":{"data":"–à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_432() {
    tokenize(
        r##"{"description":"Bad named entity: Jukcy without a semi-colon","initialState":"Data","input":"&Jukcy","inputUtf16":[38,74,117,107,99,121],"output":[{"Character":{"data":"&Jukcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_433() {
    tokenize(
        r##"{"description":"Named entity: Jukcy; with a semi-colon","initialState":"Data","input":"&Jukcy;","inputUtf16":[38,74,117,107,99,121,59],"output":[{"Character":{"data":"–Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_434() {
    tokenize(
        r##"{"description":"Bad named entity: KHcy without a semi-colon","initialState":"Data","input":"&KHcy","inputUtf16":[38,75,72,99,121],"output":[{"Character":{"data":"&KHcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_435() {
    tokenize(
        r##"{"description":"Named entity: KHcy; with a semi-colon","initialState":"Data","input":"&KHcy;","inputUtf16":[38,75,72,99,121,59],"output":[{"Character":{"data":"–•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_436() {
    tokenize(
        r##"{"description":"Bad named entity: KJcy without a semi-colon","initialState":"Data","input":"&KJcy","inputUtf16":[38,75,74,99,121],"output":[{"Character":{"data":"&KJcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_437() {
    tokenize(
        r##"{"description":"Named entity: KJcy; with a semi-colon","initialState":"Data","input":"&KJcy;","inputUtf16":[38,75,74,99,121,59],"output":[{"Character":{"data":"–å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_438() {
    tokenize(
        r##"{"description":"Bad named entity: Kappa without a semi-colon","initialState":"Data","input":"&Kappa","inputUtf16":[38,75,97,112,112,97],"output":[{"Character":{"data":"&Kappa"}}],"errors":[]}"##,
    );
}

#[test]
fn test_439() {
    tokenize(
        r##"{"description":"Named entity: Kappa; with a semi-colon","initialState":"Data","input":"&Kappa;","inputUtf16":[38,75,97,112,112,97,59],"output":[{"Character":{"data":"Œö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_440() {
    tokenize(
        r##"{"description":"Bad named entity: Kcedil without a semi-colon","initialState":"Data","input":"&Kcedil","inputUtf16":[38,75,99,101,100,105,108],"output":[{"Character":{"data":"&Kcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_441() {
    tokenize(
        r##"{"description":"Named entity: Kcedil; with a semi-colon","initialState":"Data","input":"&Kcedil;","inputUtf16":[38,75,99,101,100,105,108,59],"output":[{"Character":{"data":"ƒ∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_442() {
    tokenize(
        r##"{"description":"Bad named entity: Kcy without a semi-colon","initialState":"Data","input":"&Kcy","inputUtf16":[38,75,99,121],"output":[{"Character":{"data":"&Kcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_443() {
    tokenize(
        r##"{"description":"Named entity: Kcy; with a semi-colon","initialState":"Data","input":"&Kcy;","inputUtf16":[38,75,99,121,59],"output":[{"Character":{"data":"–ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_444() {
    tokenize(
        r##"{"description":"Bad named entity: Kfr without a semi-colon","initialState":"Data","input":"&Kfr","inputUtf16":[38,75,102,114],"output":[{"Character":{"data":"&Kfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_445() {
    tokenize(
        r##"{"description":"Named entity: Kfr; with a semi-colon","initialState":"Data","input":"&Kfr;","inputUtf16":[38,75,102,114,59],"output":[{"Character":{"data":"ùîé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_446() {
    tokenize(
        r##"{"description":"Bad named entity: Kopf without a semi-colon","initialState":"Data","input":"&Kopf","inputUtf16":[38,75,111,112,102],"output":[{"Character":{"data":"&Kopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_447() {
    tokenize(
        r##"{"description":"Named entity: Kopf; with a semi-colon","initialState":"Data","input":"&Kopf;","inputUtf16":[38,75,111,112,102,59],"output":[{"Character":{"data":"ùïÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_448() {
    tokenize(
        r##"{"description":"Bad named entity: Kscr without a semi-colon","initialState":"Data","input":"&Kscr","inputUtf16":[38,75,115,99,114],"output":[{"Character":{"data":"&Kscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_449() {
    tokenize(
        r##"{"description":"Named entity: Kscr; with a semi-colon","initialState":"Data","input":"&Kscr;","inputUtf16":[38,75,115,99,114,59],"output":[{"Character":{"data":"ùí¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_450() {
    tokenize(
        r##"{"description":"Bad named entity: LJcy without a semi-colon","initialState":"Data","input":"&LJcy","inputUtf16":[38,76,74,99,121],"output":[{"Character":{"data":"&LJcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_451() {
    tokenize(
        r##"{"description":"Named entity: LJcy; with a semi-colon","initialState":"Data","input":"&LJcy;","inputUtf16":[38,76,74,99,121,59],"output":[{"Character":{"data":"–â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_452() {
    tokenize(
        r##"{"description":"Named entity: LT without a semi-colon","initialState":"Data","input":"&LT","inputUtf16":[38,76,84],"output":[{"Character":{"data":"<"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":4}}]}"##,
    );
}

#[test]
fn test_453() {
    tokenize(
        r##"{"description":"Named entity: LT; with a semi-colon","initialState":"Data","input":"&LT;","inputUtf16":[38,76,84,59],"output":[{"Character":{"data":"<"}}],"errors":[]}"##,
    );
}

#[test]
fn test_454() {
    tokenize(
        r##"{"description":"Bad named entity: Lacute without a semi-colon","initialState":"Data","input":"&Lacute","inputUtf16":[38,76,97,99,117,116,101],"output":[{"Character":{"data":"&Lacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_455() {
    tokenize(
        r##"{"description":"Named entity: Lacute; with a semi-colon","initialState":"Data","input":"&Lacute;","inputUtf16":[38,76,97,99,117,116,101,59],"output":[{"Character":{"data":"ƒπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_456() {
    tokenize(
        r##"{"description":"Bad named entity: Lambda without a semi-colon","initialState":"Data","input":"&Lambda","inputUtf16":[38,76,97,109,98,100,97],"output":[{"Character":{"data":"&Lambda"}}],"errors":[]}"##,
    );
}

#[test]
fn test_457() {
    tokenize(
        r##"{"description":"Named entity: Lambda; with a semi-colon","initialState":"Data","input":"&Lambda;","inputUtf16":[38,76,97,109,98,100,97,59],"output":[{"Character":{"data":"Œõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_458() {
    tokenize(
        r##"{"description":"Bad named entity: Lang without a semi-colon","initialState":"Data","input":"&Lang","inputUtf16":[38,76,97,110,103],"output":[{"Character":{"data":"&Lang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_459() {
    tokenize(
        r##"{"description":"Named entity: Lang; with a semi-colon","initialState":"Data","input":"&Lang;","inputUtf16":[38,76,97,110,103,59],"output":[{"Character":{"data":"‚ü™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_460() {
    tokenize(
        r##"{"description":"Bad named entity: Laplacetrf without a semi-colon","initialState":"Data","input":"&Laplacetrf","inputUtf16":[38,76,97,112,108,97,99,101,116,114,102],"output":[{"Character":{"data":"&Laplacetrf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_461() {
    tokenize(
        r##"{"description":"Named entity: Laplacetrf; with a semi-colon","initialState":"Data","input":"&Laplacetrf;","inputUtf16":[38,76,97,112,108,97,99,101,116,114,102,59],"output":[{"Character":{"data":"‚Ñí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_462() {
    tokenize(
        r##"{"description":"Bad named entity: Larr without a semi-colon","initialState":"Data","input":"&Larr","inputUtf16":[38,76,97,114,114],"output":[{"Character":{"data":"&Larr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_463() {
    tokenize(
        r##"{"description":"Named entity: Larr; with a semi-colon","initialState":"Data","input":"&Larr;","inputUtf16":[38,76,97,114,114,59],"output":[{"Character":{"data":"‚Üû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_464() {
    tokenize(
        r##"{"description":"Bad named entity: Lcaron without a semi-colon","initialState":"Data","input":"&Lcaron","inputUtf16":[38,76,99,97,114,111,110],"output":[{"Character":{"data":"&Lcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_465() {
    tokenize(
        r##"{"description":"Named entity: Lcaron; with a semi-colon","initialState":"Data","input":"&Lcaron;","inputUtf16":[38,76,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_466() {
    tokenize(
        r##"{"description":"Bad named entity: Lcedil without a semi-colon","initialState":"Data","input":"&Lcedil","inputUtf16":[38,76,99,101,100,105,108],"output":[{"Character":{"data":"&Lcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_467() {
    tokenize(
        r##"{"description":"Named entity: Lcedil; with a semi-colon","initialState":"Data","input":"&Lcedil;","inputUtf16":[38,76,99,101,100,105,108,59],"output":[{"Character":{"data":"ƒª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_468() {
    tokenize(
        r##"{"description":"Bad named entity: Lcy without a semi-colon","initialState":"Data","input":"&Lcy","inputUtf16":[38,76,99,121],"output":[{"Character":{"data":"&Lcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_469() {
    tokenize(
        r##"{"description":"Named entity: Lcy; with a semi-colon","initialState":"Data","input":"&Lcy;","inputUtf16":[38,76,99,121,59],"output":[{"Character":{"data":"–õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_470() {
    tokenize(
        r##"{"description":"Bad named entity: LeftAngleBracket without a semi-colon","initialState":"Data","input":"&LeftAngleBracket","inputUtf16":[38,76,101,102,116,65,110,103,108,101,66,114,97,99,107,101,116],"output":[{"Character":{"data":"&LeftAngleBracket"}}],"errors":[]}"##,
    );
}

#[test]
fn test_471() {
    tokenize(
        r##"{"description":"Named entity: LeftAngleBracket; with a semi-colon","initialState":"Data","input":"&LeftAngleBracket;","inputUtf16":[38,76,101,102,116,65,110,103,108,101,66,114,97,99,107,101,116,59],"output":[{"Character":{"data":"‚ü®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_472() {
    tokenize(
        r##"{"description":"Bad named entity: LeftArrow without a semi-colon","initialState":"Data","input":"&LeftArrow","inputUtf16":[38,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&LeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_473() {
    tokenize(
        r##"{"description":"Named entity: LeftArrow; with a semi-colon","initialState":"Data","input":"&LeftArrow;","inputUtf16":[38,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_474() {
    tokenize(
        r##"{"description":"Bad named entity: LeftArrowBar without a semi-colon","initialState":"Data","input":"&LeftArrowBar","inputUtf16":[38,76,101,102,116,65,114,114,111,119,66,97,114],"output":[{"Character":{"data":"&LeftArrowBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_475() {
    tokenize(
        r##"{"description":"Named entity: LeftArrowBar; with a semi-colon","initialState":"Data","input":"&LeftArrowBar;","inputUtf16":[38,76,101,102,116,65,114,114,111,119,66,97,114,59],"output":[{"Character":{"data":"‚á§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_476() {
    tokenize(
        r##"{"description":"Bad named entity: LeftArrowRightArrow without a semi-colon","initialState":"Data","input":"&LeftArrowRightArrow","inputUtf16":[38,76,101,102,116,65,114,114,111,119,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&LeftArrowRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_477() {
    tokenize(
        r##"{"description":"Named entity: LeftArrowRightArrow; with a semi-colon","initialState":"Data","input":"&LeftArrowRightArrow;","inputUtf16":[38,76,101,102,116,65,114,114,111,119,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_478() {
    tokenize(
        r##"{"description":"Bad named entity: LeftCeiling without a semi-colon","initialState":"Data","input":"&LeftCeiling","inputUtf16":[38,76,101,102,116,67,101,105,108,105,110,103],"output":[{"Character":{"data":"&LeftCeiling"}}],"errors":[]}"##,
    );
}

#[test]
fn test_479() {
    tokenize(
        r##"{"description":"Named entity: LeftCeiling; with a semi-colon","initialState":"Data","input":"&LeftCeiling;","inputUtf16":[38,76,101,102,116,67,101,105,108,105,110,103,59],"output":[{"Character":{"data":"‚åà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_480() {
    tokenize(
        r##"{"description":"Bad named entity: LeftDoubleBracket without a semi-colon","initialState":"Data","input":"&LeftDoubleBracket","inputUtf16":[38,76,101,102,116,68,111,117,98,108,101,66,114,97,99,107,101,116],"output":[{"Character":{"data":"&LeftDoubleBracket"}}],"errors":[]}"##,
    );
}

#[test]
fn test_481() {
    tokenize(
        r##"{"description":"Named entity: LeftDoubleBracket; with a semi-colon","initialState":"Data","input":"&LeftDoubleBracket;","inputUtf16":[38,76,101,102,116,68,111,117,98,108,101,66,114,97,99,107,101,116,59],"output":[{"Character":{"data":"‚ü¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_482() {
    tokenize(
        r##"{"description":"Bad named entity: LeftDownTeeVector without a semi-colon","initialState":"Data","input":"&LeftDownTeeVector","inputUtf16":[38,76,101,102,116,68,111,119,110,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftDownTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_483() {
    tokenize(
        r##"{"description":"Named entity: LeftDownTeeVector; with a semi-colon","initialState":"Data","input":"&LeftDownTeeVector;","inputUtf16":[38,76,101,102,116,68,111,119,110,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_484() {
    tokenize(
        r##"{"description":"Bad named entity: LeftDownVector without a semi-colon","initialState":"Data","input":"&LeftDownVector","inputUtf16":[38,76,101,102,116,68,111,119,110,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftDownVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_485() {
    tokenize(
        r##"{"description":"Named entity: LeftDownVector; with a semi-colon","initialState":"Data","input":"&LeftDownVector;","inputUtf16":[38,76,101,102,116,68,111,119,110,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚áÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_486() {
    tokenize(
        r##"{"description":"Bad named entity: LeftDownVectorBar without a semi-colon","initialState":"Data","input":"&LeftDownVectorBar","inputUtf16":[38,76,101,102,116,68,111,119,110,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&LeftDownVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_487() {
    tokenize(
        r##"{"description":"Named entity: LeftDownVectorBar; with a semi-colon","initialState":"Data","input":"&LeftDownVectorBar;","inputUtf16":[38,76,101,102,116,68,111,119,110,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_488() {
    tokenize(
        r##"{"description":"Bad named entity: LeftFloor without a semi-colon","initialState":"Data","input":"&LeftFloor","inputUtf16":[38,76,101,102,116,70,108,111,111,114],"output":[{"Character":{"data":"&LeftFloor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_489() {
    tokenize(
        r##"{"description":"Named entity: LeftFloor; with a semi-colon","initialState":"Data","input":"&LeftFloor;","inputUtf16":[38,76,101,102,116,70,108,111,111,114,59],"output":[{"Character":{"data":"‚åä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_490() {
    tokenize(
        r##"{"description":"Bad named entity: LeftRightArrow without a semi-colon","initialState":"Data","input":"&LeftRightArrow","inputUtf16":[38,76,101,102,116,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&LeftRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_491() {
    tokenize(
        r##"{"description":"Named entity: LeftRightArrow; with a semi-colon","initialState":"Data","input":"&LeftRightArrow;","inputUtf16":[38,76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_492() {
    tokenize(
        r##"{"description":"Bad named entity: LeftRightVector without a semi-colon","initialState":"Data","input":"&LeftRightVector","inputUtf16":[38,76,101,102,116,82,105,103,104,116,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftRightVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_493() {
    tokenize(
        r##"{"description":"Named entity: LeftRightVector; with a semi-colon","initialState":"Data","input":"&LeftRightVector;","inputUtf16":[38,76,101,102,116,82,105,103,104,116,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•é"}}],"errors":[]}"##,
    );
}

#[test]
fn test_494() {
    tokenize(
        r##"{"description":"Bad named entity: LeftTee without a semi-colon","initialState":"Data","input":"&LeftTee","inputUtf16":[38,76,101,102,116,84,101,101],"output":[{"Character":{"data":"&LeftTee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_495() {
    tokenize(
        r##"{"description":"Named entity: LeftTee; with a semi-colon","initialState":"Data","input":"&LeftTee;","inputUtf16":[38,76,101,102,116,84,101,101,59],"output":[{"Character":{"data":"‚ä£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_496() {
    tokenize(
        r##"{"description":"Bad named entity: LeftTeeArrow without a semi-colon","initialState":"Data","input":"&LeftTeeArrow","inputUtf16":[38,76,101,102,116,84,101,101,65,114,114,111,119],"output":[{"Character":{"data":"&LeftTeeArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_497() {
    tokenize(
        r##"{"description":"Named entity: LeftTeeArrow; with a semi-colon","initialState":"Data","input":"&LeftTeeArrow;","inputUtf16":[38,76,101,102,116,84,101,101,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Ü§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_498() {
    tokenize(
        r##"{"description":"Bad named entity: LeftTeeVector without a semi-colon","initialState":"Data","input":"&LeftTeeVector","inputUtf16":[38,76,101,102,116,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_499() {
    tokenize(
        r##"{"description":"Named entity: LeftTeeVector; with a semi-colon","initialState":"Data","input":"&LeftTeeVector;","inputUtf16":[38,76,101,102,116,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_500() {
    tokenize(
        r##"{"description":"Bad named entity: LeftTriangle without a semi-colon","initialState":"Data","input":"&LeftTriangle","inputUtf16":[38,76,101,102,116,84,114,105,97,110,103,108,101],"output":[{"Character":{"data":"&LeftTriangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_501() {
    tokenize(
        r##"{"description":"Named entity: LeftTriangle; with a semi-colon","initialState":"Data","input":"&LeftTriangle;","inputUtf16":[38,76,101,102,116,84,114,105,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ä≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_502() {
    tokenize(
        r##"{"description":"Bad named entity: LeftTriangleBar without a semi-colon","initialState":"Data","input":"&LeftTriangleBar","inputUtf16":[38,76,101,102,116,84,114,105,97,110,103,108,101,66,97,114],"output":[{"Character":{"data":"&LeftTriangleBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_503() {
    tokenize(
        r##"{"description":"Named entity: LeftTriangleBar; with a semi-colon","initialState":"Data","input":"&LeftTriangleBar;","inputUtf16":[38,76,101,102,116,84,114,105,97,110,103,108,101,66,97,114,59],"output":[{"Character":{"data":"‚ßè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_504() {
    tokenize(
        r##"{"description":"Bad named entity: LeftTriangleEqual without a semi-colon","initialState":"Data","input":"&LeftTriangleEqual","inputUtf16":[38,76,101,102,116,84,114,105,97,110,103,108,101,69,113,117,97,108],"output":[{"Character":{"data":"&LeftTriangleEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_505() {
    tokenize(
        r##"{"description":"Named entity: LeftTriangleEqual; with a semi-colon","initialState":"Data","input":"&LeftTriangleEqual;","inputUtf16":[38,76,101,102,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],"output":[{"Character":{"data":"‚ä¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_506() {
    tokenize(
        r##"{"description":"Bad named entity: LeftUpDownVector without a semi-colon","initialState":"Data","input":"&LeftUpDownVector","inputUtf16":[38,76,101,102,116,85,112,68,111,119,110,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftUpDownVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_507() {
    tokenize(
        r##"{"description":"Named entity: LeftUpDownVector; with a semi-colon","initialState":"Data","input":"&LeftUpDownVector;","inputUtf16":[38,76,101,102,116,85,112,68,111,119,110,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_508() {
    tokenize(
        r##"{"description":"Bad named entity: LeftUpTeeVector without a semi-colon","initialState":"Data","input":"&LeftUpTeeVector","inputUtf16":[38,76,101,102,116,85,112,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftUpTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_509() {
    tokenize(
        r##"{"description":"Named entity: LeftUpTeeVector; with a semi-colon","initialState":"Data","input":"&LeftUpTeeVector;","inputUtf16":[38,76,101,102,116,85,112,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_510() {
    tokenize(
        r##"{"description":"Bad named entity: LeftUpVector without a semi-colon","initialState":"Data","input":"&LeftUpVector","inputUtf16":[38,76,101,102,116,85,112,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftUpVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_511() {
    tokenize(
        r##"{"description":"Named entity: LeftUpVector; with a semi-colon","initialState":"Data","input":"&LeftUpVector;","inputUtf16":[38,76,101,102,116,85,112,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚Üø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_512() {
    tokenize(
        r##"{"description":"Bad named entity: LeftUpVectorBar without a semi-colon","initialState":"Data","input":"&LeftUpVectorBar","inputUtf16":[38,76,101,102,116,85,112,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&LeftUpVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_513() {
    tokenize(
        r##"{"description":"Named entity: LeftUpVectorBar; with a semi-colon","initialState":"Data","input":"&LeftUpVectorBar;","inputUtf16":[38,76,101,102,116,85,112,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_514() {
    tokenize(
        r##"{"description":"Bad named entity: LeftVector without a semi-colon","initialState":"Data","input":"&LeftVector","inputUtf16":[38,76,101,102,116,86,101,99,116,111,114],"output":[{"Character":{"data":"&LeftVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_515() {
    tokenize(
        r##"{"description":"Named entity: LeftVector; with a semi-colon","initialState":"Data","input":"&LeftVector;","inputUtf16":[38,76,101,102,116,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚Üº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_516() {
    tokenize(
        r##"{"description":"Bad named entity: LeftVectorBar without a semi-colon","initialState":"Data","input":"&LeftVectorBar","inputUtf16":[38,76,101,102,116,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&LeftVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_517() {
    tokenize(
        r##"{"description":"Named entity: LeftVectorBar; with a semi-colon","initialState":"Data","input":"&LeftVectorBar;","inputUtf16":[38,76,101,102,116,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_518() {
    tokenize(
        r##"{"description":"Bad named entity: Leftarrow without a semi-colon","initialState":"Data","input":"&Leftarrow","inputUtf16":[38,76,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&Leftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_519() {
    tokenize(
        r##"{"description":"Named entity: Leftarrow; with a semi-colon","initialState":"Data","input":"&Leftarrow;","inputUtf16":[38,76,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_520() {
    tokenize(
        r##"{"description":"Bad named entity: Leftrightarrow without a semi-colon","initialState":"Data","input":"&Leftrightarrow","inputUtf16":[38,76,101,102,116,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&Leftrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_521() {
    tokenize(
        r##"{"description":"Named entity: Leftrightarrow; with a semi-colon","initialState":"Data","input":"&Leftrightarrow;","inputUtf16":[38,76,101,102,116,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_522() {
    tokenize(
        r##"{"description":"Bad named entity: LessEqualGreater without a semi-colon","initialState":"Data","input":"&LessEqualGreater","inputUtf16":[38,76,101,115,115,69,113,117,97,108,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&LessEqualGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_523() {
    tokenize(
        r##"{"description":"Named entity: LessEqualGreater; with a semi-colon","initialState":"Data","input":"&LessEqualGreater;","inputUtf16":[38,76,101,115,115,69,113,117,97,108,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚ãö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_524() {
    tokenize(
        r##"{"description":"Bad named entity: LessFullEqual without a semi-colon","initialState":"Data","input":"&LessFullEqual","inputUtf16":[38,76,101,115,115,70,117,108,108,69,113,117,97,108],"output":[{"Character":{"data":"&LessFullEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_525() {
    tokenize(
        r##"{"description":"Named entity: LessFullEqual; with a semi-colon","initialState":"Data","input":"&LessFullEqual;","inputUtf16":[38,76,101,115,115,70,117,108,108,69,113,117,97,108,59],"output":[{"Character":{"data":"‚â¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_526() {
    tokenize(
        r##"{"description":"Bad named entity: LessGreater without a semi-colon","initialState":"Data","input":"&LessGreater","inputUtf16":[38,76,101,115,115,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&LessGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_527() {
    tokenize(
        r##"{"description":"Named entity: LessGreater; with a semi-colon","initialState":"Data","input":"&LessGreater;","inputUtf16":[38,76,101,115,115,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚â∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_528() {
    tokenize(
        r##"{"description":"Bad named entity: LessLess without a semi-colon","initialState":"Data","input":"&LessLess","inputUtf16":[38,76,101,115,115,76,101,115,115],"output":[{"Character":{"data":"&LessLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_529() {
    tokenize(
        r##"{"description":"Named entity: LessLess; with a semi-colon","initialState":"Data","input":"&LessLess;","inputUtf16":[38,76,101,115,115,76,101,115,115,59],"output":[{"Character":{"data":"‚™°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_530() {
    tokenize(
        r##"{"description":"Bad named entity: LessSlantEqual without a semi-colon","initialState":"Data","input":"&LessSlantEqual","inputUtf16":[38,76,101,115,115,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&LessSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_531() {
    tokenize(
        r##"{"description":"Named entity: LessSlantEqual; with a semi-colon","initialState":"Data","input":"&LessSlantEqual;","inputUtf16":[38,76,101,115,115,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚©Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_532() {
    tokenize(
        r##"{"description":"Bad named entity: LessTilde without a semi-colon","initialState":"Data","input":"&LessTilde","inputUtf16":[38,76,101,115,115,84,105,108,100,101],"output":[{"Character":{"data":"&LessTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_533() {
    tokenize(
        r##"{"description":"Named entity: LessTilde; with a semi-colon","initialState":"Data","input":"&LessTilde;","inputUtf16":[38,76,101,115,115,84,105,108,100,101,59],"output":[{"Character":{"data":"‚â≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_534() {
    tokenize(
        r##"{"description":"Bad named entity: Lfr without a semi-colon","initialState":"Data","input":"&Lfr","inputUtf16":[38,76,102,114],"output":[{"Character":{"data":"&Lfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_535() {
    tokenize(
        r##"{"description":"Named entity: Lfr; with a semi-colon","initialState":"Data","input":"&Lfr;","inputUtf16":[38,76,102,114,59],"output":[{"Character":{"data":"ùîè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_536() {
    tokenize(
        r##"{"description":"Bad named entity: Ll without a semi-colon","initialState":"Data","input":"&Ll","inputUtf16":[38,76,108],"output":[{"Character":{"data":"&Ll"}}],"errors":[]}"##,
    );
}

#[test]
fn test_537() {
    tokenize(
        r##"{"description":"Named entity: Ll; with a semi-colon","initialState":"Data","input":"&Ll;","inputUtf16":[38,76,108,59],"output":[{"Character":{"data":"‚ãò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_538() {
    tokenize(
        r##"{"description":"Bad named entity: Lleftarrow without a semi-colon","initialState":"Data","input":"&Lleftarrow","inputUtf16":[38,76,108,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&Lleftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_539() {
    tokenize(
        r##"{"description":"Named entity: Lleftarrow; with a semi-colon","initialState":"Data","input":"&Lleftarrow;","inputUtf16":[38,76,108,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_540() {
    tokenize(
        r##"{"description":"Bad named entity: Lmidot without a semi-colon","initialState":"Data","input":"&Lmidot","inputUtf16":[38,76,109,105,100,111,116],"output":[{"Character":{"data":"&Lmidot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_541() {
    tokenize(
        r##"{"description":"Named entity: Lmidot; with a semi-colon","initialState":"Data","input":"&Lmidot;","inputUtf16":[38,76,109,105,100,111,116,59],"output":[{"Character":{"data":"ƒø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_542() {
    tokenize(
        r##"{"description":"Bad named entity: LongLeftArrow without a semi-colon","initialState":"Data","input":"&LongLeftArrow","inputUtf16":[38,76,111,110,103,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&LongLeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_543() {
    tokenize(
        r##"{"description":"Named entity: LongLeftArrow; with a semi-colon","initialState":"Data","input":"&LongLeftArrow;","inputUtf16":[38,76,111,110,103,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚üµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_544() {
    tokenize(
        r##"{"description":"Bad named entity: LongLeftRightArrow without a semi-colon","initialState":"Data","input":"&LongLeftRightArrow","inputUtf16":[38,76,111,110,103,76,101,102,116,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&LongLeftRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_545() {
    tokenize(
        r##"{"description":"Named entity: LongLeftRightArrow; with a semi-colon","initialState":"Data","input":"&LongLeftRightArrow;","inputUtf16":[38,76,111,110,103,76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_546() {
    tokenize(
        r##"{"description":"Bad named entity: LongRightArrow without a semi-colon","initialState":"Data","input":"&LongRightArrow","inputUtf16":[38,76,111,110,103,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&LongRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_547() {
    tokenize(
        r##"{"description":"Named entity: LongRightArrow; with a semi-colon","initialState":"Data","input":"&LongRightArrow;","inputUtf16":[38,76,111,110,103,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_548() {
    tokenize(
        r##"{"description":"Bad named entity: Longleftarrow without a semi-colon","initialState":"Data","input":"&Longleftarrow","inputUtf16":[38,76,111,110,103,108,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&Longleftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_549() {
    tokenize(
        r##"{"description":"Named entity: Longleftarrow; with a semi-colon","initialState":"Data","input":"&Longleftarrow;","inputUtf16":[38,76,111,110,103,108,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_550() {
    tokenize(
        r##"{"description":"Bad named entity: Longleftrightarrow without a semi-colon","initialState":"Data","input":"&Longleftrightarrow","inputUtf16":[38,76,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&Longleftrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_551() {
    tokenize(
        r##"{"description":"Named entity: Longleftrightarrow; with a semi-colon","initialState":"Data","input":"&Longleftrightarrow;","inputUtf16":[38,76,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_552() {
    tokenize(
        r##"{"description":"Bad named entity: Longrightarrow without a semi-colon","initialState":"Data","input":"&Longrightarrow","inputUtf16":[38,76,111,110,103,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&Longrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_553() {
    tokenize(
        r##"{"description":"Named entity: Longrightarrow; with a semi-colon","initialState":"Data","input":"&Longrightarrow;","inputUtf16":[38,76,111,110,103,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚üπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_554() {
    tokenize(
        r##"{"description":"Bad named entity: Lopf without a semi-colon","initialState":"Data","input":"&Lopf","inputUtf16":[38,76,111,112,102],"output":[{"Character":{"data":"&Lopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_555() {
    tokenize(
        r##"{"description":"Named entity: Lopf; with a semi-colon","initialState":"Data","input":"&Lopf;","inputUtf16":[38,76,111,112,102,59],"output":[{"Character":{"data":"ùïÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_556() {
    tokenize(
        r##"{"description":"Bad named entity: LowerLeftArrow without a semi-colon","initialState":"Data","input":"&LowerLeftArrow","inputUtf16":[38,76,111,119,101,114,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&LowerLeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_557() {
    tokenize(
        r##"{"description":"Named entity: LowerLeftArrow; with a semi-colon","initialState":"Data","input":"&LowerLeftArrow;","inputUtf16":[38,76,111,119,101,114,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_558() {
    tokenize(
        r##"{"description":"Bad named entity: LowerRightArrow without a semi-colon","initialState":"Data","input":"&LowerRightArrow","inputUtf16":[38,76,111,119,101,114,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&LowerRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_559() {
    tokenize(
        r##"{"description":"Named entity: LowerRightArrow; with a semi-colon","initialState":"Data","input":"&LowerRightArrow;","inputUtf16":[38,76,111,119,101,114,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_560() {
    tokenize(
        r##"{"description":"Bad named entity: Lscr without a semi-colon","initialState":"Data","input":"&Lscr","inputUtf16":[38,76,115,99,114],"output":[{"Character":{"data":"&Lscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_561() {
    tokenize(
        r##"{"description":"Named entity: Lscr; with a semi-colon","initialState":"Data","input":"&Lscr;","inputUtf16":[38,76,115,99,114,59],"output":[{"Character":{"data":"‚Ñí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_562() {
    tokenize(
        r##"{"description":"Bad named entity: Lsh without a semi-colon","initialState":"Data","input":"&Lsh","inputUtf16":[38,76,115,104],"output":[{"Character":{"data":"&Lsh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_563() {
    tokenize(
        r##"{"description":"Named entity: Lsh; with a semi-colon","initialState":"Data","input":"&Lsh;","inputUtf16":[38,76,115,104,59],"output":[{"Character":{"data":"‚Ü∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_564() {
    tokenize(
        r##"{"description":"Bad named entity: Lstrok without a semi-colon","initialState":"Data","input":"&Lstrok","inputUtf16":[38,76,115,116,114,111,107],"output":[{"Character":{"data":"&Lstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_565() {
    tokenize(
        r##"{"description":"Named entity: Lstrok; with a semi-colon","initialState":"Data","input":"&Lstrok;","inputUtf16":[38,76,115,116,114,111,107,59],"output":[{"Character":{"data":"≈Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_566() {
    tokenize(
        r##"{"description":"Bad named entity: Lt without a semi-colon","initialState":"Data","input":"&Lt","inputUtf16":[38,76,116],"output":[{"Character":{"data":"&Lt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_567() {
    tokenize(
        r##"{"description":"Named entity: Lt; with a semi-colon","initialState":"Data","input":"&Lt;","inputUtf16":[38,76,116,59],"output":[{"Character":{"data":"‚â™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_568() {
    tokenize(
        r##"{"description":"Bad named entity: Map without a semi-colon","initialState":"Data","input":"&Map","inputUtf16":[38,77,97,112],"output":[{"Character":{"data":"&Map"}}],"errors":[]}"##,
    );
}

#[test]
fn test_569() {
    tokenize(
        r##"{"description":"Named entity: Map; with a semi-colon","initialState":"Data","input":"&Map;","inputUtf16":[38,77,97,112,59],"output":[{"Character":{"data":"‚§Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_570() {
    tokenize(
        r##"{"description":"Bad named entity: Mcy without a semi-colon","initialState":"Data","input":"&Mcy","inputUtf16":[38,77,99,121],"output":[{"Character":{"data":"&Mcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_571() {
    tokenize(
        r##"{"description":"Named entity: Mcy; with a semi-colon","initialState":"Data","input":"&Mcy;","inputUtf16":[38,77,99,121,59],"output":[{"Character":{"data":"–ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_572() {
    tokenize(
        r##"{"description":"Bad named entity: MediumSpace without a semi-colon","initialState":"Data","input":"&MediumSpace","inputUtf16":[38,77,101,100,105,117,109,83,112,97,99,101],"output":[{"Character":{"data":"&MediumSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_573() {
    tokenize(
        r##"{"description":"Named entity: MediumSpace; with a semi-colon","initialState":"Data","input":"&MediumSpace;","inputUtf16":[38,77,101,100,105,117,109,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Åü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_574() {
    tokenize(
        r##"{"description":"Bad named entity: Mellintrf without a semi-colon","initialState":"Data","input":"&Mellintrf","inputUtf16":[38,77,101,108,108,105,110,116,114,102],"output":[{"Character":{"data":"&Mellintrf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_575() {
    tokenize(
        r##"{"description":"Named entity: Mellintrf; with a semi-colon","initialState":"Data","input":"&Mellintrf;","inputUtf16":[38,77,101,108,108,105,110,116,114,102,59],"output":[{"Character":{"data":"‚Ñ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_576() {
    tokenize(
        r##"{"description":"Bad named entity: Mfr without a semi-colon","initialState":"Data","input":"&Mfr","inputUtf16":[38,77,102,114],"output":[{"Character":{"data":"&Mfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_577() {
    tokenize(
        r##"{"description":"Named entity: Mfr; with a semi-colon","initialState":"Data","input":"&Mfr;","inputUtf16":[38,77,102,114,59],"output":[{"Character":{"data":"ùîê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_578() {
    tokenize(
        r##"{"description":"Bad named entity: MinusPlus without a semi-colon","initialState":"Data","input":"&MinusPlus","inputUtf16":[38,77,105,110,117,115,80,108,117,115],"output":[{"Character":{"data":"&MinusPlus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_579() {
    tokenize(
        r##"{"description":"Named entity: MinusPlus; with a semi-colon","initialState":"Data","input":"&MinusPlus;","inputUtf16":[38,77,105,110,117,115,80,108,117,115,59],"output":[{"Character":{"data":"‚àì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_580() {
    tokenize(
        r##"{"description":"Bad named entity: Mopf without a semi-colon","initialState":"Data","input":"&Mopf","inputUtf16":[38,77,111,112,102],"output":[{"Character":{"data":"&Mopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_581() {
    tokenize(
        r##"{"description":"Named entity: Mopf; with a semi-colon","initialState":"Data","input":"&Mopf;","inputUtf16":[38,77,111,112,102,59],"output":[{"Character":{"data":"ùïÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_582() {
    tokenize(
        r##"{"description":"Bad named entity: Mscr without a semi-colon","initialState":"Data","input":"&Mscr","inputUtf16":[38,77,115,99,114],"output":[{"Character":{"data":"&Mscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_583() {
    tokenize(
        r##"{"description":"Named entity: Mscr; with a semi-colon","initialState":"Data","input":"&Mscr;","inputUtf16":[38,77,115,99,114,59],"output":[{"Character":{"data":"‚Ñ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_584() {
    tokenize(
        r##"{"description":"Bad named entity: Mu without a semi-colon","initialState":"Data","input":"&Mu","inputUtf16":[38,77,117],"output":[{"Character":{"data":"&Mu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_585() {
    tokenize(
        r##"{"description":"Named entity: Mu; with a semi-colon","initialState":"Data","input":"&Mu;","inputUtf16":[38,77,117,59],"output":[{"Character":{"data":"Œú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_586() {
    tokenize(
        r##"{"description":"Bad named entity: NJcy without a semi-colon","initialState":"Data","input":"&NJcy","inputUtf16":[38,78,74,99,121],"output":[{"Character":{"data":"&NJcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_587() {
    tokenize(
        r##"{"description":"Named entity: NJcy; with a semi-colon","initialState":"Data","input":"&NJcy;","inputUtf16":[38,78,74,99,121,59],"output":[{"Character":{"data":"–ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_588() {
    tokenize(
        r##"{"description":"Bad named entity: Nacute without a semi-colon","initialState":"Data","input":"&Nacute","inputUtf16":[38,78,97,99,117,116,101],"output":[{"Character":{"data":"&Nacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_589() {
    tokenize(
        r##"{"description":"Named entity: Nacute; with a semi-colon","initialState":"Data","input":"&Nacute;","inputUtf16":[38,78,97,99,117,116,101,59],"output":[{"Character":{"data":"≈É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_590() {
    tokenize(
        r##"{"description":"Bad named entity: Ncaron without a semi-colon","initialState":"Data","input":"&Ncaron","inputUtf16":[38,78,99,97,114,111,110],"output":[{"Character":{"data":"&Ncaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_591() {
    tokenize(
        r##"{"description":"Named entity: Ncaron; with a semi-colon","initialState":"Data","input":"&Ncaron;","inputUtf16":[38,78,99,97,114,111,110,59],"output":[{"Character":{"data":"≈á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_592() {
    tokenize(
        r##"{"description":"Bad named entity: Ncedil without a semi-colon","initialState":"Data","input":"&Ncedil","inputUtf16":[38,78,99,101,100,105,108],"output":[{"Character":{"data":"&Ncedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_593() {
    tokenize(
        r##"{"description":"Named entity: Ncedil; with a semi-colon","initialState":"Data","input":"&Ncedil;","inputUtf16":[38,78,99,101,100,105,108,59],"output":[{"Character":{"data":"≈Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_594() {
    tokenize(
        r##"{"description":"Bad named entity: Ncy without a semi-colon","initialState":"Data","input":"&Ncy","inputUtf16":[38,78,99,121],"output":[{"Character":{"data":"&Ncy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_595() {
    tokenize(
        r##"{"description":"Named entity: Ncy; with a semi-colon","initialState":"Data","input":"&Ncy;","inputUtf16":[38,78,99,121,59],"output":[{"Character":{"data":"–ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_596() {
    tokenize(
        r##"{"description":"Bad named entity: NegativeMediumSpace without a semi-colon","initialState":"Data","input":"&NegativeMediumSpace","inputUtf16":[38,78,101,103,97,116,105,118,101,77,101,100,105,117,109,83,112,97,99,101],"output":[{"Character":{"data":"&NegativeMediumSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_597() {
    tokenize(
        r##"{"description":"Named entity: NegativeMediumSpace; with a semi-colon","initialState":"Data","input":"&NegativeMediumSpace;","inputUtf16":[38,78,101,103,97,116,105,118,101,77,101,100,105,117,109,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Äã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_598() {
    tokenize(
        r##"{"description":"Bad named entity: NegativeThickSpace without a semi-colon","initialState":"Data","input":"&NegativeThickSpace","inputUtf16":[38,78,101,103,97,116,105,118,101,84,104,105,99,107,83,112,97,99,101],"output":[{"Character":{"data":"&NegativeThickSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_599() {
    tokenize(
        r##"{"description":"Named entity: NegativeThickSpace; with a semi-colon","initialState":"Data","input":"&NegativeThickSpace;","inputUtf16":[38,78,101,103,97,116,105,118,101,84,104,105,99,107,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Äã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_600() {
    tokenize(
        r##"{"description":"Bad named entity: NegativeThinSpace without a semi-colon","initialState":"Data","input":"&NegativeThinSpace","inputUtf16":[38,78,101,103,97,116,105,118,101,84,104,105,110,83,112,97,99,101],"output":[{"Character":{"data":"&NegativeThinSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_601() {
    tokenize(
        r##"{"description":"Named entity: NegativeThinSpace; with a semi-colon","initialState":"Data","input":"&NegativeThinSpace;","inputUtf16":[38,78,101,103,97,116,105,118,101,84,104,105,110,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Äã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_602() {
    tokenize(
        r##"{"description":"Bad named entity: NegativeVeryThinSpace without a semi-colon","initialState":"Data","input":"&NegativeVeryThinSpace","inputUtf16":[38,78,101,103,97,116,105,118,101,86,101,114,121,84,104,105,110,83,112,97,99,101],"output":[{"Character":{"data":"&NegativeVeryThinSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_603() {
    tokenize(
        r##"{"description":"Named entity: NegativeVeryThinSpace; with a semi-colon","initialState":"Data","input":"&NegativeVeryThinSpace;","inputUtf16":[38,78,101,103,97,116,105,118,101,86,101,114,121,84,104,105,110,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Äã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_604() {
    tokenize(
        r##"{"description":"Bad named entity: NestedGreaterGreater without a semi-colon","initialState":"Data","input":"&NestedGreaterGreater","inputUtf16":[38,78,101,115,116,101,100,71,114,101,97,116,101,114,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&NestedGreaterGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_605() {
    tokenize(
        r##"{"description":"Named entity: NestedGreaterGreater; with a semi-colon","initialState":"Data","input":"&NestedGreaterGreater;","inputUtf16":[38,78,101,115,116,101,100,71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚â´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_606() {
    tokenize(
        r##"{"description":"Bad named entity: NestedLessLess without a semi-colon","initialState":"Data","input":"&NestedLessLess","inputUtf16":[38,78,101,115,116,101,100,76,101,115,115,76,101,115,115],"output":[{"Character":{"data":"&NestedLessLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_607() {
    tokenize(
        r##"{"description":"Named entity: NestedLessLess; with a semi-colon","initialState":"Data","input":"&NestedLessLess;","inputUtf16":[38,78,101,115,116,101,100,76,101,115,115,76,101,115,115,59],"output":[{"Character":{"data":"‚â™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_608() {
    tokenize(
        r##"{"description":"Bad named entity: NewLine without a semi-colon","initialState":"Data","input":"&NewLine","inputUtf16":[38,78,101,119,76,105,110,101],"output":[{"Character":{"data":"&NewLine"}}],"errors":[]}"##,
    );
}

#[test]
fn test_609() {
    tokenize(
        r##"{"description":"Named entity: NewLine; with a semi-colon","initialState":"Data","input":"&NewLine;","inputUtf16":[38,78,101,119,76,105,110,101,59],"output":[{"Character":{"data":"\n"}}],"errors":[]}"##,
    );
}

#[test]
fn test_610() {
    tokenize(
        r##"{"description":"Bad named entity: Nfr without a semi-colon","initialState":"Data","input":"&Nfr","inputUtf16":[38,78,102,114],"output":[{"Character":{"data":"&Nfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_611() {
    tokenize(
        r##"{"description":"Named entity: Nfr; with a semi-colon","initialState":"Data","input":"&Nfr;","inputUtf16":[38,78,102,114,59],"output":[{"Character":{"data":"ùîë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_612() {
    tokenize(
        r##"{"description":"Bad named entity: NoBreak without a semi-colon","initialState":"Data","input":"&NoBreak","inputUtf16":[38,78,111,66,114,101,97,107],"output":[{"Character":{"data":"&NoBreak"}}],"errors":[]}"##,
    );
}

#[test]
fn test_613() {
    tokenize(
        r##"{"description":"Named entity: NoBreak; with a semi-colon","initialState":"Data","input":"&NoBreak;","inputUtf16":[38,78,111,66,114,101,97,107,59],"output":[{"Character":{"data":"‚Å†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_614() {
    tokenize(
        r##"{"description":"Bad named entity: NonBreakingSpace without a semi-colon","initialState":"Data","input":"&NonBreakingSpace","inputUtf16":[38,78,111,110,66,114,101,97,107,105,110,103,83,112,97,99,101],"output":[{"Character":{"data":"&NonBreakingSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_615() {
    tokenize(
        r##"{"description":"Named entity: NonBreakingSpace; with a semi-colon","initialState":"Data","input":"&NonBreakingSpace;","inputUtf16":[38,78,111,110,66,114,101,97,107,105,110,103,83,112,97,99,101,59],"output":[{"Character":{"data":"¬†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_616() {
    tokenize(
        r##"{"description":"Bad named entity: Nopf without a semi-colon","initialState":"Data","input":"&Nopf","inputUtf16":[38,78,111,112,102],"output":[{"Character":{"data":"&Nopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_617() {
    tokenize(
        r##"{"description":"Named entity: Nopf; with a semi-colon","initialState":"Data","input":"&Nopf;","inputUtf16":[38,78,111,112,102,59],"output":[{"Character":{"data":"‚Ñï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_618() {
    tokenize(
        r##"{"description":"Bad named entity: Not without a semi-colon","initialState":"Data","input":"&Not","inputUtf16":[38,78,111,116],"output":[{"Character":{"data":"&Not"}}],"errors":[]}"##,
    );
}

#[test]
fn test_619() {
    tokenize(
        r##"{"description":"Named entity: Not; with a semi-colon","initialState":"Data","input":"&Not;","inputUtf16":[38,78,111,116,59],"output":[{"Character":{"data":"‚´¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_620() {
    tokenize(
        r##"{"description":"Bad named entity: NotCongruent without a semi-colon","initialState":"Data","input":"&NotCongruent","inputUtf16":[38,78,111,116,67,111,110,103,114,117,101,110,116],"output":[{"Character":{"data":"&NotCongruent"}}],"errors":[]}"##,
    );
}

#[test]
fn test_621() {
    tokenize(
        r##"{"description":"Named entity: NotCongruent; with a semi-colon","initialState":"Data","input":"&NotCongruent;","inputUtf16":[38,78,111,116,67,111,110,103,114,117,101,110,116,59],"output":[{"Character":{"data":"‚â¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_622() {
    tokenize(
        r##"{"description":"Bad named entity: NotCupCap without a semi-colon","initialState":"Data","input":"&NotCupCap","inputUtf16":[38,78,111,116,67,117,112,67,97,112],"output":[{"Character":{"data":"&NotCupCap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_623() {
    tokenize(
        r##"{"description":"Named entity: NotCupCap; with a semi-colon","initialState":"Data","input":"&NotCupCap;","inputUtf16":[38,78,111,116,67,117,112,67,97,112,59],"output":[{"Character":{"data":"‚â≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_624() {
    tokenize(
        r##"{"description":"Bad named entity: NotDoubleVerticalBar without a semi-colon","initialState":"Data","input":"&NotDoubleVerticalBar","inputUtf16":[38,78,111,116,68,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114],"output":[{"Character":{"data":"&NotDoubleVerticalBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_625() {
    tokenize(
        r##"{"description":"Named entity: NotDoubleVerticalBar; with a semi-colon","initialState":"Data","input":"&NotDoubleVerticalBar;","inputUtf16":[38,78,111,116,68,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59],"output":[{"Character":{"data":"‚à¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_626() {
    tokenize(
        r##"{"description":"Bad named entity: NotElement without a semi-colon","initialState":"Data","input":"&NotElement","inputUtf16":[38,78,111,116,69,108,101,109,101,110,116],"output":[{"Character":{"data":"&NotElement"}}],"errors":[]}"##,
    );
}

#[test]
fn test_627() {
    tokenize(
        r##"{"description":"Named entity: NotElement; with a semi-colon","initialState":"Data","input":"&NotElement;","inputUtf16":[38,78,111,116,69,108,101,109,101,110,116,59],"output":[{"Character":{"data":"‚àâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_628() {
    tokenize(
        r##"{"description":"Bad named entity: NotEqual without a semi-colon","initialState":"Data","input":"&NotEqual","inputUtf16":[38,78,111,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_629() {
    tokenize(
        r##"{"description":"Named entity: NotEqual; with a semi-colon","initialState":"Data","input":"&NotEqual;","inputUtf16":[38,78,111,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚â†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_630() {
    tokenize(
        r##"{"description":"Bad named entity: NotEqualTilde without a semi-colon","initialState":"Data","input":"&NotEqualTilde","inputUtf16":[38,78,111,116,69,113,117,97,108,84,105,108,100,101],"output":[{"Character":{"data":"&NotEqualTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_631() {
    tokenize(
        r##"{"description":"Named entity: NotEqualTilde; with a semi-colon","initialState":"Data","input":"&NotEqualTilde;","inputUtf16":[38,78,111,116,69,113,117,97,108,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âÇÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_632() {
    tokenize(
        r##"{"description":"Bad named entity: NotExists without a semi-colon","initialState":"Data","input":"&NotExists","inputUtf16":[38,78,111,116,69,120,105,115,116,115],"output":[{"Character":{"data":"&NotExists"}}],"errors":[]}"##,
    );
}

#[test]
fn test_633() {
    tokenize(
        r##"{"description":"Named entity: NotExists; with a semi-colon","initialState":"Data","input":"&NotExists;","inputUtf16":[38,78,111,116,69,120,105,115,116,115,59],"output":[{"Character":{"data":"‚àÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_634() {
    tokenize(
        r##"{"description":"Bad named entity: NotGreater without a semi-colon","initialState":"Data","input":"&NotGreater","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&NotGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_635() {
    tokenize(
        r##"{"description":"Named entity: NotGreater; with a semi-colon","initialState":"Data","input":"&NotGreater;","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚âØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_636() {
    tokenize(
        r##"{"description":"Bad named entity: NotGreaterEqual without a semi-colon","initialState":"Data","input":"&NotGreaterEqual","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,69,113,117,97,108],"output":[{"Character":{"data":"&NotGreaterEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_637() {
    tokenize(
        r##"{"description":"Named entity: NotGreaterEqual; with a semi-colon","initialState":"Data","input":"&NotGreaterEqual;","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,69,113,117,97,108,59],"output":[{"Character":{"data":"‚â±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_638() {
    tokenize(
        r##"{"description":"Bad named entity: NotGreaterFullEqual without a semi-colon","initialState":"Data","input":"&NotGreaterFullEqual","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,70,117,108,108,69,113,117,97,108],"output":[{"Character":{"data":"&NotGreaterFullEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_639() {
    tokenize(
        r##"{"description":"Named entity: NotGreaterFullEqual; with a semi-colon","initialState":"Data","input":"&NotGreaterFullEqual;","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,70,117,108,108,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âßÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_640() {
    tokenize(
        r##"{"description":"Bad named entity: NotGreaterGreater without a semi-colon","initialState":"Data","input":"&NotGreaterGreater","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&NotGreaterGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_641() {
    tokenize(
        r##"{"description":"Named entity: NotGreaterGreater; with a semi-colon","initialState":"Data","input":"&NotGreaterGreater;","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚â´Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_642() {
    tokenize(
        r##"{"description":"Bad named entity: NotGreaterLess without a semi-colon","initialState":"Data","input":"&NotGreaterLess","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,76,101,115,115],"output":[{"Character":{"data":"&NotGreaterLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_643() {
    tokenize(
        r##"{"description":"Named entity: NotGreaterLess; with a semi-colon","initialState":"Data","input":"&NotGreaterLess;","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,76,101,115,115,59],"output":[{"Character":{"data":"‚âπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_644() {
    tokenize(
        r##"{"description":"Bad named entity: NotGreaterSlantEqual without a semi-colon","initialState":"Data","input":"&NotGreaterSlantEqual","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotGreaterSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_645() {
    tokenize(
        r##"{"description":"Named entity: NotGreaterSlantEqual; with a semi-colon","initialState":"Data","input":"&NotGreaterSlantEqual;","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚©æÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_646() {
    tokenize(
        r##"{"description":"Bad named entity: NotGreaterTilde without a semi-colon","initialState":"Data","input":"&NotGreaterTilde","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,84,105,108,100,101],"output":[{"Character":{"data":"&NotGreaterTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_647() {
    tokenize(
        r##"{"description":"Named entity: NotGreaterTilde; with a semi-colon","initialState":"Data","input":"&NotGreaterTilde;","inputUtf16":[38,78,111,116,71,114,101,97,116,101,114,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_648() {
    tokenize(
        r##"{"description":"Bad named entity: NotHumpDownHump without a semi-colon","initialState":"Data","input":"&NotHumpDownHump","inputUtf16":[38,78,111,116,72,117,109,112,68,111,119,110,72,117,109,112],"output":[{"Character":{"data":"&NotHumpDownHump"}}],"errors":[]}"##,
    );
}

#[test]
fn test_649() {
    tokenize(
        r##"{"description":"Named entity: NotHumpDownHump; with a semi-colon","initialState":"Data","input":"&NotHumpDownHump;","inputUtf16":[38,78,111,116,72,117,109,112,68,111,119,110,72,117,109,112,59],"output":[{"Character":{"data":"‚âéÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_650() {
    tokenize(
        r##"{"description":"Bad named entity: NotHumpEqual without a semi-colon","initialState":"Data","input":"&NotHumpEqual","inputUtf16":[38,78,111,116,72,117,109,112,69,113,117,97,108],"output":[{"Character":{"data":"&NotHumpEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_651() {
    tokenize(
        r##"{"description":"Named entity: NotHumpEqual; with a semi-colon","initialState":"Data","input":"&NotHumpEqual;","inputUtf16":[38,78,111,116,72,117,109,112,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âèÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_652() {
    tokenize(
        r##"{"description":"Bad named entity: NotLeftTriangle without a semi-colon","initialState":"Data","input":"&NotLeftTriangle","inputUtf16":[38,78,111,116,76,101,102,116,84,114,105,97,110,103,108,101],"output":[{"Character":{"data":"&NotLeftTriangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_653() {
    tokenize(
        r##"{"description":"Named entity: NotLeftTriangle; with a semi-colon","initialState":"Data","input":"&NotLeftTriangle;","inputUtf16":[38,78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ã™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_654() {
    tokenize(
        r##"{"description":"Bad named entity: NotLeftTriangleBar without a semi-colon","initialState":"Data","input":"&NotLeftTriangleBar","inputUtf16":[38,78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,66,97,114],"output":[{"Character":{"data":"&NotLeftTriangleBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_655() {
    tokenize(
        r##"{"description":"Named entity: NotLeftTriangleBar; with a semi-colon","initialState":"Data","input":"&NotLeftTriangleBar;","inputUtf16":[38,78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,66,97,114,59],"output":[{"Character":{"data":"‚ßèÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_656() {
    tokenize(
        r##"{"description":"Bad named entity: NotLeftTriangleEqual without a semi-colon","initialState":"Data","input":"&NotLeftTriangleEqual","inputUtf16":[38,78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,69,113,117,97,108],"output":[{"Character":{"data":"&NotLeftTriangleEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_657() {
    tokenize(
        r##"{"description":"Named entity: NotLeftTriangleEqual; with a semi-colon","initialState":"Data","input":"&NotLeftTriangleEqual;","inputUtf16":[38,78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],"output":[{"Character":{"data":"‚ã¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_658() {
    tokenize(
        r##"{"description":"Bad named entity: NotLess without a semi-colon","initialState":"Data","input":"&NotLess","inputUtf16":[38,78,111,116,76,101,115,115],"output":[{"Character":{"data":"&NotLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_659() {
    tokenize(
        r##"{"description":"Named entity: NotLess; with a semi-colon","initialState":"Data","input":"&NotLess;","inputUtf16":[38,78,111,116,76,101,115,115,59],"output":[{"Character":{"data":"‚âÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_660() {
    tokenize(
        r##"{"description":"Bad named entity: NotLessEqual without a semi-colon","initialState":"Data","input":"&NotLessEqual","inputUtf16":[38,78,111,116,76,101,115,115,69,113,117,97,108],"output":[{"Character":{"data":"&NotLessEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_661() {
    tokenize(
        r##"{"description":"Named entity: NotLessEqual; with a semi-colon","initialState":"Data","input":"&NotLessEqual;","inputUtf16":[38,78,111,116,76,101,115,115,69,113,117,97,108,59],"output":[{"Character":{"data":"‚â∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_662() {
    tokenize(
        r##"{"description":"Bad named entity: NotLessGreater without a semi-colon","initialState":"Data","input":"&NotLessGreater","inputUtf16":[38,78,111,116,76,101,115,115,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&NotLessGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_663() {
    tokenize(
        r##"{"description":"Named entity: NotLessGreater; with a semi-colon","initialState":"Data","input":"&NotLessGreater;","inputUtf16":[38,78,111,116,76,101,115,115,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚â∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_664() {
    tokenize(
        r##"{"description":"Bad named entity: NotLessLess without a semi-colon","initialState":"Data","input":"&NotLessLess","inputUtf16":[38,78,111,116,76,101,115,115,76,101,115,115],"output":[{"Character":{"data":"&NotLessLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_665() {
    tokenize(
        r##"{"description":"Named entity: NotLessLess; with a semi-colon","initialState":"Data","input":"&NotLessLess;","inputUtf16":[38,78,111,116,76,101,115,115,76,101,115,115,59],"output":[{"Character":{"data":"‚â™Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_666() {
    tokenize(
        r##"{"description":"Bad named entity: NotLessSlantEqual without a semi-colon","initialState":"Data","input":"&NotLessSlantEqual","inputUtf16":[38,78,111,116,76,101,115,115,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotLessSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_667() {
    tokenize(
        r##"{"description":"Named entity: NotLessSlantEqual; with a semi-colon","initialState":"Data","input":"&NotLessSlantEqual;","inputUtf16":[38,78,111,116,76,101,115,115,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚©ΩÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_668() {
    tokenize(
        r##"{"description":"Bad named entity: NotLessTilde without a semi-colon","initialState":"Data","input":"&NotLessTilde","inputUtf16":[38,78,111,116,76,101,115,115,84,105,108,100,101],"output":[{"Character":{"data":"&NotLessTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_669() {
    tokenize(
        r##"{"description":"Named entity: NotLessTilde; with a semi-colon","initialState":"Data","input":"&NotLessTilde;","inputUtf16":[38,78,111,116,76,101,115,115,84,105,108,100,101,59],"output":[{"Character":{"data":"‚â¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_670() {
    tokenize(
        r##"{"description":"Bad named entity: NotNestedGreaterGreater without a semi-colon","initialState":"Data","input":"&NotNestedGreaterGreater","inputUtf16":[38,78,111,116,78,101,115,116,101,100,71,114,101,97,116,101,114,71,114,101,97,116,101,114],"output":[{"Character":{"data":"&NotNestedGreaterGreater"}}],"errors":[]}"##,
    );
}

#[test]
fn test_671() {
    tokenize(
        r##"{"description":"Named entity: NotNestedGreaterGreater; with a semi-colon","initialState":"Data","input":"&NotNestedGreaterGreater;","inputUtf16":[38,78,111,116,78,101,115,116,101,100,71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],"output":[{"Character":{"data":"‚™¢Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_672() {
    tokenize(
        r##"{"description":"Bad named entity: NotNestedLessLess without a semi-colon","initialState":"Data","input":"&NotNestedLessLess","inputUtf16":[38,78,111,116,78,101,115,116,101,100,76,101,115,115,76,101,115,115],"output":[{"Character":{"data":"&NotNestedLessLess"}}],"errors":[]}"##,
    );
}

#[test]
fn test_673() {
    tokenize(
        r##"{"description":"Named entity: NotNestedLessLess; with a semi-colon","initialState":"Data","input":"&NotNestedLessLess;","inputUtf16":[38,78,111,116,78,101,115,116,101,100,76,101,115,115,76,101,115,115,59],"output":[{"Character":{"data":"‚™°Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_674() {
    tokenize(
        r##"{"description":"Bad named entity: NotPrecedes without a semi-colon","initialState":"Data","input":"&NotPrecedes","inputUtf16":[38,78,111,116,80,114,101,99,101,100,101,115],"output":[{"Character":{"data":"&NotPrecedes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_675() {
    tokenize(
        r##"{"description":"Named entity: NotPrecedes; with a semi-colon","initialState":"Data","input":"&NotPrecedes;","inputUtf16":[38,78,111,116,80,114,101,99,101,100,101,115,59],"output":[{"Character":{"data":"‚äÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_676() {
    tokenize(
        r##"{"description":"Bad named entity: NotPrecedesEqual without a semi-colon","initialState":"Data","input":"&NotPrecedesEqual","inputUtf16":[38,78,111,116,80,114,101,99,101,100,101,115,69,113,117,97,108],"output":[{"Character":{"data":"&NotPrecedesEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_677() {
    tokenize(
        r##"{"description":"Named entity: NotPrecedesEqual; with a semi-colon","initialState":"Data","input":"&NotPrecedesEqual;","inputUtf16":[38,78,111,116,80,114,101,99,101,100,101,115,69,113,117,97,108,59],"output":[{"Character":{"data":"‚™ØÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_678() {
    tokenize(
        r##"{"description":"Bad named entity: NotPrecedesSlantEqual without a semi-colon","initialState":"Data","input":"&NotPrecedesSlantEqual","inputUtf16":[38,78,111,116,80,114,101,99,101,100,101,115,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotPrecedesSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_679() {
    tokenize(
        r##"{"description":"Named entity: NotPrecedesSlantEqual; with a semi-colon","initialState":"Data","input":"&NotPrecedesSlantEqual;","inputUtf16":[38,78,111,116,80,114,101,99,101,100,101,115,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚ã†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_680() {
    tokenize(
        r##"{"description":"Bad named entity: NotReverseElement without a semi-colon","initialState":"Data","input":"&NotReverseElement","inputUtf16":[38,78,111,116,82,101,118,101,114,115,101,69,108,101,109,101,110,116],"output":[{"Character":{"data":"&NotReverseElement"}}],"errors":[]}"##,
    );
}

#[test]
fn test_681() {
    tokenize(
        r##"{"description":"Named entity: NotReverseElement; with a semi-colon","initialState":"Data","input":"&NotReverseElement;","inputUtf16":[38,78,111,116,82,101,118,101,114,115,101,69,108,101,109,101,110,116,59],"output":[{"Character":{"data":"‚àå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_682() {
    tokenize(
        r##"{"description":"Bad named entity: NotRightTriangle without a semi-colon","initialState":"Data","input":"&NotRightTriangle","inputUtf16":[38,78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101],"output":[{"Character":{"data":"&NotRightTriangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_683() {
    tokenize(
        r##"{"description":"Named entity: NotRightTriangle; with a semi-colon","initialState":"Data","input":"&NotRightTriangle;","inputUtf16":[38,78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ã´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_684() {
    tokenize(
        r##"{"description":"Bad named entity: NotRightTriangleBar without a semi-colon","initialState":"Data","input":"&NotRightTriangleBar","inputUtf16":[38,78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,66,97,114],"output":[{"Character":{"data":"&NotRightTriangleBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_685() {
    tokenize(
        r##"{"description":"Named entity: NotRightTriangleBar; with a semi-colon","initialState":"Data","input":"&NotRightTriangleBar;","inputUtf16":[38,78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,66,97,114,59],"output":[{"Character":{"data":"‚ßêÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_686() {
    tokenize(
        r##"{"description":"Bad named entity: NotRightTriangleEqual without a semi-colon","initialState":"Data","input":"&NotRightTriangleEqual","inputUtf16":[38,78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,69,113,117,97,108],"output":[{"Character":{"data":"&NotRightTriangleEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_687() {
    tokenize(
        r##"{"description":"Named entity: NotRightTriangleEqual; with a semi-colon","initialState":"Data","input":"&NotRightTriangleEqual;","inputUtf16":[38,78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],"output":[{"Character":{"data":"‚ã≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_688() {
    tokenize(
        r##"{"description":"Bad named entity: NotSquareSubset without a semi-colon","initialState":"Data","input":"&NotSquareSubset","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,98,115,101,116],"output":[{"Character":{"data":"&NotSquareSubset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_689() {
    tokenize(
        r##"{"description":"Named entity: NotSquareSubset; with a semi-colon","initialState":"Data","input":"&NotSquareSubset;","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,98,115,101,116,59],"output":[{"Character":{"data":"‚äèÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_690() {
    tokenize(
        r##"{"description":"Bad named entity: NotSquareSubsetEqual without a semi-colon","initialState":"Data","input":"&NotSquareSubsetEqual","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,98,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotSquareSubsetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_691() {
    tokenize(
        r##"{"description":"Named entity: NotSquareSubsetEqual; with a semi-colon","initialState":"Data","input":"&NotSquareSubsetEqual;","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,98,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚ã¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_692() {
    tokenize(
        r##"{"description":"Bad named entity: NotSquareSuperset without a semi-colon","initialState":"Data","input":"&NotSquareSuperset","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,112,101,114,115,101,116],"output":[{"Character":{"data":"&NotSquareSuperset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_693() {
    tokenize(
        r##"{"description":"Named entity: NotSquareSuperset; with a semi-colon","initialState":"Data","input":"&NotSquareSuperset;","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,112,101,114,115,101,116,59],"output":[{"Character":{"data":"‚äêÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_694() {
    tokenize(
        r##"{"description":"Bad named entity: NotSquareSupersetEqual without a semi-colon","initialState":"Data","input":"&NotSquareSupersetEqual","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,112,101,114,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotSquareSupersetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_695() {
    tokenize(
        r##"{"description":"Named entity: NotSquareSupersetEqual; with a semi-colon","initialState":"Data","input":"&NotSquareSupersetEqual;","inputUtf16":[38,78,111,116,83,113,117,97,114,101,83,117,112,101,114,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚ã£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_696() {
    tokenize(
        r##"{"description":"Bad named entity: NotSubset without a semi-colon","initialState":"Data","input":"&NotSubset","inputUtf16":[38,78,111,116,83,117,98,115,101,116],"output":[{"Character":{"data":"&NotSubset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_697() {
    tokenize(
        r##"{"description":"Named entity: NotSubset; with a semi-colon","initialState":"Data","input":"&NotSubset;","inputUtf16":[38,78,111,116,83,117,98,115,101,116,59],"output":[{"Character":{"data":"‚äÇ‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_698() {
    tokenize(
        r##"{"description":"Bad named entity: NotSubsetEqual without a semi-colon","initialState":"Data","input":"&NotSubsetEqual","inputUtf16":[38,78,111,116,83,117,98,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotSubsetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_699() {
    tokenize(
        r##"{"description":"Named entity: NotSubsetEqual; with a semi-colon","initialState":"Data","input":"&NotSubsetEqual;","inputUtf16":[38,78,111,116,83,117,98,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚äà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_700() {
    tokenize(
        r##"{"description":"Bad named entity: NotSucceeds without a semi-colon","initialState":"Data","input":"&NotSucceeds","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115],"output":[{"Character":{"data":"&NotSucceeds"}}],"errors":[]}"##,
    );
}

#[test]
fn test_701() {
    tokenize(
        r##"{"description":"Named entity: NotSucceeds; with a semi-colon","initialState":"Data","input":"&NotSucceeds;","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115,59],"output":[{"Character":{"data":"‚äÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_702() {
    tokenize(
        r##"{"description":"Bad named entity: NotSucceedsEqual without a semi-colon","initialState":"Data","input":"&NotSucceedsEqual","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115,69,113,117,97,108],"output":[{"Character":{"data":"&NotSucceedsEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_703() {
    tokenize(
        r##"{"description":"Named entity: NotSucceedsEqual; with a semi-colon","initialState":"Data","input":"&NotSucceedsEqual;","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115,69,113,117,97,108,59],"output":[{"Character":{"data":"‚™∞Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_704() {
    tokenize(
        r##"{"description":"Bad named entity: NotSucceedsSlantEqual without a semi-colon","initialState":"Data","input":"&NotSucceedsSlantEqual","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotSucceedsSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_705() {
    tokenize(
        r##"{"description":"Named entity: NotSucceedsSlantEqual; with a semi-colon","initialState":"Data","input":"&NotSucceedsSlantEqual;","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚ã°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_706() {
    tokenize(
        r##"{"description":"Bad named entity: NotSucceedsTilde without a semi-colon","initialState":"Data","input":"&NotSucceedsTilde","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115,84,105,108,100,101],"output":[{"Character":{"data":"&NotSucceedsTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_707() {
    tokenize(
        r##"{"description":"Named entity: NotSucceedsTilde; with a semi-colon","initialState":"Data","input":"&NotSucceedsTilde;","inputUtf16":[38,78,111,116,83,117,99,99,101,101,100,115,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âøÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_708() {
    tokenize(
        r##"{"description":"Bad named entity: NotSuperset without a semi-colon","initialState":"Data","input":"&NotSuperset","inputUtf16":[38,78,111,116,83,117,112,101,114,115,101,116],"output":[{"Character":{"data":"&NotSuperset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_709() {
    tokenize(
        r##"{"description":"Named entity: NotSuperset; with a semi-colon","initialState":"Data","input":"&NotSuperset;","inputUtf16":[38,78,111,116,83,117,112,101,114,115,101,116,59],"output":[{"Character":{"data":"‚äÉ‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_710() {
    tokenize(
        r##"{"description":"Bad named entity: NotSupersetEqual without a semi-colon","initialState":"Data","input":"&NotSupersetEqual","inputUtf16":[38,78,111,116,83,117,112,101,114,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&NotSupersetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_711() {
    tokenize(
        r##"{"description":"Named entity: NotSupersetEqual; with a semi-colon","initialState":"Data","input":"&NotSupersetEqual;","inputUtf16":[38,78,111,116,83,117,112,101,114,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚äâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_712() {
    tokenize(
        r##"{"description":"Bad named entity: NotTilde without a semi-colon","initialState":"Data","input":"&NotTilde","inputUtf16":[38,78,111,116,84,105,108,100,101],"output":[{"Character":{"data":"&NotTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_713() {
    tokenize(
        r##"{"description":"Named entity: NotTilde; with a semi-colon","initialState":"Data","input":"&NotTilde;","inputUtf16":[38,78,111,116,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_714() {
    tokenize(
        r##"{"description":"Bad named entity: NotTildeEqual without a semi-colon","initialState":"Data","input":"&NotTildeEqual","inputUtf16":[38,78,111,116,84,105,108,100,101,69,113,117,97,108],"output":[{"Character":{"data":"&NotTildeEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_715() {
    tokenize(
        r##"{"description":"Named entity: NotTildeEqual; with a semi-colon","initialState":"Data","input":"&NotTildeEqual;","inputUtf16":[38,78,111,116,84,105,108,100,101,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_716() {
    tokenize(
        r##"{"description":"Bad named entity: NotTildeFullEqual without a semi-colon","initialState":"Data","input":"&NotTildeFullEqual","inputUtf16":[38,78,111,116,84,105,108,100,101,70,117,108,108,69,113,117,97,108],"output":[{"Character":{"data":"&NotTildeFullEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_717() {
    tokenize(
        r##"{"description":"Named entity: NotTildeFullEqual; with a semi-colon","initialState":"Data","input":"&NotTildeFullEqual;","inputUtf16":[38,78,111,116,84,105,108,100,101,70,117,108,108,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_718() {
    tokenize(
        r##"{"description":"Bad named entity: NotTildeTilde without a semi-colon","initialState":"Data","input":"&NotTildeTilde","inputUtf16":[38,78,111,116,84,105,108,100,101,84,105,108,100,101],"output":[{"Character":{"data":"&NotTildeTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_719() {
    tokenize(
        r##"{"description":"Named entity: NotTildeTilde; with a semi-colon","initialState":"Data","input":"&NotTildeTilde;","inputUtf16":[38,78,111,116,84,105,108,100,101,84,105,108,100,101,59],"output":[{"Character":{"data":"‚ââ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_720() {
    tokenize(
        r##"{"description":"Bad named entity: NotVerticalBar without a semi-colon","initialState":"Data","input":"&NotVerticalBar","inputUtf16":[38,78,111,116,86,101,114,116,105,99,97,108,66,97,114],"output":[{"Character":{"data":"&NotVerticalBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_721() {
    tokenize(
        r##"{"description":"Named entity: NotVerticalBar; with a semi-colon","initialState":"Data","input":"&NotVerticalBar;","inputUtf16":[38,78,111,116,86,101,114,116,105,99,97,108,66,97,114,59],"output":[{"Character":{"data":"‚à§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_722() {
    tokenize(
        r##"{"description":"Bad named entity: Nscr without a semi-colon","initialState":"Data","input":"&Nscr","inputUtf16":[38,78,115,99,114],"output":[{"Character":{"data":"&Nscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_723() {
    tokenize(
        r##"{"description":"Named entity: Nscr; with a semi-colon","initialState":"Data","input":"&Nscr;","inputUtf16":[38,78,115,99,114,59],"output":[{"Character":{"data":"ùí©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_724() {
    tokenize(
        r##"{"description":"Named entity: Ntilde without a semi-colon","initialState":"Data","input":"&Ntilde","inputUtf16":[38,78,116,105,108,100,101],"output":[{"Character":{"data":"√ë"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_725() {
    tokenize(
        r##"{"description":"Named entity: Ntilde; with a semi-colon","initialState":"Data","input":"&Ntilde;","inputUtf16":[38,78,116,105,108,100,101,59],"output":[{"Character":{"data":"√ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_726() {
    tokenize(
        r##"{"description":"Bad named entity: Nu without a semi-colon","initialState":"Data","input":"&Nu","inputUtf16":[38,78,117],"output":[{"Character":{"data":"&Nu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_727() {
    tokenize(
        r##"{"description":"Named entity: Nu; with a semi-colon","initialState":"Data","input":"&Nu;","inputUtf16":[38,78,117,59],"output":[{"Character":{"data":"Œù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_728() {
    tokenize(
        r##"{"description":"Bad named entity: OElig without a semi-colon","initialState":"Data","input":"&OElig","inputUtf16":[38,79,69,108,105,103],"output":[{"Character":{"data":"&OElig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_729() {
    tokenize(
        r##"{"description":"Named entity: OElig; with a semi-colon","initialState":"Data","input":"&OElig;","inputUtf16":[38,79,69,108,105,103,59],"output":[{"Character":{"data":"≈í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_730() {
    tokenize(
        r##"{"description":"Named entity: Oacute without a semi-colon","initialState":"Data","input":"&Oacute","inputUtf16":[38,79,97,99,117,116,101],"output":[{"Character":{"data":"√ì"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_731() {
    tokenize(
        r##"{"description":"Named entity: Oacute; with a semi-colon","initialState":"Data","input":"&Oacute;","inputUtf16":[38,79,97,99,117,116,101,59],"output":[{"Character":{"data":"√ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_732() {
    tokenize(
        r##"{"description":"Named entity: Ocirc without a semi-colon","initialState":"Data","input":"&Ocirc","inputUtf16":[38,79,99,105,114,99],"output":[{"Character":{"data":"√î"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_733() {
    tokenize(
        r##"{"description":"Named entity: Ocirc; with a semi-colon","initialState":"Data","input":"&Ocirc;","inputUtf16":[38,79,99,105,114,99,59],"output":[{"Character":{"data":"√î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_734() {
    tokenize(
        r##"{"description":"Bad named entity: Ocy without a semi-colon","initialState":"Data","input":"&Ocy","inputUtf16":[38,79,99,121],"output":[{"Character":{"data":"&Ocy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_735() {
    tokenize(
        r##"{"description":"Named entity: Ocy; with a semi-colon","initialState":"Data","input":"&Ocy;","inputUtf16":[38,79,99,121,59],"output":[{"Character":{"data":"–û"}}],"errors":[]}"##,
    );
}

#[test]
fn test_736() {
    tokenize(
        r##"{"description":"Bad named entity: Odblac without a semi-colon","initialState":"Data","input":"&Odblac","inputUtf16":[38,79,100,98,108,97,99],"output":[{"Character":{"data":"&Odblac"}}],"errors":[]}"##,
    );
}

#[test]
fn test_737() {
    tokenize(
        r##"{"description":"Named entity: Odblac; with a semi-colon","initialState":"Data","input":"&Odblac;","inputUtf16":[38,79,100,98,108,97,99,59],"output":[{"Character":{"data":"≈ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_738() {
    tokenize(
        r##"{"description":"Bad named entity: Ofr without a semi-colon","initialState":"Data","input":"&Ofr","inputUtf16":[38,79,102,114],"output":[{"Character":{"data":"&Ofr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_739() {
    tokenize(
        r##"{"description":"Named entity: Ofr; with a semi-colon","initialState":"Data","input":"&Ofr;","inputUtf16":[38,79,102,114,59],"output":[{"Character":{"data":"ùîí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_740() {
    tokenize(
        r##"{"description":"Named entity: Ograve without a semi-colon","initialState":"Data","input":"&Ograve","inputUtf16":[38,79,103,114,97,118,101],"output":[{"Character":{"data":"√í"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_741() {
    tokenize(
        r##"{"description":"Named entity: Ograve; with a semi-colon","initialState":"Data","input":"&Ograve;","inputUtf16":[38,79,103,114,97,118,101,59],"output":[{"Character":{"data":"√í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_742() {
    tokenize(
        r##"{"description":"Bad named entity: Omacr without a semi-colon","initialState":"Data","input":"&Omacr","inputUtf16":[38,79,109,97,99,114],"output":[{"Character":{"data":"&Omacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_743() {
    tokenize(
        r##"{"description":"Named entity: Omacr; with a semi-colon","initialState":"Data","input":"&Omacr;","inputUtf16":[38,79,109,97,99,114,59],"output":[{"Character":{"data":"≈å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_744() {
    tokenize(
        r##"{"description":"Bad named entity: Omega without a semi-colon","initialState":"Data","input":"&Omega","inputUtf16":[38,79,109,101,103,97],"output":[{"Character":{"data":"&Omega"}}],"errors":[]}"##,
    );
}

#[test]
fn test_745() {
    tokenize(
        r##"{"description":"Named entity: Omega; with a semi-colon","initialState":"Data","input":"&Omega;","inputUtf16":[38,79,109,101,103,97,59],"output":[{"Character":{"data":"Œ©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_746() {
    tokenize(
        r##"{"description":"Bad named entity: Omicron without a semi-colon","initialState":"Data","input":"&Omicron","inputUtf16":[38,79,109,105,99,114,111,110],"output":[{"Character":{"data":"&Omicron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_747() {
    tokenize(
        r##"{"description":"Named entity: Omicron; with a semi-colon","initialState":"Data","input":"&Omicron;","inputUtf16":[38,79,109,105,99,114,111,110,59],"output":[{"Character":{"data":"Œü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_748() {
    tokenize(
        r##"{"description":"Bad named entity: Oopf without a semi-colon","initialState":"Data","input":"&Oopf","inputUtf16":[38,79,111,112,102],"output":[{"Character":{"data":"&Oopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_749() {
    tokenize(
        r##"{"description":"Named entity: Oopf; with a semi-colon","initialState":"Data","input":"&Oopf;","inputUtf16":[38,79,111,112,102,59],"output":[{"Character":{"data":"ùïÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_750() {
    tokenize(
        r##"{"description":"Bad named entity: OpenCurlyDoubleQuote without a semi-colon","initialState":"Data","input":"&OpenCurlyDoubleQuote","inputUtf16":[38,79,112,101,110,67,117,114,108,121,68,111,117,98,108,101,81,117,111,116,101],"output":[{"Character":{"data":"&OpenCurlyDoubleQuote"}}],"errors":[]}"##,
    );
}

#[test]
fn test_751() {
    tokenize(
        r##"{"description":"Named entity: OpenCurlyDoubleQuote; with a semi-colon","initialState":"Data","input":"&OpenCurlyDoubleQuote;","inputUtf16":[38,79,112,101,110,67,117,114,108,121,68,111,117,98,108,101,81,117,111,116,101,59],"output":[{"Character":{"data":"‚Äú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_752() {
    tokenize(
        r##"{"description":"Bad named entity: OpenCurlyQuote without a semi-colon","initialState":"Data","input":"&OpenCurlyQuote","inputUtf16":[38,79,112,101,110,67,117,114,108,121,81,117,111,116,101],"output":[{"Character":{"data":"&OpenCurlyQuote"}}],"errors":[]}"##,
    );
}

#[test]
fn test_753() {
    tokenize(
        r##"{"description":"Named entity: OpenCurlyQuote; with a semi-colon","initialState":"Data","input":"&OpenCurlyQuote;","inputUtf16":[38,79,112,101,110,67,117,114,108,121,81,117,111,116,101,59],"output":[{"Character":{"data":"‚Äò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_754() {
    tokenize(
        r##"{"description":"Bad named entity: Or without a semi-colon","initialState":"Data","input":"&Or","inputUtf16":[38,79,114],"output":[{"Character":{"data":"&Or"}}],"errors":[]}"##,
    );
}

#[test]
fn test_755() {
    tokenize(
        r##"{"description":"Named entity: Or; with a semi-colon","initialState":"Data","input":"&Or;","inputUtf16":[38,79,114,59],"output":[{"Character":{"data":"‚©î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_756() {
    tokenize(
        r##"{"description":"Bad named entity: Oscr without a semi-colon","initialState":"Data","input":"&Oscr","inputUtf16":[38,79,115,99,114],"output":[{"Character":{"data":"&Oscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_757() {
    tokenize(
        r##"{"description":"Named entity: Oscr; with a semi-colon","initialState":"Data","input":"&Oscr;","inputUtf16":[38,79,115,99,114,59],"output":[{"Character":{"data":"ùí™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_758() {
    tokenize(
        r##"{"description":"Named entity: Oslash without a semi-colon","initialState":"Data","input":"&Oslash","inputUtf16":[38,79,115,108,97,115,104],"output":[{"Character":{"data":"√ò"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_759() {
    tokenize(
        r##"{"description":"Named entity: Oslash; with a semi-colon","initialState":"Data","input":"&Oslash;","inputUtf16":[38,79,115,108,97,115,104,59],"output":[{"Character":{"data":"√ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_760() {
    tokenize(
        r##"{"description":"Named entity: Otilde without a semi-colon","initialState":"Data","input":"&Otilde","inputUtf16":[38,79,116,105,108,100,101],"output":[{"Character":{"data":"√ï"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_761() {
    tokenize(
        r##"{"description":"Named entity: Otilde; with a semi-colon","initialState":"Data","input":"&Otilde;","inputUtf16":[38,79,116,105,108,100,101,59],"output":[{"Character":{"data":"√ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_762() {
    tokenize(
        r##"{"description":"Bad named entity: Otimes without a semi-colon","initialState":"Data","input":"&Otimes","inputUtf16":[38,79,116,105,109,101,115],"output":[{"Character":{"data":"&Otimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_763() {
    tokenize(
        r##"{"description":"Named entity: Otimes; with a semi-colon","initialState":"Data","input":"&Otimes;","inputUtf16":[38,79,116,105,109,101,115,59],"output":[{"Character":{"data":"‚®∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_764() {
    tokenize(
        r##"{"description":"Named entity: Ouml without a semi-colon","initialState":"Data","input":"&Ouml","inputUtf16":[38,79,117,109,108],"output":[{"Character":{"data":"√ñ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_765() {
    tokenize(
        r##"{"description":"Named entity: Ouml; with a semi-colon","initialState":"Data","input":"&Ouml;","inputUtf16":[38,79,117,109,108,59],"output":[{"Character":{"data":"√ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_766() {
    tokenize(
        r##"{"description":"Bad named entity: OverBar without a semi-colon","initialState":"Data","input":"&OverBar","inputUtf16":[38,79,118,101,114,66,97,114],"output":[{"Character":{"data":"&OverBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_767() {
    tokenize(
        r##"{"description":"Named entity: OverBar; with a semi-colon","initialState":"Data","input":"&OverBar;","inputUtf16":[38,79,118,101,114,66,97,114,59],"output":[{"Character":{"data":"‚Äæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_768() {
    tokenize(
        r##"{"description":"Bad named entity: OverBrace without a semi-colon","initialState":"Data","input":"&OverBrace","inputUtf16":[38,79,118,101,114,66,114,97,99,101],"output":[{"Character":{"data":"&OverBrace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_769() {
    tokenize(
        r##"{"description":"Named entity: OverBrace; with a semi-colon","initialState":"Data","input":"&OverBrace;","inputUtf16":[38,79,118,101,114,66,114,97,99,101,59],"output":[{"Character":{"data":"‚èû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_770() {
    tokenize(
        r##"{"description":"Bad named entity: OverBracket without a semi-colon","initialState":"Data","input":"&OverBracket","inputUtf16":[38,79,118,101,114,66,114,97,99,107,101,116],"output":[{"Character":{"data":"&OverBracket"}}],"errors":[]}"##,
    );
}

#[test]
fn test_771() {
    tokenize(
        r##"{"description":"Named entity: OverBracket; with a semi-colon","initialState":"Data","input":"&OverBracket;","inputUtf16":[38,79,118,101,114,66,114,97,99,107,101,116,59],"output":[{"Character":{"data":"‚é¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_772() {
    tokenize(
        r##"{"description":"Bad named entity: OverParenthesis without a semi-colon","initialState":"Data","input":"&OverParenthesis","inputUtf16":[38,79,118,101,114,80,97,114,101,110,116,104,101,115,105,115],"output":[{"Character":{"data":"&OverParenthesis"}}],"errors":[]}"##,
    );
}

#[test]
fn test_773() {
    tokenize(
        r##"{"description":"Named entity: OverParenthesis; with a semi-colon","initialState":"Data","input":"&OverParenthesis;","inputUtf16":[38,79,118,101,114,80,97,114,101,110,116,104,101,115,105,115,59],"output":[{"Character":{"data":"‚èú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_774() {
    tokenize(
        r##"{"description":"Bad named entity: PartialD without a semi-colon","initialState":"Data","input":"&PartialD","inputUtf16":[38,80,97,114,116,105,97,108,68],"output":[{"Character":{"data":"&PartialD"}}],"errors":[]}"##,
    );
}

#[test]
fn test_775() {
    tokenize(
        r##"{"description":"Named entity: PartialD; with a semi-colon","initialState":"Data","input":"&PartialD;","inputUtf16":[38,80,97,114,116,105,97,108,68,59],"output":[{"Character":{"data":"‚àÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_776() {
    tokenize(
        r##"{"description":"Bad named entity: Pcy without a semi-colon","initialState":"Data","input":"&Pcy","inputUtf16":[38,80,99,121],"output":[{"Character":{"data":"&Pcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_777() {
    tokenize(
        r##"{"description":"Named entity: Pcy; with a semi-colon","initialState":"Data","input":"&Pcy;","inputUtf16":[38,80,99,121,59],"output":[{"Character":{"data":"–ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_778() {
    tokenize(
        r##"{"description":"Bad named entity: Pfr without a semi-colon","initialState":"Data","input":"&Pfr","inputUtf16":[38,80,102,114],"output":[{"Character":{"data":"&Pfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_779() {
    tokenize(
        r##"{"description":"Named entity: Pfr; with a semi-colon","initialState":"Data","input":"&Pfr;","inputUtf16":[38,80,102,114,59],"output":[{"Character":{"data":"ùîì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_780() {
    tokenize(
        r##"{"description":"Bad named entity: Phi without a semi-colon","initialState":"Data","input":"&Phi","inputUtf16":[38,80,104,105],"output":[{"Character":{"data":"&Phi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_781() {
    tokenize(
        r##"{"description":"Named entity: Phi; with a semi-colon","initialState":"Data","input":"&Phi;","inputUtf16":[38,80,104,105,59],"output":[{"Character":{"data":"Œ¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_782() {
    tokenize(
        r##"{"description":"Bad named entity: Pi without a semi-colon","initialState":"Data","input":"&Pi","inputUtf16":[38,80,105],"output":[{"Character":{"data":"&Pi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_783() {
    tokenize(
        r##"{"description":"Named entity: Pi; with a semi-colon","initialState":"Data","input":"&Pi;","inputUtf16":[38,80,105,59],"output":[{"Character":{"data":"Œ†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_784() {
    tokenize(
        r##"{"description":"Bad named entity: PlusMinus without a semi-colon","initialState":"Data","input":"&PlusMinus","inputUtf16":[38,80,108,117,115,77,105,110,117,115],"output":[{"Character":{"data":"&PlusMinus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_785() {
    tokenize(
        r##"{"description":"Named entity: PlusMinus; with a semi-colon","initialState":"Data","input":"&PlusMinus;","inputUtf16":[38,80,108,117,115,77,105,110,117,115,59],"output":[{"Character":{"data":"¬±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_786() {
    tokenize(
        r##"{"description":"Bad named entity: Poincareplane without a semi-colon","initialState":"Data","input":"&Poincareplane","inputUtf16":[38,80,111,105,110,99,97,114,101,112,108,97,110,101],"output":[{"Character":{"data":"&Poincareplane"}}],"errors":[]}"##,
    );
}

#[test]
fn test_787() {
    tokenize(
        r##"{"description":"Named entity: Poincareplane; with a semi-colon","initialState":"Data","input":"&Poincareplane;","inputUtf16":[38,80,111,105,110,99,97,114,101,112,108,97,110,101,59],"output":[{"Character":{"data":"‚Ñå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_788() {
    tokenize(
        r##"{"description":"Bad named entity: Popf without a semi-colon","initialState":"Data","input":"&Popf","inputUtf16":[38,80,111,112,102],"output":[{"Character":{"data":"&Popf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_789() {
    tokenize(
        r##"{"description":"Named entity: Popf; with a semi-colon","initialState":"Data","input":"&Popf;","inputUtf16":[38,80,111,112,102,59],"output":[{"Character":{"data":"‚Ñô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_790() {
    tokenize(
        r##"{"description":"Bad named entity: Pr without a semi-colon","initialState":"Data","input":"&Pr","inputUtf16":[38,80,114],"output":[{"Character":{"data":"&Pr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_791() {
    tokenize(
        r##"{"description":"Named entity: Pr; with a semi-colon","initialState":"Data","input":"&Pr;","inputUtf16":[38,80,114,59],"output":[{"Character":{"data":"‚™ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_792() {
    tokenize(
        r##"{"description":"Bad named entity: Precedes without a semi-colon","initialState":"Data","input":"&Precedes","inputUtf16":[38,80,114,101,99,101,100,101,115],"output":[{"Character":{"data":"&Precedes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_793() {
    tokenize(
        r##"{"description":"Named entity: Precedes; with a semi-colon","initialState":"Data","input":"&Precedes;","inputUtf16":[38,80,114,101,99,101,100,101,115,59],"output":[{"Character":{"data":"‚â∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_794() {
    tokenize(
        r##"{"description":"Bad named entity: PrecedesEqual without a semi-colon","initialState":"Data","input":"&PrecedesEqual","inputUtf16":[38,80,114,101,99,101,100,101,115,69,113,117,97,108],"output":[{"Character":{"data":"&PrecedesEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_795() {
    tokenize(
        r##"{"description":"Named entity: PrecedesEqual; with a semi-colon","initialState":"Data","input":"&PrecedesEqual;","inputUtf16":[38,80,114,101,99,101,100,101,115,69,113,117,97,108,59],"output":[{"Character":{"data":"‚™Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_796() {
    tokenize(
        r##"{"description":"Bad named entity: PrecedesSlantEqual without a semi-colon","initialState":"Data","input":"&PrecedesSlantEqual","inputUtf16":[38,80,114,101,99,101,100,101,115,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&PrecedesSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_797() {
    tokenize(
        r##"{"description":"Named entity: PrecedesSlantEqual; with a semi-colon","initialState":"Data","input":"&PrecedesSlantEqual;","inputUtf16":[38,80,114,101,99,101,100,101,115,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_798() {
    tokenize(
        r##"{"description":"Bad named entity: PrecedesTilde without a semi-colon","initialState":"Data","input":"&PrecedesTilde","inputUtf16":[38,80,114,101,99,101,100,101,115,84,105,108,100,101],"output":[{"Character":{"data":"&PrecedesTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_799() {
    tokenize(
        r##"{"description":"Named entity: PrecedesTilde; with a semi-colon","initialState":"Data","input":"&PrecedesTilde;","inputUtf16":[38,80,114,101,99,101,100,101,115,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_800() {
    tokenize(
        r##"{"description":"Bad named entity: Prime without a semi-colon","initialState":"Data","input":"&Prime","inputUtf16":[38,80,114,105,109,101],"output":[{"Character":{"data":"&Prime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_801() {
    tokenize(
        r##"{"description":"Named entity: Prime; with a semi-colon","initialState":"Data","input":"&Prime;","inputUtf16":[38,80,114,105,109,101,59],"output":[{"Character":{"data":"‚Ä≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_802() {
    tokenize(
        r##"{"description":"Bad named entity: Product without a semi-colon","initialState":"Data","input":"&Product","inputUtf16":[38,80,114,111,100,117,99,116],"output":[{"Character":{"data":"&Product"}}],"errors":[]}"##,
    );
}

#[test]
fn test_803() {
    tokenize(
        r##"{"description":"Named entity: Product; with a semi-colon","initialState":"Data","input":"&Product;","inputUtf16":[38,80,114,111,100,117,99,116,59],"output":[{"Character":{"data":"‚àè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_804() {
    tokenize(
        r##"{"description":"Bad named entity: Proportion without a semi-colon","initialState":"Data","input":"&Proportion","inputUtf16":[38,80,114,111,112,111,114,116,105,111,110],"output":[{"Character":{"data":"&Proportion"}}],"errors":[]}"##,
    );
}

#[test]
fn test_805() {
    tokenize(
        r##"{"description":"Named entity: Proportion; with a semi-colon","initialState":"Data","input":"&Proportion;","inputUtf16":[38,80,114,111,112,111,114,116,105,111,110,59],"output":[{"Character":{"data":"‚à∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_806() {
    tokenize(
        r##"{"description":"Bad named entity: Proportional without a semi-colon","initialState":"Data","input":"&Proportional","inputUtf16":[38,80,114,111,112,111,114,116,105,111,110,97,108],"output":[{"Character":{"data":"&Proportional"}}],"errors":[]}"##,
    );
}

#[test]
fn test_807() {
    tokenize(
        r##"{"description":"Named entity: Proportional; with a semi-colon","initialState":"Data","input":"&Proportional;","inputUtf16":[38,80,114,111,112,111,114,116,105,111,110,97,108,59],"output":[{"Character":{"data":"‚àù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_808() {
    tokenize(
        r##"{"description":"Bad named entity: Pscr without a semi-colon","initialState":"Data","input":"&Pscr","inputUtf16":[38,80,115,99,114],"output":[{"Character":{"data":"&Pscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_809() {
    tokenize(
        r##"{"description":"Named entity: Pscr; with a semi-colon","initialState":"Data","input":"&Pscr;","inputUtf16":[38,80,115,99,114,59],"output":[{"Character":{"data":"ùí´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_810() {
    tokenize(
        r##"{"description":"Bad named entity: Psi without a semi-colon","initialState":"Data","input":"&Psi","inputUtf16":[38,80,115,105],"output":[{"Character":{"data":"&Psi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_811() {
    tokenize(
        r##"{"description":"Named entity: Psi; with a semi-colon","initialState":"Data","input":"&Psi;","inputUtf16":[38,80,115,105,59],"output":[{"Character":{"data":"Œ®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_812() {
    tokenize(
        r##"{"description":"Named entity: QUOT without a semi-colon","initialState":"Data","input":"&QUOT","inputUtf16":[38,81,85,79,84],"output":[{"Character":{"data":"\""}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_813() {
    tokenize(
        r##"{"description":"Named entity: QUOT; with a semi-colon","initialState":"Data","input":"&QUOT;","inputUtf16":[38,81,85,79,84,59],"output":[{"Character":{"data":"\""}}],"errors":[]}"##,
    );
}

#[test]
fn test_814() {
    tokenize(
        r##"{"description":"Bad named entity: Qfr without a semi-colon","initialState":"Data","input":"&Qfr","inputUtf16":[38,81,102,114],"output":[{"Character":{"data":"&Qfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_815() {
    tokenize(
        r##"{"description":"Named entity: Qfr; with a semi-colon","initialState":"Data","input":"&Qfr;","inputUtf16":[38,81,102,114,59],"output":[{"Character":{"data":"ùîî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_816() {
    tokenize(
        r##"{"description":"Bad named entity: Qopf without a semi-colon","initialState":"Data","input":"&Qopf","inputUtf16":[38,81,111,112,102],"output":[{"Character":{"data":"&Qopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_817() {
    tokenize(
        r##"{"description":"Named entity: Qopf; with a semi-colon","initialState":"Data","input":"&Qopf;","inputUtf16":[38,81,111,112,102,59],"output":[{"Character":{"data":"‚Ñö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_818() {
    tokenize(
        r##"{"description":"Bad named entity: Qscr without a semi-colon","initialState":"Data","input":"&Qscr","inputUtf16":[38,81,115,99,114],"output":[{"Character":{"data":"&Qscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_819() {
    tokenize(
        r##"{"description":"Named entity: Qscr; with a semi-colon","initialState":"Data","input":"&Qscr;","inputUtf16":[38,81,115,99,114,59],"output":[{"Character":{"data":"ùí¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_820() {
    tokenize(
        r##"{"description":"Bad named entity: RBarr without a semi-colon","initialState":"Data","input":"&RBarr","inputUtf16":[38,82,66,97,114,114],"output":[{"Character":{"data":"&RBarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_821() {
    tokenize(
        r##"{"description":"Named entity: RBarr; with a semi-colon","initialState":"Data","input":"&RBarr;","inputUtf16":[38,82,66,97,114,114,59],"output":[{"Character":{"data":"‚§ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_822() {
    tokenize(
        r##"{"description":"Named entity: REG without a semi-colon","initialState":"Data","input":"&REG","inputUtf16":[38,82,69,71],"output":[{"Character":{"data":"¬Æ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_823() {
    tokenize(
        r##"{"description":"Named entity: REG; with a semi-colon","initialState":"Data","input":"&REG;","inputUtf16":[38,82,69,71,59],"output":[{"Character":{"data":"¬Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_824() {
    tokenize(
        r##"{"description":"Bad named entity: Racute without a semi-colon","initialState":"Data","input":"&Racute","inputUtf16":[38,82,97,99,117,116,101],"output":[{"Character":{"data":"&Racute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_825() {
    tokenize(
        r##"{"description":"Named entity: Racute; with a semi-colon","initialState":"Data","input":"&Racute;","inputUtf16":[38,82,97,99,117,116,101,59],"output":[{"Character":{"data":"≈î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_826() {
    tokenize(
        r##"{"description":"Bad named entity: Rang without a semi-colon","initialState":"Data","input":"&Rang","inputUtf16":[38,82,97,110,103],"output":[{"Character":{"data":"&Rang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_827() {
    tokenize(
        r##"{"description":"Named entity: Rang; with a semi-colon","initialState":"Data","input":"&Rang;","inputUtf16":[38,82,97,110,103,59],"output":[{"Character":{"data":"‚ü´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_828() {
    tokenize(
        r##"{"description":"Bad named entity: Rarr without a semi-colon","initialState":"Data","input":"&Rarr","inputUtf16":[38,82,97,114,114],"output":[{"Character":{"data":"&Rarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_829() {
    tokenize(
        r##"{"description":"Named entity: Rarr; with a semi-colon","initialState":"Data","input":"&Rarr;","inputUtf16":[38,82,97,114,114,59],"output":[{"Character":{"data":"‚Ü†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_830() {
    tokenize(
        r##"{"description":"Bad named entity: Rarrtl without a semi-colon","initialState":"Data","input":"&Rarrtl","inputUtf16":[38,82,97,114,114,116,108],"output":[{"Character":{"data":"&Rarrtl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_831() {
    tokenize(
        r##"{"description":"Named entity: Rarrtl; with a semi-colon","initialState":"Data","input":"&Rarrtl;","inputUtf16":[38,82,97,114,114,116,108,59],"output":[{"Character":{"data":"‚§ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_832() {
    tokenize(
        r##"{"description":"Bad named entity: Rcaron without a semi-colon","initialState":"Data","input":"&Rcaron","inputUtf16":[38,82,99,97,114,111,110],"output":[{"Character":{"data":"&Rcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_833() {
    tokenize(
        r##"{"description":"Named entity: Rcaron; with a semi-colon","initialState":"Data","input":"&Rcaron;","inputUtf16":[38,82,99,97,114,111,110,59],"output":[{"Character":{"data":"≈ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_834() {
    tokenize(
        r##"{"description":"Bad named entity: Rcedil without a semi-colon","initialState":"Data","input":"&Rcedil","inputUtf16":[38,82,99,101,100,105,108],"output":[{"Character":{"data":"&Rcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_835() {
    tokenize(
        r##"{"description":"Named entity: Rcedil; with a semi-colon","initialState":"Data","input":"&Rcedil;","inputUtf16":[38,82,99,101,100,105,108,59],"output":[{"Character":{"data":"≈ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_836() {
    tokenize(
        r##"{"description":"Bad named entity: Rcy without a semi-colon","initialState":"Data","input":"&Rcy","inputUtf16":[38,82,99,121],"output":[{"Character":{"data":"&Rcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_837() {
    tokenize(
        r##"{"description":"Named entity: Rcy; with a semi-colon","initialState":"Data","input":"&Rcy;","inputUtf16":[38,82,99,121,59],"output":[{"Character":{"data":"–†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_838() {
    tokenize(
        r##"{"description":"Bad named entity: Re without a semi-colon","initialState":"Data","input":"&Re","inputUtf16":[38,82,101],"output":[{"Character":{"data":"&Re"}}],"errors":[]}"##,
    );
}

#[test]
fn test_839() {
    tokenize(
        r##"{"description":"Named entity: Re; with a semi-colon","initialState":"Data","input":"&Re;","inputUtf16":[38,82,101,59],"output":[{"Character":{"data":"‚Ñú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_840() {
    tokenize(
        r##"{"description":"Bad named entity: ReverseElement without a semi-colon","initialState":"Data","input":"&ReverseElement","inputUtf16":[38,82,101,118,101,114,115,101,69,108,101,109,101,110,116],"output":[{"Character":{"data":"&ReverseElement"}}],"errors":[]}"##,
    );
}

#[test]
fn test_841() {
    tokenize(
        r##"{"description":"Named entity: ReverseElement; with a semi-colon","initialState":"Data","input":"&ReverseElement;","inputUtf16":[38,82,101,118,101,114,115,101,69,108,101,109,101,110,116,59],"output":[{"Character":{"data":"‚àã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_842() {
    tokenize(
        r##"{"description":"Bad named entity: ReverseEquilibrium without a semi-colon","initialState":"Data","input":"&ReverseEquilibrium","inputUtf16":[38,82,101,118,101,114,115,101,69,113,117,105,108,105,98,114,105,117,109],"output":[{"Character":{"data":"&ReverseEquilibrium"}}],"errors":[]}"##,
    );
}

#[test]
fn test_843() {
    tokenize(
        r##"{"description":"Named entity: ReverseEquilibrium; with a semi-colon","initialState":"Data","input":"&ReverseEquilibrium;","inputUtf16":[38,82,101,118,101,114,115,101,69,113,117,105,108,105,98,114,105,117,109,59],"output":[{"Character":{"data":"‚áã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_844() {
    tokenize(
        r##"{"description":"Bad named entity: ReverseUpEquilibrium without a semi-colon","initialState":"Data","input":"&ReverseUpEquilibrium","inputUtf16":[38,82,101,118,101,114,115,101,85,112,69,113,117,105,108,105,98,114,105,117,109],"output":[{"Character":{"data":"&ReverseUpEquilibrium"}}],"errors":[]}"##,
    );
}

#[test]
fn test_845() {
    tokenize(
        r##"{"description":"Named entity: ReverseUpEquilibrium; with a semi-colon","initialState":"Data","input":"&ReverseUpEquilibrium;","inputUtf16":[38,82,101,118,101,114,115,101,85,112,69,113,117,105,108,105,98,114,105,117,109,59],"output":[{"Character":{"data":"‚•Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_846() {
    tokenize(
        r##"{"description":"Bad named entity: Rfr without a semi-colon","initialState":"Data","input":"&Rfr","inputUtf16":[38,82,102,114],"output":[{"Character":{"data":"&Rfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_847() {
    tokenize(
        r##"{"description":"Named entity: Rfr; with a semi-colon","initialState":"Data","input":"&Rfr;","inputUtf16":[38,82,102,114,59],"output":[{"Character":{"data":"‚Ñú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_848() {
    tokenize(
        r##"{"description":"Bad named entity: Rho without a semi-colon","initialState":"Data","input":"&Rho","inputUtf16":[38,82,104,111],"output":[{"Character":{"data":"&Rho"}}],"errors":[]}"##,
    );
}

#[test]
fn test_849() {
    tokenize(
        r##"{"description":"Named entity: Rho; with a semi-colon","initialState":"Data","input":"&Rho;","inputUtf16":[38,82,104,111,59],"output":[{"Character":{"data":"Œ°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_850() {
    tokenize(
        r##"{"description":"Bad named entity: RightAngleBracket without a semi-colon","initialState":"Data","input":"&RightAngleBracket","inputUtf16":[38,82,105,103,104,116,65,110,103,108,101,66,114,97,99,107,101,116],"output":[{"Character":{"data":"&RightAngleBracket"}}],"errors":[]}"##,
    );
}

#[test]
fn test_851() {
    tokenize(
        r##"{"description":"Named entity: RightAngleBracket; with a semi-colon","initialState":"Data","input":"&RightAngleBracket;","inputUtf16":[38,82,105,103,104,116,65,110,103,108,101,66,114,97,99,107,101,116,59],"output":[{"Character":{"data":"‚ü©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_852() {
    tokenize(
        r##"{"description":"Bad named entity: RightArrow without a semi-colon","initialState":"Data","input":"&RightArrow","inputUtf16":[38,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&RightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_853() {
    tokenize(
        r##"{"description":"Named entity: RightArrow; with a semi-colon","initialState":"Data","input":"&RightArrow;","inputUtf16":[38,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_854() {
    tokenize(
        r##"{"description":"Bad named entity: RightArrowBar without a semi-colon","initialState":"Data","input":"&RightArrowBar","inputUtf16":[38,82,105,103,104,116,65,114,114,111,119,66,97,114],"output":[{"Character":{"data":"&RightArrowBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_855() {
    tokenize(
        r##"{"description":"Named entity: RightArrowBar; with a semi-colon","initialState":"Data","input":"&RightArrowBar;","inputUtf16":[38,82,105,103,104,116,65,114,114,111,119,66,97,114,59],"output":[{"Character":{"data":"‚á•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_856() {
    tokenize(
        r##"{"description":"Bad named entity: RightArrowLeftArrow without a semi-colon","initialState":"Data","input":"&RightArrowLeftArrow","inputUtf16":[38,82,105,103,104,116,65,114,114,111,119,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&RightArrowLeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_857() {
    tokenize(
        r##"{"description":"Named entity: RightArrowLeftArrow; with a semi-colon","initialState":"Data","input":"&RightArrowLeftArrow;","inputUtf16":[38,82,105,103,104,116,65,114,114,111,119,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_858() {
    tokenize(
        r##"{"description":"Bad named entity: RightCeiling without a semi-colon","initialState":"Data","input":"&RightCeiling","inputUtf16":[38,82,105,103,104,116,67,101,105,108,105,110,103],"output":[{"Character":{"data":"&RightCeiling"}}],"errors":[]}"##,
    );
}

#[test]
fn test_859() {
    tokenize(
        r##"{"description":"Named entity: RightCeiling; with a semi-colon","initialState":"Data","input":"&RightCeiling;","inputUtf16":[38,82,105,103,104,116,67,101,105,108,105,110,103,59],"output":[{"Character":{"data":"‚åâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_860() {
    tokenize(
        r##"{"description":"Bad named entity: RightDoubleBracket without a semi-colon","initialState":"Data","input":"&RightDoubleBracket","inputUtf16":[38,82,105,103,104,116,68,111,117,98,108,101,66,114,97,99,107,101,116],"output":[{"Character":{"data":"&RightDoubleBracket"}}],"errors":[]}"##,
    );
}

#[test]
fn test_861() {
    tokenize(
        r##"{"description":"Named entity: RightDoubleBracket; with a semi-colon","initialState":"Data","input":"&RightDoubleBracket;","inputUtf16":[38,82,105,103,104,116,68,111,117,98,108,101,66,114,97,99,107,101,116,59],"output":[{"Character":{"data":"‚üß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_862() {
    tokenize(
        r##"{"description":"Bad named entity: RightDownTeeVector without a semi-colon","initialState":"Data","input":"&RightDownTeeVector","inputUtf16":[38,82,105,103,104,116,68,111,119,110,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&RightDownTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_863() {
    tokenize(
        r##"{"description":"Named entity: RightDownTeeVector; with a semi-colon","initialState":"Data","input":"&RightDownTeeVector;","inputUtf16":[38,82,105,103,104,116,68,111,119,110,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_864() {
    tokenize(
        r##"{"description":"Bad named entity: RightDownVector without a semi-colon","initialState":"Data","input":"&RightDownVector","inputUtf16":[38,82,105,103,104,116,68,111,119,110,86,101,99,116,111,114],"output":[{"Character":{"data":"&RightDownVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_865() {
    tokenize(
        r##"{"description":"Named entity: RightDownVector; with a semi-colon","initialState":"Data","input":"&RightDownVector;","inputUtf16":[38,82,105,103,104,116,68,111,119,110,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚áÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_866() {
    tokenize(
        r##"{"description":"Bad named entity: RightDownVectorBar without a semi-colon","initialState":"Data","input":"&RightDownVectorBar","inputUtf16":[38,82,105,103,104,116,68,111,119,110,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&RightDownVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_867() {
    tokenize(
        r##"{"description":"Named entity: RightDownVectorBar; with a semi-colon","initialState":"Data","input":"&RightDownVectorBar;","inputUtf16":[38,82,105,103,104,116,68,111,119,110,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_868() {
    tokenize(
        r##"{"description":"Bad named entity: RightFloor without a semi-colon","initialState":"Data","input":"&RightFloor","inputUtf16":[38,82,105,103,104,116,70,108,111,111,114],"output":[{"Character":{"data":"&RightFloor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_869() {
    tokenize(
        r##"{"description":"Named entity: RightFloor; with a semi-colon","initialState":"Data","input":"&RightFloor;","inputUtf16":[38,82,105,103,104,116,70,108,111,111,114,59],"output":[{"Character":{"data":"‚åã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_870() {
    tokenize(
        r##"{"description":"Bad named entity: RightTee without a semi-colon","initialState":"Data","input":"&RightTee","inputUtf16":[38,82,105,103,104,116,84,101,101],"output":[{"Character":{"data":"&RightTee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_871() {
    tokenize(
        r##"{"description":"Named entity: RightTee; with a semi-colon","initialState":"Data","input":"&RightTee;","inputUtf16":[38,82,105,103,104,116,84,101,101,59],"output":[{"Character":{"data":"‚ä¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_872() {
    tokenize(
        r##"{"description":"Bad named entity: RightTeeArrow without a semi-colon","initialState":"Data","input":"&RightTeeArrow","inputUtf16":[38,82,105,103,104,116,84,101,101,65,114,114,111,119],"output":[{"Character":{"data":"&RightTeeArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_873() {
    tokenize(
        r##"{"description":"Named entity: RightTeeArrow; with a semi-colon","initialState":"Data","input":"&RightTeeArrow;","inputUtf16":[38,82,105,103,104,116,84,101,101,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Ü¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_874() {
    tokenize(
        r##"{"description":"Bad named entity: RightTeeVector without a semi-colon","initialState":"Data","input":"&RightTeeVector","inputUtf16":[38,82,105,103,104,116,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&RightTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_875() {
    tokenize(
        r##"{"description":"Named entity: RightTeeVector; with a semi-colon","initialState":"Data","input":"&RightTeeVector;","inputUtf16":[38,82,105,103,104,116,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_876() {
    tokenize(
        r##"{"description":"Bad named entity: RightTriangle without a semi-colon","initialState":"Data","input":"&RightTriangle","inputUtf16":[38,82,105,103,104,116,84,114,105,97,110,103,108,101],"output":[{"Character":{"data":"&RightTriangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_877() {
    tokenize(
        r##"{"description":"Named entity: RightTriangle; with a semi-colon","initialState":"Data","input":"&RightTriangle;","inputUtf16":[38,82,105,103,104,116,84,114,105,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ä≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_878() {
    tokenize(
        r##"{"description":"Bad named entity: RightTriangleBar without a semi-colon","initialState":"Data","input":"&RightTriangleBar","inputUtf16":[38,82,105,103,104,116,84,114,105,97,110,103,108,101,66,97,114],"output":[{"Character":{"data":"&RightTriangleBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_879() {
    tokenize(
        r##"{"description":"Named entity: RightTriangleBar; with a semi-colon","initialState":"Data","input":"&RightTriangleBar;","inputUtf16":[38,82,105,103,104,116,84,114,105,97,110,103,108,101,66,97,114,59],"output":[{"Character":{"data":"‚ßê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_880() {
    tokenize(
        r##"{"description":"Bad named entity: RightTriangleEqual without a semi-colon","initialState":"Data","input":"&RightTriangleEqual","inputUtf16":[38,82,105,103,104,116,84,114,105,97,110,103,108,101,69,113,117,97,108],"output":[{"Character":{"data":"&RightTriangleEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_881() {
    tokenize(
        r##"{"description":"Named entity: RightTriangleEqual; with a semi-colon","initialState":"Data","input":"&RightTriangleEqual;","inputUtf16":[38,82,105,103,104,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],"output":[{"Character":{"data":"‚äµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_882() {
    tokenize(
        r##"{"description":"Bad named entity: RightUpDownVector without a semi-colon","initialState":"Data","input":"&RightUpDownVector","inputUtf16":[38,82,105,103,104,116,85,112,68,111,119,110,86,101,99,116,111,114],"output":[{"Character":{"data":"&RightUpDownVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_883() {
    tokenize(
        r##"{"description":"Named entity: RightUpDownVector; with a semi-colon","initialState":"Data","input":"&RightUpDownVector;","inputUtf16":[38,82,105,103,104,116,85,112,68,111,119,110,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_884() {
    tokenize(
        r##"{"description":"Bad named entity: RightUpTeeVector without a semi-colon","initialState":"Data","input":"&RightUpTeeVector","inputUtf16":[38,82,105,103,104,116,85,112,84,101,101,86,101,99,116,111,114],"output":[{"Character":{"data":"&RightUpTeeVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_885() {
    tokenize(
        r##"{"description":"Named entity: RightUpTeeVector; with a semi-colon","initialState":"Data","input":"&RightUpTeeVector;","inputUtf16":[38,82,105,103,104,116,85,112,84,101,101,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚•ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_886() {
    tokenize(
        r##"{"description":"Bad named entity: RightUpVector without a semi-colon","initialState":"Data","input":"&RightUpVector","inputUtf16":[38,82,105,103,104,116,85,112,86,101,99,116,111,114],"output":[{"Character":{"data":"&RightUpVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_887() {
    tokenize(
        r##"{"description":"Named entity: RightUpVector; with a semi-colon","initialState":"Data","input":"&RightUpVector;","inputUtf16":[38,82,105,103,104,116,85,112,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚Üæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_888() {
    tokenize(
        r##"{"description":"Bad named entity: RightUpVectorBar without a semi-colon","initialState":"Data","input":"&RightUpVectorBar","inputUtf16":[38,82,105,103,104,116,85,112,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&RightUpVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_889() {
    tokenize(
        r##"{"description":"Named entity: RightUpVectorBar; with a semi-colon","initialState":"Data","input":"&RightUpVectorBar;","inputUtf16":[38,82,105,103,104,116,85,112,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_890() {
    tokenize(
        r##"{"description":"Bad named entity: RightVector without a semi-colon","initialState":"Data","input":"&RightVector","inputUtf16":[38,82,105,103,104,116,86,101,99,116,111,114],"output":[{"Character":{"data":"&RightVector"}}],"errors":[]}"##,
    );
}

#[test]
fn test_891() {
    tokenize(
        r##"{"description":"Named entity: RightVector; with a semi-colon","initialState":"Data","input":"&RightVector;","inputUtf16":[38,82,105,103,104,116,86,101,99,116,111,114,59],"output":[{"Character":{"data":"‚áÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_892() {
    tokenize(
        r##"{"description":"Bad named entity: RightVectorBar without a semi-colon","initialState":"Data","input":"&RightVectorBar","inputUtf16":[38,82,105,103,104,116,86,101,99,116,111,114,66,97,114],"output":[{"Character":{"data":"&RightVectorBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_893() {
    tokenize(
        r##"{"description":"Named entity: RightVectorBar; with a semi-colon","initialState":"Data","input":"&RightVectorBar;","inputUtf16":[38,82,105,103,104,116,86,101,99,116,111,114,66,97,114,59],"output":[{"Character":{"data":"‚•ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_894() {
    tokenize(
        r##"{"description":"Bad named entity: Rightarrow without a semi-colon","initialState":"Data","input":"&Rightarrow","inputUtf16":[38,82,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&Rightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_895() {
    tokenize(
        r##"{"description":"Named entity: Rightarrow; with a semi-colon","initialState":"Data","input":"&Rightarrow;","inputUtf16":[38,82,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_896() {
    tokenize(
        r##"{"description":"Bad named entity: Ropf without a semi-colon","initialState":"Data","input":"&Ropf","inputUtf16":[38,82,111,112,102],"output":[{"Character":{"data":"&Ropf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_897() {
    tokenize(
        r##"{"description":"Named entity: Ropf; with a semi-colon","initialState":"Data","input":"&Ropf;","inputUtf16":[38,82,111,112,102,59],"output":[{"Character":{"data":"‚Ñù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_898() {
    tokenize(
        r##"{"description":"Bad named entity: RoundImplies without a semi-colon","initialState":"Data","input":"&RoundImplies","inputUtf16":[38,82,111,117,110,100,73,109,112,108,105,101,115],"output":[{"Character":{"data":"&RoundImplies"}}],"errors":[]}"##,
    );
}

#[test]
fn test_899() {
    tokenize(
        r##"{"description":"Named entity: RoundImplies; with a semi-colon","initialState":"Data","input":"&RoundImplies;","inputUtf16":[38,82,111,117,110,100,73,109,112,108,105,101,115,59],"output":[{"Character":{"data":"‚•∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_900() {
    tokenize(
        r##"{"description":"Bad named entity: Rrightarrow without a semi-colon","initialState":"Data","input":"&Rrightarrow","inputUtf16":[38,82,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&Rrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_901() {
    tokenize(
        r##"{"description":"Named entity: Rrightarrow; with a semi-colon","initialState":"Data","input":"&Rrightarrow;","inputUtf16":[38,82,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_902() {
    tokenize(
        r##"{"description":"Bad named entity: Rscr without a semi-colon","initialState":"Data","input":"&Rscr","inputUtf16":[38,82,115,99,114],"output":[{"Character":{"data":"&Rscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_903() {
    tokenize(
        r##"{"description":"Named entity: Rscr; with a semi-colon","initialState":"Data","input":"&Rscr;","inputUtf16":[38,82,115,99,114,59],"output":[{"Character":{"data":"‚Ñõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_904() {
    tokenize(
        r##"{"description":"Bad named entity: Rsh without a semi-colon","initialState":"Data","input":"&Rsh","inputUtf16":[38,82,115,104],"output":[{"Character":{"data":"&Rsh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_905() {
    tokenize(
        r##"{"description":"Named entity: Rsh; with a semi-colon","initialState":"Data","input":"&Rsh;","inputUtf16":[38,82,115,104,59],"output":[{"Character":{"data":"‚Ü±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_906() {
    tokenize(
        r##"{"description":"Bad named entity: RuleDelayed without a semi-colon","initialState":"Data","input":"&RuleDelayed","inputUtf16":[38,82,117,108,101,68,101,108,97,121,101,100],"output":[{"Character":{"data":"&RuleDelayed"}}],"errors":[]}"##,
    );
}

#[test]
fn test_907() {
    tokenize(
        r##"{"description":"Named entity: RuleDelayed; with a semi-colon","initialState":"Data","input":"&RuleDelayed;","inputUtf16":[38,82,117,108,101,68,101,108,97,121,101,100,59],"output":[{"Character":{"data":"‚ß¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_908() {
    tokenize(
        r##"{"description":"Bad named entity: SHCHcy without a semi-colon","initialState":"Data","input":"&SHCHcy","inputUtf16":[38,83,72,67,72,99,121],"output":[{"Character":{"data":"&SHCHcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_909() {
    tokenize(
        r##"{"description":"Named entity: SHCHcy; with a semi-colon","initialState":"Data","input":"&SHCHcy;","inputUtf16":[38,83,72,67,72,99,121,59],"output":[{"Character":{"data":"–©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_910() {
    tokenize(
        r##"{"description":"Bad named entity: SHcy without a semi-colon","initialState":"Data","input":"&SHcy","inputUtf16":[38,83,72,99,121],"output":[{"Character":{"data":"&SHcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_911() {
    tokenize(
        r##"{"description":"Named entity: SHcy; with a semi-colon","initialState":"Data","input":"&SHcy;","inputUtf16":[38,83,72,99,121,59],"output":[{"Character":{"data":"–®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_912() {
    tokenize(
        r##"{"description":"Bad named entity: SOFTcy without a semi-colon","initialState":"Data","input":"&SOFTcy","inputUtf16":[38,83,79,70,84,99,121],"output":[{"Character":{"data":"&SOFTcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_913() {
    tokenize(
        r##"{"description":"Named entity: SOFTcy; with a semi-colon","initialState":"Data","input":"&SOFTcy;","inputUtf16":[38,83,79,70,84,99,121,59],"output":[{"Character":{"data":"–¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_914() {
    tokenize(
        r##"{"description":"Bad named entity: Sacute without a semi-colon","initialState":"Data","input":"&Sacute","inputUtf16":[38,83,97,99,117,116,101],"output":[{"Character":{"data":"&Sacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_915() {
    tokenize(
        r##"{"description":"Named entity: Sacute; with a semi-colon","initialState":"Data","input":"&Sacute;","inputUtf16":[38,83,97,99,117,116,101,59],"output":[{"Character":{"data":"≈ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_916() {
    tokenize(
        r##"{"description":"Bad named entity: Sc without a semi-colon","initialState":"Data","input":"&Sc","inputUtf16":[38,83,99],"output":[{"Character":{"data":"&Sc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_917() {
    tokenize(
        r##"{"description":"Named entity: Sc; with a semi-colon","initialState":"Data","input":"&Sc;","inputUtf16":[38,83,99,59],"output":[{"Character":{"data":"‚™º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_918() {
    tokenize(
        r##"{"description":"Bad named entity: Scaron without a semi-colon","initialState":"Data","input":"&Scaron","inputUtf16":[38,83,99,97,114,111,110],"output":[{"Character":{"data":"&Scaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_919() {
    tokenize(
        r##"{"description":"Named entity: Scaron; with a semi-colon","initialState":"Data","input":"&Scaron;","inputUtf16":[38,83,99,97,114,111,110,59],"output":[{"Character":{"data":"≈†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_920() {
    tokenize(
        r##"{"description":"Bad named entity: Scedil without a semi-colon","initialState":"Data","input":"&Scedil","inputUtf16":[38,83,99,101,100,105,108],"output":[{"Character":{"data":"&Scedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_921() {
    tokenize(
        r##"{"description":"Named entity: Scedil; with a semi-colon","initialState":"Data","input":"&Scedil;","inputUtf16":[38,83,99,101,100,105,108,59],"output":[{"Character":{"data":"≈û"}}],"errors":[]}"##,
    );
}

#[test]
fn test_922() {
    tokenize(
        r##"{"description":"Bad named entity: Scirc without a semi-colon","initialState":"Data","input":"&Scirc","inputUtf16":[38,83,99,105,114,99],"output":[{"Character":{"data":"&Scirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_923() {
    tokenize(
        r##"{"description":"Named entity: Scirc; with a semi-colon","initialState":"Data","input":"&Scirc;","inputUtf16":[38,83,99,105,114,99,59],"output":[{"Character":{"data":"≈ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_924() {
    tokenize(
        r##"{"description":"Bad named entity: Scy without a semi-colon","initialState":"Data","input":"&Scy","inputUtf16":[38,83,99,121],"output":[{"Character":{"data":"&Scy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_925() {
    tokenize(
        r##"{"description":"Named entity: Scy; with a semi-colon","initialState":"Data","input":"&Scy;","inputUtf16":[38,83,99,121,59],"output":[{"Character":{"data":"–°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_926() {
    tokenize(
        r##"{"description":"Bad named entity: Sfr without a semi-colon","initialState":"Data","input":"&Sfr","inputUtf16":[38,83,102,114],"output":[{"Character":{"data":"&Sfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_927() {
    tokenize(
        r##"{"description":"Named entity: Sfr; with a semi-colon","initialState":"Data","input":"&Sfr;","inputUtf16":[38,83,102,114,59],"output":[{"Character":{"data":"ùîñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_928() {
    tokenize(
        r##"{"description":"Bad named entity: ShortDownArrow without a semi-colon","initialState":"Data","input":"&ShortDownArrow","inputUtf16":[38,83,104,111,114,116,68,111,119,110,65,114,114,111,119],"output":[{"Character":{"data":"&ShortDownArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_929() {
    tokenize(
        r##"{"description":"Named entity: ShortDownArrow; with a semi-colon","initialState":"Data","input":"&ShortDownArrow;","inputUtf16":[38,83,104,111,114,116,68,111,119,110,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_930() {
    tokenize(
        r##"{"description":"Bad named entity: ShortLeftArrow without a semi-colon","initialState":"Data","input":"&ShortLeftArrow","inputUtf16":[38,83,104,111,114,116,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&ShortLeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_931() {
    tokenize(
        r##"{"description":"Named entity: ShortLeftArrow; with a semi-colon","initialState":"Data","input":"&ShortLeftArrow;","inputUtf16":[38,83,104,111,114,116,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_932() {
    tokenize(
        r##"{"description":"Bad named entity: ShortRightArrow without a semi-colon","initialState":"Data","input":"&ShortRightArrow","inputUtf16":[38,83,104,111,114,116,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&ShortRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_933() {
    tokenize(
        r##"{"description":"Named entity: ShortRightArrow; with a semi-colon","initialState":"Data","input":"&ShortRightArrow;","inputUtf16":[38,83,104,111,114,116,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_934() {
    tokenize(
        r##"{"description":"Bad named entity: ShortUpArrow without a semi-colon","initialState":"Data","input":"&ShortUpArrow","inputUtf16":[38,83,104,111,114,116,85,112,65,114,114,111,119],"output":[{"Character":{"data":"&ShortUpArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_935() {
    tokenize(
        r##"{"description":"Named entity: ShortUpArrow; with a semi-colon","initialState":"Data","input":"&ShortUpArrow;","inputUtf16":[38,83,104,111,114,116,85,112,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_936() {
    tokenize(
        r##"{"description":"Bad named entity: Sigma without a semi-colon","initialState":"Data","input":"&Sigma","inputUtf16":[38,83,105,103,109,97],"output":[{"Character":{"data":"&Sigma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_937() {
    tokenize(
        r##"{"description":"Named entity: Sigma; with a semi-colon","initialState":"Data","input":"&Sigma;","inputUtf16":[38,83,105,103,109,97,59],"output":[{"Character":{"data":"Œ£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_938() {
    tokenize(
        r##"{"description":"Bad named entity: SmallCircle without a semi-colon","initialState":"Data","input":"&SmallCircle","inputUtf16":[38,83,109,97,108,108,67,105,114,99,108,101],"output":[{"Character":{"data":"&SmallCircle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_939() {
    tokenize(
        r##"{"description":"Named entity: SmallCircle; with a semi-colon","initialState":"Data","input":"&SmallCircle;","inputUtf16":[38,83,109,97,108,108,67,105,114,99,108,101,59],"output":[{"Character":{"data":"‚àò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_940() {
    tokenize(
        r##"{"description":"Bad named entity: Sopf without a semi-colon","initialState":"Data","input":"&Sopf","inputUtf16":[38,83,111,112,102],"output":[{"Character":{"data":"&Sopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_941() {
    tokenize(
        r##"{"description":"Named entity: Sopf; with a semi-colon","initialState":"Data","input":"&Sopf;","inputUtf16":[38,83,111,112,102,59],"output":[{"Character":{"data":"ùïä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_942() {
    tokenize(
        r##"{"description":"Bad named entity: Sqrt without a semi-colon","initialState":"Data","input":"&Sqrt","inputUtf16":[38,83,113,114,116],"output":[{"Character":{"data":"&Sqrt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_943() {
    tokenize(
        r##"{"description":"Named entity: Sqrt; with a semi-colon","initialState":"Data","input":"&Sqrt;","inputUtf16":[38,83,113,114,116,59],"output":[{"Character":{"data":"‚àö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_944() {
    tokenize(
        r##"{"description":"Bad named entity: Square without a semi-colon","initialState":"Data","input":"&Square","inputUtf16":[38,83,113,117,97,114,101],"output":[{"Character":{"data":"&Square"}}],"errors":[]}"##,
    );
}

#[test]
fn test_945() {
    tokenize(
        r##"{"description":"Named entity: Square; with a semi-colon","initialState":"Data","input":"&Square;","inputUtf16":[38,83,113,117,97,114,101,59],"output":[{"Character":{"data":"‚ñ°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_946() {
    tokenize(
        r##"{"description":"Bad named entity: SquareIntersection without a semi-colon","initialState":"Data","input":"&SquareIntersection","inputUtf16":[38,83,113,117,97,114,101,73,110,116,101,114,115,101,99,116,105,111,110],"output":[{"Character":{"data":"&SquareIntersection"}}],"errors":[]}"##,
    );
}

#[test]
fn test_947() {
    tokenize(
        r##"{"description":"Named entity: SquareIntersection; with a semi-colon","initialState":"Data","input":"&SquareIntersection;","inputUtf16":[38,83,113,117,97,114,101,73,110,116,101,114,115,101,99,116,105,111,110,59],"output":[{"Character":{"data":"‚äì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_948() {
    tokenize(
        r##"{"description":"Bad named entity: SquareSubset without a semi-colon","initialState":"Data","input":"&SquareSubset","inputUtf16":[38,83,113,117,97,114,101,83,117,98,115,101,116],"output":[{"Character":{"data":"&SquareSubset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_949() {
    tokenize(
        r##"{"description":"Named entity: SquareSubset; with a semi-colon","initialState":"Data","input":"&SquareSubset;","inputUtf16":[38,83,113,117,97,114,101,83,117,98,115,101,116,59],"output":[{"Character":{"data":"‚äè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_950() {
    tokenize(
        r##"{"description":"Bad named entity: SquareSubsetEqual without a semi-colon","initialState":"Data","input":"&SquareSubsetEqual","inputUtf16":[38,83,113,117,97,114,101,83,117,98,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&SquareSubsetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_951() {
    tokenize(
        r##"{"description":"Named entity: SquareSubsetEqual; with a semi-colon","initialState":"Data","input":"&SquareSubsetEqual;","inputUtf16":[38,83,113,117,97,114,101,83,117,98,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚äë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_952() {
    tokenize(
        r##"{"description":"Bad named entity: SquareSuperset without a semi-colon","initialState":"Data","input":"&SquareSuperset","inputUtf16":[38,83,113,117,97,114,101,83,117,112,101,114,115,101,116],"output":[{"Character":{"data":"&SquareSuperset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_953() {
    tokenize(
        r##"{"description":"Named entity: SquareSuperset; with a semi-colon","initialState":"Data","input":"&SquareSuperset;","inputUtf16":[38,83,113,117,97,114,101,83,117,112,101,114,115,101,116,59],"output":[{"Character":{"data":"‚äê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_954() {
    tokenize(
        r##"{"description":"Bad named entity: SquareSupersetEqual without a semi-colon","initialState":"Data","input":"&SquareSupersetEqual","inputUtf16":[38,83,113,117,97,114,101,83,117,112,101,114,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&SquareSupersetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_955() {
    tokenize(
        r##"{"description":"Named entity: SquareSupersetEqual; with a semi-colon","initialState":"Data","input":"&SquareSupersetEqual;","inputUtf16":[38,83,113,117,97,114,101,83,117,112,101,114,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚äí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_956() {
    tokenize(
        r##"{"description":"Bad named entity: SquareUnion without a semi-colon","initialState":"Data","input":"&SquareUnion","inputUtf16":[38,83,113,117,97,114,101,85,110,105,111,110],"output":[{"Character":{"data":"&SquareUnion"}}],"errors":[]}"##,
    );
}

#[test]
fn test_957() {
    tokenize(
        r##"{"description":"Named entity: SquareUnion; with a semi-colon","initialState":"Data","input":"&SquareUnion;","inputUtf16":[38,83,113,117,97,114,101,85,110,105,111,110,59],"output":[{"Character":{"data":"‚äî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_958() {
    tokenize(
        r##"{"description":"Bad named entity: Sscr without a semi-colon","initialState":"Data","input":"&Sscr","inputUtf16":[38,83,115,99,114],"output":[{"Character":{"data":"&Sscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_959() {
    tokenize(
        r##"{"description":"Named entity: Sscr; with a semi-colon","initialState":"Data","input":"&Sscr;","inputUtf16":[38,83,115,99,114,59],"output":[{"Character":{"data":"ùíÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_960() {
    tokenize(
        r##"{"description":"Bad named entity: Star without a semi-colon","initialState":"Data","input":"&Star","inputUtf16":[38,83,116,97,114],"output":[{"Character":{"data":"&Star"}}],"errors":[]}"##,
    );
}

#[test]
fn test_961() {
    tokenize(
        r##"{"description":"Named entity: Star; with a semi-colon","initialState":"Data","input":"&Star;","inputUtf16":[38,83,116,97,114,59],"output":[{"Character":{"data":"‚ãÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_962() {
    tokenize(
        r##"{"description":"Bad named entity: Sub without a semi-colon","initialState":"Data","input":"&Sub","inputUtf16":[38,83,117,98],"output":[{"Character":{"data":"&Sub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_963() {
    tokenize(
        r##"{"description":"Named entity: Sub; with a semi-colon","initialState":"Data","input":"&Sub;","inputUtf16":[38,83,117,98,59],"output":[{"Character":{"data":"‚ãê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_964() {
    tokenize(
        r##"{"description":"Bad named entity: Subset without a semi-colon","initialState":"Data","input":"&Subset","inputUtf16":[38,83,117,98,115,101,116],"output":[{"Character":{"data":"&Subset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_965() {
    tokenize(
        r##"{"description":"Named entity: Subset; with a semi-colon","initialState":"Data","input":"&Subset;","inputUtf16":[38,83,117,98,115,101,116,59],"output":[{"Character":{"data":"‚ãê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_966() {
    tokenize(
        r##"{"description":"Bad named entity: SubsetEqual without a semi-colon","initialState":"Data","input":"&SubsetEqual","inputUtf16":[38,83,117,98,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&SubsetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_967() {
    tokenize(
        r##"{"description":"Named entity: SubsetEqual; with a semi-colon","initialState":"Data","input":"&SubsetEqual;","inputUtf16":[38,83,117,98,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚äÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_968() {
    tokenize(
        r##"{"description":"Bad named entity: Succeeds without a semi-colon","initialState":"Data","input":"&Succeeds","inputUtf16":[38,83,117,99,99,101,101,100,115],"output":[{"Character":{"data":"&Succeeds"}}],"errors":[]}"##,
    );
}

#[test]
fn test_969() {
    tokenize(
        r##"{"description":"Named entity: Succeeds; with a semi-colon","initialState":"Data","input":"&Succeeds;","inputUtf16":[38,83,117,99,99,101,101,100,115,59],"output":[{"Character":{"data":"‚âª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_970() {
    tokenize(
        r##"{"description":"Bad named entity: SucceedsEqual without a semi-colon","initialState":"Data","input":"&SucceedsEqual","inputUtf16":[38,83,117,99,99,101,101,100,115,69,113,117,97,108],"output":[{"Character":{"data":"&SucceedsEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_971() {
    tokenize(
        r##"{"description":"Named entity: SucceedsEqual; with a semi-colon","initialState":"Data","input":"&SucceedsEqual;","inputUtf16":[38,83,117,99,99,101,101,100,115,69,113,117,97,108,59],"output":[{"Character":{"data":"‚™∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_972() {
    tokenize(
        r##"{"description":"Bad named entity: SucceedsSlantEqual without a semi-colon","initialState":"Data","input":"&SucceedsSlantEqual","inputUtf16":[38,83,117,99,99,101,101,100,115,83,108,97,110,116,69,113,117,97,108],"output":[{"Character":{"data":"&SucceedsSlantEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_973() {
    tokenize(
        r##"{"description":"Named entity: SucceedsSlantEqual; with a semi-colon","initialState":"Data","input":"&SucceedsSlantEqual;","inputUtf16":[38,83,117,99,99,101,101,100,115,83,108,97,110,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_974() {
    tokenize(
        r##"{"description":"Bad named entity: SucceedsTilde without a semi-colon","initialState":"Data","input":"&SucceedsTilde","inputUtf16":[38,83,117,99,99,101,101,100,115,84,105,108,100,101],"output":[{"Character":{"data":"&SucceedsTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_975() {
    tokenize(
        r##"{"description":"Named entity: SucceedsTilde; with a semi-colon","initialState":"Data","input":"&SucceedsTilde;","inputUtf16":[38,83,117,99,99,101,101,100,115,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_976() {
    tokenize(
        r##"{"description":"Bad named entity: SuchThat without a semi-colon","initialState":"Data","input":"&SuchThat","inputUtf16":[38,83,117,99,104,84,104,97,116],"output":[{"Character":{"data":"&SuchThat"}}],"errors":[]}"##,
    );
}

#[test]
fn test_977() {
    tokenize(
        r##"{"description":"Named entity: SuchThat; with a semi-colon","initialState":"Data","input":"&SuchThat;","inputUtf16":[38,83,117,99,104,84,104,97,116,59],"output":[{"Character":{"data":"‚àã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_978() {
    tokenize(
        r##"{"description":"Bad named entity: Sum without a semi-colon","initialState":"Data","input":"&Sum","inputUtf16":[38,83,117,109],"output":[{"Character":{"data":"&Sum"}}],"errors":[]}"##,
    );
}

#[test]
fn test_979() {
    tokenize(
        r##"{"description":"Named entity: Sum; with a semi-colon","initialState":"Data","input":"&Sum;","inputUtf16":[38,83,117,109,59],"output":[{"Character":{"data":"‚àë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_980() {
    tokenize(
        r##"{"description":"Bad named entity: Sup without a semi-colon","initialState":"Data","input":"&Sup","inputUtf16":[38,83,117,112],"output":[{"Character":{"data":"&Sup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_981() {
    tokenize(
        r##"{"description":"Named entity: Sup; with a semi-colon","initialState":"Data","input":"&Sup;","inputUtf16":[38,83,117,112,59],"output":[{"Character":{"data":"‚ãë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_982() {
    tokenize(
        r##"{"description":"Bad named entity: Superset without a semi-colon","initialState":"Data","input":"&Superset","inputUtf16":[38,83,117,112,101,114,115,101,116],"output":[{"Character":{"data":"&Superset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_983() {
    tokenize(
        r##"{"description":"Named entity: Superset; with a semi-colon","initialState":"Data","input":"&Superset;","inputUtf16":[38,83,117,112,101,114,115,101,116,59],"output":[{"Character":{"data":"‚äÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_984() {
    tokenize(
        r##"{"description":"Bad named entity: SupersetEqual without a semi-colon","initialState":"Data","input":"&SupersetEqual","inputUtf16":[38,83,117,112,101,114,115,101,116,69,113,117,97,108],"output":[{"Character":{"data":"&SupersetEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_985() {
    tokenize(
        r##"{"description":"Named entity: SupersetEqual; with a semi-colon","initialState":"Data","input":"&SupersetEqual;","inputUtf16":[38,83,117,112,101,114,115,101,116,69,113,117,97,108,59],"output":[{"Character":{"data":"‚äá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_986() {
    tokenize(
        r##"{"description":"Bad named entity: Supset without a semi-colon","initialState":"Data","input":"&Supset","inputUtf16":[38,83,117,112,115,101,116],"output":[{"Character":{"data":"&Supset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_987() {
    tokenize(
        r##"{"description":"Named entity: Supset; with a semi-colon","initialState":"Data","input":"&Supset;","inputUtf16":[38,83,117,112,115,101,116,59],"output":[{"Character":{"data":"‚ãë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_988() {
    tokenize(
        r##"{"description":"Named entity: THORN without a semi-colon","initialState":"Data","input":"&THORN","inputUtf16":[38,84,72,79,82,78],"output":[{"Character":{"data":"√û"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_989() {
    tokenize(
        r##"{"description":"Named entity: THORN; with a semi-colon","initialState":"Data","input":"&THORN;","inputUtf16":[38,84,72,79,82,78,59],"output":[{"Character":{"data":"√û"}}],"errors":[]}"##,
    );
}

#[test]
fn test_990() {
    tokenize(
        r##"{"description":"Bad named entity: TRADE without a semi-colon","initialState":"Data","input":"&TRADE","inputUtf16":[38,84,82,65,68,69],"output":[{"Character":{"data":"&TRADE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_991() {
    tokenize(
        r##"{"description":"Named entity: TRADE; with a semi-colon","initialState":"Data","input":"&TRADE;","inputUtf16":[38,84,82,65,68,69,59],"output":[{"Character":{"data":"‚Ñ¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_992() {
    tokenize(
        r##"{"description":"Bad named entity: TSHcy without a semi-colon","initialState":"Data","input":"&TSHcy","inputUtf16":[38,84,83,72,99,121],"output":[{"Character":{"data":"&TSHcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_993() {
    tokenize(
        r##"{"description":"Named entity: TSHcy; with a semi-colon","initialState":"Data","input":"&TSHcy;","inputUtf16":[38,84,83,72,99,121,59],"output":[{"Character":{"data":"–ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_994() {
    tokenize(
        r##"{"description":"Bad named entity: TScy without a semi-colon","initialState":"Data","input":"&TScy","inputUtf16":[38,84,83,99,121],"output":[{"Character":{"data":"&TScy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_995() {
    tokenize(
        r##"{"description":"Named entity: TScy; with a semi-colon","initialState":"Data","input":"&TScy;","inputUtf16":[38,84,83,99,121,59],"output":[{"Character":{"data":"–¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_996() {
    tokenize(
        r##"{"description":"Bad named entity: Tab without a semi-colon","initialState":"Data","input":"&Tab","inputUtf16":[38,84,97,98],"output":[{"Character":{"data":"&Tab"}}],"errors":[]}"##,
    );
}

#[test]
fn test_997() {
    tokenize(
        r##"{"description":"Named entity: Tab; with a semi-colon","initialState":"Data","input":"&Tab;","inputUtf16":[38,84,97,98,59],"output":[{"Character":{"data":"\t"}}],"errors":[]}"##,
    );
}

#[test]
fn test_998() {
    tokenize(
        r##"{"description":"Bad named entity: Tau without a semi-colon","initialState":"Data","input":"&Tau","inputUtf16":[38,84,97,117],"output":[{"Character":{"data":"&Tau"}}],"errors":[]}"##,
    );
}

#[test]
fn test_999() {
    tokenize(
        r##"{"description":"Named entity: Tau; with a semi-colon","initialState":"Data","input":"&Tau;","inputUtf16":[38,84,97,117,59],"output":[{"Character":{"data":"Œ§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1000() {
    tokenize(
        r##"{"description":"Bad named entity: Tcaron without a semi-colon","initialState":"Data","input":"&Tcaron","inputUtf16":[38,84,99,97,114,111,110],"output":[{"Character":{"data":"&Tcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1001() {
    tokenize(
        r##"{"description":"Named entity: Tcaron; with a semi-colon","initialState":"Data","input":"&Tcaron;","inputUtf16":[38,84,99,97,114,111,110,59],"output":[{"Character":{"data":"≈§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1002() {
    tokenize(
        r##"{"description":"Bad named entity: Tcedil without a semi-colon","initialState":"Data","input":"&Tcedil","inputUtf16":[38,84,99,101,100,105,108],"output":[{"Character":{"data":"&Tcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1003() {
    tokenize(
        r##"{"description":"Named entity: Tcedil; with a semi-colon","initialState":"Data","input":"&Tcedil;","inputUtf16":[38,84,99,101,100,105,108,59],"output":[{"Character":{"data":"≈¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1004() {
    tokenize(
        r##"{"description":"Bad named entity: Tcy without a semi-colon","initialState":"Data","input":"&Tcy","inputUtf16":[38,84,99,121],"output":[{"Character":{"data":"&Tcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1005() {
    tokenize(
        r##"{"description":"Named entity: Tcy; with a semi-colon","initialState":"Data","input":"&Tcy;","inputUtf16":[38,84,99,121,59],"output":[{"Character":{"data":"–¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1006() {
    tokenize(
        r##"{"description":"Bad named entity: Tfr without a semi-colon","initialState":"Data","input":"&Tfr","inputUtf16":[38,84,102,114],"output":[{"Character":{"data":"&Tfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1007() {
    tokenize(
        r##"{"description":"Named entity: Tfr; with a semi-colon","initialState":"Data","input":"&Tfr;","inputUtf16":[38,84,102,114,59],"output":[{"Character":{"data":"ùîó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1008() {
    tokenize(
        r##"{"description":"Bad named entity: Therefore without a semi-colon","initialState":"Data","input":"&Therefore","inputUtf16":[38,84,104,101,114,101,102,111,114,101],"output":[{"Character":{"data":"&Therefore"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1009() {
    tokenize(
        r##"{"description":"Named entity: Therefore; with a semi-colon","initialState":"Data","input":"&Therefore;","inputUtf16":[38,84,104,101,114,101,102,111,114,101,59],"output":[{"Character":{"data":"‚à¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1010() {
    tokenize(
        r##"{"description":"Bad named entity: Theta without a semi-colon","initialState":"Data","input":"&Theta","inputUtf16":[38,84,104,101,116,97],"output":[{"Character":{"data":"&Theta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1011() {
    tokenize(
        r##"{"description":"Named entity: Theta; with a semi-colon","initialState":"Data","input":"&Theta;","inputUtf16":[38,84,104,101,116,97,59],"output":[{"Character":{"data":"Œò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1012() {
    tokenize(
        r##"{"description":"Bad named entity: ThickSpace without a semi-colon","initialState":"Data","input":"&ThickSpace","inputUtf16":[38,84,104,105,99,107,83,112,97,99,101],"output":[{"Character":{"data":"&ThickSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1013() {
    tokenize(
        r##"{"description":"Named entity: ThickSpace; with a semi-colon","initialState":"Data","input":"&ThickSpace;","inputUtf16":[38,84,104,105,99,107,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Åü‚Ää"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1014() {
    tokenize(
        r##"{"description":"Bad named entity: ThinSpace without a semi-colon","initialState":"Data","input":"&ThinSpace","inputUtf16":[38,84,104,105,110,83,112,97,99,101],"output":[{"Character":{"data":"&ThinSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1015() {
    tokenize(
        r##"{"description":"Named entity: ThinSpace; with a semi-colon","initialState":"Data","input":"&ThinSpace;","inputUtf16":[38,84,104,105,110,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Äâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1016() {
    tokenize(
        r##"{"description":"Bad named entity: Tilde without a semi-colon","initialState":"Data","input":"&Tilde","inputUtf16":[38,84,105,108,100,101],"output":[{"Character":{"data":"&Tilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1017() {
    tokenize(
        r##"{"description":"Named entity: Tilde; with a semi-colon","initialState":"Data","input":"&Tilde;","inputUtf16":[38,84,105,108,100,101,59],"output":[{"Character":{"data":"‚àº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1018() {
    tokenize(
        r##"{"description":"Bad named entity: TildeEqual without a semi-colon","initialState":"Data","input":"&TildeEqual","inputUtf16":[38,84,105,108,100,101,69,113,117,97,108],"output":[{"Character":{"data":"&TildeEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1019() {
    tokenize(
        r##"{"description":"Named entity: TildeEqual; with a semi-colon","initialState":"Data","input":"&TildeEqual;","inputUtf16":[38,84,105,108,100,101,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1020() {
    tokenize(
        r##"{"description":"Bad named entity: TildeFullEqual without a semi-colon","initialState":"Data","input":"&TildeFullEqual","inputUtf16":[38,84,105,108,100,101,70,117,108,108,69,113,117,97,108],"output":[{"Character":{"data":"&TildeFullEqual"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1021() {
    tokenize(
        r##"{"description":"Named entity: TildeFullEqual; with a semi-colon","initialState":"Data","input":"&TildeFullEqual;","inputUtf16":[38,84,105,108,100,101,70,117,108,108,69,113,117,97,108,59],"output":[{"Character":{"data":"‚âÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1022() {
    tokenize(
        r##"{"description":"Bad named entity: TildeTilde without a semi-colon","initialState":"Data","input":"&TildeTilde","inputUtf16":[38,84,105,108,100,101,84,105,108,100,101],"output":[{"Character":{"data":"&TildeTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1023() {
    tokenize(
        r##"{"description":"Named entity: TildeTilde; with a semi-colon","initialState":"Data","input":"&TildeTilde;","inputUtf16":[38,84,105,108,100,101,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1024() {
    tokenize(
        r##"{"description":"Bad named entity: Topf without a semi-colon","initialState":"Data","input":"&Topf","inputUtf16":[38,84,111,112,102],"output":[{"Character":{"data":"&Topf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1025() {
    tokenize(
        r##"{"description":"Named entity: Topf; with a semi-colon","initialState":"Data","input":"&Topf;","inputUtf16":[38,84,111,112,102,59],"output":[{"Character":{"data":"ùïã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1026() {
    tokenize(
        r##"{"description":"Bad named entity: TripleDot without a semi-colon","initialState":"Data","input":"&TripleDot","inputUtf16":[38,84,114,105,112,108,101,68,111,116],"output":[{"Character":{"data":"&TripleDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1027() {
    tokenize(
        r##"{"description":"Named entity: TripleDot; with a semi-colon","initialState":"Data","input":"&TripleDot;","inputUtf16":[38,84,114,105,112,108,101,68,111,116,59],"output":[{"Character":{"data":"‚Éõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1028() {
    tokenize(
        r##"{"description":"Bad named entity: Tscr without a semi-colon","initialState":"Data","input":"&Tscr","inputUtf16":[38,84,115,99,114],"output":[{"Character":{"data":"&Tscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1029() {
    tokenize(
        r##"{"description":"Named entity: Tscr; with a semi-colon","initialState":"Data","input":"&Tscr;","inputUtf16":[38,84,115,99,114,59],"output":[{"Character":{"data":"ùíØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1030() {
    tokenize(
        r##"{"description":"Bad named entity: Tstrok without a semi-colon","initialState":"Data","input":"&Tstrok","inputUtf16":[38,84,115,116,114,111,107],"output":[{"Character":{"data":"&Tstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1031() {
    tokenize(
        r##"{"description":"Named entity: Tstrok; with a semi-colon","initialState":"Data","input":"&Tstrok;","inputUtf16":[38,84,115,116,114,111,107,59],"output":[{"Character":{"data":"≈¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1032() {
    tokenize(
        r##"{"description":"Named entity: Uacute without a semi-colon","initialState":"Data","input":"&Uacute","inputUtf16":[38,85,97,99,117,116,101],"output":[{"Character":{"data":"√ö"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1033() {
    tokenize(
        r##"{"description":"Named entity: Uacute; with a semi-colon","initialState":"Data","input":"&Uacute;","inputUtf16":[38,85,97,99,117,116,101,59],"output":[{"Character":{"data":"√ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1034() {
    tokenize(
        r##"{"description":"Bad named entity: Uarr without a semi-colon","initialState":"Data","input":"&Uarr","inputUtf16":[38,85,97,114,114],"output":[{"Character":{"data":"&Uarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1035() {
    tokenize(
        r##"{"description":"Named entity: Uarr; with a semi-colon","initialState":"Data","input":"&Uarr;","inputUtf16":[38,85,97,114,114,59],"output":[{"Character":{"data":"‚Üü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1036() {
    tokenize(
        r##"{"description":"Bad named entity: Uarrocir without a semi-colon","initialState":"Data","input":"&Uarrocir","inputUtf16":[38,85,97,114,114,111,99,105,114],"output":[{"Character":{"data":"&Uarrocir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1037() {
    tokenize(
        r##"{"description":"Named entity: Uarrocir; with a semi-colon","initialState":"Data","input":"&Uarrocir;","inputUtf16":[38,85,97,114,114,111,99,105,114,59],"output":[{"Character":{"data":"‚•â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1038() {
    tokenize(
        r##"{"description":"Bad named entity: Ubrcy without a semi-colon","initialState":"Data","input":"&Ubrcy","inputUtf16":[38,85,98,114,99,121],"output":[{"Character":{"data":"&Ubrcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1039() {
    tokenize(
        r##"{"description":"Named entity: Ubrcy; with a semi-colon","initialState":"Data","input":"&Ubrcy;","inputUtf16":[38,85,98,114,99,121,59],"output":[{"Character":{"data":"–é"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1040() {
    tokenize(
        r##"{"description":"Bad named entity: Ubreve without a semi-colon","initialState":"Data","input":"&Ubreve","inputUtf16":[38,85,98,114,101,118,101],"output":[{"Character":{"data":"&Ubreve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1041() {
    tokenize(
        r##"{"description":"Named entity: Ubreve; with a semi-colon","initialState":"Data","input":"&Ubreve;","inputUtf16":[38,85,98,114,101,118,101,59],"output":[{"Character":{"data":"≈¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1042() {
    tokenize(
        r##"{"description":"Named entity: Ucirc without a semi-colon","initialState":"Data","input":"&Ucirc","inputUtf16":[38,85,99,105,114,99],"output":[{"Character":{"data":"√õ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1043() {
    tokenize(
        r##"{"description":"Named entity: Ucirc; with a semi-colon","initialState":"Data","input":"&Ucirc;","inputUtf16":[38,85,99,105,114,99,59],"output":[{"Character":{"data":"√õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1044() {
    tokenize(
        r##"{"description":"Bad named entity: Ucy without a semi-colon","initialState":"Data","input":"&Ucy","inputUtf16":[38,85,99,121],"output":[{"Character":{"data":"&Ucy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1045() {
    tokenize(
        r##"{"description":"Named entity: Ucy; with a semi-colon","initialState":"Data","input":"&Ucy;","inputUtf16":[38,85,99,121,59],"output":[{"Character":{"data":"–£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1046() {
    tokenize(
        r##"{"description":"Bad named entity: Udblac without a semi-colon","initialState":"Data","input":"&Udblac","inputUtf16":[38,85,100,98,108,97,99],"output":[{"Character":{"data":"&Udblac"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1047() {
    tokenize(
        r##"{"description":"Named entity: Udblac; with a semi-colon","initialState":"Data","input":"&Udblac;","inputUtf16":[38,85,100,98,108,97,99,59],"output":[{"Character":{"data":"≈∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1048() {
    tokenize(
        r##"{"description":"Bad named entity: Ufr without a semi-colon","initialState":"Data","input":"&Ufr","inputUtf16":[38,85,102,114],"output":[{"Character":{"data":"&Ufr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1049() {
    tokenize(
        r##"{"description":"Named entity: Ufr; with a semi-colon","initialState":"Data","input":"&Ufr;","inputUtf16":[38,85,102,114,59],"output":[{"Character":{"data":"ùîò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1050() {
    tokenize(
        r##"{"description":"Named entity: Ugrave without a semi-colon","initialState":"Data","input":"&Ugrave","inputUtf16":[38,85,103,114,97,118,101],"output":[{"Character":{"data":"√ô"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1051() {
    tokenize(
        r##"{"description":"Named entity: Ugrave; with a semi-colon","initialState":"Data","input":"&Ugrave;","inputUtf16":[38,85,103,114,97,118,101,59],"output":[{"Character":{"data":"√ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1052() {
    tokenize(
        r##"{"description":"Bad named entity: Umacr without a semi-colon","initialState":"Data","input":"&Umacr","inputUtf16":[38,85,109,97,99,114],"output":[{"Character":{"data":"&Umacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1053() {
    tokenize(
        r##"{"description":"Named entity: Umacr; with a semi-colon","initialState":"Data","input":"&Umacr;","inputUtf16":[38,85,109,97,99,114,59],"output":[{"Character":{"data":"≈™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1054() {
    tokenize(
        r##"{"description":"Bad named entity: UnderBar without a semi-colon","initialState":"Data","input":"&UnderBar","inputUtf16":[38,85,110,100,101,114,66,97,114],"output":[{"Character":{"data":"&UnderBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1055() {
    tokenize(
        r##"{"description":"Named entity: UnderBar; with a semi-colon","initialState":"Data","input":"&UnderBar;","inputUtf16":[38,85,110,100,101,114,66,97,114,59],"output":[{"Character":{"data":"_"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1056() {
    tokenize(
        r##"{"description":"Bad named entity: UnderBrace without a semi-colon","initialState":"Data","input":"&UnderBrace","inputUtf16":[38,85,110,100,101,114,66,114,97,99,101],"output":[{"Character":{"data":"&UnderBrace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1057() {
    tokenize(
        r##"{"description":"Named entity: UnderBrace; with a semi-colon","initialState":"Data","input":"&UnderBrace;","inputUtf16":[38,85,110,100,101,114,66,114,97,99,101,59],"output":[{"Character":{"data":"‚èü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1058() {
    tokenize(
        r##"{"description":"Bad named entity: UnderBracket without a semi-colon","initialState":"Data","input":"&UnderBracket","inputUtf16":[38,85,110,100,101,114,66,114,97,99,107,101,116],"output":[{"Character":{"data":"&UnderBracket"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1059() {
    tokenize(
        r##"{"description":"Named entity: UnderBracket; with a semi-colon","initialState":"Data","input":"&UnderBracket;","inputUtf16":[38,85,110,100,101,114,66,114,97,99,107,101,116,59],"output":[{"Character":{"data":"‚éµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1060() {
    tokenize(
        r##"{"description":"Bad named entity: UnderParenthesis without a semi-colon","initialState":"Data","input":"&UnderParenthesis","inputUtf16":[38,85,110,100,101,114,80,97,114,101,110,116,104,101,115,105,115],"output":[{"Character":{"data":"&UnderParenthesis"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1061() {
    tokenize(
        r##"{"description":"Named entity: UnderParenthesis; with a semi-colon","initialState":"Data","input":"&UnderParenthesis;","inputUtf16":[38,85,110,100,101,114,80,97,114,101,110,116,104,101,115,105,115,59],"output":[{"Character":{"data":"‚èù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1062() {
    tokenize(
        r##"{"description":"Bad named entity: Union without a semi-colon","initialState":"Data","input":"&Union","inputUtf16":[38,85,110,105,111,110],"output":[{"Character":{"data":"&Union"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1063() {
    tokenize(
        r##"{"description":"Named entity: Union; with a semi-colon","initialState":"Data","input":"&Union;","inputUtf16":[38,85,110,105,111,110,59],"output":[{"Character":{"data":"‚ãÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1064() {
    tokenize(
        r##"{"description":"Bad named entity: UnionPlus without a semi-colon","initialState":"Data","input":"&UnionPlus","inputUtf16":[38,85,110,105,111,110,80,108,117,115],"output":[{"Character":{"data":"&UnionPlus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1065() {
    tokenize(
        r##"{"description":"Named entity: UnionPlus; with a semi-colon","initialState":"Data","input":"&UnionPlus;","inputUtf16":[38,85,110,105,111,110,80,108,117,115,59],"output":[{"Character":{"data":"‚äé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1066() {
    tokenize(
        r##"{"description":"Bad named entity: Uogon without a semi-colon","initialState":"Data","input":"&Uogon","inputUtf16":[38,85,111,103,111,110],"output":[{"Character":{"data":"&Uogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1067() {
    tokenize(
        r##"{"description":"Named entity: Uogon; with a semi-colon","initialState":"Data","input":"&Uogon;","inputUtf16":[38,85,111,103,111,110,59],"output":[{"Character":{"data":"≈≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1068() {
    tokenize(
        r##"{"description":"Bad named entity: Uopf without a semi-colon","initialState":"Data","input":"&Uopf","inputUtf16":[38,85,111,112,102],"output":[{"Character":{"data":"&Uopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1069() {
    tokenize(
        r##"{"description":"Named entity: Uopf; with a semi-colon","initialState":"Data","input":"&Uopf;","inputUtf16":[38,85,111,112,102,59],"output":[{"Character":{"data":"ùïå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1070() {
    tokenize(
        r##"{"description":"Bad named entity: UpArrow without a semi-colon","initialState":"Data","input":"&UpArrow","inputUtf16":[38,85,112,65,114,114,111,119],"output":[{"Character":{"data":"&UpArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1071() {
    tokenize(
        r##"{"description":"Named entity: UpArrow; with a semi-colon","initialState":"Data","input":"&UpArrow;","inputUtf16":[38,85,112,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1072() {
    tokenize(
        r##"{"description":"Bad named entity: UpArrowBar without a semi-colon","initialState":"Data","input":"&UpArrowBar","inputUtf16":[38,85,112,65,114,114,111,119,66,97,114],"output":[{"Character":{"data":"&UpArrowBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1073() {
    tokenize(
        r##"{"description":"Named entity: UpArrowBar; with a semi-colon","initialState":"Data","input":"&UpArrowBar;","inputUtf16":[38,85,112,65,114,114,111,119,66,97,114,59],"output":[{"Character":{"data":"‚§í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1074() {
    tokenize(
        r##"{"description":"Bad named entity: UpArrowDownArrow without a semi-colon","initialState":"Data","input":"&UpArrowDownArrow","inputUtf16":[38,85,112,65,114,114,111,119,68,111,119,110,65,114,114,111,119],"output":[{"Character":{"data":"&UpArrowDownArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1075() {
    tokenize(
        r##"{"description":"Named entity: UpArrowDownArrow; with a semi-colon","initialState":"Data","input":"&UpArrowDownArrow;","inputUtf16":[38,85,112,65,114,114,111,119,68,111,119,110,65,114,114,111,119,59],"output":[{"Character":{"data":"‚áÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1076() {
    tokenize(
        r##"{"description":"Bad named entity: UpDownArrow without a semi-colon","initialState":"Data","input":"&UpDownArrow","inputUtf16":[38,85,112,68,111,119,110,65,114,114,111,119],"output":[{"Character":{"data":"&UpDownArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1077() {
    tokenize(
        r##"{"description":"Named entity: UpDownArrow; with a semi-colon","initialState":"Data","input":"&UpDownArrow;","inputUtf16":[38,85,112,68,111,119,110,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1078() {
    tokenize(
        r##"{"description":"Bad named entity: UpEquilibrium without a semi-colon","initialState":"Data","input":"&UpEquilibrium","inputUtf16":[38,85,112,69,113,117,105,108,105,98,114,105,117,109],"output":[{"Character":{"data":"&UpEquilibrium"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1079() {
    tokenize(
        r##"{"description":"Named entity: UpEquilibrium; with a semi-colon","initialState":"Data","input":"&UpEquilibrium;","inputUtf16":[38,85,112,69,113,117,105,108,105,98,114,105,117,109,59],"output":[{"Character":{"data":"‚•Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1080() {
    tokenize(
        r##"{"description":"Bad named entity: UpTee without a semi-colon","initialState":"Data","input":"&UpTee","inputUtf16":[38,85,112,84,101,101],"output":[{"Character":{"data":"&UpTee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1081() {
    tokenize(
        r##"{"description":"Named entity: UpTee; with a semi-colon","initialState":"Data","input":"&UpTee;","inputUtf16":[38,85,112,84,101,101,59],"output":[{"Character":{"data":"‚ä•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1082() {
    tokenize(
        r##"{"description":"Bad named entity: UpTeeArrow without a semi-colon","initialState":"Data","input":"&UpTeeArrow","inputUtf16":[38,85,112,84,101,101,65,114,114,111,119],"output":[{"Character":{"data":"&UpTeeArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1083() {
    tokenize(
        r##"{"description":"Named entity: UpTeeArrow; with a semi-colon","initialState":"Data","input":"&UpTeeArrow;","inputUtf16":[38,85,112,84,101,101,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Ü•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1084() {
    tokenize(
        r##"{"description":"Bad named entity: Uparrow without a semi-colon","initialState":"Data","input":"&Uparrow","inputUtf16":[38,85,112,97,114,114,111,119],"output":[{"Character":{"data":"&Uparrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1085() {
    tokenize(
        r##"{"description":"Named entity: Uparrow; with a semi-colon","initialState":"Data","input":"&Uparrow;","inputUtf16":[38,85,112,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1086() {
    tokenize(
        r##"{"description":"Bad named entity: Updownarrow without a semi-colon","initialState":"Data","input":"&Updownarrow","inputUtf16":[38,85,112,100,111,119,110,97,114,114,111,119],"output":[{"Character":{"data":"&Updownarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1087() {
    tokenize(
        r##"{"description":"Named entity: Updownarrow; with a semi-colon","initialState":"Data","input":"&Updownarrow;","inputUtf16":[38,85,112,100,111,119,110,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1088() {
    tokenize(
        r##"{"description":"Bad named entity: UpperLeftArrow without a semi-colon","initialState":"Data","input":"&UpperLeftArrow","inputUtf16":[38,85,112,112,101,114,76,101,102,116,65,114,114,111,119],"output":[{"Character":{"data":"&UpperLeftArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1089() {
    tokenize(
        r##"{"description":"Named entity: UpperLeftArrow; with a semi-colon","initialState":"Data","input":"&UpperLeftArrow;","inputUtf16":[38,85,112,112,101,114,76,101,102,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1090() {
    tokenize(
        r##"{"description":"Bad named entity: UpperRightArrow without a semi-colon","initialState":"Data","input":"&UpperRightArrow","inputUtf16":[38,85,112,112,101,114,82,105,103,104,116,65,114,114,111,119],"output":[{"Character":{"data":"&UpperRightArrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1091() {
    tokenize(
        r##"{"description":"Named entity: UpperRightArrow; with a semi-colon","initialState":"Data","input":"&UpperRightArrow;","inputUtf16":[38,85,112,112,101,114,82,105,103,104,116,65,114,114,111,119,59],"output":[{"Character":{"data":"‚Üó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1092() {
    tokenize(
        r##"{"description":"Bad named entity: Upsi without a semi-colon","initialState":"Data","input":"&Upsi","inputUtf16":[38,85,112,115,105],"output":[{"Character":{"data":"&Upsi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1093() {
    tokenize(
        r##"{"description":"Named entity: Upsi; with a semi-colon","initialState":"Data","input":"&Upsi;","inputUtf16":[38,85,112,115,105,59],"output":[{"Character":{"data":"œí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1094() {
    tokenize(
        r##"{"description":"Bad named entity: Upsilon without a semi-colon","initialState":"Data","input":"&Upsilon","inputUtf16":[38,85,112,115,105,108,111,110],"output":[{"Character":{"data":"&Upsilon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1095() {
    tokenize(
        r##"{"description":"Named entity: Upsilon; with a semi-colon","initialState":"Data","input":"&Upsilon;","inputUtf16":[38,85,112,115,105,108,111,110,59],"output":[{"Character":{"data":"Œ•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1096() {
    tokenize(
        r##"{"description":"Bad named entity: Uring without a semi-colon","initialState":"Data","input":"&Uring","inputUtf16":[38,85,114,105,110,103],"output":[{"Character":{"data":"&Uring"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1097() {
    tokenize(
        r##"{"description":"Named entity: Uring; with a semi-colon","initialState":"Data","input":"&Uring;","inputUtf16":[38,85,114,105,110,103,59],"output":[{"Character":{"data":"≈Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1098() {
    tokenize(
        r##"{"description":"Bad named entity: Uscr without a semi-colon","initialState":"Data","input":"&Uscr","inputUtf16":[38,85,115,99,114],"output":[{"Character":{"data":"&Uscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1099() {
    tokenize(
        r##"{"description":"Named entity: Uscr; with a semi-colon","initialState":"Data","input":"&Uscr;","inputUtf16":[38,85,115,99,114,59],"output":[{"Character":{"data":"ùí∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1100() {
    tokenize(
        r##"{"description":"Bad named entity: Utilde without a semi-colon","initialState":"Data","input":"&Utilde","inputUtf16":[38,85,116,105,108,100,101],"output":[{"Character":{"data":"&Utilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1101() {
    tokenize(
        r##"{"description":"Named entity: Utilde; with a semi-colon","initialState":"Data","input":"&Utilde;","inputUtf16":[38,85,116,105,108,100,101,59],"output":[{"Character":{"data":"≈®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1102() {
    tokenize(
        r##"{"description":"Named entity: Uuml without a semi-colon","initialState":"Data","input":"&Uuml","inputUtf16":[38,85,117,109,108],"output":[{"Character":{"data":"√ú"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_1103() {
    tokenize(
        r##"{"description":"Named entity: Uuml; with a semi-colon","initialState":"Data","input":"&Uuml;","inputUtf16":[38,85,117,109,108,59],"output":[{"Character":{"data":"√ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1104() {
    tokenize(
        r##"{"description":"Bad named entity: VDash without a semi-colon","initialState":"Data","input":"&VDash","inputUtf16":[38,86,68,97,115,104],"output":[{"Character":{"data":"&VDash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1105() {
    tokenize(
        r##"{"description":"Named entity: VDash; with a semi-colon","initialState":"Data","input":"&VDash;","inputUtf16":[38,86,68,97,115,104,59],"output":[{"Character":{"data":"‚ä´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1106() {
    tokenize(
        r##"{"description":"Bad named entity: Vbar without a semi-colon","initialState":"Data","input":"&Vbar","inputUtf16":[38,86,98,97,114],"output":[{"Character":{"data":"&Vbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1107() {
    tokenize(
        r##"{"description":"Named entity: Vbar; with a semi-colon","initialState":"Data","input":"&Vbar;","inputUtf16":[38,86,98,97,114,59],"output":[{"Character":{"data":"‚´´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1108() {
    tokenize(
        r##"{"description":"Bad named entity: Vcy without a semi-colon","initialState":"Data","input":"&Vcy","inputUtf16":[38,86,99,121],"output":[{"Character":{"data":"&Vcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1109() {
    tokenize(
        r##"{"description":"Named entity: Vcy; with a semi-colon","initialState":"Data","input":"&Vcy;","inputUtf16":[38,86,99,121,59],"output":[{"Character":{"data":"–í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1110() {
    tokenize(
        r##"{"description":"Bad named entity: Vdash without a semi-colon","initialState":"Data","input":"&Vdash","inputUtf16":[38,86,100,97,115,104],"output":[{"Character":{"data":"&Vdash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1111() {
    tokenize(
        r##"{"description":"Named entity: Vdash; with a semi-colon","initialState":"Data","input":"&Vdash;","inputUtf16":[38,86,100,97,115,104,59],"output":[{"Character":{"data":"‚ä©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1112() {
    tokenize(
        r##"{"description":"Bad named entity: Vdashl without a semi-colon","initialState":"Data","input":"&Vdashl","inputUtf16":[38,86,100,97,115,104,108],"output":[{"Character":{"data":"&Vdashl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1113() {
    tokenize(
        r##"{"description":"Named entity: Vdashl; with a semi-colon","initialState":"Data","input":"&Vdashl;","inputUtf16":[38,86,100,97,115,104,108,59],"output":[{"Character":{"data":"‚´¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1114() {
    tokenize(
        r##"{"description":"Bad named entity: Vee without a semi-colon","initialState":"Data","input":"&Vee","inputUtf16":[38,86,101,101],"output":[{"Character":{"data":"&Vee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1115() {
    tokenize(
        r##"{"description":"Named entity: Vee; with a semi-colon","initialState":"Data","input":"&Vee;","inputUtf16":[38,86,101,101,59],"output":[{"Character":{"data":"‚ãÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1116() {
    tokenize(
        r##"{"description":"Bad named entity: Verbar without a semi-colon","initialState":"Data","input":"&Verbar","inputUtf16":[38,86,101,114,98,97,114],"output":[{"Character":{"data":"&Verbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1117() {
    tokenize(
        r##"{"description":"Named entity: Verbar; with a semi-colon","initialState":"Data","input":"&Verbar;","inputUtf16":[38,86,101,114,98,97,114,59],"output":[{"Character":{"data":"‚Äñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1118() {
    tokenize(
        r##"{"description":"Bad named entity: Vert without a semi-colon","initialState":"Data","input":"&Vert","inputUtf16":[38,86,101,114,116],"output":[{"Character":{"data":"&Vert"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1119() {
    tokenize(
        r##"{"description":"Named entity: Vert; with a semi-colon","initialState":"Data","input":"&Vert;","inputUtf16":[38,86,101,114,116,59],"output":[{"Character":{"data":"‚Äñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1120() {
    tokenize(
        r##"{"description":"Bad named entity: VerticalBar without a semi-colon","initialState":"Data","input":"&VerticalBar","inputUtf16":[38,86,101,114,116,105,99,97,108,66,97,114],"output":[{"Character":{"data":"&VerticalBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1121() {
    tokenize(
        r##"{"description":"Named entity: VerticalBar; with a semi-colon","initialState":"Data","input":"&VerticalBar;","inputUtf16":[38,86,101,114,116,105,99,97,108,66,97,114,59],"output":[{"Character":{"data":"‚à£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1122() {
    tokenize(
        r##"{"description":"Bad named entity: VerticalLine without a semi-colon","initialState":"Data","input":"&VerticalLine","inputUtf16":[38,86,101,114,116,105,99,97,108,76,105,110,101],"output":[{"Character":{"data":"&VerticalLine"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1123() {
    tokenize(
        r##"{"description":"Named entity: VerticalLine; with a semi-colon","initialState":"Data","input":"&VerticalLine;","inputUtf16":[38,86,101,114,116,105,99,97,108,76,105,110,101,59],"output":[{"Character":{"data":"|"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1124() {
    tokenize(
        r##"{"description":"Bad named entity: VerticalSeparator without a semi-colon","initialState":"Data","input":"&VerticalSeparator","inputUtf16":[38,86,101,114,116,105,99,97,108,83,101,112,97,114,97,116,111,114],"output":[{"Character":{"data":"&VerticalSeparator"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1125() {
    tokenize(
        r##"{"description":"Named entity: VerticalSeparator; with a semi-colon","initialState":"Data","input":"&VerticalSeparator;","inputUtf16":[38,86,101,114,116,105,99,97,108,83,101,112,97,114,97,116,111,114,59],"output":[{"Character":{"data":"‚ùò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1126() {
    tokenize(
        r##"{"description":"Bad named entity: VerticalTilde without a semi-colon","initialState":"Data","input":"&VerticalTilde","inputUtf16":[38,86,101,114,116,105,99,97,108,84,105,108,100,101],"output":[{"Character":{"data":"&VerticalTilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1127() {
    tokenize(
        r##"{"description":"Named entity: VerticalTilde; with a semi-colon","initialState":"Data","input":"&VerticalTilde;","inputUtf16":[38,86,101,114,116,105,99,97,108,84,105,108,100,101,59],"output":[{"Character":{"data":"‚âÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1128() {
    tokenize(
        r##"{"description":"Bad named entity: VeryThinSpace without a semi-colon","initialState":"Data","input":"&VeryThinSpace","inputUtf16":[38,86,101,114,121,84,104,105,110,83,112,97,99,101],"output":[{"Character":{"data":"&VeryThinSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1129() {
    tokenize(
        r##"{"description":"Named entity: VeryThinSpace; with a semi-colon","initialState":"Data","input":"&VeryThinSpace;","inputUtf16":[38,86,101,114,121,84,104,105,110,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Ää"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1130() {
    tokenize(
        r##"{"description":"Bad named entity: Vfr without a semi-colon","initialState":"Data","input":"&Vfr","inputUtf16":[38,86,102,114],"output":[{"Character":{"data":"&Vfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1131() {
    tokenize(
        r##"{"description":"Named entity: Vfr; with a semi-colon","initialState":"Data","input":"&Vfr;","inputUtf16":[38,86,102,114,59],"output":[{"Character":{"data":"ùîô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1132() {
    tokenize(
        r##"{"description":"Bad named entity: Vopf without a semi-colon","initialState":"Data","input":"&Vopf","inputUtf16":[38,86,111,112,102],"output":[{"Character":{"data":"&Vopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1133() {
    tokenize(
        r##"{"description":"Named entity: Vopf; with a semi-colon","initialState":"Data","input":"&Vopf;","inputUtf16":[38,86,111,112,102,59],"output":[{"Character":{"data":"ùïç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1134() {
    tokenize(
        r##"{"description":"Bad named entity: Vscr without a semi-colon","initialState":"Data","input":"&Vscr","inputUtf16":[38,86,115,99,114],"output":[{"Character":{"data":"&Vscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1135() {
    tokenize(
        r##"{"description":"Named entity: Vscr; with a semi-colon","initialState":"Data","input":"&Vscr;","inputUtf16":[38,86,115,99,114,59],"output":[{"Character":{"data":"ùí±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1136() {
    tokenize(
        r##"{"description":"Bad named entity: Vvdash without a semi-colon","initialState":"Data","input":"&Vvdash","inputUtf16":[38,86,118,100,97,115,104],"output":[{"Character":{"data":"&Vvdash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1137() {
    tokenize(
        r##"{"description":"Named entity: Vvdash; with a semi-colon","initialState":"Data","input":"&Vvdash;","inputUtf16":[38,86,118,100,97,115,104,59],"output":[{"Character":{"data":"‚ä™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1138() {
    tokenize(
        r##"{"description":"Bad named entity: Wcirc without a semi-colon","initialState":"Data","input":"&Wcirc","inputUtf16":[38,87,99,105,114,99],"output":[{"Character":{"data":"&Wcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1139() {
    tokenize(
        r##"{"description":"Named entity: Wcirc; with a semi-colon","initialState":"Data","input":"&Wcirc;","inputUtf16":[38,87,99,105,114,99,59],"output":[{"Character":{"data":"≈¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1140() {
    tokenize(
        r##"{"description":"Bad named entity: Wedge without a semi-colon","initialState":"Data","input":"&Wedge","inputUtf16":[38,87,101,100,103,101],"output":[{"Character":{"data":"&Wedge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1141() {
    tokenize(
        r##"{"description":"Named entity: Wedge; with a semi-colon","initialState":"Data","input":"&Wedge;","inputUtf16":[38,87,101,100,103,101,59],"output":[{"Character":{"data":"‚ãÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1142() {
    tokenize(
        r##"{"description":"Bad named entity: Wfr without a semi-colon","initialState":"Data","input":"&Wfr","inputUtf16":[38,87,102,114],"output":[{"Character":{"data":"&Wfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1143() {
    tokenize(
        r##"{"description":"Named entity: Wfr; with a semi-colon","initialState":"Data","input":"&Wfr;","inputUtf16":[38,87,102,114,59],"output":[{"Character":{"data":"ùîö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1144() {
    tokenize(
        r##"{"description":"Bad named entity: Wopf without a semi-colon","initialState":"Data","input":"&Wopf","inputUtf16":[38,87,111,112,102],"output":[{"Character":{"data":"&Wopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1145() {
    tokenize(
        r##"{"description":"Named entity: Wopf; with a semi-colon","initialState":"Data","input":"&Wopf;","inputUtf16":[38,87,111,112,102,59],"output":[{"Character":{"data":"ùïé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1146() {
    tokenize(
        r##"{"description":"Bad named entity: Wscr without a semi-colon","initialState":"Data","input":"&Wscr","inputUtf16":[38,87,115,99,114],"output":[{"Character":{"data":"&Wscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1147() {
    tokenize(
        r##"{"description":"Named entity: Wscr; with a semi-colon","initialState":"Data","input":"&Wscr;","inputUtf16":[38,87,115,99,114,59],"output":[{"Character":{"data":"ùí≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1148() {
    tokenize(
        r##"{"description":"Bad named entity: Xfr without a semi-colon","initialState":"Data","input":"&Xfr","inputUtf16":[38,88,102,114],"output":[{"Character":{"data":"&Xfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1149() {
    tokenize(
        r##"{"description":"Named entity: Xfr; with a semi-colon","initialState":"Data","input":"&Xfr;","inputUtf16":[38,88,102,114,59],"output":[{"Character":{"data":"ùîõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1150() {
    tokenize(
        r##"{"description":"Bad named entity: Xi without a semi-colon","initialState":"Data","input":"&Xi","inputUtf16":[38,88,105],"output":[{"Character":{"data":"&Xi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1151() {
    tokenize(
        r##"{"description":"Named entity: Xi; with a semi-colon","initialState":"Data","input":"&Xi;","inputUtf16":[38,88,105,59],"output":[{"Character":{"data":"Œû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1152() {
    tokenize(
        r##"{"description":"Bad named entity: Xopf without a semi-colon","initialState":"Data","input":"&Xopf","inputUtf16":[38,88,111,112,102],"output":[{"Character":{"data":"&Xopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1153() {
    tokenize(
        r##"{"description":"Named entity: Xopf; with a semi-colon","initialState":"Data","input":"&Xopf;","inputUtf16":[38,88,111,112,102,59],"output":[{"Character":{"data":"ùïè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1154() {
    tokenize(
        r##"{"description":"Bad named entity: Xscr without a semi-colon","initialState":"Data","input":"&Xscr","inputUtf16":[38,88,115,99,114],"output":[{"Character":{"data":"&Xscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1155() {
    tokenize(
        r##"{"description":"Named entity: Xscr; with a semi-colon","initialState":"Data","input":"&Xscr;","inputUtf16":[38,88,115,99,114,59],"output":[{"Character":{"data":"ùí≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1156() {
    tokenize(
        r##"{"description":"Bad named entity: YAcy without a semi-colon","initialState":"Data","input":"&YAcy","inputUtf16":[38,89,65,99,121],"output":[{"Character":{"data":"&YAcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1157() {
    tokenize(
        r##"{"description":"Named entity: YAcy; with a semi-colon","initialState":"Data","input":"&YAcy;","inputUtf16":[38,89,65,99,121,59],"output":[{"Character":{"data":"–Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1158() {
    tokenize(
        r##"{"description":"Bad named entity: YIcy without a semi-colon","initialState":"Data","input":"&YIcy","inputUtf16":[38,89,73,99,121],"output":[{"Character":{"data":"&YIcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1159() {
    tokenize(
        r##"{"description":"Named entity: YIcy; with a semi-colon","initialState":"Data","input":"&YIcy;","inputUtf16":[38,89,73,99,121,59],"output":[{"Character":{"data":"–á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1160() {
    tokenize(
        r##"{"description":"Bad named entity: YUcy without a semi-colon","initialState":"Data","input":"&YUcy","inputUtf16":[38,89,85,99,121],"output":[{"Character":{"data":"&YUcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1161() {
    tokenize(
        r##"{"description":"Named entity: YUcy; with a semi-colon","initialState":"Data","input":"&YUcy;","inputUtf16":[38,89,85,99,121,59],"output":[{"Character":{"data":"–Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1162() {
    tokenize(
        r##"{"description":"Named entity: Yacute without a semi-colon","initialState":"Data","input":"&Yacute","inputUtf16":[38,89,97,99,117,116,101],"output":[{"Character":{"data":"√ù"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1163() {
    tokenize(
        r##"{"description":"Named entity: Yacute; with a semi-colon","initialState":"Data","input":"&Yacute;","inputUtf16":[38,89,97,99,117,116,101,59],"output":[{"Character":{"data":"√ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1164() {
    tokenize(
        r##"{"description":"Bad named entity: Ycirc without a semi-colon","initialState":"Data","input":"&Ycirc","inputUtf16":[38,89,99,105,114,99],"output":[{"Character":{"data":"&Ycirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1165() {
    tokenize(
        r##"{"description":"Named entity: Ycirc; with a semi-colon","initialState":"Data","input":"&Ycirc;","inputUtf16":[38,89,99,105,114,99,59],"output":[{"Character":{"data":"≈∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1166() {
    tokenize(
        r##"{"description":"Bad named entity: Ycy without a semi-colon","initialState":"Data","input":"&Ycy","inputUtf16":[38,89,99,121],"output":[{"Character":{"data":"&Ycy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1167() {
    tokenize(
        r##"{"description":"Named entity: Ycy; with a semi-colon","initialState":"Data","input":"&Ycy;","inputUtf16":[38,89,99,121,59],"output":[{"Character":{"data":"–´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1168() {
    tokenize(
        r##"{"description":"Bad named entity: Yfr without a semi-colon","initialState":"Data","input":"&Yfr","inputUtf16":[38,89,102,114],"output":[{"Character":{"data":"&Yfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1169() {
    tokenize(
        r##"{"description":"Named entity: Yfr; with a semi-colon","initialState":"Data","input":"&Yfr;","inputUtf16":[38,89,102,114,59],"output":[{"Character":{"data":"ùîú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1170() {
    tokenize(
        r##"{"description":"Bad named entity: Yopf without a semi-colon","initialState":"Data","input":"&Yopf","inputUtf16":[38,89,111,112,102],"output":[{"Character":{"data":"&Yopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1171() {
    tokenize(
        r##"{"description":"Named entity: Yopf; with a semi-colon","initialState":"Data","input":"&Yopf;","inputUtf16":[38,89,111,112,102,59],"output":[{"Character":{"data":"ùïê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1172() {
    tokenize(
        r##"{"description":"Bad named entity: Yscr without a semi-colon","initialState":"Data","input":"&Yscr","inputUtf16":[38,89,115,99,114],"output":[{"Character":{"data":"&Yscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1173() {
    tokenize(
        r##"{"description":"Named entity: Yscr; with a semi-colon","initialState":"Data","input":"&Yscr;","inputUtf16":[38,89,115,99,114,59],"output":[{"Character":{"data":"ùí¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1174() {
    tokenize(
        r##"{"description":"Bad named entity: Yuml without a semi-colon","initialState":"Data","input":"&Yuml","inputUtf16":[38,89,117,109,108],"output":[{"Character":{"data":"&Yuml"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1175() {
    tokenize(
        r##"{"description":"Named entity: Yuml; with a semi-colon","initialState":"Data","input":"&Yuml;","inputUtf16":[38,89,117,109,108,59],"output":[{"Character":{"data":"≈∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1176() {
    tokenize(
        r##"{"description":"Bad named entity: ZHcy without a semi-colon","initialState":"Data","input":"&ZHcy","inputUtf16":[38,90,72,99,121],"output":[{"Character":{"data":"&ZHcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1177() {
    tokenize(
        r##"{"description":"Named entity: ZHcy; with a semi-colon","initialState":"Data","input":"&ZHcy;","inputUtf16":[38,90,72,99,121,59],"output":[{"Character":{"data":"–ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1178() {
    tokenize(
        r##"{"description":"Bad named entity: Zacute without a semi-colon","initialState":"Data","input":"&Zacute","inputUtf16":[38,90,97,99,117,116,101],"output":[{"Character":{"data":"&Zacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1179() {
    tokenize(
        r##"{"description":"Named entity: Zacute; with a semi-colon","initialState":"Data","input":"&Zacute;","inputUtf16":[38,90,97,99,117,116,101,59],"output":[{"Character":{"data":"≈π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1180() {
    tokenize(
        r##"{"description":"Bad named entity: Zcaron without a semi-colon","initialState":"Data","input":"&Zcaron","inputUtf16":[38,90,99,97,114,111,110],"output":[{"Character":{"data":"&Zcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1181() {
    tokenize(
        r##"{"description":"Named entity: Zcaron; with a semi-colon","initialState":"Data","input":"&Zcaron;","inputUtf16":[38,90,99,97,114,111,110,59],"output":[{"Character":{"data":"≈Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1182() {
    tokenize(
        r##"{"description":"Bad named entity: Zcy without a semi-colon","initialState":"Data","input":"&Zcy","inputUtf16":[38,90,99,121],"output":[{"Character":{"data":"&Zcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1183() {
    tokenize(
        r##"{"description":"Named entity: Zcy; with a semi-colon","initialState":"Data","input":"&Zcy;","inputUtf16":[38,90,99,121,59],"output":[{"Character":{"data":"–ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1184() {
    tokenize(
        r##"{"description":"Bad named entity: Zdot without a semi-colon","initialState":"Data","input":"&Zdot","inputUtf16":[38,90,100,111,116],"output":[{"Character":{"data":"&Zdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1185() {
    tokenize(
        r##"{"description":"Named entity: Zdot; with a semi-colon","initialState":"Data","input":"&Zdot;","inputUtf16":[38,90,100,111,116,59],"output":[{"Character":{"data":"≈ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1186() {
    tokenize(
        r##"{"description":"Bad named entity: ZeroWidthSpace without a semi-colon","initialState":"Data","input":"&ZeroWidthSpace","inputUtf16":[38,90,101,114,111,87,105,100,116,104,83,112,97,99,101],"output":[{"Character":{"data":"&ZeroWidthSpace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1187() {
    tokenize(
        r##"{"description":"Named entity: ZeroWidthSpace; with a semi-colon","initialState":"Data","input":"&ZeroWidthSpace;","inputUtf16":[38,90,101,114,111,87,105,100,116,104,83,112,97,99,101,59],"output":[{"Character":{"data":"‚Äã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1188() {
    tokenize(
        r##"{"description":"Bad named entity: Zeta without a semi-colon","initialState":"Data","input":"&Zeta","inputUtf16":[38,90,101,116,97],"output":[{"Character":{"data":"&Zeta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1189() {
    tokenize(
        r##"{"description":"Named entity: Zeta; with a semi-colon","initialState":"Data","input":"&Zeta;","inputUtf16":[38,90,101,116,97,59],"output":[{"Character":{"data":"Œñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1190() {
    tokenize(
        r##"{"description":"Bad named entity: Zfr without a semi-colon","initialState":"Data","input":"&Zfr","inputUtf16":[38,90,102,114],"output":[{"Character":{"data":"&Zfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1191() {
    tokenize(
        r##"{"description":"Named entity: Zfr; with a semi-colon","initialState":"Data","input":"&Zfr;","inputUtf16":[38,90,102,114,59],"output":[{"Character":{"data":"‚Ñ®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1192() {
    tokenize(
        r##"{"description":"Bad named entity: Zopf without a semi-colon","initialState":"Data","input":"&Zopf","inputUtf16":[38,90,111,112,102],"output":[{"Character":{"data":"&Zopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1193() {
    tokenize(
        r##"{"description":"Named entity: Zopf; with a semi-colon","initialState":"Data","input":"&Zopf;","inputUtf16":[38,90,111,112,102,59],"output":[{"Character":{"data":"‚Ñ§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1194() {
    tokenize(
        r##"{"description":"Bad named entity: Zscr without a semi-colon","initialState":"Data","input":"&Zscr","inputUtf16":[38,90,115,99,114],"output":[{"Character":{"data":"&Zscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1195() {
    tokenize(
        r##"{"description":"Named entity: Zscr; with a semi-colon","initialState":"Data","input":"&Zscr;","inputUtf16":[38,90,115,99,114,59],"output":[{"Character":{"data":"ùíµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1196() {
    tokenize(
        r##"{"description":"Named entity: aacute without a semi-colon","initialState":"Data","input":"&aacute","inputUtf16":[38,97,97,99,117,116,101],"output":[{"Character":{"data":"√°"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1197() {
    tokenize(
        r##"{"description":"Named entity: aacute; with a semi-colon","initialState":"Data","input":"&aacute;","inputUtf16":[38,97,97,99,117,116,101,59],"output":[{"Character":{"data":"√°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1198() {
    tokenize(
        r##"{"description":"Bad named entity: abreve without a semi-colon","initialState":"Data","input":"&abreve","inputUtf16":[38,97,98,114,101,118,101],"output":[{"Character":{"data":"&abreve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1199() {
    tokenize(
        r##"{"description":"Named entity: abreve; with a semi-colon","initialState":"Data","input":"&abreve;","inputUtf16":[38,97,98,114,101,118,101,59],"output":[{"Character":{"data":"ƒÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1200() {
    tokenize(
        r##"{"description":"Bad named entity: ac without a semi-colon","initialState":"Data","input":"&ac","inputUtf16":[38,97,99],"output":[{"Character":{"data":"&ac"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1201() {
    tokenize(
        r##"{"description":"Named entity: ac; with a semi-colon","initialState":"Data","input":"&ac;","inputUtf16":[38,97,99,59],"output":[{"Character":{"data":"‚àæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1202() {
    tokenize(
        r##"{"description":"Bad named entity: acE without a semi-colon","initialState":"Data","input":"&acE","inputUtf16":[38,97,99,69],"output":[{"Character":{"data":"&acE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1203() {
    tokenize(
        r##"{"description":"Named entity: acE; with a semi-colon","initialState":"Data","input":"&acE;","inputUtf16":[38,97,99,69,59],"output":[{"Character":{"data":"‚àæÃ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1204() {
    tokenize(
        r##"{"description":"Bad named entity: acd without a semi-colon","initialState":"Data","input":"&acd","inputUtf16":[38,97,99,100],"output":[{"Character":{"data":"&acd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1205() {
    tokenize(
        r##"{"description":"Named entity: acd; with a semi-colon","initialState":"Data","input":"&acd;","inputUtf16":[38,97,99,100,59],"output":[{"Character":{"data":"‚àø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1206() {
    tokenize(
        r##"{"description":"Named entity: acirc without a semi-colon","initialState":"Data","input":"&acirc","inputUtf16":[38,97,99,105,114,99],"output":[{"Character":{"data":"√¢"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1207() {
    tokenize(
        r##"{"description":"Named entity: acirc; with a semi-colon","initialState":"Data","input":"&acirc;","inputUtf16":[38,97,99,105,114,99,59],"output":[{"Character":{"data":"√¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1208() {
    tokenize(
        r##"{"description":"Named entity: acute without a semi-colon","initialState":"Data","input":"&acute","inputUtf16":[38,97,99,117,116,101],"output":[{"Character":{"data":"¬¥"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1209() {
    tokenize(
        r##"{"description":"Named entity: acute; with a semi-colon","initialState":"Data","input":"&acute;","inputUtf16":[38,97,99,117,116,101,59],"output":[{"Character":{"data":"¬¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1210() {
    tokenize(
        r##"{"description":"Bad named entity: acy without a semi-colon","initialState":"Data","input":"&acy","inputUtf16":[38,97,99,121],"output":[{"Character":{"data":"&acy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1211() {
    tokenize(
        r##"{"description":"Named entity: acy; with a semi-colon","initialState":"Data","input":"&acy;","inputUtf16":[38,97,99,121,59],"output":[{"Character":{"data":"–∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1212() {
    tokenize(
        r##"{"description":"Named entity: aelig without a semi-colon","initialState":"Data","input":"&aelig","inputUtf16":[38,97,101,108,105,103],"output":[{"Character":{"data":"√¶"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1213() {
    tokenize(
        r##"{"description":"Named entity: aelig; with a semi-colon","initialState":"Data","input":"&aelig;","inputUtf16":[38,97,101,108,105,103,59],"output":[{"Character":{"data":"√¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1214() {
    tokenize(
        r##"{"description":"Bad named entity: af without a semi-colon","initialState":"Data","input":"&af","inputUtf16":[38,97,102],"output":[{"Character":{"data":"&af"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1215() {
    tokenize(
        r##"{"description":"Named entity: af; with a semi-colon","initialState":"Data","input":"&af;","inputUtf16":[38,97,102,59],"output":[{"Character":{"data":"‚Å°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1216() {
    tokenize(
        r##"{"description":"Bad named entity: afr without a semi-colon","initialState":"Data","input":"&afr","inputUtf16":[38,97,102,114],"output":[{"Character":{"data":"&afr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1217() {
    tokenize(
        r##"{"description":"Named entity: afr; with a semi-colon","initialState":"Data","input":"&afr;","inputUtf16":[38,97,102,114,59],"output":[{"Character":{"data":"ùîû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1218() {
    tokenize(
        r##"{"description":"Named entity: agrave without a semi-colon","initialState":"Data","input":"&agrave","inputUtf16":[38,97,103,114,97,118,101],"output":[{"Character":{"data":"√†"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1219() {
    tokenize(
        r##"{"description":"Named entity: agrave; with a semi-colon","initialState":"Data","input":"&agrave;","inputUtf16":[38,97,103,114,97,118,101,59],"output":[{"Character":{"data":"√†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1220() {
    tokenize(
        r##"{"description":"Bad named entity: alefsym without a semi-colon","initialState":"Data","input":"&alefsym","inputUtf16":[38,97,108,101,102,115,121,109],"output":[{"Character":{"data":"&alefsym"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1221() {
    tokenize(
        r##"{"description":"Named entity: alefsym; with a semi-colon","initialState":"Data","input":"&alefsym;","inputUtf16":[38,97,108,101,102,115,121,109,59],"output":[{"Character":{"data":"‚Ñµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1222() {
    tokenize(
        r##"{"description":"Bad named entity: aleph without a semi-colon","initialState":"Data","input":"&aleph","inputUtf16":[38,97,108,101,112,104],"output":[{"Character":{"data":"&aleph"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1223() {
    tokenize(
        r##"{"description":"Named entity: aleph; with a semi-colon","initialState":"Data","input":"&aleph;","inputUtf16":[38,97,108,101,112,104,59],"output":[{"Character":{"data":"‚Ñµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1224() {
    tokenize(
        r##"{"description":"Bad named entity: alpha without a semi-colon","initialState":"Data","input":"&alpha","inputUtf16":[38,97,108,112,104,97],"output":[{"Character":{"data":"&alpha"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1225() {
    tokenize(
        r##"{"description":"Named entity: alpha; with a semi-colon","initialState":"Data","input":"&alpha;","inputUtf16":[38,97,108,112,104,97,59],"output":[{"Character":{"data":"Œ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1226() {
    tokenize(
        r##"{"description":"Bad named entity: amacr without a semi-colon","initialState":"Data","input":"&amacr","inputUtf16":[38,97,109,97,99,114],"output":[{"Character":{"data":"&amacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1227() {
    tokenize(
        r##"{"description":"Named entity: amacr; with a semi-colon","initialState":"Data","input":"&amacr;","inputUtf16":[38,97,109,97,99,114,59],"output":[{"Character":{"data":"ƒÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1228() {
    tokenize(
        r##"{"description":"Bad named entity: amalg without a semi-colon","initialState":"Data","input":"&amalg","inputUtf16":[38,97,109,97,108,103],"output":[{"Character":{"data":"&amalg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1229() {
    tokenize(
        r##"{"description":"Named entity: amalg; with a semi-colon","initialState":"Data","input":"&amalg;","inputUtf16":[38,97,109,97,108,103,59],"output":[{"Character":{"data":"‚®ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1230() {
    tokenize(
        r##"{"description":"Named entity: amp without a semi-colon","initialState":"Data","input":"&amp","inputUtf16":[38,97,109,112],"output":[{"Character":{"data":"&"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_1231() {
    tokenize(
        r##"{"description":"Named entity: amp; with a semi-colon","initialState":"Data","input":"&amp;","inputUtf16":[38,97,109,112,59],"output":[{"Character":{"data":"&"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1232() {
    tokenize(
        r##"{"description":"Bad named entity: and without a semi-colon","initialState":"Data","input":"&and","inputUtf16":[38,97,110,100],"output":[{"Character":{"data":"&and"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1233() {
    tokenize(
        r##"{"description":"Named entity: and; with a semi-colon","initialState":"Data","input":"&and;","inputUtf16":[38,97,110,100,59],"output":[{"Character":{"data":"‚àß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1234() {
    tokenize(
        r##"{"description":"Bad named entity: andand without a semi-colon","initialState":"Data","input":"&andand","inputUtf16":[38,97,110,100,97,110,100],"output":[{"Character":{"data":"&andand"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1235() {
    tokenize(
        r##"{"description":"Named entity: andand; with a semi-colon","initialState":"Data","input":"&andand;","inputUtf16":[38,97,110,100,97,110,100,59],"output":[{"Character":{"data":"‚©ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1236() {
    tokenize(
        r##"{"description":"Bad named entity: andd without a semi-colon","initialState":"Data","input":"&andd","inputUtf16":[38,97,110,100,100],"output":[{"Character":{"data":"&andd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1237() {
    tokenize(
        r##"{"description":"Named entity: andd; with a semi-colon","initialState":"Data","input":"&andd;","inputUtf16":[38,97,110,100,100,59],"output":[{"Character":{"data":"‚©ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1238() {
    tokenize(
        r##"{"description":"Bad named entity: andslope without a semi-colon","initialState":"Data","input":"&andslope","inputUtf16":[38,97,110,100,115,108,111,112,101],"output":[{"Character":{"data":"&andslope"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1239() {
    tokenize(
        r##"{"description":"Named entity: andslope; with a semi-colon","initialState":"Data","input":"&andslope;","inputUtf16":[38,97,110,100,115,108,111,112,101,59],"output":[{"Character":{"data":"‚©ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1240() {
    tokenize(
        r##"{"description":"Bad named entity: andv without a semi-colon","initialState":"Data","input":"&andv","inputUtf16":[38,97,110,100,118],"output":[{"Character":{"data":"&andv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1241() {
    tokenize(
        r##"{"description":"Named entity: andv; with a semi-colon","initialState":"Data","input":"&andv;","inputUtf16":[38,97,110,100,118,59],"output":[{"Character":{"data":"‚©ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1242() {
    tokenize(
        r##"{"description":"Bad named entity: ang without a semi-colon","initialState":"Data","input":"&ang","inputUtf16":[38,97,110,103],"output":[{"Character":{"data":"&ang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1243() {
    tokenize(
        r##"{"description":"Named entity: ang; with a semi-colon","initialState":"Data","input":"&ang;","inputUtf16":[38,97,110,103,59],"output":[{"Character":{"data":"‚à†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1244() {
    tokenize(
        r##"{"description":"Bad named entity: ange without a semi-colon","initialState":"Data","input":"&ange","inputUtf16":[38,97,110,103,101],"output":[{"Character":{"data":"&ange"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1245() {
    tokenize(
        r##"{"description":"Named entity: ange; with a semi-colon","initialState":"Data","input":"&ange;","inputUtf16":[38,97,110,103,101,59],"output":[{"Character":{"data":"‚¶§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1246() {
    tokenize(
        r##"{"description":"Bad named entity: angle without a semi-colon","initialState":"Data","input":"&angle","inputUtf16":[38,97,110,103,108,101],"output":[{"Character":{"data":"&angle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1247() {
    tokenize(
        r##"{"description":"Named entity: angle; with a semi-colon","initialState":"Data","input":"&angle;","inputUtf16":[38,97,110,103,108,101,59],"output":[{"Character":{"data":"‚à†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1248() {
    tokenize(
        r##"{"description":"Bad named entity: angmsd without a semi-colon","initialState":"Data","input":"&angmsd","inputUtf16":[38,97,110,103,109,115,100],"output":[{"Character":{"data":"&angmsd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1249() {
    tokenize(
        r##"{"description":"Named entity: angmsd; with a semi-colon","initialState":"Data","input":"&angmsd;","inputUtf16":[38,97,110,103,109,115,100,59],"output":[{"Character":{"data":"‚à°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1250() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdaa without a semi-colon","initialState":"Data","input":"&angmsdaa","inputUtf16":[38,97,110,103,109,115,100,97,97],"output":[{"Character":{"data":"&angmsdaa"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1251() {
    tokenize(
        r##"{"description":"Named entity: angmsdaa; with a semi-colon","initialState":"Data","input":"&angmsdaa;","inputUtf16":[38,97,110,103,109,115,100,97,97,59],"output":[{"Character":{"data":"‚¶®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1252() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdab without a semi-colon","initialState":"Data","input":"&angmsdab","inputUtf16":[38,97,110,103,109,115,100,97,98],"output":[{"Character":{"data":"&angmsdab"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1253() {
    tokenize(
        r##"{"description":"Named entity: angmsdab; with a semi-colon","initialState":"Data","input":"&angmsdab;","inputUtf16":[38,97,110,103,109,115,100,97,98,59],"output":[{"Character":{"data":"‚¶©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1254() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdac without a semi-colon","initialState":"Data","input":"&angmsdac","inputUtf16":[38,97,110,103,109,115,100,97,99],"output":[{"Character":{"data":"&angmsdac"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1255() {
    tokenize(
        r##"{"description":"Named entity: angmsdac; with a semi-colon","initialState":"Data","input":"&angmsdac;","inputUtf16":[38,97,110,103,109,115,100,97,99,59],"output":[{"Character":{"data":"‚¶™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1256() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdad without a semi-colon","initialState":"Data","input":"&angmsdad","inputUtf16":[38,97,110,103,109,115,100,97,100],"output":[{"Character":{"data":"&angmsdad"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1257() {
    tokenize(
        r##"{"description":"Named entity: angmsdad; with a semi-colon","initialState":"Data","input":"&angmsdad;","inputUtf16":[38,97,110,103,109,115,100,97,100,59],"output":[{"Character":{"data":"‚¶´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1258() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdae without a semi-colon","initialState":"Data","input":"&angmsdae","inputUtf16":[38,97,110,103,109,115,100,97,101],"output":[{"Character":{"data":"&angmsdae"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1259() {
    tokenize(
        r##"{"description":"Named entity: angmsdae; with a semi-colon","initialState":"Data","input":"&angmsdae;","inputUtf16":[38,97,110,103,109,115,100,97,101,59],"output":[{"Character":{"data":"‚¶¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1260() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdaf without a semi-colon","initialState":"Data","input":"&angmsdaf","inputUtf16":[38,97,110,103,109,115,100,97,102],"output":[{"Character":{"data":"&angmsdaf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1261() {
    tokenize(
        r##"{"description":"Named entity: angmsdaf; with a semi-colon","initialState":"Data","input":"&angmsdaf;","inputUtf16":[38,97,110,103,109,115,100,97,102,59],"output":[{"Character":{"data":"‚¶≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1262() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdag without a semi-colon","initialState":"Data","input":"&angmsdag","inputUtf16":[38,97,110,103,109,115,100,97,103],"output":[{"Character":{"data":"&angmsdag"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1263() {
    tokenize(
        r##"{"description":"Named entity: angmsdag; with a semi-colon","initialState":"Data","input":"&angmsdag;","inputUtf16":[38,97,110,103,109,115,100,97,103,59],"output":[{"Character":{"data":"‚¶Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1264() {
    tokenize(
        r##"{"description":"Bad named entity: angmsdah without a semi-colon","initialState":"Data","input":"&angmsdah","inputUtf16":[38,97,110,103,109,115,100,97,104],"output":[{"Character":{"data":"&angmsdah"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1265() {
    tokenize(
        r##"{"description":"Named entity: angmsdah; with a semi-colon","initialState":"Data","input":"&angmsdah;","inputUtf16":[38,97,110,103,109,115,100,97,104,59],"output":[{"Character":{"data":"‚¶Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1266() {
    tokenize(
        r##"{"description":"Bad named entity: angrt without a semi-colon","initialState":"Data","input":"&angrt","inputUtf16":[38,97,110,103,114,116],"output":[{"Character":{"data":"&angrt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1267() {
    tokenize(
        r##"{"description":"Named entity: angrt; with a semi-colon","initialState":"Data","input":"&angrt;","inputUtf16":[38,97,110,103,114,116,59],"output":[{"Character":{"data":"‚àü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1268() {
    tokenize(
        r##"{"description":"Bad named entity: angrtvb without a semi-colon","initialState":"Data","input":"&angrtvb","inputUtf16":[38,97,110,103,114,116,118,98],"output":[{"Character":{"data":"&angrtvb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1269() {
    tokenize(
        r##"{"description":"Named entity: angrtvb; with a semi-colon","initialState":"Data","input":"&angrtvb;","inputUtf16":[38,97,110,103,114,116,118,98,59],"output":[{"Character":{"data":"‚äæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1270() {
    tokenize(
        r##"{"description":"Bad named entity: angrtvbd without a semi-colon","initialState":"Data","input":"&angrtvbd","inputUtf16":[38,97,110,103,114,116,118,98,100],"output":[{"Character":{"data":"&angrtvbd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1271() {
    tokenize(
        r##"{"description":"Named entity: angrtvbd; with a semi-colon","initialState":"Data","input":"&angrtvbd;","inputUtf16":[38,97,110,103,114,116,118,98,100,59],"output":[{"Character":{"data":"‚¶ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1272() {
    tokenize(
        r##"{"description":"Bad named entity: angsph without a semi-colon","initialState":"Data","input":"&angsph","inputUtf16":[38,97,110,103,115,112,104],"output":[{"Character":{"data":"&angsph"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1273() {
    tokenize(
        r##"{"description":"Named entity: angsph; with a semi-colon","initialState":"Data","input":"&angsph;","inputUtf16":[38,97,110,103,115,112,104,59],"output":[{"Character":{"data":"‚à¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1274() {
    tokenize(
        r##"{"description":"Bad named entity: angst without a semi-colon","initialState":"Data","input":"&angst","inputUtf16":[38,97,110,103,115,116],"output":[{"Character":{"data":"&angst"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1275() {
    tokenize(
        r##"{"description":"Named entity: angst; with a semi-colon","initialState":"Data","input":"&angst;","inputUtf16":[38,97,110,103,115,116,59],"output":[{"Character":{"data":"√Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1276() {
    tokenize(
        r##"{"description":"Bad named entity: angzarr without a semi-colon","initialState":"Data","input":"&angzarr","inputUtf16":[38,97,110,103,122,97,114,114],"output":[{"Character":{"data":"&angzarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1277() {
    tokenize(
        r##"{"description":"Named entity: angzarr; with a semi-colon","initialState":"Data","input":"&angzarr;","inputUtf16":[38,97,110,103,122,97,114,114,59],"output":[{"Character":{"data":"‚çº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1278() {
    tokenize(
        r##"{"description":"Bad named entity: aogon without a semi-colon","initialState":"Data","input":"&aogon","inputUtf16":[38,97,111,103,111,110],"output":[{"Character":{"data":"&aogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1279() {
    tokenize(
        r##"{"description":"Named entity: aogon; with a semi-colon","initialState":"Data","input":"&aogon;","inputUtf16":[38,97,111,103,111,110,59],"output":[{"Character":{"data":"ƒÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1280() {
    tokenize(
        r##"{"description":"Bad named entity: aopf without a semi-colon","initialState":"Data","input":"&aopf","inputUtf16":[38,97,111,112,102],"output":[{"Character":{"data":"&aopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1281() {
    tokenize(
        r##"{"description":"Named entity: aopf; with a semi-colon","initialState":"Data","input":"&aopf;","inputUtf16":[38,97,111,112,102,59],"output":[{"Character":{"data":"ùïí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1282() {
    tokenize(
        r##"{"description":"Bad named entity: ap without a semi-colon","initialState":"Data","input":"&ap","inputUtf16":[38,97,112],"output":[{"Character":{"data":"&ap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1283() {
    tokenize(
        r##"{"description":"Named entity: ap; with a semi-colon","initialState":"Data","input":"&ap;","inputUtf16":[38,97,112,59],"output":[{"Character":{"data":"‚âà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1284() {
    tokenize(
        r##"{"description":"Bad named entity: apE without a semi-colon","initialState":"Data","input":"&apE","inputUtf16":[38,97,112,69],"output":[{"Character":{"data":"&apE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1285() {
    tokenize(
        r##"{"description":"Named entity: apE; with a semi-colon","initialState":"Data","input":"&apE;","inputUtf16":[38,97,112,69,59],"output":[{"Character":{"data":"‚©∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1286() {
    tokenize(
        r##"{"description":"Bad named entity: apacir without a semi-colon","initialState":"Data","input":"&apacir","inputUtf16":[38,97,112,97,99,105,114],"output":[{"Character":{"data":"&apacir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1287() {
    tokenize(
        r##"{"description":"Named entity: apacir; with a semi-colon","initialState":"Data","input":"&apacir;","inputUtf16":[38,97,112,97,99,105,114,59],"output":[{"Character":{"data":"‚©Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1288() {
    tokenize(
        r##"{"description":"Bad named entity: ape without a semi-colon","initialState":"Data","input":"&ape","inputUtf16":[38,97,112,101],"output":[{"Character":{"data":"&ape"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1289() {
    tokenize(
        r##"{"description":"Named entity: ape; with a semi-colon","initialState":"Data","input":"&ape;","inputUtf16":[38,97,112,101,59],"output":[{"Character":{"data":"‚âä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1290() {
    tokenize(
        r##"{"description":"Bad named entity: apid without a semi-colon","initialState":"Data","input":"&apid","inputUtf16":[38,97,112,105,100],"output":[{"Character":{"data":"&apid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1291() {
    tokenize(
        r##"{"description":"Named entity: apid; with a semi-colon","initialState":"Data","input":"&apid;","inputUtf16":[38,97,112,105,100,59],"output":[{"Character":{"data":"‚âã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1292() {
    tokenize(
        r##"{"description":"Bad named entity: apos without a semi-colon","initialState":"Data","input":"&apos","inputUtf16":[38,97,112,111,115],"output":[{"Character":{"data":"&apos"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1293() {
    tokenize(
        r##"{"description":"Named entity: apos; with a semi-colon","initialState":"Data","input":"&apos;","inputUtf16":[38,97,112,111,115,59],"output":[{"Character":{"data":"'"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1294() {
    tokenize(
        r##"{"description":"Bad named entity: approx without a semi-colon","initialState":"Data","input":"&approx","inputUtf16":[38,97,112,112,114,111,120],"output":[{"Character":{"data":"&approx"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1295() {
    tokenize(
        r##"{"description":"Named entity: approx; with a semi-colon","initialState":"Data","input":"&approx;","inputUtf16":[38,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚âà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1296() {
    tokenize(
        r##"{"description":"Bad named entity: approxeq without a semi-colon","initialState":"Data","input":"&approxeq","inputUtf16":[38,97,112,112,114,111,120,101,113],"output":[{"Character":{"data":"&approxeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1297() {
    tokenize(
        r##"{"description":"Named entity: approxeq; with a semi-colon","initialState":"Data","input":"&approxeq;","inputUtf16":[38,97,112,112,114,111,120,101,113,59],"output":[{"Character":{"data":"‚âä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1298() {
    tokenize(
        r##"{"description":"Named entity: aring without a semi-colon","initialState":"Data","input":"&aring","inputUtf16":[38,97,114,105,110,103],"output":[{"Character":{"data":"√•"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1299() {
    tokenize(
        r##"{"description":"Named entity: aring; with a semi-colon","initialState":"Data","input":"&aring;","inputUtf16":[38,97,114,105,110,103,59],"output":[{"Character":{"data":"√•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1300() {
    tokenize(
        r##"{"description":"Bad named entity: ascr without a semi-colon","initialState":"Data","input":"&ascr","inputUtf16":[38,97,115,99,114],"output":[{"Character":{"data":"&ascr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1301() {
    tokenize(
        r##"{"description":"Named entity: ascr; with a semi-colon","initialState":"Data","input":"&ascr;","inputUtf16":[38,97,115,99,114,59],"output":[{"Character":{"data":"ùí∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1302() {
    tokenize(
        r##"{"description":"Bad named entity: ast without a semi-colon","initialState":"Data","input":"&ast","inputUtf16":[38,97,115,116],"output":[{"Character":{"data":"&ast"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1303() {
    tokenize(
        r##"{"description":"Named entity: ast; with a semi-colon","initialState":"Data","input":"&ast;","inputUtf16":[38,97,115,116,59],"output":[{"Character":{"data":"*"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1304() {
    tokenize(
        r##"{"description":"Bad named entity: asymp without a semi-colon","initialState":"Data","input":"&asymp","inputUtf16":[38,97,115,121,109,112],"output":[{"Character":{"data":"&asymp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1305() {
    tokenize(
        r##"{"description":"Named entity: asymp; with a semi-colon","initialState":"Data","input":"&asymp;","inputUtf16":[38,97,115,121,109,112,59],"output":[{"Character":{"data":"‚âà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1306() {
    tokenize(
        r##"{"description":"Bad named entity: asympeq without a semi-colon","initialState":"Data","input":"&asympeq","inputUtf16":[38,97,115,121,109,112,101,113],"output":[{"Character":{"data":"&asympeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1307() {
    tokenize(
        r##"{"description":"Named entity: asympeq; with a semi-colon","initialState":"Data","input":"&asympeq;","inputUtf16":[38,97,115,121,109,112,101,113,59],"output":[{"Character":{"data":"‚âç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1308() {
    tokenize(
        r##"{"description":"Named entity: atilde without a semi-colon","initialState":"Data","input":"&atilde","inputUtf16":[38,97,116,105,108,100,101],"output":[{"Character":{"data":"√£"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1309() {
    tokenize(
        r##"{"description":"Named entity: atilde; with a semi-colon","initialState":"Data","input":"&atilde;","inputUtf16":[38,97,116,105,108,100,101,59],"output":[{"Character":{"data":"√£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1310() {
    tokenize(
        r##"{"description":"Named entity: auml without a semi-colon","initialState":"Data","input":"&auml","inputUtf16":[38,97,117,109,108],"output":[{"Character":{"data":"√§"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_1311() {
    tokenize(
        r##"{"description":"Named entity: auml; with a semi-colon","initialState":"Data","input":"&auml;","inputUtf16":[38,97,117,109,108,59],"output":[{"Character":{"data":"√§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1312() {
    tokenize(
        r##"{"description":"Bad named entity: awconint without a semi-colon","initialState":"Data","input":"&awconint","inputUtf16":[38,97,119,99,111,110,105,110,116],"output":[{"Character":{"data":"&awconint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1313() {
    tokenize(
        r##"{"description":"Named entity: awconint; with a semi-colon","initialState":"Data","input":"&awconint;","inputUtf16":[38,97,119,99,111,110,105,110,116,59],"output":[{"Character":{"data":"‚à≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1314() {
    tokenize(
        r##"{"description":"Bad named entity: awint without a semi-colon","initialState":"Data","input":"&awint","inputUtf16":[38,97,119,105,110,116],"output":[{"Character":{"data":"&awint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1315() {
    tokenize(
        r##"{"description":"Named entity: awint; with a semi-colon","initialState":"Data","input":"&awint;","inputUtf16":[38,97,119,105,110,116,59],"output":[{"Character":{"data":"‚®ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1316() {
    tokenize(
        r##"{"description":"Bad named entity: bNot without a semi-colon","initialState":"Data","input":"&bNot","inputUtf16":[38,98,78,111,116],"output":[{"Character":{"data":"&bNot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1317() {
    tokenize(
        r##"{"description":"Named entity: bNot; with a semi-colon","initialState":"Data","input":"&bNot;","inputUtf16":[38,98,78,111,116,59],"output":[{"Character":{"data":"‚´≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1318() {
    tokenize(
        r##"{"description":"Bad named entity: backcong without a semi-colon","initialState":"Data","input":"&backcong","inputUtf16":[38,98,97,99,107,99,111,110,103],"output":[{"Character":{"data":"&backcong"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1319() {
    tokenize(
        r##"{"description":"Named entity: backcong; with a semi-colon","initialState":"Data","input":"&backcong;","inputUtf16":[38,98,97,99,107,99,111,110,103,59],"output":[{"Character":{"data":"‚âå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1320() {
    tokenize(
        r##"{"description":"Bad named entity: backepsilon without a semi-colon","initialState":"Data","input":"&backepsilon","inputUtf16":[38,98,97,99,107,101,112,115,105,108,111,110],"output":[{"Character":{"data":"&backepsilon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1321() {
    tokenize(
        r##"{"description":"Named entity: backepsilon; with a semi-colon","initialState":"Data","input":"&backepsilon;","inputUtf16":[38,98,97,99,107,101,112,115,105,108,111,110,59],"output":[{"Character":{"data":"œ∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1322() {
    tokenize(
        r##"{"description":"Bad named entity: backprime without a semi-colon","initialState":"Data","input":"&backprime","inputUtf16":[38,98,97,99,107,112,114,105,109,101],"output":[{"Character":{"data":"&backprime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1323() {
    tokenize(
        r##"{"description":"Named entity: backprime; with a semi-colon","initialState":"Data","input":"&backprime;","inputUtf16":[38,98,97,99,107,112,114,105,109,101,59],"output":[{"Character":{"data":"‚Äµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1324() {
    tokenize(
        r##"{"description":"Bad named entity: backsim without a semi-colon","initialState":"Data","input":"&backsim","inputUtf16":[38,98,97,99,107,115,105,109],"output":[{"Character":{"data":"&backsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1325() {
    tokenize(
        r##"{"description":"Named entity: backsim; with a semi-colon","initialState":"Data","input":"&backsim;","inputUtf16":[38,98,97,99,107,115,105,109,59],"output":[{"Character":{"data":"‚àΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1326() {
    tokenize(
        r##"{"description":"Bad named entity: backsimeq without a semi-colon","initialState":"Data","input":"&backsimeq","inputUtf16":[38,98,97,99,107,115,105,109,101,113],"output":[{"Character":{"data":"&backsimeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1327() {
    tokenize(
        r##"{"description":"Named entity: backsimeq; with a semi-colon","initialState":"Data","input":"&backsimeq;","inputUtf16":[38,98,97,99,107,115,105,109,101,113,59],"output":[{"Character":{"data":"‚ãç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1328() {
    tokenize(
        r##"{"description":"Bad named entity: barvee without a semi-colon","initialState":"Data","input":"&barvee","inputUtf16":[38,98,97,114,118,101,101],"output":[{"Character":{"data":"&barvee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1329() {
    tokenize(
        r##"{"description":"Named entity: barvee; with a semi-colon","initialState":"Data","input":"&barvee;","inputUtf16":[38,98,97,114,118,101,101,59],"output":[{"Character":{"data":"‚äΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1330() {
    tokenize(
        r##"{"description":"Bad named entity: barwed without a semi-colon","initialState":"Data","input":"&barwed","inputUtf16":[38,98,97,114,119,101,100],"output":[{"Character":{"data":"&barwed"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1331() {
    tokenize(
        r##"{"description":"Named entity: barwed; with a semi-colon","initialState":"Data","input":"&barwed;","inputUtf16":[38,98,97,114,119,101,100,59],"output":[{"Character":{"data":"‚åÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1332() {
    tokenize(
        r##"{"description":"Bad named entity: barwedge without a semi-colon","initialState":"Data","input":"&barwedge","inputUtf16":[38,98,97,114,119,101,100,103,101],"output":[{"Character":{"data":"&barwedge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1333() {
    tokenize(
        r##"{"description":"Named entity: barwedge; with a semi-colon","initialState":"Data","input":"&barwedge;","inputUtf16":[38,98,97,114,119,101,100,103,101,59],"output":[{"Character":{"data":"‚åÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1334() {
    tokenize(
        r##"{"description":"Bad named entity: bbrk without a semi-colon","initialState":"Data","input":"&bbrk","inputUtf16":[38,98,98,114,107],"output":[{"Character":{"data":"&bbrk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1335() {
    tokenize(
        r##"{"description":"Named entity: bbrk; with a semi-colon","initialState":"Data","input":"&bbrk;","inputUtf16":[38,98,98,114,107,59],"output":[{"Character":{"data":"‚éµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1336() {
    tokenize(
        r##"{"description":"Bad named entity: bbrktbrk without a semi-colon","initialState":"Data","input":"&bbrktbrk","inputUtf16":[38,98,98,114,107,116,98,114,107],"output":[{"Character":{"data":"&bbrktbrk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1337() {
    tokenize(
        r##"{"description":"Named entity: bbrktbrk; with a semi-colon","initialState":"Data","input":"&bbrktbrk;","inputUtf16":[38,98,98,114,107,116,98,114,107,59],"output":[{"Character":{"data":"‚é∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1338() {
    tokenize(
        r##"{"description":"Bad named entity: bcong without a semi-colon","initialState":"Data","input":"&bcong","inputUtf16":[38,98,99,111,110,103],"output":[{"Character":{"data":"&bcong"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1339() {
    tokenize(
        r##"{"description":"Named entity: bcong; with a semi-colon","initialState":"Data","input":"&bcong;","inputUtf16":[38,98,99,111,110,103,59],"output":[{"Character":{"data":"‚âå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1340() {
    tokenize(
        r##"{"description":"Bad named entity: bcy without a semi-colon","initialState":"Data","input":"&bcy","inputUtf16":[38,98,99,121],"output":[{"Character":{"data":"&bcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1341() {
    tokenize(
        r##"{"description":"Named entity: bcy; with a semi-colon","initialState":"Data","input":"&bcy;","inputUtf16":[38,98,99,121,59],"output":[{"Character":{"data":"–±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1342() {
    tokenize(
        r##"{"description":"Bad named entity: bdquo without a semi-colon","initialState":"Data","input":"&bdquo","inputUtf16":[38,98,100,113,117,111],"output":[{"Character":{"data":"&bdquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1343() {
    tokenize(
        r##"{"description":"Named entity: bdquo; with a semi-colon","initialState":"Data","input":"&bdquo;","inputUtf16":[38,98,100,113,117,111,59],"output":[{"Character":{"data":"‚Äû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1344() {
    tokenize(
        r##"{"description":"Bad named entity: becaus without a semi-colon","initialState":"Data","input":"&becaus","inputUtf16":[38,98,101,99,97,117,115],"output":[{"Character":{"data":"&becaus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1345() {
    tokenize(
        r##"{"description":"Named entity: becaus; with a semi-colon","initialState":"Data","input":"&becaus;","inputUtf16":[38,98,101,99,97,117,115,59],"output":[{"Character":{"data":"‚àµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1346() {
    tokenize(
        r##"{"description":"Bad named entity: because without a semi-colon","initialState":"Data","input":"&because","inputUtf16":[38,98,101,99,97,117,115,101],"output":[{"Character":{"data":"&because"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1347() {
    tokenize(
        r##"{"description":"Named entity: because; with a semi-colon","initialState":"Data","input":"&because;","inputUtf16":[38,98,101,99,97,117,115,101,59],"output":[{"Character":{"data":"‚àµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1348() {
    tokenize(
        r##"{"description":"Bad named entity: bemptyv without a semi-colon","initialState":"Data","input":"&bemptyv","inputUtf16":[38,98,101,109,112,116,121,118],"output":[{"Character":{"data":"&bemptyv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1349() {
    tokenize(
        r##"{"description":"Named entity: bemptyv; with a semi-colon","initialState":"Data","input":"&bemptyv;","inputUtf16":[38,98,101,109,112,116,121,118,59],"output":[{"Character":{"data":"‚¶∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1350() {
    tokenize(
        r##"{"description":"Bad named entity: bepsi without a semi-colon","initialState":"Data","input":"&bepsi","inputUtf16":[38,98,101,112,115,105],"output":[{"Character":{"data":"&bepsi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1351() {
    tokenize(
        r##"{"description":"Named entity: bepsi; with a semi-colon","initialState":"Data","input":"&bepsi;","inputUtf16":[38,98,101,112,115,105,59],"output":[{"Character":{"data":"œ∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1352() {
    tokenize(
        r##"{"description":"Bad named entity: bernou without a semi-colon","initialState":"Data","input":"&bernou","inputUtf16":[38,98,101,114,110,111,117],"output":[{"Character":{"data":"&bernou"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1353() {
    tokenize(
        r##"{"description":"Named entity: bernou; with a semi-colon","initialState":"Data","input":"&bernou;","inputUtf16":[38,98,101,114,110,111,117,59],"output":[{"Character":{"data":"‚Ñ¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1354() {
    tokenize(
        r##"{"description":"Bad named entity: beta without a semi-colon","initialState":"Data","input":"&beta","inputUtf16":[38,98,101,116,97],"output":[{"Character":{"data":"&beta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1355() {
    tokenize(
        r##"{"description":"Named entity: beta; with a semi-colon","initialState":"Data","input":"&beta;","inputUtf16":[38,98,101,116,97,59],"output":[{"Character":{"data":"Œ≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1356() {
    tokenize(
        r##"{"description":"Bad named entity: beth without a semi-colon","initialState":"Data","input":"&beth","inputUtf16":[38,98,101,116,104],"output":[{"Character":{"data":"&beth"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1357() {
    tokenize(
        r##"{"description":"Named entity: beth; with a semi-colon","initialState":"Data","input":"&beth;","inputUtf16":[38,98,101,116,104,59],"output":[{"Character":{"data":"‚Ñ∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1358() {
    tokenize(
        r##"{"description":"Bad named entity: between without a semi-colon","initialState":"Data","input":"&between","inputUtf16":[38,98,101,116,119,101,101,110],"output":[{"Character":{"data":"&between"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1359() {
    tokenize(
        r##"{"description":"Named entity: between; with a semi-colon","initialState":"Data","input":"&between;","inputUtf16":[38,98,101,116,119,101,101,110,59],"output":[{"Character":{"data":"‚â¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1360() {
    tokenize(
        r##"{"description":"Bad named entity: bfr without a semi-colon","initialState":"Data","input":"&bfr","inputUtf16":[38,98,102,114],"output":[{"Character":{"data":"&bfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1361() {
    tokenize(
        r##"{"description":"Named entity: bfr; with a semi-colon","initialState":"Data","input":"&bfr;","inputUtf16":[38,98,102,114,59],"output":[{"Character":{"data":"ùîü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1362() {
    tokenize(
        r##"{"description":"Bad named entity: bigcap without a semi-colon","initialState":"Data","input":"&bigcap","inputUtf16":[38,98,105,103,99,97,112],"output":[{"Character":{"data":"&bigcap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1363() {
    tokenize(
        r##"{"description":"Named entity: bigcap; with a semi-colon","initialState":"Data","input":"&bigcap;","inputUtf16":[38,98,105,103,99,97,112,59],"output":[{"Character":{"data":"‚ãÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1364() {
    tokenize(
        r##"{"description":"Bad named entity: bigcirc without a semi-colon","initialState":"Data","input":"&bigcirc","inputUtf16":[38,98,105,103,99,105,114,99],"output":[{"Character":{"data":"&bigcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1365() {
    tokenize(
        r##"{"description":"Named entity: bigcirc; with a semi-colon","initialState":"Data","input":"&bigcirc;","inputUtf16":[38,98,105,103,99,105,114,99,59],"output":[{"Character":{"data":"‚óØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1366() {
    tokenize(
        r##"{"description":"Bad named entity: bigcup without a semi-colon","initialState":"Data","input":"&bigcup","inputUtf16":[38,98,105,103,99,117,112],"output":[{"Character":{"data":"&bigcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1367() {
    tokenize(
        r##"{"description":"Named entity: bigcup; with a semi-colon","initialState":"Data","input":"&bigcup;","inputUtf16":[38,98,105,103,99,117,112,59],"output":[{"Character":{"data":"‚ãÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1368() {
    tokenize(
        r##"{"description":"Bad named entity: bigodot without a semi-colon","initialState":"Data","input":"&bigodot","inputUtf16":[38,98,105,103,111,100,111,116],"output":[{"Character":{"data":"&bigodot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1369() {
    tokenize(
        r##"{"description":"Named entity: bigodot; with a semi-colon","initialState":"Data","input":"&bigodot;","inputUtf16":[38,98,105,103,111,100,111,116,59],"output":[{"Character":{"data":"‚®Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1370() {
    tokenize(
        r##"{"description":"Bad named entity: bigoplus without a semi-colon","initialState":"Data","input":"&bigoplus","inputUtf16":[38,98,105,103,111,112,108,117,115],"output":[{"Character":{"data":"&bigoplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1371() {
    tokenize(
        r##"{"description":"Named entity: bigoplus; with a semi-colon","initialState":"Data","input":"&bigoplus;","inputUtf16":[38,98,105,103,111,112,108,117,115,59],"output":[{"Character":{"data":"‚®Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1372() {
    tokenize(
        r##"{"description":"Bad named entity: bigotimes without a semi-colon","initialState":"Data","input":"&bigotimes","inputUtf16":[38,98,105,103,111,116,105,109,101,115],"output":[{"Character":{"data":"&bigotimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1373() {
    tokenize(
        r##"{"description":"Named entity: bigotimes; with a semi-colon","initialState":"Data","input":"&bigotimes;","inputUtf16":[38,98,105,103,111,116,105,109,101,115,59],"output":[{"Character":{"data":"‚®Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1374() {
    tokenize(
        r##"{"description":"Bad named entity: bigsqcup without a semi-colon","initialState":"Data","input":"&bigsqcup","inputUtf16":[38,98,105,103,115,113,99,117,112],"output":[{"Character":{"data":"&bigsqcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1375() {
    tokenize(
        r##"{"description":"Named entity: bigsqcup; with a semi-colon","initialState":"Data","input":"&bigsqcup;","inputUtf16":[38,98,105,103,115,113,99,117,112,59],"output":[{"Character":{"data":"‚®Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1376() {
    tokenize(
        r##"{"description":"Bad named entity: bigstar without a semi-colon","initialState":"Data","input":"&bigstar","inputUtf16":[38,98,105,103,115,116,97,114],"output":[{"Character":{"data":"&bigstar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1377() {
    tokenize(
        r##"{"description":"Named entity: bigstar; with a semi-colon","initialState":"Data","input":"&bigstar;","inputUtf16":[38,98,105,103,115,116,97,114,59],"output":[{"Character":{"data":"‚òÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1378() {
    tokenize(
        r##"{"description":"Bad named entity: bigtriangledown without a semi-colon","initialState":"Data","input":"&bigtriangledown","inputUtf16":[38,98,105,103,116,114,105,97,110,103,108,101,100,111,119,110],"output":[{"Character":{"data":"&bigtriangledown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1379() {
    tokenize(
        r##"{"description":"Named entity: bigtriangledown; with a semi-colon","initialState":"Data","input":"&bigtriangledown;","inputUtf16":[38,98,105,103,116,114,105,97,110,103,108,101,100,111,119,110,59],"output":[{"Character":{"data":"‚ñΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1380() {
    tokenize(
        r##"{"description":"Bad named entity: bigtriangleup without a semi-colon","initialState":"Data","input":"&bigtriangleup","inputUtf16":[38,98,105,103,116,114,105,97,110,103,108,101,117,112],"output":[{"Character":{"data":"&bigtriangleup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1381() {
    tokenize(
        r##"{"description":"Named entity: bigtriangleup; with a semi-colon","initialState":"Data","input":"&bigtriangleup;","inputUtf16":[38,98,105,103,116,114,105,97,110,103,108,101,117,112,59],"output":[{"Character":{"data":"‚ñ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1382() {
    tokenize(
        r##"{"description":"Bad named entity: biguplus without a semi-colon","initialState":"Data","input":"&biguplus","inputUtf16":[38,98,105,103,117,112,108,117,115],"output":[{"Character":{"data":"&biguplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1383() {
    tokenize(
        r##"{"description":"Named entity: biguplus; with a semi-colon","initialState":"Data","input":"&biguplus;","inputUtf16":[38,98,105,103,117,112,108,117,115,59],"output":[{"Character":{"data":"‚®Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1384() {
    tokenize(
        r##"{"description":"Bad named entity: bigvee without a semi-colon","initialState":"Data","input":"&bigvee","inputUtf16":[38,98,105,103,118,101,101],"output":[{"Character":{"data":"&bigvee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1385() {
    tokenize(
        r##"{"description":"Named entity: bigvee; with a semi-colon","initialState":"Data","input":"&bigvee;","inputUtf16":[38,98,105,103,118,101,101,59],"output":[{"Character":{"data":"‚ãÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1386() {
    tokenize(
        r##"{"description":"Bad named entity: bigwedge without a semi-colon","initialState":"Data","input":"&bigwedge","inputUtf16":[38,98,105,103,119,101,100,103,101],"output":[{"Character":{"data":"&bigwedge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1387() {
    tokenize(
        r##"{"description":"Named entity: bigwedge; with a semi-colon","initialState":"Data","input":"&bigwedge;","inputUtf16":[38,98,105,103,119,101,100,103,101,59],"output":[{"Character":{"data":"‚ãÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1388() {
    tokenize(
        r##"{"description":"Bad named entity: bkarow without a semi-colon","initialState":"Data","input":"&bkarow","inputUtf16":[38,98,107,97,114,111,119],"output":[{"Character":{"data":"&bkarow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1389() {
    tokenize(
        r##"{"description":"Named entity: bkarow; with a semi-colon","initialState":"Data","input":"&bkarow;","inputUtf16":[38,98,107,97,114,111,119,59],"output":[{"Character":{"data":"‚§ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1390() {
    tokenize(
        r##"{"description":"Bad named entity: blacklozenge without a semi-colon","initialState":"Data","input":"&blacklozenge","inputUtf16":[38,98,108,97,99,107,108,111,122,101,110,103,101],"output":[{"Character":{"data":"&blacklozenge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1391() {
    tokenize(
        r##"{"description":"Named entity: blacklozenge; with a semi-colon","initialState":"Data","input":"&blacklozenge;","inputUtf16":[38,98,108,97,99,107,108,111,122,101,110,103,101,59],"output":[{"Character":{"data":"‚ß´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1392() {
    tokenize(
        r##"{"description":"Bad named entity: blacksquare without a semi-colon","initialState":"Data","input":"&blacksquare","inputUtf16":[38,98,108,97,99,107,115,113,117,97,114,101],"output":[{"Character":{"data":"&blacksquare"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1393() {
    tokenize(
        r##"{"description":"Named entity: blacksquare; with a semi-colon","initialState":"Data","input":"&blacksquare;","inputUtf16":[38,98,108,97,99,107,115,113,117,97,114,101,59],"output":[{"Character":{"data":"‚ñ™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1394() {
    tokenize(
        r##"{"description":"Bad named entity: blacktriangle without a semi-colon","initialState":"Data","input":"&blacktriangle","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101],"output":[{"Character":{"data":"&blacktriangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1395() {
    tokenize(
        r##"{"description":"Named entity: blacktriangle; with a semi-colon","initialState":"Data","input":"&blacktriangle;","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ñ¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1396() {
    tokenize(
        r##"{"description":"Bad named entity: blacktriangledown without a semi-colon","initialState":"Data","input":"&blacktriangledown","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101,100,111,119,110],"output":[{"Character":{"data":"&blacktriangledown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1397() {
    tokenize(
        r##"{"description":"Named entity: blacktriangledown; with a semi-colon","initialState":"Data","input":"&blacktriangledown;","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101,100,111,119,110,59],"output":[{"Character":{"data":"‚ñæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1398() {
    tokenize(
        r##"{"description":"Bad named entity: blacktriangleleft without a semi-colon","initialState":"Data","input":"&blacktriangleleft","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101,108,101,102,116],"output":[{"Character":{"data":"&blacktriangleleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1399() {
    tokenize(
        r##"{"description":"Named entity: blacktriangleleft; with a semi-colon","initialState":"Data","input":"&blacktriangleleft;","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101,108,101,102,116,59],"output":[{"Character":{"data":"‚óÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1400() {
    tokenize(
        r##"{"description":"Bad named entity: blacktriangleright without a semi-colon","initialState":"Data","input":"&blacktriangleright","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101,114,105,103,104,116],"output":[{"Character":{"data":"&blacktriangleright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1401() {
    tokenize(
        r##"{"description":"Named entity: blacktriangleright; with a semi-colon","initialState":"Data","input":"&blacktriangleright;","inputUtf16":[38,98,108,97,99,107,116,114,105,97,110,103,108,101,114,105,103,104,116,59],"output":[{"Character":{"data":"‚ñ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1402() {
    tokenize(
        r##"{"description":"Bad named entity: blank without a semi-colon","initialState":"Data","input":"&blank","inputUtf16":[38,98,108,97,110,107],"output":[{"Character":{"data":"&blank"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1403() {
    tokenize(
        r##"{"description":"Named entity: blank; with a semi-colon","initialState":"Data","input":"&blank;","inputUtf16":[38,98,108,97,110,107,59],"output":[{"Character":{"data":"‚ê£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1404() {
    tokenize(
        r##"{"description":"Bad named entity: blk12 without a semi-colon","initialState":"Data","input":"&blk12","inputUtf16":[38,98,108,107,49,50],"output":[{"Character":{"data":"&blk12"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1405() {
    tokenize(
        r##"{"description":"Named entity: blk12; with a semi-colon","initialState":"Data","input":"&blk12;","inputUtf16":[38,98,108,107,49,50,59],"output":[{"Character":{"data":"‚ñí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1406() {
    tokenize(
        r##"{"description":"Bad named entity: blk14 without a semi-colon","initialState":"Data","input":"&blk14","inputUtf16":[38,98,108,107,49,52],"output":[{"Character":{"data":"&blk14"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1407() {
    tokenize(
        r##"{"description":"Named entity: blk14; with a semi-colon","initialState":"Data","input":"&blk14;","inputUtf16":[38,98,108,107,49,52,59],"output":[{"Character":{"data":"‚ñë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1408() {
    tokenize(
        r##"{"description":"Bad named entity: blk34 without a semi-colon","initialState":"Data","input":"&blk34","inputUtf16":[38,98,108,107,51,52],"output":[{"Character":{"data":"&blk34"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1409() {
    tokenize(
        r##"{"description":"Named entity: blk34; with a semi-colon","initialState":"Data","input":"&blk34;","inputUtf16":[38,98,108,107,51,52,59],"output":[{"Character":{"data":"‚ñì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1410() {
    tokenize(
        r##"{"description":"Bad named entity: block without a semi-colon","initialState":"Data","input":"&block","inputUtf16":[38,98,108,111,99,107],"output":[{"Character":{"data":"&block"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1411() {
    tokenize(
        r##"{"description":"Named entity: block; with a semi-colon","initialState":"Data","input":"&block;","inputUtf16":[38,98,108,111,99,107,59],"output":[{"Character":{"data":"‚ñà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1412() {
    tokenize(
        r##"{"description":"Bad named entity: bne without a semi-colon","initialState":"Data","input":"&bne","inputUtf16":[38,98,110,101],"output":[{"Character":{"data":"&bne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1413() {
    tokenize(
        r##"{"description":"Named entity: bne; with a semi-colon","initialState":"Data","input":"&bne;","inputUtf16":[38,98,110,101,59],"output":[{"Character":{"data":"=‚É•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1414() {
    tokenize(
        r##"{"description":"Bad named entity: bnequiv without a semi-colon","initialState":"Data","input":"&bnequiv","inputUtf16":[38,98,110,101,113,117,105,118],"output":[{"Character":{"data":"&bnequiv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1415() {
    tokenize(
        r##"{"description":"Named entity: bnequiv; with a semi-colon","initialState":"Data","input":"&bnequiv;","inputUtf16":[38,98,110,101,113,117,105,118,59],"output":[{"Character":{"data":"‚â°‚É•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1416() {
    tokenize(
        r##"{"description":"Bad named entity: bnot without a semi-colon","initialState":"Data","input":"&bnot","inputUtf16":[38,98,110,111,116],"output":[{"Character":{"data":"&bnot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1417() {
    tokenize(
        r##"{"description":"Named entity: bnot; with a semi-colon","initialState":"Data","input":"&bnot;","inputUtf16":[38,98,110,111,116,59],"output":[{"Character":{"data":"‚åê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1418() {
    tokenize(
        r##"{"description":"Bad named entity: bopf without a semi-colon","initialState":"Data","input":"&bopf","inputUtf16":[38,98,111,112,102],"output":[{"Character":{"data":"&bopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1419() {
    tokenize(
        r##"{"description":"Named entity: bopf; with a semi-colon","initialState":"Data","input":"&bopf;","inputUtf16":[38,98,111,112,102,59],"output":[{"Character":{"data":"ùïì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1420() {
    tokenize(
        r##"{"description":"Bad named entity: bot without a semi-colon","initialState":"Data","input":"&bot","inputUtf16":[38,98,111,116],"output":[{"Character":{"data":"&bot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1421() {
    tokenize(
        r##"{"description":"Named entity: bot; with a semi-colon","initialState":"Data","input":"&bot;","inputUtf16":[38,98,111,116,59],"output":[{"Character":{"data":"‚ä•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1422() {
    tokenize(
        r##"{"description":"Bad named entity: bottom without a semi-colon","initialState":"Data","input":"&bottom","inputUtf16":[38,98,111,116,116,111,109],"output":[{"Character":{"data":"&bottom"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1423() {
    tokenize(
        r##"{"description":"Named entity: bottom; with a semi-colon","initialState":"Data","input":"&bottom;","inputUtf16":[38,98,111,116,116,111,109,59],"output":[{"Character":{"data":"‚ä•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1424() {
    tokenize(
        r##"{"description":"Bad named entity: bowtie without a semi-colon","initialState":"Data","input":"&bowtie","inputUtf16":[38,98,111,119,116,105,101],"output":[{"Character":{"data":"&bowtie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1425() {
    tokenize(
        r##"{"description":"Named entity: bowtie; with a semi-colon","initialState":"Data","input":"&bowtie;","inputUtf16":[38,98,111,119,116,105,101,59],"output":[{"Character":{"data":"‚ãà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1426() {
    tokenize(
        r##"{"description":"Bad named entity: boxDL without a semi-colon","initialState":"Data","input":"&boxDL","inputUtf16":[38,98,111,120,68,76],"output":[{"Character":{"data":"&boxDL"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1427() {
    tokenize(
        r##"{"description":"Named entity: boxDL; with a semi-colon","initialState":"Data","input":"&boxDL;","inputUtf16":[38,98,111,120,68,76,59],"output":[{"Character":{"data":"‚ïó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1428() {
    tokenize(
        r##"{"description":"Bad named entity: boxDR without a semi-colon","initialState":"Data","input":"&boxDR","inputUtf16":[38,98,111,120,68,82],"output":[{"Character":{"data":"&boxDR"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1429() {
    tokenize(
        r##"{"description":"Named entity: boxDR; with a semi-colon","initialState":"Data","input":"&boxDR;","inputUtf16":[38,98,111,120,68,82,59],"output":[{"Character":{"data":"‚ïî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1430() {
    tokenize(
        r##"{"description":"Bad named entity: boxDl without a semi-colon","initialState":"Data","input":"&boxDl","inputUtf16":[38,98,111,120,68,108],"output":[{"Character":{"data":"&boxDl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1431() {
    tokenize(
        r##"{"description":"Named entity: boxDl; with a semi-colon","initialState":"Data","input":"&boxDl;","inputUtf16":[38,98,111,120,68,108,59],"output":[{"Character":{"data":"‚ïñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1432() {
    tokenize(
        r##"{"description":"Bad named entity: boxDr without a semi-colon","initialState":"Data","input":"&boxDr","inputUtf16":[38,98,111,120,68,114],"output":[{"Character":{"data":"&boxDr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1433() {
    tokenize(
        r##"{"description":"Named entity: boxDr; with a semi-colon","initialState":"Data","input":"&boxDr;","inputUtf16":[38,98,111,120,68,114,59],"output":[{"Character":{"data":"‚ïì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1434() {
    tokenize(
        r##"{"description":"Bad named entity: boxH without a semi-colon","initialState":"Data","input":"&boxH","inputUtf16":[38,98,111,120,72],"output":[{"Character":{"data":"&boxH"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1435() {
    tokenize(
        r##"{"description":"Named entity: boxH; with a semi-colon","initialState":"Data","input":"&boxH;","inputUtf16":[38,98,111,120,72,59],"output":[{"Character":{"data":"‚ïê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1436() {
    tokenize(
        r##"{"description":"Bad named entity: boxHD without a semi-colon","initialState":"Data","input":"&boxHD","inputUtf16":[38,98,111,120,72,68],"output":[{"Character":{"data":"&boxHD"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1437() {
    tokenize(
        r##"{"description":"Named entity: boxHD; with a semi-colon","initialState":"Data","input":"&boxHD;","inputUtf16":[38,98,111,120,72,68,59],"output":[{"Character":{"data":"‚ï¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1438() {
    tokenize(
        r##"{"description":"Bad named entity: boxHU without a semi-colon","initialState":"Data","input":"&boxHU","inputUtf16":[38,98,111,120,72,85],"output":[{"Character":{"data":"&boxHU"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1439() {
    tokenize(
        r##"{"description":"Named entity: boxHU; with a semi-colon","initialState":"Data","input":"&boxHU;","inputUtf16":[38,98,111,120,72,85,59],"output":[{"Character":{"data":"‚ï©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1440() {
    tokenize(
        r##"{"description":"Bad named entity: boxHd without a semi-colon","initialState":"Data","input":"&boxHd","inputUtf16":[38,98,111,120,72,100],"output":[{"Character":{"data":"&boxHd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1441() {
    tokenize(
        r##"{"description":"Named entity: boxHd; with a semi-colon","initialState":"Data","input":"&boxHd;","inputUtf16":[38,98,111,120,72,100,59],"output":[{"Character":{"data":"‚ï§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1442() {
    tokenize(
        r##"{"description":"Bad named entity: boxHu without a semi-colon","initialState":"Data","input":"&boxHu","inputUtf16":[38,98,111,120,72,117],"output":[{"Character":{"data":"&boxHu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1443() {
    tokenize(
        r##"{"description":"Named entity: boxHu; with a semi-colon","initialState":"Data","input":"&boxHu;","inputUtf16":[38,98,111,120,72,117,59],"output":[{"Character":{"data":"‚ïß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1444() {
    tokenize(
        r##"{"description":"Bad named entity: boxUL without a semi-colon","initialState":"Data","input":"&boxUL","inputUtf16":[38,98,111,120,85,76],"output":[{"Character":{"data":"&boxUL"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1445() {
    tokenize(
        r##"{"description":"Named entity: boxUL; with a semi-colon","initialState":"Data","input":"&boxUL;","inputUtf16":[38,98,111,120,85,76,59],"output":[{"Character":{"data":"‚ïù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1446() {
    tokenize(
        r##"{"description":"Bad named entity: boxUR without a semi-colon","initialState":"Data","input":"&boxUR","inputUtf16":[38,98,111,120,85,82],"output":[{"Character":{"data":"&boxUR"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1447() {
    tokenize(
        r##"{"description":"Named entity: boxUR; with a semi-colon","initialState":"Data","input":"&boxUR;","inputUtf16":[38,98,111,120,85,82,59],"output":[{"Character":{"data":"‚ïö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1448() {
    tokenize(
        r##"{"description":"Bad named entity: boxUl without a semi-colon","initialState":"Data","input":"&boxUl","inputUtf16":[38,98,111,120,85,108],"output":[{"Character":{"data":"&boxUl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1449() {
    tokenize(
        r##"{"description":"Named entity: boxUl; with a semi-colon","initialState":"Data","input":"&boxUl;","inputUtf16":[38,98,111,120,85,108,59],"output":[{"Character":{"data":"‚ïú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1450() {
    tokenize(
        r##"{"description":"Bad named entity: boxUr without a semi-colon","initialState":"Data","input":"&boxUr","inputUtf16":[38,98,111,120,85,114],"output":[{"Character":{"data":"&boxUr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1451() {
    tokenize(
        r##"{"description":"Named entity: boxUr; with a semi-colon","initialState":"Data","input":"&boxUr;","inputUtf16":[38,98,111,120,85,114,59],"output":[{"Character":{"data":"‚ïô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1452() {
    tokenize(
        r##"{"description":"Bad named entity: boxV without a semi-colon","initialState":"Data","input":"&boxV","inputUtf16":[38,98,111,120,86],"output":[{"Character":{"data":"&boxV"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1453() {
    tokenize(
        r##"{"description":"Named entity: boxV; with a semi-colon","initialState":"Data","input":"&boxV;","inputUtf16":[38,98,111,120,86,59],"output":[{"Character":{"data":"‚ïë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1454() {
    tokenize(
        r##"{"description":"Bad named entity: boxVH without a semi-colon","initialState":"Data","input":"&boxVH","inputUtf16":[38,98,111,120,86,72],"output":[{"Character":{"data":"&boxVH"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1455() {
    tokenize(
        r##"{"description":"Named entity: boxVH; with a semi-colon","initialState":"Data","input":"&boxVH;","inputUtf16":[38,98,111,120,86,72,59],"output":[{"Character":{"data":"‚ï¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1456() {
    tokenize(
        r##"{"description":"Bad named entity: boxVL without a semi-colon","initialState":"Data","input":"&boxVL","inputUtf16":[38,98,111,120,86,76],"output":[{"Character":{"data":"&boxVL"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1457() {
    tokenize(
        r##"{"description":"Named entity: boxVL; with a semi-colon","initialState":"Data","input":"&boxVL;","inputUtf16":[38,98,111,120,86,76,59],"output":[{"Character":{"data":"‚ï£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1458() {
    tokenize(
        r##"{"description":"Bad named entity: boxVR without a semi-colon","initialState":"Data","input":"&boxVR","inputUtf16":[38,98,111,120,86,82],"output":[{"Character":{"data":"&boxVR"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1459() {
    tokenize(
        r##"{"description":"Named entity: boxVR; with a semi-colon","initialState":"Data","input":"&boxVR;","inputUtf16":[38,98,111,120,86,82,59],"output":[{"Character":{"data":"‚ï†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1460() {
    tokenize(
        r##"{"description":"Bad named entity: boxVh without a semi-colon","initialState":"Data","input":"&boxVh","inputUtf16":[38,98,111,120,86,104],"output":[{"Character":{"data":"&boxVh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1461() {
    tokenize(
        r##"{"description":"Named entity: boxVh; with a semi-colon","initialState":"Data","input":"&boxVh;","inputUtf16":[38,98,111,120,86,104,59],"output":[{"Character":{"data":"‚ï´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1462() {
    tokenize(
        r##"{"description":"Bad named entity: boxVl without a semi-colon","initialState":"Data","input":"&boxVl","inputUtf16":[38,98,111,120,86,108],"output":[{"Character":{"data":"&boxVl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1463() {
    tokenize(
        r##"{"description":"Named entity: boxVl; with a semi-colon","initialState":"Data","input":"&boxVl;","inputUtf16":[38,98,111,120,86,108,59],"output":[{"Character":{"data":"‚ï¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1464() {
    tokenize(
        r##"{"description":"Bad named entity: boxVr without a semi-colon","initialState":"Data","input":"&boxVr","inputUtf16":[38,98,111,120,86,114],"output":[{"Character":{"data":"&boxVr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1465() {
    tokenize(
        r##"{"description":"Named entity: boxVr; with a semi-colon","initialState":"Data","input":"&boxVr;","inputUtf16":[38,98,111,120,86,114,59],"output":[{"Character":{"data":"‚ïü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1466() {
    tokenize(
        r##"{"description":"Bad named entity: boxbox without a semi-colon","initialState":"Data","input":"&boxbox","inputUtf16":[38,98,111,120,98,111,120],"output":[{"Character":{"data":"&boxbox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1467() {
    tokenize(
        r##"{"description":"Named entity: boxbox; with a semi-colon","initialState":"Data","input":"&boxbox;","inputUtf16":[38,98,111,120,98,111,120,59],"output":[{"Character":{"data":"‚ßâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1468() {
    tokenize(
        r##"{"description":"Bad named entity: boxdL without a semi-colon","initialState":"Data","input":"&boxdL","inputUtf16":[38,98,111,120,100,76],"output":[{"Character":{"data":"&boxdL"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1469() {
    tokenize(
        r##"{"description":"Named entity: boxdL; with a semi-colon","initialState":"Data","input":"&boxdL;","inputUtf16":[38,98,111,120,100,76,59],"output":[{"Character":{"data":"‚ïï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1470() {
    tokenize(
        r##"{"description":"Bad named entity: boxdR without a semi-colon","initialState":"Data","input":"&boxdR","inputUtf16":[38,98,111,120,100,82],"output":[{"Character":{"data":"&boxdR"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1471() {
    tokenize(
        r##"{"description":"Named entity: boxdR; with a semi-colon","initialState":"Data","input":"&boxdR;","inputUtf16":[38,98,111,120,100,82,59],"output":[{"Character":{"data":"‚ïí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1472() {
    tokenize(
        r##"{"description":"Bad named entity: boxdl without a semi-colon","initialState":"Data","input":"&boxdl","inputUtf16":[38,98,111,120,100,108],"output":[{"Character":{"data":"&boxdl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1473() {
    tokenize(
        r##"{"description":"Named entity: boxdl; with a semi-colon","initialState":"Data","input":"&boxdl;","inputUtf16":[38,98,111,120,100,108,59],"output":[{"Character":{"data":"‚îê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1474() {
    tokenize(
        r##"{"description":"Bad named entity: boxdr without a semi-colon","initialState":"Data","input":"&boxdr","inputUtf16":[38,98,111,120,100,114],"output":[{"Character":{"data":"&boxdr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1475() {
    tokenize(
        r##"{"description":"Named entity: boxdr; with a semi-colon","initialState":"Data","input":"&boxdr;","inputUtf16":[38,98,111,120,100,114,59],"output":[{"Character":{"data":"‚îå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1476() {
    tokenize(
        r##"{"description":"Bad named entity: boxh without a semi-colon","initialState":"Data","input":"&boxh","inputUtf16":[38,98,111,120,104],"output":[{"Character":{"data":"&boxh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1477() {
    tokenize(
        r##"{"description":"Named entity: boxh; with a semi-colon","initialState":"Data","input":"&boxh;","inputUtf16":[38,98,111,120,104,59],"output":[{"Character":{"data":"‚îÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1478() {
    tokenize(
        r##"{"description":"Bad named entity: boxhD without a semi-colon","initialState":"Data","input":"&boxhD","inputUtf16":[38,98,111,120,104,68],"output":[{"Character":{"data":"&boxhD"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1479() {
    tokenize(
        r##"{"description":"Named entity: boxhD; with a semi-colon","initialState":"Data","input":"&boxhD;","inputUtf16":[38,98,111,120,104,68,59],"output":[{"Character":{"data":"‚ï•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1480() {
    tokenize(
        r##"{"description":"Bad named entity: boxhU without a semi-colon","initialState":"Data","input":"&boxhU","inputUtf16":[38,98,111,120,104,85],"output":[{"Character":{"data":"&boxhU"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1481() {
    tokenize(
        r##"{"description":"Named entity: boxhU; with a semi-colon","initialState":"Data","input":"&boxhU;","inputUtf16":[38,98,111,120,104,85,59],"output":[{"Character":{"data":"‚ï®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1482() {
    tokenize(
        r##"{"description":"Bad named entity: boxhd without a semi-colon","initialState":"Data","input":"&boxhd","inputUtf16":[38,98,111,120,104,100],"output":[{"Character":{"data":"&boxhd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1483() {
    tokenize(
        r##"{"description":"Named entity: boxhd; with a semi-colon","initialState":"Data","input":"&boxhd;","inputUtf16":[38,98,111,120,104,100,59],"output":[{"Character":{"data":"‚î¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1484() {
    tokenize(
        r##"{"description":"Bad named entity: boxhu without a semi-colon","initialState":"Data","input":"&boxhu","inputUtf16":[38,98,111,120,104,117],"output":[{"Character":{"data":"&boxhu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1485() {
    tokenize(
        r##"{"description":"Named entity: boxhu; with a semi-colon","initialState":"Data","input":"&boxhu;","inputUtf16":[38,98,111,120,104,117,59],"output":[{"Character":{"data":"‚î¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1486() {
    tokenize(
        r##"{"description":"Bad named entity: boxminus without a semi-colon","initialState":"Data","input":"&boxminus","inputUtf16":[38,98,111,120,109,105,110,117,115],"output":[{"Character":{"data":"&boxminus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1487() {
    tokenize(
        r##"{"description":"Named entity: boxminus; with a semi-colon","initialState":"Data","input":"&boxminus;","inputUtf16":[38,98,111,120,109,105,110,117,115,59],"output":[{"Character":{"data":"‚äü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1488() {
    tokenize(
        r##"{"description":"Bad named entity: boxplus without a semi-colon","initialState":"Data","input":"&boxplus","inputUtf16":[38,98,111,120,112,108,117,115],"output":[{"Character":{"data":"&boxplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1489() {
    tokenize(
        r##"{"description":"Named entity: boxplus; with a semi-colon","initialState":"Data","input":"&boxplus;","inputUtf16":[38,98,111,120,112,108,117,115,59],"output":[{"Character":{"data":"‚äû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1490() {
    tokenize(
        r##"{"description":"Bad named entity: boxtimes without a semi-colon","initialState":"Data","input":"&boxtimes","inputUtf16":[38,98,111,120,116,105,109,101,115],"output":[{"Character":{"data":"&boxtimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1491() {
    tokenize(
        r##"{"description":"Named entity: boxtimes; with a semi-colon","initialState":"Data","input":"&boxtimes;","inputUtf16":[38,98,111,120,116,105,109,101,115,59],"output":[{"Character":{"data":"‚ä†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1492() {
    tokenize(
        r##"{"description":"Bad named entity: boxuL without a semi-colon","initialState":"Data","input":"&boxuL","inputUtf16":[38,98,111,120,117,76],"output":[{"Character":{"data":"&boxuL"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1493() {
    tokenize(
        r##"{"description":"Named entity: boxuL; with a semi-colon","initialState":"Data","input":"&boxuL;","inputUtf16":[38,98,111,120,117,76,59],"output":[{"Character":{"data":"‚ïõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1494() {
    tokenize(
        r##"{"description":"Bad named entity: boxuR without a semi-colon","initialState":"Data","input":"&boxuR","inputUtf16":[38,98,111,120,117,82],"output":[{"Character":{"data":"&boxuR"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1495() {
    tokenize(
        r##"{"description":"Named entity: boxuR; with a semi-colon","initialState":"Data","input":"&boxuR;","inputUtf16":[38,98,111,120,117,82,59],"output":[{"Character":{"data":"‚ïò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1496() {
    tokenize(
        r##"{"description":"Bad named entity: boxul without a semi-colon","initialState":"Data","input":"&boxul","inputUtf16":[38,98,111,120,117,108],"output":[{"Character":{"data":"&boxul"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1497() {
    tokenize(
        r##"{"description":"Named entity: boxul; with a semi-colon","initialState":"Data","input":"&boxul;","inputUtf16":[38,98,111,120,117,108,59],"output":[{"Character":{"data":"‚îò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1498() {
    tokenize(
        r##"{"description":"Bad named entity: boxur without a semi-colon","initialState":"Data","input":"&boxur","inputUtf16":[38,98,111,120,117,114],"output":[{"Character":{"data":"&boxur"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1499() {
    tokenize(
        r##"{"description":"Named entity: boxur; with a semi-colon","initialState":"Data","input":"&boxur;","inputUtf16":[38,98,111,120,117,114,59],"output":[{"Character":{"data":"‚îî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1500() {
    tokenize(
        r##"{"description":"Bad named entity: boxv without a semi-colon","initialState":"Data","input":"&boxv","inputUtf16":[38,98,111,120,118],"output":[{"Character":{"data":"&boxv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1501() {
    tokenize(
        r##"{"description":"Named entity: boxv; with a semi-colon","initialState":"Data","input":"&boxv;","inputUtf16":[38,98,111,120,118,59],"output":[{"Character":{"data":"‚îÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1502() {
    tokenize(
        r##"{"description":"Bad named entity: boxvH without a semi-colon","initialState":"Data","input":"&boxvH","inputUtf16":[38,98,111,120,118,72],"output":[{"Character":{"data":"&boxvH"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1503() {
    tokenize(
        r##"{"description":"Named entity: boxvH; with a semi-colon","initialState":"Data","input":"&boxvH;","inputUtf16":[38,98,111,120,118,72,59],"output":[{"Character":{"data":"‚ï™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1504() {
    tokenize(
        r##"{"description":"Bad named entity: boxvL without a semi-colon","initialState":"Data","input":"&boxvL","inputUtf16":[38,98,111,120,118,76],"output":[{"Character":{"data":"&boxvL"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1505() {
    tokenize(
        r##"{"description":"Named entity: boxvL; with a semi-colon","initialState":"Data","input":"&boxvL;","inputUtf16":[38,98,111,120,118,76,59],"output":[{"Character":{"data":"‚ï°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1506() {
    tokenize(
        r##"{"description":"Bad named entity: boxvR without a semi-colon","initialState":"Data","input":"&boxvR","inputUtf16":[38,98,111,120,118,82],"output":[{"Character":{"data":"&boxvR"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1507() {
    tokenize(
        r##"{"description":"Named entity: boxvR; with a semi-colon","initialState":"Data","input":"&boxvR;","inputUtf16":[38,98,111,120,118,82,59],"output":[{"Character":{"data":"‚ïû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1508() {
    tokenize(
        r##"{"description":"Bad named entity: boxvh without a semi-colon","initialState":"Data","input":"&boxvh","inputUtf16":[38,98,111,120,118,104],"output":[{"Character":{"data":"&boxvh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1509() {
    tokenize(
        r##"{"description":"Named entity: boxvh; with a semi-colon","initialState":"Data","input":"&boxvh;","inputUtf16":[38,98,111,120,118,104,59],"output":[{"Character":{"data":"‚îº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1510() {
    tokenize(
        r##"{"description":"Bad named entity: boxvl without a semi-colon","initialState":"Data","input":"&boxvl","inputUtf16":[38,98,111,120,118,108],"output":[{"Character":{"data":"&boxvl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1511() {
    tokenize(
        r##"{"description":"Named entity: boxvl; with a semi-colon","initialState":"Data","input":"&boxvl;","inputUtf16":[38,98,111,120,118,108,59],"output":[{"Character":{"data":"‚î§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1512() {
    tokenize(
        r##"{"description":"Bad named entity: boxvr without a semi-colon","initialState":"Data","input":"&boxvr","inputUtf16":[38,98,111,120,118,114],"output":[{"Character":{"data":"&boxvr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1513() {
    tokenize(
        r##"{"description":"Named entity: boxvr; with a semi-colon","initialState":"Data","input":"&boxvr;","inputUtf16":[38,98,111,120,118,114,59],"output":[{"Character":{"data":"‚îú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1514() {
    tokenize(
        r##"{"description":"Bad named entity: bprime without a semi-colon","initialState":"Data","input":"&bprime","inputUtf16":[38,98,112,114,105,109,101],"output":[{"Character":{"data":"&bprime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1515() {
    tokenize(
        r##"{"description":"Named entity: bprime; with a semi-colon","initialState":"Data","input":"&bprime;","inputUtf16":[38,98,112,114,105,109,101,59],"output":[{"Character":{"data":"‚Äµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1516() {
    tokenize(
        r##"{"description":"Bad named entity: breve without a semi-colon","initialState":"Data","input":"&breve","inputUtf16":[38,98,114,101,118,101],"output":[{"Character":{"data":"&breve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1517() {
    tokenize(
        r##"{"description":"Named entity: breve; with a semi-colon","initialState":"Data","input":"&breve;","inputUtf16":[38,98,114,101,118,101,59],"output":[{"Character":{"data":"Àò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1518() {
    tokenize(
        r##"{"description":"Named entity: brvbar without a semi-colon","initialState":"Data","input":"&brvbar","inputUtf16":[38,98,114,118,98,97,114],"output":[{"Character":{"data":"¬¶"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1519() {
    tokenize(
        r##"{"description":"Named entity: brvbar; with a semi-colon","initialState":"Data","input":"&brvbar;","inputUtf16":[38,98,114,118,98,97,114,59],"output":[{"Character":{"data":"¬¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1520() {
    tokenize(
        r##"{"description":"Bad named entity: bscr without a semi-colon","initialState":"Data","input":"&bscr","inputUtf16":[38,98,115,99,114],"output":[{"Character":{"data":"&bscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1521() {
    tokenize(
        r##"{"description":"Named entity: bscr; with a semi-colon","initialState":"Data","input":"&bscr;","inputUtf16":[38,98,115,99,114,59],"output":[{"Character":{"data":"ùí∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1522() {
    tokenize(
        r##"{"description":"Bad named entity: bsemi without a semi-colon","initialState":"Data","input":"&bsemi","inputUtf16":[38,98,115,101,109,105],"output":[{"Character":{"data":"&bsemi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1523() {
    tokenize(
        r##"{"description":"Named entity: bsemi; with a semi-colon","initialState":"Data","input":"&bsemi;","inputUtf16":[38,98,115,101,109,105,59],"output":[{"Character":{"data":"‚Åè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1524() {
    tokenize(
        r##"{"description":"Bad named entity: bsim without a semi-colon","initialState":"Data","input":"&bsim","inputUtf16":[38,98,115,105,109],"output":[{"Character":{"data":"&bsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1525() {
    tokenize(
        r##"{"description":"Named entity: bsim; with a semi-colon","initialState":"Data","input":"&bsim;","inputUtf16":[38,98,115,105,109,59],"output":[{"Character":{"data":"‚àΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1526() {
    tokenize(
        r##"{"description":"Bad named entity: bsime without a semi-colon","initialState":"Data","input":"&bsime","inputUtf16":[38,98,115,105,109,101],"output":[{"Character":{"data":"&bsime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1527() {
    tokenize(
        r##"{"description":"Named entity: bsime; with a semi-colon","initialState":"Data","input":"&bsime;","inputUtf16":[38,98,115,105,109,101,59],"output":[{"Character":{"data":"‚ãç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1528() {
    tokenize(
        r##"{"description":"Bad named entity: bsol without a semi-colon","initialState":"Data","input":"&bsol","inputUtf16":[38,98,115,111,108],"output":[{"Character":{"data":"&bsol"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1529() {
    tokenize(
        r##"{"description":"Named entity: bsol; with a semi-colon","initialState":"Data","input":"&bsol;","inputUtf16":[38,98,115,111,108,59],"output":[{"Character":{"data":"\\"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1530() {
    tokenize(
        r##"{"description":"Bad named entity: bsolb without a semi-colon","initialState":"Data","input":"&bsolb","inputUtf16":[38,98,115,111,108,98],"output":[{"Character":{"data":"&bsolb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1531() {
    tokenize(
        r##"{"description":"Named entity: bsolb; with a semi-colon","initialState":"Data","input":"&bsolb;","inputUtf16":[38,98,115,111,108,98,59],"output":[{"Character":{"data":"‚ßÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1532() {
    tokenize(
        r##"{"description":"Bad named entity: bsolhsub without a semi-colon","initialState":"Data","input":"&bsolhsub","inputUtf16":[38,98,115,111,108,104,115,117,98],"output":[{"Character":{"data":"&bsolhsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1533() {
    tokenize(
        r##"{"description":"Named entity: bsolhsub; with a semi-colon","initialState":"Data","input":"&bsolhsub;","inputUtf16":[38,98,115,111,108,104,115,117,98,59],"output":[{"Character":{"data":"‚üà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1534() {
    tokenize(
        r##"{"description":"Bad named entity: bull without a semi-colon","initialState":"Data","input":"&bull","inputUtf16":[38,98,117,108,108],"output":[{"Character":{"data":"&bull"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1535() {
    tokenize(
        r##"{"description":"Named entity: bull; with a semi-colon","initialState":"Data","input":"&bull;","inputUtf16":[38,98,117,108,108,59],"output":[{"Character":{"data":"‚Ä¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1536() {
    tokenize(
        r##"{"description":"Bad named entity: bullet without a semi-colon","initialState":"Data","input":"&bullet","inputUtf16":[38,98,117,108,108,101,116],"output":[{"Character":{"data":"&bullet"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1537() {
    tokenize(
        r##"{"description":"Named entity: bullet; with a semi-colon","initialState":"Data","input":"&bullet;","inputUtf16":[38,98,117,108,108,101,116,59],"output":[{"Character":{"data":"‚Ä¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1538() {
    tokenize(
        r##"{"description":"Bad named entity: bump without a semi-colon","initialState":"Data","input":"&bump","inputUtf16":[38,98,117,109,112],"output":[{"Character":{"data":"&bump"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1539() {
    tokenize(
        r##"{"description":"Named entity: bump; with a semi-colon","initialState":"Data","input":"&bump;","inputUtf16":[38,98,117,109,112,59],"output":[{"Character":{"data":"‚âé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1540() {
    tokenize(
        r##"{"description":"Bad named entity: bumpE without a semi-colon","initialState":"Data","input":"&bumpE","inputUtf16":[38,98,117,109,112,69],"output":[{"Character":{"data":"&bumpE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1541() {
    tokenize(
        r##"{"description":"Named entity: bumpE; with a semi-colon","initialState":"Data","input":"&bumpE;","inputUtf16":[38,98,117,109,112,69,59],"output":[{"Character":{"data":"‚™Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1542() {
    tokenize(
        r##"{"description":"Bad named entity: bumpe without a semi-colon","initialState":"Data","input":"&bumpe","inputUtf16":[38,98,117,109,112,101],"output":[{"Character":{"data":"&bumpe"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1543() {
    tokenize(
        r##"{"description":"Named entity: bumpe; with a semi-colon","initialState":"Data","input":"&bumpe;","inputUtf16":[38,98,117,109,112,101,59],"output":[{"Character":{"data":"‚âè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1544() {
    tokenize(
        r##"{"description":"Bad named entity: bumpeq without a semi-colon","initialState":"Data","input":"&bumpeq","inputUtf16":[38,98,117,109,112,101,113],"output":[{"Character":{"data":"&bumpeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1545() {
    tokenize(
        r##"{"description":"Named entity: bumpeq; with a semi-colon","initialState":"Data","input":"&bumpeq;","inputUtf16":[38,98,117,109,112,101,113,59],"output":[{"Character":{"data":"‚âè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1546() {
    tokenize(
        r##"{"description":"Bad named entity: cacute without a semi-colon","initialState":"Data","input":"&cacute","inputUtf16":[38,99,97,99,117,116,101],"output":[{"Character":{"data":"&cacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1547() {
    tokenize(
        r##"{"description":"Named entity: cacute; with a semi-colon","initialState":"Data","input":"&cacute;","inputUtf16":[38,99,97,99,117,116,101,59],"output":[{"Character":{"data":"ƒá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1548() {
    tokenize(
        r##"{"description":"Bad named entity: cap without a semi-colon","initialState":"Data","input":"&cap","inputUtf16":[38,99,97,112],"output":[{"Character":{"data":"&cap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1549() {
    tokenize(
        r##"{"description":"Named entity: cap; with a semi-colon","initialState":"Data","input":"&cap;","inputUtf16":[38,99,97,112,59],"output":[{"Character":{"data":"‚à©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1550() {
    tokenize(
        r##"{"description":"Bad named entity: capand without a semi-colon","initialState":"Data","input":"&capand","inputUtf16":[38,99,97,112,97,110,100],"output":[{"Character":{"data":"&capand"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1551() {
    tokenize(
        r##"{"description":"Named entity: capand; with a semi-colon","initialState":"Data","input":"&capand;","inputUtf16":[38,99,97,112,97,110,100,59],"output":[{"Character":{"data":"‚©Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1552() {
    tokenize(
        r##"{"description":"Bad named entity: capbrcup without a semi-colon","initialState":"Data","input":"&capbrcup","inputUtf16":[38,99,97,112,98,114,99,117,112],"output":[{"Character":{"data":"&capbrcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1553() {
    tokenize(
        r##"{"description":"Named entity: capbrcup; with a semi-colon","initialState":"Data","input":"&capbrcup;","inputUtf16":[38,99,97,112,98,114,99,117,112,59],"output":[{"Character":{"data":"‚©â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1554() {
    tokenize(
        r##"{"description":"Bad named entity: capcap without a semi-colon","initialState":"Data","input":"&capcap","inputUtf16":[38,99,97,112,99,97,112],"output":[{"Character":{"data":"&capcap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1555() {
    tokenize(
        r##"{"description":"Named entity: capcap; with a semi-colon","initialState":"Data","input":"&capcap;","inputUtf16":[38,99,97,112,99,97,112,59],"output":[{"Character":{"data":"‚©ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1556() {
    tokenize(
        r##"{"description":"Bad named entity: capcup without a semi-colon","initialState":"Data","input":"&capcup","inputUtf16":[38,99,97,112,99,117,112],"output":[{"Character":{"data":"&capcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1557() {
    tokenize(
        r##"{"description":"Named entity: capcup; with a semi-colon","initialState":"Data","input":"&capcup;","inputUtf16":[38,99,97,112,99,117,112,59],"output":[{"Character":{"data":"‚©á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1558() {
    tokenize(
        r##"{"description":"Bad named entity: capdot without a semi-colon","initialState":"Data","input":"&capdot","inputUtf16":[38,99,97,112,100,111,116],"output":[{"Character":{"data":"&capdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1559() {
    tokenize(
        r##"{"description":"Named entity: capdot; with a semi-colon","initialState":"Data","input":"&capdot;","inputUtf16":[38,99,97,112,100,111,116,59],"output":[{"Character":{"data":"‚©Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1560() {
    tokenize(
        r##"{"description":"Bad named entity: caps without a semi-colon","initialState":"Data","input":"&caps","inputUtf16":[38,99,97,112,115],"output":[{"Character":{"data":"&caps"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1561() {
    tokenize(
        r##"{"description":"Named entity: caps; with a semi-colon","initialState":"Data","input":"&caps;","inputUtf16":[38,99,97,112,115,59],"output":[{"Character":{"data":"‚à©Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1562() {
    tokenize(
        r##"{"description":"Bad named entity: caret without a semi-colon","initialState":"Data","input":"&caret","inputUtf16":[38,99,97,114,101,116],"output":[{"Character":{"data":"&caret"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1563() {
    tokenize(
        r##"{"description":"Named entity: caret; with a semi-colon","initialState":"Data","input":"&caret;","inputUtf16":[38,99,97,114,101,116,59],"output":[{"Character":{"data":"‚ÅÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1564() {
    tokenize(
        r##"{"description":"Bad named entity: caron without a semi-colon","initialState":"Data","input":"&caron","inputUtf16":[38,99,97,114,111,110],"output":[{"Character":{"data":"&caron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1565() {
    tokenize(
        r##"{"description":"Named entity: caron; with a semi-colon","initialState":"Data","input":"&caron;","inputUtf16":[38,99,97,114,111,110,59],"output":[{"Character":{"data":"Àá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1566() {
    tokenize(
        r##"{"description":"Bad named entity: ccaps without a semi-colon","initialState":"Data","input":"&ccaps","inputUtf16":[38,99,99,97,112,115],"output":[{"Character":{"data":"&ccaps"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1567() {
    tokenize(
        r##"{"description":"Named entity: ccaps; with a semi-colon","initialState":"Data","input":"&ccaps;","inputUtf16":[38,99,99,97,112,115,59],"output":[{"Character":{"data":"‚©ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1568() {
    tokenize(
        r##"{"description":"Bad named entity: ccaron without a semi-colon","initialState":"Data","input":"&ccaron","inputUtf16":[38,99,99,97,114,111,110],"output":[{"Character":{"data":"&ccaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1569() {
    tokenize(
        r##"{"description":"Named entity: ccaron; with a semi-colon","initialState":"Data","input":"&ccaron;","inputUtf16":[38,99,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1570() {
    tokenize(
        r##"{"description":"Named entity: ccedil without a semi-colon","initialState":"Data","input":"&ccedil","inputUtf16":[38,99,99,101,100,105,108],"output":[{"Character":{"data":"√ß"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1571() {
    tokenize(
        r##"{"description":"Named entity: ccedil; with a semi-colon","initialState":"Data","input":"&ccedil;","inputUtf16":[38,99,99,101,100,105,108,59],"output":[{"Character":{"data":"√ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1572() {
    tokenize(
        r##"{"description":"Bad named entity: ccirc without a semi-colon","initialState":"Data","input":"&ccirc","inputUtf16":[38,99,99,105,114,99],"output":[{"Character":{"data":"&ccirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1573() {
    tokenize(
        r##"{"description":"Named entity: ccirc; with a semi-colon","initialState":"Data","input":"&ccirc;","inputUtf16":[38,99,99,105,114,99,59],"output":[{"Character":{"data":"ƒâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1574() {
    tokenize(
        r##"{"description":"Bad named entity: ccups without a semi-colon","initialState":"Data","input":"&ccups","inputUtf16":[38,99,99,117,112,115],"output":[{"Character":{"data":"&ccups"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1575() {
    tokenize(
        r##"{"description":"Named entity: ccups; with a semi-colon","initialState":"Data","input":"&ccups;","inputUtf16":[38,99,99,117,112,115,59],"output":[{"Character":{"data":"‚©å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1576() {
    tokenize(
        r##"{"description":"Bad named entity: ccupssm without a semi-colon","initialState":"Data","input":"&ccupssm","inputUtf16":[38,99,99,117,112,115,115,109],"output":[{"Character":{"data":"&ccupssm"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1577() {
    tokenize(
        r##"{"description":"Named entity: ccupssm; with a semi-colon","initialState":"Data","input":"&ccupssm;","inputUtf16":[38,99,99,117,112,115,115,109,59],"output":[{"Character":{"data":"‚©ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1578() {
    tokenize(
        r##"{"description":"Bad named entity: cdot without a semi-colon","initialState":"Data","input":"&cdot","inputUtf16":[38,99,100,111,116],"output":[{"Character":{"data":"&cdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1579() {
    tokenize(
        r##"{"description":"Named entity: cdot; with a semi-colon","initialState":"Data","input":"&cdot;","inputUtf16":[38,99,100,111,116,59],"output":[{"Character":{"data":"ƒã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1580() {
    tokenize(
        r##"{"description":"Named entity: cedil without a semi-colon","initialState":"Data","input":"&cedil","inputUtf16":[38,99,101,100,105,108],"output":[{"Character":{"data":"¬∏"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1581() {
    tokenize(
        r##"{"description":"Named entity: cedil; with a semi-colon","initialState":"Data","input":"&cedil;","inputUtf16":[38,99,101,100,105,108,59],"output":[{"Character":{"data":"¬∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1582() {
    tokenize(
        r##"{"description":"Bad named entity: cemptyv without a semi-colon","initialState":"Data","input":"&cemptyv","inputUtf16":[38,99,101,109,112,116,121,118],"output":[{"Character":{"data":"&cemptyv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1583() {
    tokenize(
        r##"{"description":"Named entity: cemptyv; with a semi-colon","initialState":"Data","input":"&cemptyv;","inputUtf16":[38,99,101,109,112,116,121,118,59],"output":[{"Character":{"data":"‚¶≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1584() {
    tokenize(
        r##"{"description":"Named entity: cent without a semi-colon","initialState":"Data","input":"&cent","inputUtf16":[38,99,101,110,116],"output":[{"Character":{"data":"¬¢"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_1585() {
    tokenize(
        r##"{"description":"Named entity: cent; with a semi-colon","initialState":"Data","input":"&cent;","inputUtf16":[38,99,101,110,116,59],"output":[{"Character":{"data":"¬¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1586() {
    tokenize(
        r##"{"description":"Named entity: centerdot; with a semi-colon","initialState":"Data","input":"&centerdot;","inputUtf16":[38,99,101,110,116,101,114,100,111,116,59],"output":[{"Character":{"data":"¬∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1587() {
    tokenize(
        r##"{"description":"Bad named entity: cfr without a semi-colon","initialState":"Data","input":"&cfr","inputUtf16":[38,99,102,114],"output":[{"Character":{"data":"&cfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1588() {
    tokenize(
        r##"{"description":"Named entity: cfr; with a semi-colon","initialState":"Data","input":"&cfr;","inputUtf16":[38,99,102,114,59],"output":[{"Character":{"data":"ùî†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1589() {
    tokenize(
        r##"{"description":"Bad named entity: chcy without a semi-colon","initialState":"Data","input":"&chcy","inputUtf16":[38,99,104,99,121],"output":[{"Character":{"data":"&chcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1590() {
    tokenize(
        r##"{"description":"Named entity: chcy; with a semi-colon","initialState":"Data","input":"&chcy;","inputUtf16":[38,99,104,99,121,59],"output":[{"Character":{"data":"—á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1591() {
    tokenize(
        r##"{"description":"Bad named entity: check without a semi-colon","initialState":"Data","input":"&check","inputUtf16":[38,99,104,101,99,107],"output":[{"Character":{"data":"&check"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1592() {
    tokenize(
        r##"{"description":"Named entity: check; with a semi-colon","initialState":"Data","input":"&check;","inputUtf16":[38,99,104,101,99,107,59],"output":[{"Character":{"data":"‚úì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1593() {
    tokenize(
        r##"{"description":"Bad named entity: checkmark without a semi-colon","initialState":"Data","input":"&checkmark","inputUtf16":[38,99,104,101,99,107,109,97,114,107],"output":[{"Character":{"data":"&checkmark"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1594() {
    tokenize(
        r##"{"description":"Named entity: checkmark; with a semi-colon","initialState":"Data","input":"&checkmark;","inputUtf16":[38,99,104,101,99,107,109,97,114,107,59],"output":[{"Character":{"data":"‚úì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1595() {
    tokenize(
        r##"{"description":"Bad named entity: chi without a semi-colon","initialState":"Data","input":"&chi","inputUtf16":[38,99,104,105],"output":[{"Character":{"data":"&chi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1596() {
    tokenize(
        r##"{"description":"Named entity: chi; with a semi-colon","initialState":"Data","input":"&chi;","inputUtf16":[38,99,104,105,59],"output":[{"Character":{"data":"œá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1597() {
    tokenize(
        r##"{"description":"Bad named entity: cir without a semi-colon","initialState":"Data","input":"&cir","inputUtf16":[38,99,105,114],"output":[{"Character":{"data":"&cir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1598() {
    tokenize(
        r##"{"description":"Named entity: cir; with a semi-colon","initialState":"Data","input":"&cir;","inputUtf16":[38,99,105,114,59],"output":[{"Character":{"data":"‚óã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1599() {
    tokenize(
        r##"{"description":"Bad named entity: cirE without a semi-colon","initialState":"Data","input":"&cirE","inputUtf16":[38,99,105,114,69],"output":[{"Character":{"data":"&cirE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1600() {
    tokenize(
        r##"{"description":"Named entity: cirE; with a semi-colon","initialState":"Data","input":"&cirE;","inputUtf16":[38,99,105,114,69,59],"output":[{"Character":{"data":"‚ßÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1601() {
    tokenize(
        r##"{"description":"Bad named entity: circ without a semi-colon","initialState":"Data","input":"&circ","inputUtf16":[38,99,105,114,99],"output":[{"Character":{"data":"&circ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1602() {
    tokenize(
        r##"{"description":"Named entity: circ; with a semi-colon","initialState":"Data","input":"&circ;","inputUtf16":[38,99,105,114,99,59],"output":[{"Character":{"data":"ÀÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1603() {
    tokenize(
        r##"{"description":"Bad named entity: circeq without a semi-colon","initialState":"Data","input":"&circeq","inputUtf16":[38,99,105,114,99,101,113],"output":[{"Character":{"data":"&circeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1604() {
    tokenize(
        r##"{"description":"Named entity: circeq; with a semi-colon","initialState":"Data","input":"&circeq;","inputUtf16":[38,99,105,114,99,101,113,59],"output":[{"Character":{"data":"‚âó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1605() {
    tokenize(
        r##"{"description":"Bad named entity: circlearrowleft without a semi-colon","initialState":"Data","input":"&circlearrowleft","inputUtf16":[38,99,105,114,99,108,101,97,114,114,111,119,108,101,102,116],"output":[{"Character":{"data":"&circlearrowleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1606() {
    tokenize(
        r##"{"description":"Named entity: circlearrowleft; with a semi-colon","initialState":"Data","input":"&circlearrowleft;","inputUtf16":[38,99,105,114,99,108,101,97,114,114,111,119,108,101,102,116,59],"output":[{"Character":{"data":"‚Ü∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1607() {
    tokenize(
        r##"{"description":"Bad named entity: circlearrowright without a semi-colon","initialState":"Data","input":"&circlearrowright","inputUtf16":[38,99,105,114,99,108,101,97,114,114,111,119,114,105,103,104,116],"output":[{"Character":{"data":"&circlearrowright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1608() {
    tokenize(
        r##"{"description":"Named entity: circlearrowright; with a semi-colon","initialState":"Data","input":"&circlearrowright;","inputUtf16":[38,99,105,114,99,108,101,97,114,114,111,119,114,105,103,104,116,59],"output":[{"Character":{"data":"‚Üª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1609() {
    tokenize(
        r##"{"description":"Bad named entity: circledR without a semi-colon","initialState":"Data","input":"&circledR","inputUtf16":[38,99,105,114,99,108,101,100,82],"output":[{"Character":{"data":"&circledR"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1610() {
    tokenize(
        r##"{"description":"Named entity: circledR; with a semi-colon","initialState":"Data","input":"&circledR;","inputUtf16":[38,99,105,114,99,108,101,100,82,59],"output":[{"Character":{"data":"¬Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1611() {
    tokenize(
        r##"{"description":"Bad named entity: circledS without a semi-colon","initialState":"Data","input":"&circledS","inputUtf16":[38,99,105,114,99,108,101,100,83],"output":[{"Character":{"data":"&circledS"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1612() {
    tokenize(
        r##"{"description":"Named entity: circledS; with a semi-colon","initialState":"Data","input":"&circledS;","inputUtf16":[38,99,105,114,99,108,101,100,83,59],"output":[{"Character":{"data":"‚ìà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1613() {
    tokenize(
        r##"{"description":"Bad named entity: circledast without a semi-colon","initialState":"Data","input":"&circledast","inputUtf16":[38,99,105,114,99,108,101,100,97,115,116],"output":[{"Character":{"data":"&circledast"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1614() {
    tokenize(
        r##"{"description":"Named entity: circledast; with a semi-colon","initialState":"Data","input":"&circledast;","inputUtf16":[38,99,105,114,99,108,101,100,97,115,116,59],"output":[{"Character":{"data":"‚äõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1615() {
    tokenize(
        r##"{"description":"Bad named entity: circledcirc without a semi-colon","initialState":"Data","input":"&circledcirc","inputUtf16":[38,99,105,114,99,108,101,100,99,105,114,99],"output":[{"Character":{"data":"&circledcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1616() {
    tokenize(
        r##"{"description":"Named entity: circledcirc; with a semi-colon","initialState":"Data","input":"&circledcirc;","inputUtf16":[38,99,105,114,99,108,101,100,99,105,114,99,59],"output":[{"Character":{"data":"‚äö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1617() {
    tokenize(
        r##"{"description":"Bad named entity: circleddash without a semi-colon","initialState":"Data","input":"&circleddash","inputUtf16":[38,99,105,114,99,108,101,100,100,97,115,104],"output":[{"Character":{"data":"&circleddash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1618() {
    tokenize(
        r##"{"description":"Named entity: circleddash; with a semi-colon","initialState":"Data","input":"&circleddash;","inputUtf16":[38,99,105,114,99,108,101,100,100,97,115,104,59],"output":[{"Character":{"data":"‚äù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1619() {
    tokenize(
        r##"{"description":"Bad named entity: cire without a semi-colon","initialState":"Data","input":"&cire","inputUtf16":[38,99,105,114,101],"output":[{"Character":{"data":"&cire"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1620() {
    tokenize(
        r##"{"description":"Named entity: cire; with a semi-colon","initialState":"Data","input":"&cire;","inputUtf16":[38,99,105,114,101,59],"output":[{"Character":{"data":"‚âó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1621() {
    tokenize(
        r##"{"description":"Bad named entity: cirfnint without a semi-colon","initialState":"Data","input":"&cirfnint","inputUtf16":[38,99,105,114,102,110,105,110,116],"output":[{"Character":{"data":"&cirfnint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1622() {
    tokenize(
        r##"{"description":"Named entity: cirfnint; with a semi-colon","initialState":"Data","input":"&cirfnint;","inputUtf16":[38,99,105,114,102,110,105,110,116,59],"output":[{"Character":{"data":"‚®ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1623() {
    tokenize(
        r##"{"description":"Bad named entity: cirmid without a semi-colon","initialState":"Data","input":"&cirmid","inputUtf16":[38,99,105,114,109,105,100],"output":[{"Character":{"data":"&cirmid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1624() {
    tokenize(
        r##"{"description":"Named entity: cirmid; with a semi-colon","initialState":"Data","input":"&cirmid;","inputUtf16":[38,99,105,114,109,105,100,59],"output":[{"Character":{"data":"‚´Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1625() {
    tokenize(
        r##"{"description":"Bad named entity: cirscir without a semi-colon","initialState":"Data","input":"&cirscir","inputUtf16":[38,99,105,114,115,99,105,114],"output":[{"Character":{"data":"&cirscir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1626() {
    tokenize(
        r##"{"description":"Named entity: cirscir; with a semi-colon","initialState":"Data","input":"&cirscir;","inputUtf16":[38,99,105,114,115,99,105,114,59],"output":[{"Character":{"data":"‚ßÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1627() {
    tokenize(
        r##"{"description":"Bad named entity: clubs without a semi-colon","initialState":"Data","input":"&clubs","inputUtf16":[38,99,108,117,98,115],"output":[{"Character":{"data":"&clubs"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1628() {
    tokenize(
        r##"{"description":"Named entity: clubs; with a semi-colon","initialState":"Data","input":"&clubs;","inputUtf16":[38,99,108,117,98,115,59],"output":[{"Character":{"data":"‚ô£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1629() {
    tokenize(
        r##"{"description":"Bad named entity: clubsuit without a semi-colon","initialState":"Data","input":"&clubsuit","inputUtf16":[38,99,108,117,98,115,117,105,116],"output":[{"Character":{"data":"&clubsuit"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1630() {
    tokenize(
        r##"{"description":"Named entity: clubsuit; with a semi-colon","initialState":"Data","input":"&clubsuit;","inputUtf16":[38,99,108,117,98,115,117,105,116,59],"output":[{"Character":{"data":"‚ô£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1631() {
    tokenize(
        r##"{"description":"Bad named entity: colon without a semi-colon","initialState":"Data","input":"&colon","inputUtf16":[38,99,111,108,111,110],"output":[{"Character":{"data":"&colon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1632() {
    tokenize(
        r##"{"description":"Named entity: colon; with a semi-colon","initialState":"Data","input":"&colon;","inputUtf16":[38,99,111,108,111,110,59],"output":[{"Character":{"data":":"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1633() {
    tokenize(
        r##"{"description":"Bad named entity: colone without a semi-colon","initialState":"Data","input":"&colone","inputUtf16":[38,99,111,108,111,110,101],"output":[{"Character":{"data":"&colone"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1634() {
    tokenize(
        r##"{"description":"Named entity: colone; with a semi-colon","initialState":"Data","input":"&colone;","inputUtf16":[38,99,111,108,111,110,101,59],"output":[{"Character":{"data":"‚âî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1635() {
    tokenize(
        r##"{"description":"Bad named entity: coloneq without a semi-colon","initialState":"Data","input":"&coloneq","inputUtf16":[38,99,111,108,111,110,101,113],"output":[{"Character":{"data":"&coloneq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1636() {
    tokenize(
        r##"{"description":"Named entity: coloneq; with a semi-colon","initialState":"Data","input":"&coloneq;","inputUtf16":[38,99,111,108,111,110,101,113,59],"output":[{"Character":{"data":"‚âî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1637() {
    tokenize(
        r##"{"description":"Bad named entity: comma without a semi-colon","initialState":"Data","input":"&comma","inputUtf16":[38,99,111,109,109,97],"output":[{"Character":{"data":"&comma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1638() {
    tokenize(
        r##"{"description":"Named entity: comma; with a semi-colon","initialState":"Data","input":"&comma;","inputUtf16":[38,99,111,109,109,97,59],"output":[{"Character":{"data":","}}],"errors":[]}"##,
    );
}

#[test]
fn test_1639() {
    tokenize(
        r##"{"description":"Bad named entity: commat without a semi-colon","initialState":"Data","input":"&commat","inputUtf16":[38,99,111,109,109,97,116],"output":[{"Character":{"data":"&commat"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1640() {
    tokenize(
        r##"{"description":"Named entity: commat; with a semi-colon","initialState":"Data","input":"&commat;","inputUtf16":[38,99,111,109,109,97,116,59],"output":[{"Character":{"data":"@"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1641() {
    tokenize(
        r##"{"description":"Bad named entity: comp without a semi-colon","initialState":"Data","input":"&comp","inputUtf16":[38,99,111,109,112],"output":[{"Character":{"data":"&comp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1642() {
    tokenize(
        r##"{"description":"Named entity: comp; with a semi-colon","initialState":"Data","input":"&comp;","inputUtf16":[38,99,111,109,112,59],"output":[{"Character":{"data":"‚àÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1643() {
    tokenize(
        r##"{"description":"Bad named entity: compfn without a semi-colon","initialState":"Data","input":"&compfn","inputUtf16":[38,99,111,109,112,102,110],"output":[{"Character":{"data":"&compfn"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1644() {
    tokenize(
        r##"{"description":"Named entity: compfn; with a semi-colon","initialState":"Data","input":"&compfn;","inputUtf16":[38,99,111,109,112,102,110,59],"output":[{"Character":{"data":"‚àò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1645() {
    tokenize(
        r##"{"description":"Bad named entity: complement without a semi-colon","initialState":"Data","input":"&complement","inputUtf16":[38,99,111,109,112,108,101,109,101,110,116],"output":[{"Character":{"data":"&complement"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1646() {
    tokenize(
        r##"{"description":"Named entity: complement; with a semi-colon","initialState":"Data","input":"&complement;","inputUtf16":[38,99,111,109,112,108,101,109,101,110,116,59],"output":[{"Character":{"data":"‚àÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1647() {
    tokenize(
        r##"{"description":"Bad named entity: complexes without a semi-colon","initialState":"Data","input":"&complexes","inputUtf16":[38,99,111,109,112,108,101,120,101,115],"output":[{"Character":{"data":"&complexes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1648() {
    tokenize(
        r##"{"description":"Named entity: complexes; with a semi-colon","initialState":"Data","input":"&complexes;","inputUtf16":[38,99,111,109,112,108,101,120,101,115,59],"output":[{"Character":{"data":"‚ÑÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1649() {
    tokenize(
        r##"{"description":"Bad named entity: cong without a semi-colon","initialState":"Data","input":"&cong","inputUtf16":[38,99,111,110,103],"output":[{"Character":{"data":"&cong"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1650() {
    tokenize(
        r##"{"description":"Named entity: cong; with a semi-colon","initialState":"Data","input":"&cong;","inputUtf16":[38,99,111,110,103,59],"output":[{"Character":{"data":"‚âÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1651() {
    tokenize(
        r##"{"description":"Bad named entity: congdot without a semi-colon","initialState":"Data","input":"&congdot","inputUtf16":[38,99,111,110,103,100,111,116],"output":[{"Character":{"data":"&congdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1652() {
    tokenize(
        r##"{"description":"Named entity: congdot; with a semi-colon","initialState":"Data","input":"&congdot;","inputUtf16":[38,99,111,110,103,100,111,116,59],"output":[{"Character":{"data":"‚©≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1653() {
    tokenize(
        r##"{"description":"Bad named entity: conint without a semi-colon","initialState":"Data","input":"&conint","inputUtf16":[38,99,111,110,105,110,116],"output":[{"Character":{"data":"&conint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1654() {
    tokenize(
        r##"{"description":"Named entity: conint; with a semi-colon","initialState":"Data","input":"&conint;","inputUtf16":[38,99,111,110,105,110,116,59],"output":[{"Character":{"data":"‚àÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1655() {
    tokenize(
        r##"{"description":"Bad named entity: copf without a semi-colon","initialState":"Data","input":"&copf","inputUtf16":[38,99,111,112,102],"output":[{"Character":{"data":"&copf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1656() {
    tokenize(
        r##"{"description":"Named entity: copf; with a semi-colon","initialState":"Data","input":"&copf;","inputUtf16":[38,99,111,112,102,59],"output":[{"Character":{"data":"ùïî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1657() {
    tokenize(
        r##"{"description":"Bad named entity: coprod without a semi-colon","initialState":"Data","input":"&coprod","inputUtf16":[38,99,111,112,114,111,100],"output":[{"Character":{"data":"&coprod"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1658() {
    tokenize(
        r##"{"description":"Named entity: coprod; with a semi-colon","initialState":"Data","input":"&coprod;","inputUtf16":[38,99,111,112,114,111,100,59],"output":[{"Character":{"data":"‚àê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1659() {
    tokenize(
        r##"{"description":"Named entity: copy without a semi-colon","initialState":"Data","input":"&copy","inputUtf16":[38,99,111,112,121],"output":[{"Character":{"data":"¬©"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_1660() {
    tokenize(
        r##"{"description":"Named entity: copy; with a semi-colon","initialState":"Data","input":"&copy;","inputUtf16":[38,99,111,112,121,59],"output":[{"Character":{"data":"¬©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1661() {
    tokenize(
        r##"{"description":"Named entity: copysr; with a semi-colon","initialState":"Data","input":"&copysr;","inputUtf16":[38,99,111,112,121,115,114,59],"output":[{"Character":{"data":"‚Ñó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1662() {
    tokenize(
        r##"{"description":"Bad named entity: crarr without a semi-colon","initialState":"Data","input":"&crarr","inputUtf16":[38,99,114,97,114,114],"output":[{"Character":{"data":"&crarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1663() {
    tokenize(
        r##"{"description":"Named entity: crarr; with a semi-colon","initialState":"Data","input":"&crarr;","inputUtf16":[38,99,114,97,114,114,59],"output":[{"Character":{"data":"‚Üµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1664() {
    tokenize(
        r##"{"description":"Bad named entity: cross without a semi-colon","initialState":"Data","input":"&cross","inputUtf16":[38,99,114,111,115,115],"output":[{"Character":{"data":"&cross"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1665() {
    tokenize(
        r##"{"description":"Named entity: cross; with a semi-colon","initialState":"Data","input":"&cross;","inputUtf16":[38,99,114,111,115,115,59],"output":[{"Character":{"data":"‚úó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1666() {
    tokenize(
        r##"{"description":"Bad named entity: cscr without a semi-colon","initialState":"Data","input":"&cscr","inputUtf16":[38,99,115,99,114],"output":[{"Character":{"data":"&cscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1667() {
    tokenize(
        r##"{"description":"Named entity: cscr; with a semi-colon","initialState":"Data","input":"&cscr;","inputUtf16":[38,99,115,99,114,59],"output":[{"Character":{"data":"ùí∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1668() {
    tokenize(
        r##"{"description":"Bad named entity: csub without a semi-colon","initialState":"Data","input":"&csub","inputUtf16":[38,99,115,117,98],"output":[{"Character":{"data":"&csub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1669() {
    tokenize(
        r##"{"description":"Named entity: csub; with a semi-colon","initialState":"Data","input":"&csub;","inputUtf16":[38,99,115,117,98,59],"output":[{"Character":{"data":"‚´è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1670() {
    tokenize(
        r##"{"description":"Bad named entity: csube without a semi-colon","initialState":"Data","input":"&csube","inputUtf16":[38,99,115,117,98,101],"output":[{"Character":{"data":"&csube"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1671() {
    tokenize(
        r##"{"description":"Named entity: csube; with a semi-colon","initialState":"Data","input":"&csube;","inputUtf16":[38,99,115,117,98,101,59],"output":[{"Character":{"data":"‚´ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1672() {
    tokenize(
        r##"{"description":"Bad named entity: csup without a semi-colon","initialState":"Data","input":"&csup","inputUtf16":[38,99,115,117,112],"output":[{"Character":{"data":"&csup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1673() {
    tokenize(
        r##"{"description":"Named entity: csup; with a semi-colon","initialState":"Data","input":"&csup;","inputUtf16":[38,99,115,117,112,59],"output":[{"Character":{"data":"‚´ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1674() {
    tokenize(
        r##"{"description":"Bad named entity: csupe without a semi-colon","initialState":"Data","input":"&csupe","inputUtf16":[38,99,115,117,112,101],"output":[{"Character":{"data":"&csupe"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1675() {
    tokenize(
        r##"{"description":"Named entity: csupe; with a semi-colon","initialState":"Data","input":"&csupe;","inputUtf16":[38,99,115,117,112,101,59],"output":[{"Character":{"data":"‚´í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1676() {
    tokenize(
        r##"{"description":"Bad named entity: ctdot without a semi-colon","initialState":"Data","input":"&ctdot","inputUtf16":[38,99,116,100,111,116],"output":[{"Character":{"data":"&ctdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1677() {
    tokenize(
        r##"{"description":"Named entity: ctdot; with a semi-colon","initialState":"Data","input":"&ctdot;","inputUtf16":[38,99,116,100,111,116,59],"output":[{"Character":{"data":"‚ãØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1678() {
    tokenize(
        r##"{"description":"Bad named entity: cudarrl without a semi-colon","initialState":"Data","input":"&cudarrl","inputUtf16":[38,99,117,100,97,114,114,108],"output":[{"Character":{"data":"&cudarrl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1679() {
    tokenize(
        r##"{"description":"Named entity: cudarrl; with a semi-colon","initialState":"Data","input":"&cudarrl;","inputUtf16":[38,99,117,100,97,114,114,108,59],"output":[{"Character":{"data":"‚§∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1680() {
    tokenize(
        r##"{"description":"Bad named entity: cudarrr without a semi-colon","initialState":"Data","input":"&cudarrr","inputUtf16":[38,99,117,100,97,114,114,114],"output":[{"Character":{"data":"&cudarrr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1681() {
    tokenize(
        r##"{"description":"Named entity: cudarrr; with a semi-colon","initialState":"Data","input":"&cudarrr;","inputUtf16":[38,99,117,100,97,114,114,114,59],"output":[{"Character":{"data":"‚§µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1682() {
    tokenize(
        r##"{"description":"Bad named entity: cuepr without a semi-colon","initialState":"Data","input":"&cuepr","inputUtf16":[38,99,117,101,112,114],"output":[{"Character":{"data":"&cuepr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1683() {
    tokenize(
        r##"{"description":"Named entity: cuepr; with a semi-colon","initialState":"Data","input":"&cuepr;","inputUtf16":[38,99,117,101,112,114,59],"output":[{"Character":{"data":"‚ãû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1684() {
    tokenize(
        r##"{"description":"Bad named entity: cuesc without a semi-colon","initialState":"Data","input":"&cuesc","inputUtf16":[38,99,117,101,115,99],"output":[{"Character":{"data":"&cuesc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1685() {
    tokenize(
        r##"{"description":"Named entity: cuesc; with a semi-colon","initialState":"Data","input":"&cuesc;","inputUtf16":[38,99,117,101,115,99,59],"output":[{"Character":{"data":"‚ãü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1686() {
    tokenize(
        r##"{"description":"Bad named entity: cularr without a semi-colon","initialState":"Data","input":"&cularr","inputUtf16":[38,99,117,108,97,114,114],"output":[{"Character":{"data":"&cularr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1687() {
    tokenize(
        r##"{"description":"Named entity: cularr; with a semi-colon","initialState":"Data","input":"&cularr;","inputUtf16":[38,99,117,108,97,114,114,59],"output":[{"Character":{"data":"‚Ü∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1688() {
    tokenize(
        r##"{"description":"Bad named entity: cularrp without a semi-colon","initialState":"Data","input":"&cularrp","inputUtf16":[38,99,117,108,97,114,114,112],"output":[{"Character":{"data":"&cularrp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1689() {
    tokenize(
        r##"{"description":"Named entity: cularrp; with a semi-colon","initialState":"Data","input":"&cularrp;","inputUtf16":[38,99,117,108,97,114,114,112,59],"output":[{"Character":{"data":"‚§Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1690() {
    tokenize(
        r##"{"description":"Bad named entity: cup without a semi-colon","initialState":"Data","input":"&cup","inputUtf16":[38,99,117,112],"output":[{"Character":{"data":"&cup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1691() {
    tokenize(
        r##"{"description":"Named entity: cup; with a semi-colon","initialState":"Data","input":"&cup;","inputUtf16":[38,99,117,112,59],"output":[{"Character":{"data":"‚à™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1692() {
    tokenize(
        r##"{"description":"Bad named entity: cupbrcap without a semi-colon","initialState":"Data","input":"&cupbrcap","inputUtf16":[38,99,117,112,98,114,99,97,112],"output":[{"Character":{"data":"&cupbrcap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1693() {
    tokenize(
        r##"{"description":"Named entity: cupbrcap; with a semi-colon","initialState":"Data","input":"&cupbrcap;","inputUtf16":[38,99,117,112,98,114,99,97,112,59],"output":[{"Character":{"data":"‚©à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1694() {
    tokenize(
        r##"{"description":"Bad named entity: cupcap without a semi-colon","initialState":"Data","input":"&cupcap","inputUtf16":[38,99,117,112,99,97,112],"output":[{"Character":{"data":"&cupcap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1695() {
    tokenize(
        r##"{"description":"Named entity: cupcap; with a semi-colon","initialState":"Data","input":"&cupcap;","inputUtf16":[38,99,117,112,99,97,112,59],"output":[{"Character":{"data":"‚©Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1696() {
    tokenize(
        r##"{"description":"Bad named entity: cupcup without a semi-colon","initialState":"Data","input":"&cupcup","inputUtf16":[38,99,117,112,99,117,112],"output":[{"Character":{"data":"&cupcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1697() {
    tokenize(
        r##"{"description":"Named entity: cupcup; with a semi-colon","initialState":"Data","input":"&cupcup;","inputUtf16":[38,99,117,112,99,117,112,59],"output":[{"Character":{"data":"‚©ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1698() {
    tokenize(
        r##"{"description":"Bad named entity: cupdot without a semi-colon","initialState":"Data","input":"&cupdot","inputUtf16":[38,99,117,112,100,111,116],"output":[{"Character":{"data":"&cupdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1699() {
    tokenize(
        r##"{"description":"Named entity: cupdot; with a semi-colon","initialState":"Data","input":"&cupdot;","inputUtf16":[38,99,117,112,100,111,116,59],"output":[{"Character":{"data":"‚äç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1700() {
    tokenize(
        r##"{"description":"Bad named entity: cupor without a semi-colon","initialState":"Data","input":"&cupor","inputUtf16":[38,99,117,112,111,114],"output":[{"Character":{"data":"&cupor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1701() {
    tokenize(
        r##"{"description":"Named entity: cupor; with a semi-colon","initialState":"Data","input":"&cupor;","inputUtf16":[38,99,117,112,111,114,59],"output":[{"Character":{"data":"‚©Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1702() {
    tokenize(
        r##"{"description":"Bad named entity: cups without a semi-colon","initialState":"Data","input":"&cups","inputUtf16":[38,99,117,112,115],"output":[{"Character":{"data":"&cups"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1703() {
    tokenize(
        r##"{"description":"Named entity: cups; with a semi-colon","initialState":"Data","input":"&cups;","inputUtf16":[38,99,117,112,115,59],"output":[{"Character":{"data":"‚à™Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1704() {
    tokenize(
        r##"{"description":"Bad named entity: curarr without a semi-colon","initialState":"Data","input":"&curarr","inputUtf16":[38,99,117,114,97,114,114],"output":[{"Character":{"data":"&curarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1705() {
    tokenize(
        r##"{"description":"Named entity: curarr; with a semi-colon","initialState":"Data","input":"&curarr;","inputUtf16":[38,99,117,114,97,114,114,59],"output":[{"Character":{"data":"‚Ü∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1706() {
    tokenize(
        r##"{"description":"Bad named entity: curarrm without a semi-colon","initialState":"Data","input":"&curarrm","inputUtf16":[38,99,117,114,97,114,114,109],"output":[{"Character":{"data":"&curarrm"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1707() {
    tokenize(
        r##"{"description":"Named entity: curarrm; with a semi-colon","initialState":"Data","input":"&curarrm;","inputUtf16":[38,99,117,114,97,114,114,109,59],"output":[{"Character":{"data":"‚§º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1708() {
    tokenize(
        r##"{"description":"Bad named entity: curlyeqprec without a semi-colon","initialState":"Data","input":"&curlyeqprec","inputUtf16":[38,99,117,114,108,121,101,113,112,114,101,99],"output":[{"Character":{"data":"&curlyeqprec"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1709() {
    tokenize(
        r##"{"description":"Named entity: curlyeqprec; with a semi-colon","initialState":"Data","input":"&curlyeqprec;","inputUtf16":[38,99,117,114,108,121,101,113,112,114,101,99,59],"output":[{"Character":{"data":"‚ãû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1710() {
    tokenize(
        r##"{"description":"Bad named entity: curlyeqsucc without a semi-colon","initialState":"Data","input":"&curlyeqsucc","inputUtf16":[38,99,117,114,108,121,101,113,115,117,99,99],"output":[{"Character":{"data":"&curlyeqsucc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1711() {
    tokenize(
        r##"{"description":"Named entity: curlyeqsucc; with a semi-colon","initialState":"Data","input":"&curlyeqsucc;","inputUtf16":[38,99,117,114,108,121,101,113,115,117,99,99,59],"output":[{"Character":{"data":"‚ãü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1712() {
    tokenize(
        r##"{"description":"Bad named entity: curlyvee without a semi-colon","initialState":"Data","input":"&curlyvee","inputUtf16":[38,99,117,114,108,121,118,101,101],"output":[{"Character":{"data":"&curlyvee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1713() {
    tokenize(
        r##"{"description":"Named entity: curlyvee; with a semi-colon","initialState":"Data","input":"&curlyvee;","inputUtf16":[38,99,117,114,108,121,118,101,101,59],"output":[{"Character":{"data":"‚ãé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1714() {
    tokenize(
        r##"{"description":"Bad named entity: curlywedge without a semi-colon","initialState":"Data","input":"&curlywedge","inputUtf16":[38,99,117,114,108,121,119,101,100,103,101],"output":[{"Character":{"data":"&curlywedge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1715() {
    tokenize(
        r##"{"description":"Named entity: curlywedge; with a semi-colon","initialState":"Data","input":"&curlywedge;","inputUtf16":[38,99,117,114,108,121,119,101,100,103,101,59],"output":[{"Character":{"data":"‚ãè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1716() {
    tokenize(
        r##"{"description":"Named entity: curren without a semi-colon","initialState":"Data","input":"&curren","inputUtf16":[38,99,117,114,114,101,110],"output":[{"Character":{"data":"¬§"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1717() {
    tokenize(
        r##"{"description":"Named entity: curren; with a semi-colon","initialState":"Data","input":"&curren;","inputUtf16":[38,99,117,114,114,101,110,59],"output":[{"Character":{"data":"¬§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1718() {
    tokenize(
        r##"{"description":"Bad named entity: curvearrowleft without a semi-colon","initialState":"Data","input":"&curvearrowleft","inputUtf16":[38,99,117,114,118,101,97,114,114,111,119,108,101,102,116],"output":[{"Character":{"data":"&curvearrowleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1719() {
    tokenize(
        r##"{"description":"Named entity: curvearrowleft; with a semi-colon","initialState":"Data","input":"&curvearrowleft;","inputUtf16":[38,99,117,114,118,101,97,114,114,111,119,108,101,102,116,59],"output":[{"Character":{"data":"‚Ü∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1720() {
    tokenize(
        r##"{"description":"Bad named entity: curvearrowright without a semi-colon","initialState":"Data","input":"&curvearrowright","inputUtf16":[38,99,117,114,118,101,97,114,114,111,119,114,105,103,104,116],"output":[{"Character":{"data":"&curvearrowright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1721() {
    tokenize(
        r##"{"description":"Named entity: curvearrowright; with a semi-colon","initialState":"Data","input":"&curvearrowright;","inputUtf16":[38,99,117,114,118,101,97,114,114,111,119,114,105,103,104,116,59],"output":[{"Character":{"data":"‚Ü∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1722() {
    tokenize(
        r##"{"description":"Bad named entity: cuvee without a semi-colon","initialState":"Data","input":"&cuvee","inputUtf16":[38,99,117,118,101,101],"output":[{"Character":{"data":"&cuvee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1723() {
    tokenize(
        r##"{"description":"Named entity: cuvee; with a semi-colon","initialState":"Data","input":"&cuvee;","inputUtf16":[38,99,117,118,101,101,59],"output":[{"Character":{"data":"‚ãé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1724() {
    tokenize(
        r##"{"description":"Bad named entity: cuwed without a semi-colon","initialState":"Data","input":"&cuwed","inputUtf16":[38,99,117,119,101,100],"output":[{"Character":{"data":"&cuwed"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1725() {
    tokenize(
        r##"{"description":"Named entity: cuwed; with a semi-colon","initialState":"Data","input":"&cuwed;","inputUtf16":[38,99,117,119,101,100,59],"output":[{"Character":{"data":"‚ãè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1726() {
    tokenize(
        r##"{"description":"Bad named entity: cwconint without a semi-colon","initialState":"Data","input":"&cwconint","inputUtf16":[38,99,119,99,111,110,105,110,116],"output":[{"Character":{"data":"&cwconint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1727() {
    tokenize(
        r##"{"description":"Named entity: cwconint; with a semi-colon","initialState":"Data","input":"&cwconint;","inputUtf16":[38,99,119,99,111,110,105,110,116,59],"output":[{"Character":{"data":"‚à≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1728() {
    tokenize(
        r##"{"description":"Bad named entity: cwint without a semi-colon","initialState":"Data","input":"&cwint","inputUtf16":[38,99,119,105,110,116],"output":[{"Character":{"data":"&cwint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1729() {
    tokenize(
        r##"{"description":"Named entity: cwint; with a semi-colon","initialState":"Data","input":"&cwint;","inputUtf16":[38,99,119,105,110,116,59],"output":[{"Character":{"data":"‚à±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1730() {
    tokenize(
        r##"{"description":"Bad named entity: cylcty without a semi-colon","initialState":"Data","input":"&cylcty","inputUtf16":[38,99,121,108,99,116,121],"output":[{"Character":{"data":"&cylcty"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1731() {
    tokenize(
        r##"{"description":"Named entity: cylcty; with a semi-colon","initialState":"Data","input":"&cylcty;","inputUtf16":[38,99,121,108,99,116,121,59],"output":[{"Character":{"data":"‚å≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1732() {
    tokenize(
        r##"{"description":"Bad named entity: dArr without a semi-colon","initialState":"Data","input":"&dArr","inputUtf16":[38,100,65,114,114],"output":[{"Character":{"data":"&dArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1733() {
    tokenize(
        r##"{"description":"Named entity: dArr; with a semi-colon","initialState":"Data","input":"&dArr;","inputUtf16":[38,100,65,114,114,59],"output":[{"Character":{"data":"‚áì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1734() {
    tokenize(
        r##"{"description":"Bad named entity: dHar without a semi-colon","initialState":"Data","input":"&dHar","inputUtf16":[38,100,72,97,114],"output":[{"Character":{"data":"&dHar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1735() {
    tokenize(
        r##"{"description":"Named entity: dHar; with a semi-colon","initialState":"Data","input":"&dHar;","inputUtf16":[38,100,72,97,114,59],"output":[{"Character":{"data":"‚••"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1736() {
    tokenize(
        r##"{"description":"Bad named entity: dagger without a semi-colon","initialState":"Data","input":"&dagger","inputUtf16":[38,100,97,103,103,101,114],"output":[{"Character":{"data":"&dagger"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1737() {
    tokenize(
        r##"{"description":"Named entity: dagger; with a semi-colon","initialState":"Data","input":"&dagger;","inputUtf16":[38,100,97,103,103,101,114,59],"output":[{"Character":{"data":"‚Ä†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1738() {
    tokenize(
        r##"{"description":"Bad named entity: daleth without a semi-colon","initialState":"Data","input":"&daleth","inputUtf16":[38,100,97,108,101,116,104],"output":[{"Character":{"data":"&daleth"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1739() {
    tokenize(
        r##"{"description":"Named entity: daleth; with a semi-colon","initialState":"Data","input":"&daleth;","inputUtf16":[38,100,97,108,101,116,104,59],"output":[{"Character":{"data":"‚Ñ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1740() {
    tokenize(
        r##"{"description":"Bad named entity: darr without a semi-colon","initialState":"Data","input":"&darr","inputUtf16":[38,100,97,114,114],"output":[{"Character":{"data":"&darr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1741() {
    tokenize(
        r##"{"description":"Named entity: darr; with a semi-colon","initialState":"Data","input":"&darr;","inputUtf16":[38,100,97,114,114,59],"output":[{"Character":{"data":"‚Üì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1742() {
    tokenize(
        r##"{"description":"Bad named entity: dash without a semi-colon","initialState":"Data","input":"&dash","inputUtf16":[38,100,97,115,104],"output":[{"Character":{"data":"&dash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1743() {
    tokenize(
        r##"{"description":"Named entity: dash; with a semi-colon","initialState":"Data","input":"&dash;","inputUtf16":[38,100,97,115,104,59],"output":[{"Character":{"data":"‚Äê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1744() {
    tokenize(
        r##"{"description":"Bad named entity: dashv without a semi-colon","initialState":"Data","input":"&dashv","inputUtf16":[38,100,97,115,104,118],"output":[{"Character":{"data":"&dashv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1745() {
    tokenize(
        r##"{"description":"Named entity: dashv; with a semi-colon","initialState":"Data","input":"&dashv;","inputUtf16":[38,100,97,115,104,118,59],"output":[{"Character":{"data":"‚ä£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1746() {
    tokenize(
        r##"{"description":"Bad named entity: dbkarow without a semi-colon","initialState":"Data","input":"&dbkarow","inputUtf16":[38,100,98,107,97,114,111,119],"output":[{"Character":{"data":"&dbkarow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1747() {
    tokenize(
        r##"{"description":"Named entity: dbkarow; with a semi-colon","initialState":"Data","input":"&dbkarow;","inputUtf16":[38,100,98,107,97,114,111,119,59],"output":[{"Character":{"data":"‚§è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1748() {
    tokenize(
        r##"{"description":"Bad named entity: dblac without a semi-colon","initialState":"Data","input":"&dblac","inputUtf16":[38,100,98,108,97,99],"output":[{"Character":{"data":"&dblac"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1749() {
    tokenize(
        r##"{"description":"Named entity: dblac; with a semi-colon","initialState":"Data","input":"&dblac;","inputUtf16":[38,100,98,108,97,99,59],"output":[{"Character":{"data":"Àù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1750() {
    tokenize(
        r##"{"description":"Bad named entity: dcaron without a semi-colon","initialState":"Data","input":"&dcaron","inputUtf16":[38,100,99,97,114,111,110],"output":[{"Character":{"data":"&dcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1751() {
    tokenize(
        r##"{"description":"Named entity: dcaron; with a semi-colon","initialState":"Data","input":"&dcaron;","inputUtf16":[38,100,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1752() {
    tokenize(
        r##"{"description":"Bad named entity: dcy without a semi-colon","initialState":"Data","input":"&dcy","inputUtf16":[38,100,99,121],"output":[{"Character":{"data":"&dcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1753() {
    tokenize(
        r##"{"description":"Named entity: dcy; with a semi-colon","initialState":"Data","input":"&dcy;","inputUtf16":[38,100,99,121,59],"output":[{"Character":{"data":"–¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1754() {
    tokenize(
        r##"{"description":"Bad named entity: dd without a semi-colon","initialState":"Data","input":"&dd","inputUtf16":[38,100,100],"output":[{"Character":{"data":"&dd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1755() {
    tokenize(
        r##"{"description":"Named entity: dd; with a semi-colon","initialState":"Data","input":"&dd;","inputUtf16":[38,100,100,59],"output":[{"Character":{"data":"‚ÖÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1756() {
    tokenize(
        r##"{"description":"Bad named entity: ddagger without a semi-colon","initialState":"Data","input":"&ddagger","inputUtf16":[38,100,100,97,103,103,101,114],"output":[{"Character":{"data":"&ddagger"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1757() {
    tokenize(
        r##"{"description":"Named entity: ddagger; with a semi-colon","initialState":"Data","input":"&ddagger;","inputUtf16":[38,100,100,97,103,103,101,114,59],"output":[{"Character":{"data":"‚Ä°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1758() {
    tokenize(
        r##"{"description":"Bad named entity: ddarr without a semi-colon","initialState":"Data","input":"&ddarr","inputUtf16":[38,100,100,97,114,114],"output":[{"Character":{"data":"&ddarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1759() {
    tokenize(
        r##"{"description":"Named entity: ddarr; with a semi-colon","initialState":"Data","input":"&ddarr;","inputUtf16":[38,100,100,97,114,114,59],"output":[{"Character":{"data":"‚áä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1760() {
    tokenize(
        r##"{"description":"Bad named entity: ddotseq without a semi-colon","initialState":"Data","input":"&ddotseq","inputUtf16":[38,100,100,111,116,115,101,113],"output":[{"Character":{"data":"&ddotseq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1761() {
    tokenize(
        r##"{"description":"Named entity: ddotseq; with a semi-colon","initialState":"Data","input":"&ddotseq;","inputUtf16":[38,100,100,111,116,115,101,113,59],"output":[{"Character":{"data":"‚©∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1762() {
    tokenize(
        r##"{"description":"Named entity: deg without a semi-colon","initialState":"Data","input":"&deg","inputUtf16":[38,100,101,103],"output":[{"Character":{"data":"¬∞"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_1763() {
    tokenize(
        r##"{"description":"Named entity: deg; with a semi-colon","initialState":"Data","input":"&deg;","inputUtf16":[38,100,101,103,59],"output":[{"Character":{"data":"¬∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1764() {
    tokenize(
        r##"{"description":"Bad named entity: delta without a semi-colon","initialState":"Data","input":"&delta","inputUtf16":[38,100,101,108,116,97],"output":[{"Character":{"data":"&delta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1765() {
    tokenize(
        r##"{"description":"Named entity: delta; with a semi-colon","initialState":"Data","input":"&delta;","inputUtf16":[38,100,101,108,116,97,59],"output":[{"Character":{"data":"Œ¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1766() {
    tokenize(
        r##"{"description":"Bad named entity: demptyv without a semi-colon","initialState":"Data","input":"&demptyv","inputUtf16":[38,100,101,109,112,116,121,118],"output":[{"Character":{"data":"&demptyv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1767() {
    tokenize(
        r##"{"description":"Named entity: demptyv; with a semi-colon","initialState":"Data","input":"&demptyv;","inputUtf16":[38,100,101,109,112,116,121,118,59],"output":[{"Character":{"data":"‚¶±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1768() {
    tokenize(
        r##"{"description":"Bad named entity: dfisht without a semi-colon","initialState":"Data","input":"&dfisht","inputUtf16":[38,100,102,105,115,104,116],"output":[{"Character":{"data":"&dfisht"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1769() {
    tokenize(
        r##"{"description":"Named entity: dfisht; with a semi-colon","initialState":"Data","input":"&dfisht;","inputUtf16":[38,100,102,105,115,104,116,59],"output":[{"Character":{"data":"‚•ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1770() {
    tokenize(
        r##"{"description":"Bad named entity: dfr without a semi-colon","initialState":"Data","input":"&dfr","inputUtf16":[38,100,102,114],"output":[{"Character":{"data":"&dfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1771() {
    tokenize(
        r##"{"description":"Named entity: dfr; with a semi-colon","initialState":"Data","input":"&dfr;","inputUtf16":[38,100,102,114,59],"output":[{"Character":{"data":"ùî°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1772() {
    tokenize(
        r##"{"description":"Bad named entity: dharl without a semi-colon","initialState":"Data","input":"&dharl","inputUtf16":[38,100,104,97,114,108],"output":[{"Character":{"data":"&dharl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1773() {
    tokenize(
        r##"{"description":"Named entity: dharl; with a semi-colon","initialState":"Data","input":"&dharl;","inputUtf16":[38,100,104,97,114,108,59],"output":[{"Character":{"data":"‚áÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1774() {
    tokenize(
        r##"{"description":"Bad named entity: dharr without a semi-colon","initialState":"Data","input":"&dharr","inputUtf16":[38,100,104,97,114,114],"output":[{"Character":{"data":"&dharr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1775() {
    tokenize(
        r##"{"description":"Named entity: dharr; with a semi-colon","initialState":"Data","input":"&dharr;","inputUtf16":[38,100,104,97,114,114,59],"output":[{"Character":{"data":"‚áÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1776() {
    tokenize(
        r##"{"description":"Bad named entity: diam without a semi-colon","initialState":"Data","input":"&diam","inputUtf16":[38,100,105,97,109],"output":[{"Character":{"data":"&diam"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1777() {
    tokenize(
        r##"{"description":"Named entity: diam; with a semi-colon","initialState":"Data","input":"&diam;","inputUtf16":[38,100,105,97,109,59],"output":[{"Character":{"data":"‚ãÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1778() {
    tokenize(
        r##"{"description":"Bad named entity: diamond without a semi-colon","initialState":"Data","input":"&diamond","inputUtf16":[38,100,105,97,109,111,110,100],"output":[{"Character":{"data":"&diamond"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1779() {
    tokenize(
        r##"{"description":"Named entity: diamond; with a semi-colon","initialState":"Data","input":"&diamond;","inputUtf16":[38,100,105,97,109,111,110,100,59],"output":[{"Character":{"data":"‚ãÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1780() {
    tokenize(
        r##"{"description":"Bad named entity: diamondsuit without a semi-colon","initialState":"Data","input":"&diamondsuit","inputUtf16":[38,100,105,97,109,111,110,100,115,117,105,116],"output":[{"Character":{"data":"&diamondsuit"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1781() {
    tokenize(
        r##"{"description":"Named entity: diamondsuit; with a semi-colon","initialState":"Data","input":"&diamondsuit;","inputUtf16":[38,100,105,97,109,111,110,100,115,117,105,116,59],"output":[{"Character":{"data":"‚ô¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1782() {
    tokenize(
        r##"{"description":"Bad named entity: diams without a semi-colon","initialState":"Data","input":"&diams","inputUtf16":[38,100,105,97,109,115],"output":[{"Character":{"data":"&diams"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1783() {
    tokenize(
        r##"{"description":"Named entity: diams; with a semi-colon","initialState":"Data","input":"&diams;","inputUtf16":[38,100,105,97,109,115,59],"output":[{"Character":{"data":"‚ô¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1784() {
    tokenize(
        r##"{"description":"Bad named entity: die without a semi-colon","initialState":"Data","input":"&die","inputUtf16":[38,100,105,101],"output":[{"Character":{"data":"&die"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1785() {
    tokenize(
        r##"{"description":"Named entity: die; with a semi-colon","initialState":"Data","input":"&die;","inputUtf16":[38,100,105,101,59],"output":[{"Character":{"data":"¬®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1786() {
    tokenize(
        r##"{"description":"Bad named entity: digamma without a semi-colon","initialState":"Data","input":"&digamma","inputUtf16":[38,100,105,103,97,109,109,97],"output":[{"Character":{"data":"&digamma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1787() {
    tokenize(
        r##"{"description":"Named entity: digamma; with a semi-colon","initialState":"Data","input":"&digamma;","inputUtf16":[38,100,105,103,97,109,109,97,59],"output":[{"Character":{"data":"œù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1788() {
    tokenize(
        r##"{"description":"Bad named entity: disin without a semi-colon","initialState":"Data","input":"&disin","inputUtf16":[38,100,105,115,105,110],"output":[{"Character":{"data":"&disin"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1789() {
    tokenize(
        r##"{"description":"Named entity: disin; with a semi-colon","initialState":"Data","input":"&disin;","inputUtf16":[38,100,105,115,105,110,59],"output":[{"Character":{"data":"‚ã≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1790() {
    tokenize(
        r##"{"description":"Bad named entity: div without a semi-colon","initialState":"Data","input":"&div","inputUtf16":[38,100,105,118],"output":[{"Character":{"data":"&div"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1791() {
    tokenize(
        r##"{"description":"Named entity: div; with a semi-colon","initialState":"Data","input":"&div;","inputUtf16":[38,100,105,118,59],"output":[{"Character":{"data":"√∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1792() {
    tokenize(
        r##"{"description":"Named entity: divide without a semi-colon","initialState":"Data","input":"&divide","inputUtf16":[38,100,105,118,105,100,101],"output":[{"Character":{"data":"√∑"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1793() {
    tokenize(
        r##"{"description":"Named entity: divide; with a semi-colon","initialState":"Data","input":"&divide;","inputUtf16":[38,100,105,118,105,100,101,59],"output":[{"Character":{"data":"√∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1794() {
    tokenize(
        r##"{"description":"Named entity: divideontimes; with a semi-colon","initialState":"Data","input":"&divideontimes;","inputUtf16":[38,100,105,118,105,100,101,111,110,116,105,109,101,115,59],"output":[{"Character":{"data":"‚ãá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1795() {
    tokenize(
        r##"{"description":"Bad named entity: divonx without a semi-colon","initialState":"Data","input":"&divonx","inputUtf16":[38,100,105,118,111,110,120],"output":[{"Character":{"data":"&divonx"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1796() {
    tokenize(
        r##"{"description":"Named entity: divonx; with a semi-colon","initialState":"Data","input":"&divonx;","inputUtf16":[38,100,105,118,111,110,120,59],"output":[{"Character":{"data":"‚ãá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1797() {
    tokenize(
        r##"{"description":"Bad named entity: djcy without a semi-colon","initialState":"Data","input":"&djcy","inputUtf16":[38,100,106,99,121],"output":[{"Character":{"data":"&djcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1798() {
    tokenize(
        r##"{"description":"Named entity: djcy; with a semi-colon","initialState":"Data","input":"&djcy;","inputUtf16":[38,100,106,99,121,59],"output":[{"Character":{"data":"—í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1799() {
    tokenize(
        r##"{"description":"Bad named entity: dlcorn without a semi-colon","initialState":"Data","input":"&dlcorn","inputUtf16":[38,100,108,99,111,114,110],"output":[{"Character":{"data":"&dlcorn"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1800() {
    tokenize(
        r##"{"description":"Named entity: dlcorn; with a semi-colon","initialState":"Data","input":"&dlcorn;","inputUtf16":[38,100,108,99,111,114,110,59],"output":[{"Character":{"data":"‚åû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1801() {
    tokenize(
        r##"{"description":"Bad named entity: dlcrop without a semi-colon","initialState":"Data","input":"&dlcrop","inputUtf16":[38,100,108,99,114,111,112],"output":[{"Character":{"data":"&dlcrop"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1802() {
    tokenize(
        r##"{"description":"Named entity: dlcrop; with a semi-colon","initialState":"Data","input":"&dlcrop;","inputUtf16":[38,100,108,99,114,111,112,59],"output":[{"Character":{"data":"‚åç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1803() {
    tokenize(
        r##"{"description":"Bad named entity: dollar without a semi-colon","initialState":"Data","input":"&dollar","inputUtf16":[38,100,111,108,108,97,114],"output":[{"Character":{"data":"&dollar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1804() {
    tokenize(
        r##"{"description":"Named entity: dollar; with a semi-colon","initialState":"Data","input":"&dollar;","inputUtf16":[38,100,111,108,108,97,114,59],"output":[{"Character":{"data":"$"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1805() {
    tokenize(
        r##"{"description":"Bad named entity: dopf without a semi-colon","initialState":"Data","input":"&dopf","inputUtf16":[38,100,111,112,102],"output":[{"Character":{"data":"&dopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1806() {
    tokenize(
        r##"{"description":"Named entity: dopf; with a semi-colon","initialState":"Data","input":"&dopf;","inputUtf16":[38,100,111,112,102,59],"output":[{"Character":{"data":"ùïï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1807() {
    tokenize(
        r##"{"description":"Bad named entity: dot without a semi-colon","initialState":"Data","input":"&dot","inputUtf16":[38,100,111,116],"output":[{"Character":{"data":"&dot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1808() {
    tokenize(
        r##"{"description":"Named entity: dot; with a semi-colon","initialState":"Data","input":"&dot;","inputUtf16":[38,100,111,116,59],"output":[{"Character":{"data":"Àô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1809() {
    tokenize(
        r##"{"description":"Bad named entity: doteq without a semi-colon","initialState":"Data","input":"&doteq","inputUtf16":[38,100,111,116,101,113],"output":[{"Character":{"data":"&doteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1810() {
    tokenize(
        r##"{"description":"Named entity: doteq; with a semi-colon","initialState":"Data","input":"&doteq;","inputUtf16":[38,100,111,116,101,113,59],"output":[{"Character":{"data":"‚âê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1811() {
    tokenize(
        r##"{"description":"Bad named entity: doteqdot without a semi-colon","initialState":"Data","input":"&doteqdot","inputUtf16":[38,100,111,116,101,113,100,111,116],"output":[{"Character":{"data":"&doteqdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1812() {
    tokenize(
        r##"{"description":"Named entity: doteqdot; with a semi-colon","initialState":"Data","input":"&doteqdot;","inputUtf16":[38,100,111,116,101,113,100,111,116,59],"output":[{"Character":{"data":"‚âë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1813() {
    tokenize(
        r##"{"description":"Bad named entity: dotminus without a semi-colon","initialState":"Data","input":"&dotminus","inputUtf16":[38,100,111,116,109,105,110,117,115],"output":[{"Character":{"data":"&dotminus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1814() {
    tokenize(
        r##"{"description":"Named entity: dotminus; with a semi-colon","initialState":"Data","input":"&dotminus;","inputUtf16":[38,100,111,116,109,105,110,117,115,59],"output":[{"Character":{"data":"‚à∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1815() {
    tokenize(
        r##"{"description":"Bad named entity: dotplus without a semi-colon","initialState":"Data","input":"&dotplus","inputUtf16":[38,100,111,116,112,108,117,115],"output":[{"Character":{"data":"&dotplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1816() {
    tokenize(
        r##"{"description":"Named entity: dotplus; with a semi-colon","initialState":"Data","input":"&dotplus;","inputUtf16":[38,100,111,116,112,108,117,115,59],"output":[{"Character":{"data":"‚àî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1817() {
    tokenize(
        r##"{"description":"Bad named entity: dotsquare without a semi-colon","initialState":"Data","input":"&dotsquare","inputUtf16":[38,100,111,116,115,113,117,97,114,101],"output":[{"Character":{"data":"&dotsquare"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1818() {
    tokenize(
        r##"{"description":"Named entity: dotsquare; with a semi-colon","initialState":"Data","input":"&dotsquare;","inputUtf16":[38,100,111,116,115,113,117,97,114,101,59],"output":[{"Character":{"data":"‚ä°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1819() {
    tokenize(
        r##"{"description":"Bad named entity: doublebarwedge without a semi-colon","initialState":"Data","input":"&doublebarwedge","inputUtf16":[38,100,111,117,98,108,101,98,97,114,119,101,100,103,101],"output":[{"Character":{"data":"&doublebarwedge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1820() {
    tokenize(
        r##"{"description":"Named entity: doublebarwedge; with a semi-colon","initialState":"Data","input":"&doublebarwedge;","inputUtf16":[38,100,111,117,98,108,101,98,97,114,119,101,100,103,101,59],"output":[{"Character":{"data":"‚åÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1821() {
    tokenize(
        r##"{"description":"Bad named entity: downarrow without a semi-colon","initialState":"Data","input":"&downarrow","inputUtf16":[38,100,111,119,110,97,114,114,111,119],"output":[{"Character":{"data":"&downarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1822() {
    tokenize(
        r##"{"description":"Named entity: downarrow; with a semi-colon","initialState":"Data","input":"&downarrow;","inputUtf16":[38,100,111,119,110,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1823() {
    tokenize(
        r##"{"description":"Bad named entity: downdownarrows without a semi-colon","initialState":"Data","input":"&downdownarrows","inputUtf16":[38,100,111,119,110,100,111,119,110,97,114,114,111,119,115],"output":[{"Character":{"data":"&downdownarrows"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1824() {
    tokenize(
        r##"{"description":"Named entity: downdownarrows; with a semi-colon","initialState":"Data","input":"&downdownarrows;","inputUtf16":[38,100,111,119,110,100,111,119,110,97,114,114,111,119,115,59],"output":[{"Character":{"data":"‚áä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1825() {
    tokenize(
        r##"{"description":"Bad named entity: downharpoonleft without a semi-colon","initialState":"Data","input":"&downharpoonleft","inputUtf16":[38,100,111,119,110,104,97,114,112,111,111,110,108,101,102,116],"output":[{"Character":{"data":"&downharpoonleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1826() {
    tokenize(
        r##"{"description":"Named entity: downharpoonleft; with a semi-colon","initialState":"Data","input":"&downharpoonleft;","inputUtf16":[38,100,111,119,110,104,97,114,112,111,111,110,108,101,102,116,59],"output":[{"Character":{"data":"‚áÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1827() {
    tokenize(
        r##"{"description":"Bad named entity: downharpoonright without a semi-colon","initialState":"Data","input":"&downharpoonright","inputUtf16":[38,100,111,119,110,104,97,114,112,111,111,110,114,105,103,104,116],"output":[{"Character":{"data":"&downharpoonright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1828() {
    tokenize(
        r##"{"description":"Named entity: downharpoonright; with a semi-colon","initialState":"Data","input":"&downharpoonright;","inputUtf16":[38,100,111,119,110,104,97,114,112,111,111,110,114,105,103,104,116,59],"output":[{"Character":{"data":"‚áÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1829() {
    tokenize(
        r##"{"description":"Bad named entity: drbkarow without a semi-colon","initialState":"Data","input":"&drbkarow","inputUtf16":[38,100,114,98,107,97,114,111,119],"output":[{"Character":{"data":"&drbkarow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1830() {
    tokenize(
        r##"{"description":"Named entity: drbkarow; with a semi-colon","initialState":"Data","input":"&drbkarow;","inputUtf16":[38,100,114,98,107,97,114,111,119,59],"output":[{"Character":{"data":"‚§ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1831() {
    tokenize(
        r##"{"description":"Bad named entity: drcorn without a semi-colon","initialState":"Data","input":"&drcorn","inputUtf16":[38,100,114,99,111,114,110],"output":[{"Character":{"data":"&drcorn"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1832() {
    tokenize(
        r##"{"description":"Named entity: drcorn; with a semi-colon","initialState":"Data","input":"&drcorn;","inputUtf16":[38,100,114,99,111,114,110,59],"output":[{"Character":{"data":"‚åü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1833() {
    tokenize(
        r##"{"description":"Bad named entity: drcrop without a semi-colon","initialState":"Data","input":"&drcrop","inputUtf16":[38,100,114,99,114,111,112],"output":[{"Character":{"data":"&drcrop"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1834() {
    tokenize(
        r##"{"description":"Named entity: drcrop; with a semi-colon","initialState":"Data","input":"&drcrop;","inputUtf16":[38,100,114,99,114,111,112,59],"output":[{"Character":{"data":"‚åå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1835() {
    tokenize(
        r##"{"description":"Bad named entity: dscr without a semi-colon","initialState":"Data","input":"&dscr","inputUtf16":[38,100,115,99,114],"output":[{"Character":{"data":"&dscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1836() {
    tokenize(
        r##"{"description":"Named entity: dscr; with a semi-colon","initialState":"Data","input":"&dscr;","inputUtf16":[38,100,115,99,114,59],"output":[{"Character":{"data":"ùíπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1837() {
    tokenize(
        r##"{"description":"Bad named entity: dscy without a semi-colon","initialState":"Data","input":"&dscy","inputUtf16":[38,100,115,99,121],"output":[{"Character":{"data":"&dscy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1838() {
    tokenize(
        r##"{"description":"Named entity: dscy; with a semi-colon","initialState":"Data","input":"&dscy;","inputUtf16":[38,100,115,99,121,59],"output":[{"Character":{"data":"—ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1839() {
    tokenize(
        r##"{"description":"Bad named entity: dsol without a semi-colon","initialState":"Data","input":"&dsol","inputUtf16":[38,100,115,111,108],"output":[{"Character":{"data":"&dsol"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1840() {
    tokenize(
        r##"{"description":"Named entity: dsol; with a semi-colon","initialState":"Data","input":"&dsol;","inputUtf16":[38,100,115,111,108,59],"output":[{"Character":{"data":"‚ß∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1841() {
    tokenize(
        r##"{"description":"Bad named entity: dstrok without a semi-colon","initialState":"Data","input":"&dstrok","inputUtf16":[38,100,115,116,114,111,107],"output":[{"Character":{"data":"&dstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1842() {
    tokenize(
        r##"{"description":"Named entity: dstrok; with a semi-colon","initialState":"Data","input":"&dstrok;","inputUtf16":[38,100,115,116,114,111,107,59],"output":[{"Character":{"data":"ƒë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1843() {
    tokenize(
        r##"{"description":"Bad named entity: dtdot without a semi-colon","initialState":"Data","input":"&dtdot","inputUtf16":[38,100,116,100,111,116],"output":[{"Character":{"data":"&dtdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1844() {
    tokenize(
        r##"{"description":"Named entity: dtdot; with a semi-colon","initialState":"Data","input":"&dtdot;","inputUtf16":[38,100,116,100,111,116,59],"output":[{"Character":{"data":"‚ã±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1845() {
    tokenize(
        r##"{"description":"Bad named entity: dtri without a semi-colon","initialState":"Data","input":"&dtri","inputUtf16":[38,100,116,114,105],"output":[{"Character":{"data":"&dtri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1846() {
    tokenize(
        r##"{"description":"Named entity: dtri; with a semi-colon","initialState":"Data","input":"&dtri;","inputUtf16":[38,100,116,114,105,59],"output":[{"Character":{"data":"‚ñø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1847() {
    tokenize(
        r##"{"description":"Bad named entity: dtrif without a semi-colon","initialState":"Data","input":"&dtrif","inputUtf16":[38,100,116,114,105,102],"output":[{"Character":{"data":"&dtrif"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1848() {
    tokenize(
        r##"{"description":"Named entity: dtrif; with a semi-colon","initialState":"Data","input":"&dtrif;","inputUtf16":[38,100,116,114,105,102,59],"output":[{"Character":{"data":"‚ñæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1849() {
    tokenize(
        r##"{"description":"Bad named entity: duarr without a semi-colon","initialState":"Data","input":"&duarr","inputUtf16":[38,100,117,97,114,114],"output":[{"Character":{"data":"&duarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1850() {
    tokenize(
        r##"{"description":"Named entity: duarr; with a semi-colon","initialState":"Data","input":"&duarr;","inputUtf16":[38,100,117,97,114,114,59],"output":[{"Character":{"data":"‚áµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1851() {
    tokenize(
        r##"{"description":"Bad named entity: duhar without a semi-colon","initialState":"Data","input":"&duhar","inputUtf16":[38,100,117,104,97,114],"output":[{"Character":{"data":"&duhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1852() {
    tokenize(
        r##"{"description":"Named entity: duhar; with a semi-colon","initialState":"Data","input":"&duhar;","inputUtf16":[38,100,117,104,97,114,59],"output":[{"Character":{"data":"‚•Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1853() {
    tokenize(
        r##"{"description":"Bad named entity: dwangle without a semi-colon","initialState":"Data","input":"&dwangle","inputUtf16":[38,100,119,97,110,103,108,101],"output":[{"Character":{"data":"&dwangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1854() {
    tokenize(
        r##"{"description":"Named entity: dwangle; with a semi-colon","initialState":"Data","input":"&dwangle;","inputUtf16":[38,100,119,97,110,103,108,101,59],"output":[{"Character":{"data":"‚¶¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1855() {
    tokenize(
        r##"{"description":"Bad named entity: dzcy without a semi-colon","initialState":"Data","input":"&dzcy","inputUtf16":[38,100,122,99,121],"output":[{"Character":{"data":"&dzcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1856() {
    tokenize(
        r##"{"description":"Named entity: dzcy; with a semi-colon","initialState":"Data","input":"&dzcy;","inputUtf16":[38,100,122,99,121,59],"output":[{"Character":{"data":"—ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1857() {
    tokenize(
        r##"{"description":"Bad named entity: dzigrarr without a semi-colon","initialState":"Data","input":"&dzigrarr","inputUtf16":[38,100,122,105,103,114,97,114,114],"output":[{"Character":{"data":"&dzigrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1858() {
    tokenize(
        r##"{"description":"Named entity: dzigrarr; with a semi-colon","initialState":"Data","input":"&dzigrarr;","inputUtf16":[38,100,122,105,103,114,97,114,114,59],"output":[{"Character":{"data":"‚üø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1859() {
    tokenize(
        r##"{"description":"Bad named entity: eDDot without a semi-colon","initialState":"Data","input":"&eDDot","inputUtf16":[38,101,68,68,111,116],"output":[{"Character":{"data":"&eDDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1860() {
    tokenize(
        r##"{"description":"Named entity: eDDot; with a semi-colon","initialState":"Data","input":"&eDDot;","inputUtf16":[38,101,68,68,111,116,59],"output":[{"Character":{"data":"‚©∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1861() {
    tokenize(
        r##"{"description":"Bad named entity: eDot without a semi-colon","initialState":"Data","input":"&eDot","inputUtf16":[38,101,68,111,116],"output":[{"Character":{"data":"&eDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1862() {
    tokenize(
        r##"{"description":"Named entity: eDot; with a semi-colon","initialState":"Data","input":"&eDot;","inputUtf16":[38,101,68,111,116,59],"output":[{"Character":{"data":"‚âë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1863() {
    tokenize(
        r##"{"description":"Named entity: eacute without a semi-colon","initialState":"Data","input":"&eacute","inputUtf16":[38,101,97,99,117,116,101],"output":[{"Character":{"data":"√©"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1864() {
    tokenize(
        r##"{"description":"Named entity: eacute; with a semi-colon","initialState":"Data","input":"&eacute;","inputUtf16":[38,101,97,99,117,116,101,59],"output":[{"Character":{"data":"√©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1865() {
    tokenize(
        r##"{"description":"Bad named entity: easter without a semi-colon","initialState":"Data","input":"&easter","inputUtf16":[38,101,97,115,116,101,114],"output":[{"Character":{"data":"&easter"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1866() {
    tokenize(
        r##"{"description":"Named entity: easter; with a semi-colon","initialState":"Data","input":"&easter;","inputUtf16":[38,101,97,115,116,101,114,59],"output":[{"Character":{"data":"‚©Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1867() {
    tokenize(
        r##"{"description":"Bad named entity: ecaron without a semi-colon","initialState":"Data","input":"&ecaron","inputUtf16":[38,101,99,97,114,111,110],"output":[{"Character":{"data":"&ecaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1868() {
    tokenize(
        r##"{"description":"Named entity: ecaron; with a semi-colon","initialState":"Data","input":"&ecaron;","inputUtf16":[38,101,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1869() {
    tokenize(
        r##"{"description":"Bad named entity: ecir without a semi-colon","initialState":"Data","input":"&ecir","inputUtf16":[38,101,99,105,114],"output":[{"Character":{"data":"&ecir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1870() {
    tokenize(
        r##"{"description":"Named entity: ecir; with a semi-colon","initialState":"Data","input":"&ecir;","inputUtf16":[38,101,99,105,114,59],"output":[{"Character":{"data":"‚âñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1871() {
    tokenize(
        r##"{"description":"Named entity: ecirc without a semi-colon","initialState":"Data","input":"&ecirc","inputUtf16":[38,101,99,105,114,99],"output":[{"Character":{"data":"√™"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_1872() {
    tokenize(
        r##"{"description":"Named entity: ecirc; with a semi-colon","initialState":"Data","input":"&ecirc;","inputUtf16":[38,101,99,105,114,99,59],"output":[{"Character":{"data":"√™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1873() {
    tokenize(
        r##"{"description":"Bad named entity: ecolon without a semi-colon","initialState":"Data","input":"&ecolon","inputUtf16":[38,101,99,111,108,111,110],"output":[{"Character":{"data":"&ecolon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1874() {
    tokenize(
        r##"{"description":"Named entity: ecolon; with a semi-colon","initialState":"Data","input":"&ecolon;","inputUtf16":[38,101,99,111,108,111,110,59],"output":[{"Character":{"data":"‚âï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1875() {
    tokenize(
        r##"{"description":"Bad named entity: ecy without a semi-colon","initialState":"Data","input":"&ecy","inputUtf16":[38,101,99,121],"output":[{"Character":{"data":"&ecy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1876() {
    tokenize(
        r##"{"description":"Named entity: ecy; with a semi-colon","initialState":"Data","input":"&ecy;","inputUtf16":[38,101,99,121,59],"output":[{"Character":{"data":"—ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1877() {
    tokenize(
        r##"{"description":"Bad named entity: edot without a semi-colon","initialState":"Data","input":"&edot","inputUtf16":[38,101,100,111,116],"output":[{"Character":{"data":"&edot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1878() {
    tokenize(
        r##"{"description":"Named entity: edot; with a semi-colon","initialState":"Data","input":"&edot;","inputUtf16":[38,101,100,111,116,59],"output":[{"Character":{"data":"ƒó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1879() {
    tokenize(
        r##"{"description":"Bad named entity: ee without a semi-colon","initialState":"Data","input":"&ee","inputUtf16":[38,101,101],"output":[{"Character":{"data":"&ee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1880() {
    tokenize(
        r##"{"description":"Named entity: ee; with a semi-colon","initialState":"Data","input":"&ee;","inputUtf16":[38,101,101,59],"output":[{"Character":{"data":"‚Öá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1881() {
    tokenize(
        r##"{"description":"Bad named entity: efDot without a semi-colon","initialState":"Data","input":"&efDot","inputUtf16":[38,101,102,68,111,116],"output":[{"Character":{"data":"&efDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1882() {
    tokenize(
        r##"{"description":"Named entity: efDot; with a semi-colon","initialState":"Data","input":"&efDot;","inputUtf16":[38,101,102,68,111,116,59],"output":[{"Character":{"data":"‚âí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1883() {
    tokenize(
        r##"{"description":"Bad named entity: efr without a semi-colon","initialState":"Data","input":"&efr","inputUtf16":[38,101,102,114],"output":[{"Character":{"data":"&efr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1884() {
    tokenize(
        r##"{"description":"Named entity: efr; with a semi-colon","initialState":"Data","input":"&efr;","inputUtf16":[38,101,102,114,59],"output":[{"Character":{"data":"ùî¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1885() {
    tokenize(
        r##"{"description":"Bad named entity: eg without a semi-colon","initialState":"Data","input":"&eg","inputUtf16":[38,101,103],"output":[{"Character":{"data":"&eg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1886() {
    tokenize(
        r##"{"description":"Named entity: eg; with a semi-colon","initialState":"Data","input":"&eg;","inputUtf16":[38,101,103,59],"output":[{"Character":{"data":"‚™ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1887() {
    tokenize(
        r##"{"description":"Named entity: egrave without a semi-colon","initialState":"Data","input":"&egrave","inputUtf16":[38,101,103,114,97,118,101],"output":[{"Character":{"data":"√®"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_1888() {
    tokenize(
        r##"{"description":"Named entity: egrave; with a semi-colon","initialState":"Data","input":"&egrave;","inputUtf16":[38,101,103,114,97,118,101,59],"output":[{"Character":{"data":"√®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1889() {
    tokenize(
        r##"{"description":"Bad named entity: egs without a semi-colon","initialState":"Data","input":"&egs","inputUtf16":[38,101,103,115],"output":[{"Character":{"data":"&egs"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1890() {
    tokenize(
        r##"{"description":"Named entity: egs; with a semi-colon","initialState":"Data","input":"&egs;","inputUtf16":[38,101,103,115,59],"output":[{"Character":{"data":"‚™ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1891() {
    tokenize(
        r##"{"description":"Bad named entity: egsdot without a semi-colon","initialState":"Data","input":"&egsdot","inputUtf16":[38,101,103,115,100,111,116],"output":[{"Character":{"data":"&egsdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1892() {
    tokenize(
        r##"{"description":"Named entity: egsdot; with a semi-colon","initialState":"Data","input":"&egsdot;","inputUtf16":[38,101,103,115,100,111,116,59],"output":[{"Character":{"data":"‚™ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1893() {
    tokenize(
        r##"{"description":"Bad named entity: el without a semi-colon","initialState":"Data","input":"&el","inputUtf16":[38,101,108],"output":[{"Character":{"data":"&el"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1894() {
    tokenize(
        r##"{"description":"Named entity: el; with a semi-colon","initialState":"Data","input":"&el;","inputUtf16":[38,101,108,59],"output":[{"Character":{"data":"‚™ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1895() {
    tokenize(
        r##"{"description":"Bad named entity: elinters without a semi-colon","initialState":"Data","input":"&elinters","inputUtf16":[38,101,108,105,110,116,101,114,115],"output":[{"Character":{"data":"&elinters"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1896() {
    tokenize(
        r##"{"description":"Named entity: elinters; with a semi-colon","initialState":"Data","input":"&elinters;","inputUtf16":[38,101,108,105,110,116,101,114,115,59],"output":[{"Character":{"data":"‚èß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1897() {
    tokenize(
        r##"{"description":"Bad named entity: ell without a semi-colon","initialState":"Data","input":"&ell","inputUtf16":[38,101,108,108],"output":[{"Character":{"data":"&ell"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1898() {
    tokenize(
        r##"{"description":"Named entity: ell; with a semi-colon","initialState":"Data","input":"&ell;","inputUtf16":[38,101,108,108,59],"output":[{"Character":{"data":"‚Ñì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1899() {
    tokenize(
        r##"{"description":"Bad named entity: els without a semi-colon","initialState":"Data","input":"&els","inputUtf16":[38,101,108,115],"output":[{"Character":{"data":"&els"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1900() {
    tokenize(
        r##"{"description":"Named entity: els; with a semi-colon","initialState":"Data","input":"&els;","inputUtf16":[38,101,108,115,59],"output":[{"Character":{"data":"‚™ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1901() {
    tokenize(
        r##"{"description":"Bad named entity: elsdot without a semi-colon","initialState":"Data","input":"&elsdot","inputUtf16":[38,101,108,115,100,111,116],"output":[{"Character":{"data":"&elsdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1902() {
    tokenize(
        r##"{"description":"Named entity: elsdot; with a semi-colon","initialState":"Data","input":"&elsdot;","inputUtf16":[38,101,108,115,100,111,116,59],"output":[{"Character":{"data":"‚™ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1903() {
    tokenize(
        r##"{"description":"Bad named entity: emacr without a semi-colon","initialState":"Data","input":"&emacr","inputUtf16":[38,101,109,97,99,114],"output":[{"Character":{"data":"&emacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1904() {
    tokenize(
        r##"{"description":"Named entity: emacr; with a semi-colon","initialState":"Data","input":"&emacr;","inputUtf16":[38,101,109,97,99,114,59],"output":[{"Character":{"data":"ƒì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1905() {
    tokenize(
        r##"{"description":"Bad named entity: empty without a semi-colon","initialState":"Data","input":"&empty","inputUtf16":[38,101,109,112,116,121],"output":[{"Character":{"data":"&empty"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1906() {
    tokenize(
        r##"{"description":"Named entity: empty; with a semi-colon","initialState":"Data","input":"&empty;","inputUtf16":[38,101,109,112,116,121,59],"output":[{"Character":{"data":"‚àÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1907() {
    tokenize(
        r##"{"description":"Bad named entity: emptyset without a semi-colon","initialState":"Data","input":"&emptyset","inputUtf16":[38,101,109,112,116,121,115,101,116],"output":[{"Character":{"data":"&emptyset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1908() {
    tokenize(
        r##"{"description":"Named entity: emptyset; with a semi-colon","initialState":"Data","input":"&emptyset;","inputUtf16":[38,101,109,112,116,121,115,101,116,59],"output":[{"Character":{"data":"‚àÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1909() {
    tokenize(
        r##"{"description":"Bad named entity: emptyv without a semi-colon","initialState":"Data","input":"&emptyv","inputUtf16":[38,101,109,112,116,121,118],"output":[{"Character":{"data":"&emptyv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1910() {
    tokenize(
        r##"{"description":"Named entity: emptyv; with a semi-colon","initialState":"Data","input":"&emptyv;","inputUtf16":[38,101,109,112,116,121,118,59],"output":[{"Character":{"data":"‚àÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1911() {
    tokenize(
        r##"{"description":"Bad named entity: emsp without a semi-colon","initialState":"Data","input":"&emsp","inputUtf16":[38,101,109,115,112],"output":[{"Character":{"data":"&emsp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1912() {
    tokenize(
        r##"{"description":"Bad named entity: emsp13 without a semi-colon","initialState":"Data","input":"&emsp13","inputUtf16":[38,101,109,115,112,49,51],"output":[{"Character":{"data":"&emsp13"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1913() {
    tokenize(
        r##"{"description":"Named entity: emsp13; with a semi-colon","initialState":"Data","input":"&emsp13;","inputUtf16":[38,101,109,115,112,49,51,59],"output":[{"Character":{"data":"‚ÄÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1914() {
    tokenize(
        r##"{"description":"Bad named entity: emsp14 without a semi-colon","initialState":"Data","input":"&emsp14","inputUtf16":[38,101,109,115,112,49,52],"output":[{"Character":{"data":"&emsp14"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1915() {
    tokenize(
        r##"{"description":"Named entity: emsp14; with a semi-colon","initialState":"Data","input":"&emsp14;","inputUtf16":[38,101,109,115,112,49,52,59],"output":[{"Character":{"data":"‚ÄÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1916() {
    tokenize(
        r##"{"description":"Named entity: emsp; with a semi-colon","initialState":"Data","input":"&emsp;","inputUtf16":[38,101,109,115,112,59],"output":[{"Character":{"data":"‚ÄÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1917() {
    tokenize(
        r##"{"description":"Bad named entity: eng without a semi-colon","initialState":"Data","input":"&eng","inputUtf16":[38,101,110,103],"output":[{"Character":{"data":"&eng"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1918() {
    tokenize(
        r##"{"description":"Named entity: eng; with a semi-colon","initialState":"Data","input":"&eng;","inputUtf16":[38,101,110,103,59],"output":[{"Character":{"data":"≈ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1919() {
    tokenize(
        r##"{"description":"Bad named entity: ensp without a semi-colon","initialState":"Data","input":"&ensp","inputUtf16":[38,101,110,115,112],"output":[{"Character":{"data":"&ensp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1920() {
    tokenize(
        r##"{"description":"Named entity: ensp; with a semi-colon","initialState":"Data","input":"&ensp;","inputUtf16":[38,101,110,115,112,59],"output":[{"Character":{"data":"‚ÄÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1921() {
    tokenize(
        r##"{"description":"Bad named entity: eogon without a semi-colon","initialState":"Data","input":"&eogon","inputUtf16":[38,101,111,103,111,110],"output":[{"Character":{"data":"&eogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1922() {
    tokenize(
        r##"{"description":"Named entity: eogon; with a semi-colon","initialState":"Data","input":"&eogon;","inputUtf16":[38,101,111,103,111,110,59],"output":[{"Character":{"data":"ƒô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1923() {
    tokenize(
        r##"{"description":"Bad named entity: eopf without a semi-colon","initialState":"Data","input":"&eopf","inputUtf16":[38,101,111,112,102],"output":[{"Character":{"data":"&eopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1924() {
    tokenize(
        r##"{"description":"Named entity: eopf; with a semi-colon","initialState":"Data","input":"&eopf;","inputUtf16":[38,101,111,112,102,59],"output":[{"Character":{"data":"ùïñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1925() {
    tokenize(
        r##"{"description":"Bad named entity: epar without a semi-colon","initialState":"Data","input":"&epar","inputUtf16":[38,101,112,97,114],"output":[{"Character":{"data":"&epar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1926() {
    tokenize(
        r##"{"description":"Named entity: epar; with a semi-colon","initialState":"Data","input":"&epar;","inputUtf16":[38,101,112,97,114,59],"output":[{"Character":{"data":"‚ãï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1927() {
    tokenize(
        r##"{"description":"Bad named entity: eparsl without a semi-colon","initialState":"Data","input":"&eparsl","inputUtf16":[38,101,112,97,114,115,108],"output":[{"Character":{"data":"&eparsl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1928() {
    tokenize(
        r##"{"description":"Named entity: eparsl; with a semi-colon","initialState":"Data","input":"&eparsl;","inputUtf16":[38,101,112,97,114,115,108,59],"output":[{"Character":{"data":"‚ß£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1929() {
    tokenize(
        r##"{"description":"Bad named entity: eplus without a semi-colon","initialState":"Data","input":"&eplus","inputUtf16":[38,101,112,108,117,115],"output":[{"Character":{"data":"&eplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1930() {
    tokenize(
        r##"{"description":"Named entity: eplus; with a semi-colon","initialState":"Data","input":"&eplus;","inputUtf16":[38,101,112,108,117,115,59],"output":[{"Character":{"data":"‚©±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1931() {
    tokenize(
        r##"{"description":"Bad named entity: epsi without a semi-colon","initialState":"Data","input":"&epsi","inputUtf16":[38,101,112,115,105],"output":[{"Character":{"data":"&epsi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1932() {
    tokenize(
        r##"{"description":"Named entity: epsi; with a semi-colon","initialState":"Data","input":"&epsi;","inputUtf16":[38,101,112,115,105,59],"output":[{"Character":{"data":"Œµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1933() {
    tokenize(
        r##"{"description":"Bad named entity: epsilon without a semi-colon","initialState":"Data","input":"&epsilon","inputUtf16":[38,101,112,115,105,108,111,110],"output":[{"Character":{"data":"&epsilon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1934() {
    tokenize(
        r##"{"description":"Named entity: epsilon; with a semi-colon","initialState":"Data","input":"&epsilon;","inputUtf16":[38,101,112,115,105,108,111,110,59],"output":[{"Character":{"data":"Œµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1935() {
    tokenize(
        r##"{"description":"Bad named entity: epsiv without a semi-colon","initialState":"Data","input":"&epsiv","inputUtf16":[38,101,112,115,105,118],"output":[{"Character":{"data":"&epsiv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1936() {
    tokenize(
        r##"{"description":"Named entity: epsiv; with a semi-colon","initialState":"Data","input":"&epsiv;","inputUtf16":[38,101,112,115,105,118,59],"output":[{"Character":{"data":"œµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1937() {
    tokenize(
        r##"{"description":"Bad named entity: eqcirc without a semi-colon","initialState":"Data","input":"&eqcirc","inputUtf16":[38,101,113,99,105,114,99],"output":[{"Character":{"data":"&eqcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1938() {
    tokenize(
        r##"{"description":"Named entity: eqcirc; with a semi-colon","initialState":"Data","input":"&eqcirc;","inputUtf16":[38,101,113,99,105,114,99,59],"output":[{"Character":{"data":"‚âñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1939() {
    tokenize(
        r##"{"description":"Bad named entity: eqcolon without a semi-colon","initialState":"Data","input":"&eqcolon","inputUtf16":[38,101,113,99,111,108,111,110],"output":[{"Character":{"data":"&eqcolon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1940() {
    tokenize(
        r##"{"description":"Named entity: eqcolon; with a semi-colon","initialState":"Data","input":"&eqcolon;","inputUtf16":[38,101,113,99,111,108,111,110,59],"output":[{"Character":{"data":"‚âï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1941() {
    tokenize(
        r##"{"description":"Bad named entity: eqsim without a semi-colon","initialState":"Data","input":"&eqsim","inputUtf16":[38,101,113,115,105,109],"output":[{"Character":{"data":"&eqsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1942() {
    tokenize(
        r##"{"description":"Named entity: eqsim; with a semi-colon","initialState":"Data","input":"&eqsim;","inputUtf16":[38,101,113,115,105,109,59],"output":[{"Character":{"data":"‚âÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1943() {
    tokenize(
        r##"{"description":"Bad named entity: eqslantgtr without a semi-colon","initialState":"Data","input":"&eqslantgtr","inputUtf16":[38,101,113,115,108,97,110,116,103,116,114],"output":[{"Character":{"data":"&eqslantgtr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1944() {
    tokenize(
        r##"{"description":"Named entity: eqslantgtr; with a semi-colon","initialState":"Data","input":"&eqslantgtr;","inputUtf16":[38,101,113,115,108,97,110,116,103,116,114,59],"output":[{"Character":{"data":"‚™ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1945() {
    tokenize(
        r##"{"description":"Bad named entity: eqslantless without a semi-colon","initialState":"Data","input":"&eqslantless","inputUtf16":[38,101,113,115,108,97,110,116,108,101,115,115],"output":[{"Character":{"data":"&eqslantless"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1946() {
    tokenize(
        r##"{"description":"Named entity: eqslantless; with a semi-colon","initialState":"Data","input":"&eqslantless;","inputUtf16":[38,101,113,115,108,97,110,116,108,101,115,115,59],"output":[{"Character":{"data":"‚™ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1947() {
    tokenize(
        r##"{"description":"Bad named entity: equals without a semi-colon","initialState":"Data","input":"&equals","inputUtf16":[38,101,113,117,97,108,115],"output":[{"Character":{"data":"&equals"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1948() {
    tokenize(
        r##"{"description":"Named entity: equals; with a semi-colon","initialState":"Data","input":"&equals;","inputUtf16":[38,101,113,117,97,108,115,59],"output":[{"Character":{"data":"="}}],"errors":[]}"##,
    );
}

#[test]
fn test_1949() {
    tokenize(
        r##"{"description":"Bad named entity: equest without a semi-colon","initialState":"Data","input":"&equest","inputUtf16":[38,101,113,117,101,115,116],"output":[{"Character":{"data":"&equest"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1950() {
    tokenize(
        r##"{"description":"Named entity: equest; with a semi-colon","initialState":"Data","input":"&equest;","inputUtf16":[38,101,113,117,101,115,116,59],"output":[{"Character":{"data":"‚âü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1951() {
    tokenize(
        r##"{"description":"Bad named entity: equiv without a semi-colon","initialState":"Data","input":"&equiv","inputUtf16":[38,101,113,117,105,118],"output":[{"Character":{"data":"&equiv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1952() {
    tokenize(
        r##"{"description":"Named entity: equiv; with a semi-colon","initialState":"Data","input":"&equiv;","inputUtf16":[38,101,113,117,105,118,59],"output":[{"Character":{"data":"‚â°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1953() {
    tokenize(
        r##"{"description":"Bad named entity: equivDD without a semi-colon","initialState":"Data","input":"&equivDD","inputUtf16":[38,101,113,117,105,118,68,68],"output":[{"Character":{"data":"&equivDD"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1954() {
    tokenize(
        r##"{"description":"Named entity: equivDD; with a semi-colon","initialState":"Data","input":"&equivDD;","inputUtf16":[38,101,113,117,105,118,68,68,59],"output":[{"Character":{"data":"‚©∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1955() {
    tokenize(
        r##"{"description":"Bad named entity: eqvparsl without a semi-colon","initialState":"Data","input":"&eqvparsl","inputUtf16":[38,101,113,118,112,97,114,115,108],"output":[{"Character":{"data":"&eqvparsl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1956() {
    tokenize(
        r##"{"description":"Named entity: eqvparsl; with a semi-colon","initialState":"Data","input":"&eqvparsl;","inputUtf16":[38,101,113,118,112,97,114,115,108,59],"output":[{"Character":{"data":"‚ß•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1957() {
    tokenize(
        r##"{"description":"Bad named entity: erDot without a semi-colon","initialState":"Data","input":"&erDot","inputUtf16":[38,101,114,68,111,116],"output":[{"Character":{"data":"&erDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1958() {
    tokenize(
        r##"{"description":"Named entity: erDot; with a semi-colon","initialState":"Data","input":"&erDot;","inputUtf16":[38,101,114,68,111,116,59],"output":[{"Character":{"data":"‚âì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1959() {
    tokenize(
        r##"{"description":"Bad named entity: erarr without a semi-colon","initialState":"Data","input":"&erarr","inputUtf16":[38,101,114,97,114,114],"output":[{"Character":{"data":"&erarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1960() {
    tokenize(
        r##"{"description":"Named entity: erarr; with a semi-colon","initialState":"Data","input":"&erarr;","inputUtf16":[38,101,114,97,114,114,59],"output":[{"Character":{"data":"‚•±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1961() {
    tokenize(
        r##"{"description":"Bad named entity: escr without a semi-colon","initialState":"Data","input":"&escr","inputUtf16":[38,101,115,99,114],"output":[{"Character":{"data":"&escr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1962() {
    tokenize(
        r##"{"description":"Named entity: escr; with a semi-colon","initialState":"Data","input":"&escr;","inputUtf16":[38,101,115,99,114,59],"output":[{"Character":{"data":"‚ÑØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1963() {
    tokenize(
        r##"{"description":"Bad named entity: esdot without a semi-colon","initialState":"Data","input":"&esdot","inputUtf16":[38,101,115,100,111,116],"output":[{"Character":{"data":"&esdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1964() {
    tokenize(
        r##"{"description":"Named entity: esdot; with a semi-colon","initialState":"Data","input":"&esdot;","inputUtf16":[38,101,115,100,111,116,59],"output":[{"Character":{"data":"‚âê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1965() {
    tokenize(
        r##"{"description":"Bad named entity: esim without a semi-colon","initialState":"Data","input":"&esim","inputUtf16":[38,101,115,105,109],"output":[{"Character":{"data":"&esim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1966() {
    tokenize(
        r##"{"description":"Named entity: esim; with a semi-colon","initialState":"Data","input":"&esim;","inputUtf16":[38,101,115,105,109,59],"output":[{"Character":{"data":"‚âÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1967() {
    tokenize(
        r##"{"description":"Bad named entity: eta without a semi-colon","initialState":"Data","input":"&eta","inputUtf16":[38,101,116,97],"output":[{"Character":{"data":"&eta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1968() {
    tokenize(
        r##"{"description":"Named entity: eta; with a semi-colon","initialState":"Data","input":"&eta;","inputUtf16":[38,101,116,97,59],"output":[{"Character":{"data":"Œ∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1969() {
    tokenize(
        r##"{"description":"Named entity: eth without a semi-colon","initialState":"Data","input":"&eth","inputUtf16":[38,101,116,104],"output":[{"Character":{"data":"√∞"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_1970() {
    tokenize(
        r##"{"description":"Named entity: eth; with a semi-colon","initialState":"Data","input":"&eth;","inputUtf16":[38,101,116,104,59],"output":[{"Character":{"data":"√∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1971() {
    tokenize(
        r##"{"description":"Named entity: euml without a semi-colon","initialState":"Data","input":"&euml","inputUtf16":[38,101,117,109,108],"output":[{"Character":{"data":"√´"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_1972() {
    tokenize(
        r##"{"description":"Named entity: euml; with a semi-colon","initialState":"Data","input":"&euml;","inputUtf16":[38,101,117,109,108,59],"output":[{"Character":{"data":"√´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1973() {
    tokenize(
        r##"{"description":"Bad named entity: euro without a semi-colon","initialState":"Data","input":"&euro","inputUtf16":[38,101,117,114,111],"output":[{"Character":{"data":"&euro"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1974() {
    tokenize(
        r##"{"description":"Named entity: euro; with a semi-colon","initialState":"Data","input":"&euro;","inputUtf16":[38,101,117,114,111,59],"output":[{"Character":{"data":"‚Ç¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1975() {
    tokenize(
        r##"{"description":"Bad named entity: excl without a semi-colon","initialState":"Data","input":"&excl","inputUtf16":[38,101,120,99,108],"output":[{"Character":{"data":"&excl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1976() {
    tokenize(
        r##"{"description":"Named entity: excl; with a semi-colon","initialState":"Data","input":"&excl;","inputUtf16":[38,101,120,99,108,59],"output":[{"Character":{"data":"!"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1977() {
    tokenize(
        r##"{"description":"Bad named entity: exist without a semi-colon","initialState":"Data","input":"&exist","inputUtf16":[38,101,120,105,115,116],"output":[{"Character":{"data":"&exist"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1978() {
    tokenize(
        r##"{"description":"Named entity: exist; with a semi-colon","initialState":"Data","input":"&exist;","inputUtf16":[38,101,120,105,115,116,59],"output":[{"Character":{"data":"‚àÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1979() {
    tokenize(
        r##"{"description":"Bad named entity: expectation without a semi-colon","initialState":"Data","input":"&expectation","inputUtf16":[38,101,120,112,101,99,116,97,116,105,111,110],"output":[{"Character":{"data":"&expectation"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1980() {
    tokenize(
        r##"{"description":"Named entity: expectation; with a semi-colon","initialState":"Data","input":"&expectation;","inputUtf16":[38,101,120,112,101,99,116,97,116,105,111,110,59],"output":[{"Character":{"data":"‚Ñ∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1981() {
    tokenize(
        r##"{"description":"Bad named entity: exponentiale without a semi-colon","initialState":"Data","input":"&exponentiale","inputUtf16":[38,101,120,112,111,110,101,110,116,105,97,108,101],"output":[{"Character":{"data":"&exponentiale"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1982() {
    tokenize(
        r##"{"description":"Named entity: exponentiale; with a semi-colon","initialState":"Data","input":"&exponentiale;","inputUtf16":[38,101,120,112,111,110,101,110,116,105,97,108,101,59],"output":[{"Character":{"data":"‚Öá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1983() {
    tokenize(
        r##"{"description":"Bad named entity: fallingdotseq without a semi-colon","initialState":"Data","input":"&fallingdotseq","inputUtf16":[38,102,97,108,108,105,110,103,100,111,116,115,101,113],"output":[{"Character":{"data":"&fallingdotseq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1984() {
    tokenize(
        r##"{"description":"Named entity: fallingdotseq; with a semi-colon","initialState":"Data","input":"&fallingdotseq;","inputUtf16":[38,102,97,108,108,105,110,103,100,111,116,115,101,113,59],"output":[{"Character":{"data":"‚âí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1985() {
    tokenize(
        r##"{"description":"Bad named entity: fcy without a semi-colon","initialState":"Data","input":"&fcy","inputUtf16":[38,102,99,121],"output":[{"Character":{"data":"&fcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1986() {
    tokenize(
        r##"{"description":"Named entity: fcy; with a semi-colon","initialState":"Data","input":"&fcy;","inputUtf16":[38,102,99,121,59],"output":[{"Character":{"data":"—Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1987() {
    tokenize(
        r##"{"description":"Bad named entity: female without a semi-colon","initialState":"Data","input":"&female","inputUtf16":[38,102,101,109,97,108,101],"output":[{"Character":{"data":"&female"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1988() {
    tokenize(
        r##"{"description":"Named entity: female; with a semi-colon","initialState":"Data","input":"&female;","inputUtf16":[38,102,101,109,97,108,101,59],"output":[{"Character":{"data":"‚ôÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1989() {
    tokenize(
        r##"{"description":"Bad named entity: ffilig without a semi-colon","initialState":"Data","input":"&ffilig","inputUtf16":[38,102,102,105,108,105,103],"output":[{"Character":{"data":"&ffilig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1990() {
    tokenize(
        r##"{"description":"Named entity: ffilig; with a semi-colon","initialState":"Data","input":"&ffilig;","inputUtf16":[38,102,102,105,108,105,103,59],"output":[{"Character":{"data":"Ô¨É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1991() {
    tokenize(
        r##"{"description":"Bad named entity: fflig without a semi-colon","initialState":"Data","input":"&fflig","inputUtf16":[38,102,102,108,105,103],"output":[{"Character":{"data":"&fflig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1992() {
    tokenize(
        r##"{"description":"Named entity: fflig; with a semi-colon","initialState":"Data","input":"&fflig;","inputUtf16":[38,102,102,108,105,103,59],"output":[{"Character":{"data":"Ô¨Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1993() {
    tokenize(
        r##"{"description":"Bad named entity: ffllig without a semi-colon","initialState":"Data","input":"&ffllig","inputUtf16":[38,102,102,108,108,105,103],"output":[{"Character":{"data":"&ffllig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1994() {
    tokenize(
        r##"{"description":"Named entity: ffllig; with a semi-colon","initialState":"Data","input":"&ffllig;","inputUtf16":[38,102,102,108,108,105,103,59],"output":[{"Character":{"data":"Ô¨Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1995() {
    tokenize(
        r##"{"description":"Bad named entity: ffr without a semi-colon","initialState":"Data","input":"&ffr","inputUtf16":[38,102,102,114],"output":[{"Character":{"data":"&ffr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1996() {
    tokenize(
        r##"{"description":"Named entity: ffr; with a semi-colon","initialState":"Data","input":"&ffr;","inputUtf16":[38,102,102,114,59],"output":[{"Character":{"data":"ùî£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1997() {
    tokenize(
        r##"{"description":"Bad named entity: filig without a semi-colon","initialState":"Data","input":"&filig","inputUtf16":[38,102,105,108,105,103],"output":[{"Character":{"data":"&filig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1998() {
    tokenize(
        r##"{"description":"Named entity: filig; with a semi-colon","initialState":"Data","input":"&filig;","inputUtf16":[38,102,105,108,105,103,59],"output":[{"Character":{"data":"Ô¨Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_1999() {
    tokenize(
        r##"{"description":"Bad named entity: fjlig without a semi-colon","initialState":"Data","input":"&fjlig","inputUtf16":[38,102,106,108,105,103],"output":[{"Character":{"data":"&fjlig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2000() {
    tokenize(
        r##"{"description":"Named entity: fjlig; with a semi-colon","initialState":"Data","input":"&fjlig;","inputUtf16":[38,102,106,108,105,103,59],"output":[{"Character":{"data":"fj"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2001() {
    tokenize(
        r##"{"description":"Bad named entity: flat without a semi-colon","initialState":"Data","input":"&flat","inputUtf16":[38,102,108,97,116],"output":[{"Character":{"data":"&flat"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2002() {
    tokenize(
        r##"{"description":"Named entity: flat; with a semi-colon","initialState":"Data","input":"&flat;","inputUtf16":[38,102,108,97,116,59],"output":[{"Character":{"data":"‚ô≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2003() {
    tokenize(
        r##"{"description":"Bad named entity: fllig without a semi-colon","initialState":"Data","input":"&fllig","inputUtf16":[38,102,108,108,105,103],"output":[{"Character":{"data":"&fllig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2004() {
    tokenize(
        r##"{"description":"Named entity: fllig; with a semi-colon","initialState":"Data","input":"&fllig;","inputUtf16":[38,102,108,108,105,103,59],"output":[{"Character":{"data":"Ô¨Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2005() {
    tokenize(
        r##"{"description":"Bad named entity: fltns without a semi-colon","initialState":"Data","input":"&fltns","inputUtf16":[38,102,108,116,110,115],"output":[{"Character":{"data":"&fltns"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2006() {
    tokenize(
        r##"{"description":"Named entity: fltns; with a semi-colon","initialState":"Data","input":"&fltns;","inputUtf16":[38,102,108,116,110,115,59],"output":[{"Character":{"data":"‚ñ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2007() {
    tokenize(
        r##"{"description":"Bad named entity: fnof without a semi-colon","initialState":"Data","input":"&fnof","inputUtf16":[38,102,110,111,102],"output":[{"Character":{"data":"&fnof"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2008() {
    tokenize(
        r##"{"description":"Named entity: fnof; with a semi-colon","initialState":"Data","input":"&fnof;","inputUtf16":[38,102,110,111,102,59],"output":[{"Character":{"data":"∆í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2009() {
    tokenize(
        r##"{"description":"Bad named entity: fopf without a semi-colon","initialState":"Data","input":"&fopf","inputUtf16":[38,102,111,112,102],"output":[{"Character":{"data":"&fopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2010() {
    tokenize(
        r##"{"description":"Named entity: fopf; with a semi-colon","initialState":"Data","input":"&fopf;","inputUtf16":[38,102,111,112,102,59],"output":[{"Character":{"data":"ùïó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2011() {
    tokenize(
        r##"{"description":"Bad named entity: forall without a semi-colon","initialState":"Data","input":"&forall","inputUtf16":[38,102,111,114,97,108,108],"output":[{"Character":{"data":"&forall"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2012() {
    tokenize(
        r##"{"description":"Named entity: forall; with a semi-colon","initialState":"Data","input":"&forall;","inputUtf16":[38,102,111,114,97,108,108,59],"output":[{"Character":{"data":"‚àÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2013() {
    tokenize(
        r##"{"description":"Bad named entity: fork without a semi-colon","initialState":"Data","input":"&fork","inputUtf16":[38,102,111,114,107],"output":[{"Character":{"data":"&fork"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2014() {
    tokenize(
        r##"{"description":"Named entity: fork; with a semi-colon","initialState":"Data","input":"&fork;","inputUtf16":[38,102,111,114,107,59],"output":[{"Character":{"data":"‚ãî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2015() {
    tokenize(
        r##"{"description":"Bad named entity: forkv without a semi-colon","initialState":"Data","input":"&forkv","inputUtf16":[38,102,111,114,107,118],"output":[{"Character":{"data":"&forkv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2016() {
    tokenize(
        r##"{"description":"Named entity: forkv; with a semi-colon","initialState":"Data","input":"&forkv;","inputUtf16":[38,102,111,114,107,118,59],"output":[{"Character":{"data":"‚´ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2017() {
    tokenize(
        r##"{"description":"Bad named entity: fpartint without a semi-colon","initialState":"Data","input":"&fpartint","inputUtf16":[38,102,112,97,114,116,105,110,116],"output":[{"Character":{"data":"&fpartint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2018() {
    tokenize(
        r##"{"description":"Named entity: fpartint; with a semi-colon","initialState":"Data","input":"&fpartint;","inputUtf16":[38,102,112,97,114,116,105,110,116,59],"output":[{"Character":{"data":"‚®ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2019() {
    tokenize(
        r##"{"description":"Named entity: frac12 without a semi-colon","initialState":"Data","input":"&frac12","inputUtf16":[38,102,114,97,99,49,50],"output":[{"Character":{"data":"¬Ω"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2020() {
    tokenize(
        r##"{"description":"Named entity: frac12; with a semi-colon","initialState":"Data","input":"&frac12;","inputUtf16":[38,102,114,97,99,49,50,59],"output":[{"Character":{"data":"¬Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2021() {
    tokenize(
        r##"{"description":"Bad named entity: frac13 without a semi-colon","initialState":"Data","input":"&frac13","inputUtf16":[38,102,114,97,99,49,51],"output":[{"Character":{"data":"&frac13"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2022() {
    tokenize(
        r##"{"description":"Named entity: frac13; with a semi-colon","initialState":"Data","input":"&frac13;","inputUtf16":[38,102,114,97,99,49,51,59],"output":[{"Character":{"data":"‚Öì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2023() {
    tokenize(
        r##"{"description":"Named entity: frac14 without a semi-colon","initialState":"Data","input":"&frac14","inputUtf16":[38,102,114,97,99,49,52],"output":[{"Character":{"data":"¬º"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2024() {
    tokenize(
        r##"{"description":"Named entity: frac14; with a semi-colon","initialState":"Data","input":"&frac14;","inputUtf16":[38,102,114,97,99,49,52,59],"output":[{"Character":{"data":"¬º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2025() {
    tokenize(
        r##"{"description":"Bad named entity: frac15 without a semi-colon","initialState":"Data","input":"&frac15","inputUtf16":[38,102,114,97,99,49,53],"output":[{"Character":{"data":"&frac15"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2026() {
    tokenize(
        r##"{"description":"Named entity: frac15; with a semi-colon","initialState":"Data","input":"&frac15;","inputUtf16":[38,102,114,97,99,49,53,59],"output":[{"Character":{"data":"‚Öï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2027() {
    tokenize(
        r##"{"description":"Bad named entity: frac16 without a semi-colon","initialState":"Data","input":"&frac16","inputUtf16":[38,102,114,97,99,49,54],"output":[{"Character":{"data":"&frac16"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2028() {
    tokenize(
        r##"{"description":"Named entity: frac16; with a semi-colon","initialState":"Data","input":"&frac16;","inputUtf16":[38,102,114,97,99,49,54,59],"output":[{"Character":{"data":"‚Öô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2029() {
    tokenize(
        r##"{"description":"Bad named entity: frac18 without a semi-colon","initialState":"Data","input":"&frac18","inputUtf16":[38,102,114,97,99,49,56],"output":[{"Character":{"data":"&frac18"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2030() {
    tokenize(
        r##"{"description":"Named entity: frac18; with a semi-colon","initialState":"Data","input":"&frac18;","inputUtf16":[38,102,114,97,99,49,56,59],"output":[{"Character":{"data":"‚Öõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2031() {
    tokenize(
        r##"{"description":"Bad named entity: frac23 without a semi-colon","initialState":"Data","input":"&frac23","inputUtf16":[38,102,114,97,99,50,51],"output":[{"Character":{"data":"&frac23"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2032() {
    tokenize(
        r##"{"description":"Named entity: frac23; with a semi-colon","initialState":"Data","input":"&frac23;","inputUtf16":[38,102,114,97,99,50,51,59],"output":[{"Character":{"data":"‚Öî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2033() {
    tokenize(
        r##"{"description":"Bad named entity: frac25 without a semi-colon","initialState":"Data","input":"&frac25","inputUtf16":[38,102,114,97,99,50,53],"output":[{"Character":{"data":"&frac25"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2034() {
    tokenize(
        r##"{"description":"Named entity: frac25; with a semi-colon","initialState":"Data","input":"&frac25;","inputUtf16":[38,102,114,97,99,50,53,59],"output":[{"Character":{"data":"‚Öñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2035() {
    tokenize(
        r##"{"description":"Named entity: frac34 without a semi-colon","initialState":"Data","input":"&frac34","inputUtf16":[38,102,114,97,99,51,52],"output":[{"Character":{"data":"¬æ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2036() {
    tokenize(
        r##"{"description":"Named entity: frac34; with a semi-colon","initialState":"Data","input":"&frac34;","inputUtf16":[38,102,114,97,99,51,52,59],"output":[{"Character":{"data":"¬æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2037() {
    tokenize(
        r##"{"description":"Bad named entity: frac35 without a semi-colon","initialState":"Data","input":"&frac35","inputUtf16":[38,102,114,97,99,51,53],"output":[{"Character":{"data":"&frac35"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2038() {
    tokenize(
        r##"{"description":"Named entity: frac35; with a semi-colon","initialState":"Data","input":"&frac35;","inputUtf16":[38,102,114,97,99,51,53,59],"output":[{"Character":{"data":"‚Öó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2039() {
    tokenize(
        r##"{"description":"Bad named entity: frac38 without a semi-colon","initialState":"Data","input":"&frac38","inputUtf16":[38,102,114,97,99,51,56],"output":[{"Character":{"data":"&frac38"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2040() {
    tokenize(
        r##"{"description":"Named entity: frac38; with a semi-colon","initialState":"Data","input":"&frac38;","inputUtf16":[38,102,114,97,99,51,56,59],"output":[{"Character":{"data":"‚Öú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2041() {
    tokenize(
        r##"{"description":"Bad named entity: frac45 without a semi-colon","initialState":"Data","input":"&frac45","inputUtf16":[38,102,114,97,99,52,53],"output":[{"Character":{"data":"&frac45"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2042() {
    tokenize(
        r##"{"description":"Named entity: frac45; with a semi-colon","initialState":"Data","input":"&frac45;","inputUtf16":[38,102,114,97,99,52,53,59],"output":[{"Character":{"data":"‚Öò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2043() {
    tokenize(
        r##"{"description":"Bad named entity: frac56 without a semi-colon","initialState":"Data","input":"&frac56","inputUtf16":[38,102,114,97,99,53,54],"output":[{"Character":{"data":"&frac56"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2044() {
    tokenize(
        r##"{"description":"Named entity: frac56; with a semi-colon","initialState":"Data","input":"&frac56;","inputUtf16":[38,102,114,97,99,53,54,59],"output":[{"Character":{"data":"‚Öö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2045() {
    tokenize(
        r##"{"description":"Bad named entity: frac58 without a semi-colon","initialState":"Data","input":"&frac58","inputUtf16":[38,102,114,97,99,53,56],"output":[{"Character":{"data":"&frac58"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2046() {
    tokenize(
        r##"{"description":"Named entity: frac58; with a semi-colon","initialState":"Data","input":"&frac58;","inputUtf16":[38,102,114,97,99,53,56,59],"output":[{"Character":{"data":"‚Öù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2047() {
    tokenize(
        r##"{"description":"Bad named entity: frac78 without a semi-colon","initialState":"Data","input":"&frac78","inputUtf16":[38,102,114,97,99,55,56],"output":[{"Character":{"data":"&frac78"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2048() {
    tokenize(
        r##"{"description":"Named entity: frac78; with a semi-colon","initialState":"Data","input":"&frac78;","inputUtf16":[38,102,114,97,99,55,56,59],"output":[{"Character":{"data":"‚Öû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2049() {
    tokenize(
        r##"{"description":"Bad named entity: frasl without a semi-colon","initialState":"Data","input":"&frasl","inputUtf16":[38,102,114,97,115,108],"output":[{"Character":{"data":"&frasl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2050() {
    tokenize(
        r##"{"description":"Named entity: frasl; with a semi-colon","initialState":"Data","input":"&frasl;","inputUtf16":[38,102,114,97,115,108,59],"output":[{"Character":{"data":"‚ÅÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2051() {
    tokenize(
        r##"{"description":"Bad named entity: frown without a semi-colon","initialState":"Data","input":"&frown","inputUtf16":[38,102,114,111,119,110],"output":[{"Character":{"data":"&frown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2052() {
    tokenize(
        r##"{"description":"Named entity: frown; with a semi-colon","initialState":"Data","input":"&frown;","inputUtf16":[38,102,114,111,119,110,59],"output":[{"Character":{"data":"‚å¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2053() {
    tokenize(
        r##"{"description":"Bad named entity: fscr without a semi-colon","initialState":"Data","input":"&fscr","inputUtf16":[38,102,115,99,114],"output":[{"Character":{"data":"&fscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2054() {
    tokenize(
        r##"{"description":"Named entity: fscr; with a semi-colon","initialState":"Data","input":"&fscr;","inputUtf16":[38,102,115,99,114,59],"output":[{"Character":{"data":"ùíª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2055() {
    tokenize(
        r##"{"description":"Bad named entity: gE without a semi-colon","initialState":"Data","input":"&gE","inputUtf16":[38,103,69],"output":[{"Character":{"data":"&gE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2056() {
    tokenize(
        r##"{"description":"Named entity: gE; with a semi-colon","initialState":"Data","input":"&gE;","inputUtf16":[38,103,69,59],"output":[{"Character":{"data":"‚âß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2057() {
    tokenize(
        r##"{"description":"Bad named entity: gEl without a semi-colon","initialState":"Data","input":"&gEl","inputUtf16":[38,103,69,108],"output":[{"Character":{"data":"&gEl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2058() {
    tokenize(
        r##"{"description":"Named entity: gEl; with a semi-colon","initialState":"Data","input":"&gEl;","inputUtf16":[38,103,69,108,59],"output":[{"Character":{"data":"‚™å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2059() {
    tokenize(
        r##"{"description":"Bad named entity: gacute without a semi-colon","initialState":"Data","input":"&gacute","inputUtf16":[38,103,97,99,117,116,101],"output":[{"Character":{"data":"&gacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2060() {
    tokenize(
        r##"{"description":"Named entity: gacute; with a semi-colon","initialState":"Data","input":"&gacute;","inputUtf16":[38,103,97,99,117,116,101,59],"output":[{"Character":{"data":"«µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2061() {
    tokenize(
        r##"{"description":"Bad named entity: gamma without a semi-colon","initialState":"Data","input":"&gamma","inputUtf16":[38,103,97,109,109,97],"output":[{"Character":{"data":"&gamma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2062() {
    tokenize(
        r##"{"description":"Named entity: gamma; with a semi-colon","initialState":"Data","input":"&gamma;","inputUtf16":[38,103,97,109,109,97,59],"output":[{"Character":{"data":"Œ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2063() {
    tokenize(
        r##"{"description":"Bad named entity: gammad without a semi-colon","initialState":"Data","input":"&gammad","inputUtf16":[38,103,97,109,109,97,100],"output":[{"Character":{"data":"&gammad"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2064() {
    tokenize(
        r##"{"description":"Named entity: gammad; with a semi-colon","initialState":"Data","input":"&gammad;","inputUtf16":[38,103,97,109,109,97,100,59],"output":[{"Character":{"data":"œù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2065() {
    tokenize(
        r##"{"description":"Bad named entity: gap without a semi-colon","initialState":"Data","input":"&gap","inputUtf16":[38,103,97,112],"output":[{"Character":{"data":"&gap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2066() {
    tokenize(
        r##"{"description":"Named entity: gap; with a semi-colon","initialState":"Data","input":"&gap;","inputUtf16":[38,103,97,112,59],"output":[{"Character":{"data":"‚™Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2067() {
    tokenize(
        r##"{"description":"Bad named entity: gbreve without a semi-colon","initialState":"Data","input":"&gbreve","inputUtf16":[38,103,98,114,101,118,101],"output":[{"Character":{"data":"&gbreve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2068() {
    tokenize(
        r##"{"description":"Named entity: gbreve; with a semi-colon","initialState":"Data","input":"&gbreve;","inputUtf16":[38,103,98,114,101,118,101,59],"output":[{"Character":{"data":"ƒü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2069() {
    tokenize(
        r##"{"description":"Bad named entity: gcirc without a semi-colon","initialState":"Data","input":"&gcirc","inputUtf16":[38,103,99,105,114,99],"output":[{"Character":{"data":"&gcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2070() {
    tokenize(
        r##"{"description":"Named entity: gcirc; with a semi-colon","initialState":"Data","input":"&gcirc;","inputUtf16":[38,103,99,105,114,99,59],"output":[{"Character":{"data":"ƒù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2071() {
    tokenize(
        r##"{"description":"Bad named entity: gcy without a semi-colon","initialState":"Data","input":"&gcy","inputUtf16":[38,103,99,121],"output":[{"Character":{"data":"&gcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2072() {
    tokenize(
        r##"{"description":"Named entity: gcy; with a semi-colon","initialState":"Data","input":"&gcy;","inputUtf16":[38,103,99,121,59],"output":[{"Character":{"data":"–≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2073() {
    tokenize(
        r##"{"description":"Bad named entity: gdot without a semi-colon","initialState":"Data","input":"&gdot","inputUtf16":[38,103,100,111,116],"output":[{"Character":{"data":"&gdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2074() {
    tokenize(
        r##"{"description":"Named entity: gdot; with a semi-colon","initialState":"Data","input":"&gdot;","inputUtf16":[38,103,100,111,116,59],"output":[{"Character":{"data":"ƒ°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2075() {
    tokenize(
        r##"{"description":"Bad named entity: ge without a semi-colon","initialState":"Data","input":"&ge","inputUtf16":[38,103,101],"output":[{"Character":{"data":"&ge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2076() {
    tokenize(
        r##"{"description":"Named entity: ge; with a semi-colon","initialState":"Data","input":"&ge;","inputUtf16":[38,103,101,59],"output":[{"Character":{"data":"‚â•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2077() {
    tokenize(
        r##"{"description":"Bad named entity: gel without a semi-colon","initialState":"Data","input":"&gel","inputUtf16":[38,103,101,108],"output":[{"Character":{"data":"&gel"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2078() {
    tokenize(
        r##"{"description":"Named entity: gel; with a semi-colon","initialState":"Data","input":"&gel;","inputUtf16":[38,103,101,108,59],"output":[{"Character":{"data":"‚ãõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2079() {
    tokenize(
        r##"{"description":"Bad named entity: geq without a semi-colon","initialState":"Data","input":"&geq","inputUtf16":[38,103,101,113],"output":[{"Character":{"data":"&geq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2080() {
    tokenize(
        r##"{"description":"Named entity: geq; with a semi-colon","initialState":"Data","input":"&geq;","inputUtf16":[38,103,101,113,59],"output":[{"Character":{"data":"‚â•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2081() {
    tokenize(
        r##"{"description":"Bad named entity: geqq without a semi-colon","initialState":"Data","input":"&geqq","inputUtf16":[38,103,101,113,113],"output":[{"Character":{"data":"&geqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2082() {
    tokenize(
        r##"{"description":"Named entity: geqq; with a semi-colon","initialState":"Data","input":"&geqq;","inputUtf16":[38,103,101,113,113,59],"output":[{"Character":{"data":"‚âß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2083() {
    tokenize(
        r##"{"description":"Bad named entity: geqslant without a semi-colon","initialState":"Data","input":"&geqslant","inputUtf16":[38,103,101,113,115,108,97,110,116],"output":[{"Character":{"data":"&geqslant"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2084() {
    tokenize(
        r##"{"description":"Named entity: geqslant; with a semi-colon","initialState":"Data","input":"&geqslant;","inputUtf16":[38,103,101,113,115,108,97,110,116,59],"output":[{"Character":{"data":"‚©æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2085() {
    tokenize(
        r##"{"description":"Bad named entity: ges without a semi-colon","initialState":"Data","input":"&ges","inputUtf16":[38,103,101,115],"output":[{"Character":{"data":"&ges"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2086() {
    tokenize(
        r##"{"description":"Named entity: ges; with a semi-colon","initialState":"Data","input":"&ges;","inputUtf16":[38,103,101,115,59],"output":[{"Character":{"data":"‚©æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2087() {
    tokenize(
        r##"{"description":"Bad named entity: gescc without a semi-colon","initialState":"Data","input":"&gescc","inputUtf16":[38,103,101,115,99,99],"output":[{"Character":{"data":"&gescc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2088() {
    tokenize(
        r##"{"description":"Named entity: gescc; with a semi-colon","initialState":"Data","input":"&gescc;","inputUtf16":[38,103,101,115,99,99,59],"output":[{"Character":{"data":"‚™©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2089() {
    tokenize(
        r##"{"description":"Bad named entity: gesdot without a semi-colon","initialState":"Data","input":"&gesdot","inputUtf16":[38,103,101,115,100,111,116],"output":[{"Character":{"data":"&gesdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2090() {
    tokenize(
        r##"{"description":"Named entity: gesdot; with a semi-colon","initialState":"Data","input":"&gesdot;","inputUtf16":[38,103,101,115,100,111,116,59],"output":[{"Character":{"data":"‚™Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2091() {
    tokenize(
        r##"{"description":"Bad named entity: gesdoto without a semi-colon","initialState":"Data","input":"&gesdoto","inputUtf16":[38,103,101,115,100,111,116,111],"output":[{"Character":{"data":"&gesdoto"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2092() {
    tokenize(
        r##"{"description":"Named entity: gesdoto; with a semi-colon","initialState":"Data","input":"&gesdoto;","inputUtf16":[38,103,101,115,100,111,116,111,59],"output":[{"Character":{"data":"‚™Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2093() {
    tokenize(
        r##"{"description":"Bad named entity: gesdotol without a semi-colon","initialState":"Data","input":"&gesdotol","inputUtf16":[38,103,101,115,100,111,116,111,108],"output":[{"Character":{"data":"&gesdotol"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2094() {
    tokenize(
        r##"{"description":"Named entity: gesdotol; with a semi-colon","initialState":"Data","input":"&gesdotol;","inputUtf16":[38,103,101,115,100,111,116,111,108,59],"output":[{"Character":{"data":"‚™Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2095() {
    tokenize(
        r##"{"description":"Bad named entity: gesl without a semi-colon","initialState":"Data","input":"&gesl","inputUtf16":[38,103,101,115,108],"output":[{"Character":{"data":"&gesl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2096() {
    tokenize(
        r##"{"description":"Named entity: gesl; with a semi-colon","initialState":"Data","input":"&gesl;","inputUtf16":[38,103,101,115,108,59],"output":[{"Character":{"data":"‚ãõÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2097() {
    tokenize(
        r##"{"description":"Bad named entity: gesles without a semi-colon","initialState":"Data","input":"&gesles","inputUtf16":[38,103,101,115,108,101,115],"output":[{"Character":{"data":"&gesles"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2098() {
    tokenize(
        r##"{"description":"Named entity: gesles; with a semi-colon","initialState":"Data","input":"&gesles;","inputUtf16":[38,103,101,115,108,101,115,59],"output":[{"Character":{"data":"‚™î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2099() {
    tokenize(
        r##"{"description":"Bad named entity: gfr without a semi-colon","initialState":"Data","input":"&gfr","inputUtf16":[38,103,102,114],"output":[{"Character":{"data":"&gfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2100() {
    tokenize(
        r##"{"description":"Named entity: gfr; with a semi-colon","initialState":"Data","input":"&gfr;","inputUtf16":[38,103,102,114,59],"output":[{"Character":{"data":"ùî§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2101() {
    tokenize(
        r##"{"description":"Bad named entity: gg without a semi-colon","initialState":"Data","input":"&gg","inputUtf16":[38,103,103],"output":[{"Character":{"data":"&gg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2102() {
    tokenize(
        r##"{"description":"Named entity: gg; with a semi-colon","initialState":"Data","input":"&gg;","inputUtf16":[38,103,103,59],"output":[{"Character":{"data":"‚â´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2103() {
    tokenize(
        r##"{"description":"Bad named entity: ggg without a semi-colon","initialState":"Data","input":"&ggg","inputUtf16":[38,103,103,103],"output":[{"Character":{"data":"&ggg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2104() {
    tokenize(
        r##"{"description":"Named entity: ggg; with a semi-colon","initialState":"Data","input":"&ggg;","inputUtf16":[38,103,103,103,59],"output":[{"Character":{"data":"‚ãô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2105() {
    tokenize(
        r##"{"description":"Bad named entity: gimel without a semi-colon","initialState":"Data","input":"&gimel","inputUtf16":[38,103,105,109,101,108],"output":[{"Character":{"data":"&gimel"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2106() {
    tokenize(
        r##"{"description":"Named entity: gimel; with a semi-colon","initialState":"Data","input":"&gimel;","inputUtf16":[38,103,105,109,101,108,59],"output":[{"Character":{"data":"‚Ñ∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2107() {
    tokenize(
        r##"{"description":"Bad named entity: gjcy without a semi-colon","initialState":"Data","input":"&gjcy","inputUtf16":[38,103,106,99,121],"output":[{"Character":{"data":"&gjcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2108() {
    tokenize(
        r##"{"description":"Named entity: gjcy; with a semi-colon","initialState":"Data","input":"&gjcy;","inputUtf16":[38,103,106,99,121,59],"output":[{"Character":{"data":"—ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2109() {
    tokenize(
        r##"{"description":"Bad named entity: gl without a semi-colon","initialState":"Data","input":"&gl","inputUtf16":[38,103,108],"output":[{"Character":{"data":"&gl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2110() {
    tokenize(
        r##"{"description":"Named entity: gl; with a semi-colon","initialState":"Data","input":"&gl;","inputUtf16":[38,103,108,59],"output":[{"Character":{"data":"‚â∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2111() {
    tokenize(
        r##"{"description":"Bad named entity: glE without a semi-colon","initialState":"Data","input":"&glE","inputUtf16":[38,103,108,69],"output":[{"Character":{"data":"&glE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2112() {
    tokenize(
        r##"{"description":"Named entity: glE; with a semi-colon","initialState":"Data","input":"&glE;","inputUtf16":[38,103,108,69,59],"output":[{"Character":{"data":"‚™í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2113() {
    tokenize(
        r##"{"description":"Bad named entity: gla without a semi-colon","initialState":"Data","input":"&gla","inputUtf16":[38,103,108,97],"output":[{"Character":{"data":"&gla"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2114() {
    tokenize(
        r##"{"description":"Named entity: gla; with a semi-colon","initialState":"Data","input":"&gla;","inputUtf16":[38,103,108,97,59],"output":[{"Character":{"data":"‚™•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2115() {
    tokenize(
        r##"{"description":"Bad named entity: glj without a semi-colon","initialState":"Data","input":"&glj","inputUtf16":[38,103,108,106],"output":[{"Character":{"data":"&glj"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2116() {
    tokenize(
        r##"{"description":"Named entity: glj; with a semi-colon","initialState":"Data","input":"&glj;","inputUtf16":[38,103,108,106,59],"output":[{"Character":{"data":"‚™§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2117() {
    tokenize(
        r##"{"description":"Bad named entity: gnE without a semi-colon","initialState":"Data","input":"&gnE","inputUtf16":[38,103,110,69],"output":[{"Character":{"data":"&gnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2118() {
    tokenize(
        r##"{"description":"Named entity: gnE; with a semi-colon","initialState":"Data","input":"&gnE;","inputUtf16":[38,103,110,69,59],"output":[{"Character":{"data":"‚â©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2119() {
    tokenize(
        r##"{"description":"Bad named entity: gnap without a semi-colon","initialState":"Data","input":"&gnap","inputUtf16":[38,103,110,97,112],"output":[{"Character":{"data":"&gnap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2120() {
    tokenize(
        r##"{"description":"Named entity: gnap; with a semi-colon","initialState":"Data","input":"&gnap;","inputUtf16":[38,103,110,97,112,59],"output":[{"Character":{"data":"‚™ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2121() {
    tokenize(
        r##"{"description":"Bad named entity: gnapprox without a semi-colon","initialState":"Data","input":"&gnapprox","inputUtf16":[38,103,110,97,112,112,114,111,120],"output":[{"Character":{"data":"&gnapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2122() {
    tokenize(
        r##"{"description":"Named entity: gnapprox; with a semi-colon","initialState":"Data","input":"&gnapprox;","inputUtf16":[38,103,110,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2123() {
    tokenize(
        r##"{"description":"Bad named entity: gne without a semi-colon","initialState":"Data","input":"&gne","inputUtf16":[38,103,110,101],"output":[{"Character":{"data":"&gne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2124() {
    tokenize(
        r##"{"description":"Named entity: gne; with a semi-colon","initialState":"Data","input":"&gne;","inputUtf16":[38,103,110,101,59],"output":[{"Character":{"data":"‚™à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2125() {
    tokenize(
        r##"{"description":"Bad named entity: gneq without a semi-colon","initialState":"Data","input":"&gneq","inputUtf16":[38,103,110,101,113],"output":[{"Character":{"data":"&gneq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2126() {
    tokenize(
        r##"{"description":"Named entity: gneq; with a semi-colon","initialState":"Data","input":"&gneq;","inputUtf16":[38,103,110,101,113,59],"output":[{"Character":{"data":"‚™à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2127() {
    tokenize(
        r##"{"description":"Bad named entity: gneqq without a semi-colon","initialState":"Data","input":"&gneqq","inputUtf16":[38,103,110,101,113,113],"output":[{"Character":{"data":"&gneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2128() {
    tokenize(
        r##"{"description":"Named entity: gneqq; with a semi-colon","initialState":"Data","input":"&gneqq;","inputUtf16":[38,103,110,101,113,113,59],"output":[{"Character":{"data":"‚â©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2129() {
    tokenize(
        r##"{"description":"Bad named entity: gnsim without a semi-colon","initialState":"Data","input":"&gnsim","inputUtf16":[38,103,110,115,105,109],"output":[{"Character":{"data":"&gnsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2130() {
    tokenize(
        r##"{"description":"Named entity: gnsim; with a semi-colon","initialState":"Data","input":"&gnsim;","inputUtf16":[38,103,110,115,105,109,59],"output":[{"Character":{"data":"‚ãß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2131() {
    tokenize(
        r##"{"description":"Bad named entity: gopf without a semi-colon","initialState":"Data","input":"&gopf","inputUtf16":[38,103,111,112,102],"output":[{"Character":{"data":"&gopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2132() {
    tokenize(
        r##"{"description":"Named entity: gopf; with a semi-colon","initialState":"Data","input":"&gopf;","inputUtf16":[38,103,111,112,102,59],"output":[{"Character":{"data":"ùïò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2133() {
    tokenize(
        r##"{"description":"Bad named entity: grave without a semi-colon","initialState":"Data","input":"&grave","inputUtf16":[38,103,114,97,118,101],"output":[{"Character":{"data":"&grave"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2134() {
    tokenize(
        r##"{"description":"Named entity: grave; with a semi-colon","initialState":"Data","input":"&grave;","inputUtf16":[38,103,114,97,118,101,59],"output":[{"Character":{"data":"`"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2135() {
    tokenize(
        r##"{"description":"Bad named entity: gscr without a semi-colon","initialState":"Data","input":"&gscr","inputUtf16":[38,103,115,99,114],"output":[{"Character":{"data":"&gscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2136() {
    tokenize(
        r##"{"description":"Named entity: gscr; with a semi-colon","initialState":"Data","input":"&gscr;","inputUtf16":[38,103,115,99,114,59],"output":[{"Character":{"data":"‚Ñä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2137() {
    tokenize(
        r##"{"description":"Bad named entity: gsim without a semi-colon","initialState":"Data","input":"&gsim","inputUtf16":[38,103,115,105,109],"output":[{"Character":{"data":"&gsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2138() {
    tokenize(
        r##"{"description":"Named entity: gsim; with a semi-colon","initialState":"Data","input":"&gsim;","inputUtf16":[38,103,115,105,109,59],"output":[{"Character":{"data":"‚â≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2139() {
    tokenize(
        r##"{"description":"Bad named entity: gsime without a semi-colon","initialState":"Data","input":"&gsime","inputUtf16":[38,103,115,105,109,101],"output":[{"Character":{"data":"&gsime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2140() {
    tokenize(
        r##"{"description":"Named entity: gsime; with a semi-colon","initialState":"Data","input":"&gsime;","inputUtf16":[38,103,115,105,109,101,59],"output":[{"Character":{"data":"‚™é"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2141() {
    tokenize(
        r##"{"description":"Bad named entity: gsiml without a semi-colon","initialState":"Data","input":"&gsiml","inputUtf16":[38,103,115,105,109,108],"output":[{"Character":{"data":"&gsiml"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2142() {
    tokenize(
        r##"{"description":"Named entity: gsiml; with a semi-colon","initialState":"Data","input":"&gsiml;","inputUtf16":[38,103,115,105,109,108,59],"output":[{"Character":{"data":"‚™ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2143() {
    tokenize(
        r##"{"description":"Named entity: gt without a semi-colon","initialState":"Data","input":"&gt","inputUtf16":[38,103,116],"output":[{"Character":{"data":">"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":4}}]}"##,
    );
}

#[test]
fn test_2144() {
    tokenize(
        r##"{"description":"Named entity: gt; with a semi-colon","initialState":"Data","input":"&gt;","inputUtf16":[38,103,116,59],"output":[{"Character":{"data":">"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2145() {
    tokenize(
        r##"{"description":"Named entity: gtcc; with a semi-colon","initialState":"Data","input":"&gtcc;","inputUtf16":[38,103,116,99,99,59],"output":[{"Character":{"data":"‚™ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2146() {
    tokenize(
        r##"{"description":"Named entity: gtcir; with a semi-colon","initialState":"Data","input":"&gtcir;","inputUtf16":[38,103,116,99,105,114,59],"output":[{"Character":{"data":"‚©∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2147() {
    tokenize(
        r##"{"description":"Named entity: gtdot; with a semi-colon","initialState":"Data","input":"&gtdot;","inputUtf16":[38,103,116,100,111,116,59],"output":[{"Character":{"data":"‚ãó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2148() {
    tokenize(
        r##"{"description":"Named entity: gtlPar; with a semi-colon","initialState":"Data","input":"&gtlPar;","inputUtf16":[38,103,116,108,80,97,114,59],"output":[{"Character":{"data":"‚¶ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2149() {
    tokenize(
        r##"{"description":"Named entity: gtquest; with a semi-colon","initialState":"Data","input":"&gtquest;","inputUtf16":[38,103,116,113,117,101,115,116,59],"output":[{"Character":{"data":"‚©º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2150() {
    tokenize(
        r##"{"description":"Named entity: gtrapprox; with a semi-colon","initialState":"Data","input":"&gtrapprox;","inputUtf16":[38,103,116,114,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2151() {
    tokenize(
        r##"{"description":"Named entity: gtrarr; with a semi-colon","initialState":"Data","input":"&gtrarr;","inputUtf16":[38,103,116,114,97,114,114,59],"output":[{"Character":{"data":"‚•∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2152() {
    tokenize(
        r##"{"description":"Named entity: gtrdot; with a semi-colon","initialState":"Data","input":"&gtrdot;","inputUtf16":[38,103,116,114,100,111,116,59],"output":[{"Character":{"data":"‚ãó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2153() {
    tokenize(
        r##"{"description":"Named entity: gtreqless; with a semi-colon","initialState":"Data","input":"&gtreqless;","inputUtf16":[38,103,116,114,101,113,108,101,115,115,59],"output":[{"Character":{"data":"‚ãõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2154() {
    tokenize(
        r##"{"description":"Named entity: gtreqqless; with a semi-colon","initialState":"Data","input":"&gtreqqless;","inputUtf16":[38,103,116,114,101,113,113,108,101,115,115,59],"output":[{"Character":{"data":"‚™å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2155() {
    tokenize(
        r##"{"description":"Named entity: gtrless; with a semi-colon","initialState":"Data","input":"&gtrless;","inputUtf16":[38,103,116,114,108,101,115,115,59],"output":[{"Character":{"data":"‚â∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2156() {
    tokenize(
        r##"{"description":"Named entity: gtrsim; with a semi-colon","initialState":"Data","input":"&gtrsim;","inputUtf16":[38,103,116,114,115,105,109,59],"output":[{"Character":{"data":"‚â≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2157() {
    tokenize(
        r##"{"description":"Bad named entity: gvertneqq without a semi-colon","initialState":"Data","input":"&gvertneqq","inputUtf16":[38,103,118,101,114,116,110,101,113,113],"output":[{"Character":{"data":"&gvertneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2158() {
    tokenize(
        r##"{"description":"Named entity: gvertneqq; with a semi-colon","initialState":"Data","input":"&gvertneqq;","inputUtf16":[38,103,118,101,114,116,110,101,113,113,59],"output":[{"Character":{"data":"‚â©Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2159() {
    tokenize(
        r##"{"description":"Bad named entity: gvnE without a semi-colon","initialState":"Data","input":"&gvnE","inputUtf16":[38,103,118,110,69],"output":[{"Character":{"data":"&gvnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2160() {
    tokenize(
        r##"{"description":"Named entity: gvnE; with a semi-colon","initialState":"Data","input":"&gvnE;","inputUtf16":[38,103,118,110,69,59],"output":[{"Character":{"data":"‚â©Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2161() {
    tokenize(
        r##"{"description":"Bad named entity: hArr without a semi-colon","initialState":"Data","input":"&hArr","inputUtf16":[38,104,65,114,114],"output":[{"Character":{"data":"&hArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2162() {
    tokenize(
        r##"{"description":"Named entity: hArr; with a semi-colon","initialState":"Data","input":"&hArr;","inputUtf16":[38,104,65,114,114,59],"output":[{"Character":{"data":"‚áî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2163() {
    tokenize(
        r##"{"description":"Bad named entity: hairsp without a semi-colon","initialState":"Data","input":"&hairsp","inputUtf16":[38,104,97,105,114,115,112],"output":[{"Character":{"data":"&hairsp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2164() {
    tokenize(
        r##"{"description":"Named entity: hairsp; with a semi-colon","initialState":"Data","input":"&hairsp;","inputUtf16":[38,104,97,105,114,115,112,59],"output":[{"Character":{"data":"‚Ää"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2165() {
    tokenize(
        r##"{"description":"Bad named entity: half without a semi-colon","initialState":"Data","input":"&half","inputUtf16":[38,104,97,108,102],"output":[{"Character":{"data":"&half"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2166() {
    tokenize(
        r##"{"description":"Named entity: half; with a semi-colon","initialState":"Data","input":"&half;","inputUtf16":[38,104,97,108,102,59],"output":[{"Character":{"data":"¬Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2167() {
    tokenize(
        r##"{"description":"Bad named entity: hamilt without a semi-colon","initialState":"Data","input":"&hamilt","inputUtf16":[38,104,97,109,105,108,116],"output":[{"Character":{"data":"&hamilt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2168() {
    tokenize(
        r##"{"description":"Named entity: hamilt; with a semi-colon","initialState":"Data","input":"&hamilt;","inputUtf16":[38,104,97,109,105,108,116,59],"output":[{"Character":{"data":"‚Ñã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2169() {
    tokenize(
        r##"{"description":"Bad named entity: hardcy without a semi-colon","initialState":"Data","input":"&hardcy","inputUtf16":[38,104,97,114,100,99,121],"output":[{"Character":{"data":"&hardcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2170() {
    tokenize(
        r##"{"description":"Named entity: hardcy; with a semi-colon","initialState":"Data","input":"&hardcy;","inputUtf16":[38,104,97,114,100,99,121,59],"output":[{"Character":{"data":"—ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2171() {
    tokenize(
        r##"{"description":"Bad named entity: harr without a semi-colon","initialState":"Data","input":"&harr","inputUtf16":[38,104,97,114,114],"output":[{"Character":{"data":"&harr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2172() {
    tokenize(
        r##"{"description":"Named entity: harr; with a semi-colon","initialState":"Data","input":"&harr;","inputUtf16":[38,104,97,114,114,59],"output":[{"Character":{"data":"‚Üî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2173() {
    tokenize(
        r##"{"description":"Bad named entity: harrcir without a semi-colon","initialState":"Data","input":"&harrcir","inputUtf16":[38,104,97,114,114,99,105,114],"output":[{"Character":{"data":"&harrcir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2174() {
    tokenize(
        r##"{"description":"Named entity: harrcir; with a semi-colon","initialState":"Data","input":"&harrcir;","inputUtf16":[38,104,97,114,114,99,105,114,59],"output":[{"Character":{"data":"‚•à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2175() {
    tokenize(
        r##"{"description":"Bad named entity: harrw without a semi-colon","initialState":"Data","input":"&harrw","inputUtf16":[38,104,97,114,114,119],"output":[{"Character":{"data":"&harrw"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2176() {
    tokenize(
        r##"{"description":"Named entity: harrw; with a semi-colon","initialState":"Data","input":"&harrw;","inputUtf16":[38,104,97,114,114,119,59],"output":[{"Character":{"data":"‚Ü≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2177() {
    tokenize(
        r##"{"description":"Bad named entity: hbar without a semi-colon","initialState":"Data","input":"&hbar","inputUtf16":[38,104,98,97,114],"output":[{"Character":{"data":"&hbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2178() {
    tokenize(
        r##"{"description":"Named entity: hbar; with a semi-colon","initialState":"Data","input":"&hbar;","inputUtf16":[38,104,98,97,114,59],"output":[{"Character":{"data":"‚Ñè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2179() {
    tokenize(
        r##"{"description":"Bad named entity: hcirc without a semi-colon","initialState":"Data","input":"&hcirc","inputUtf16":[38,104,99,105,114,99],"output":[{"Character":{"data":"&hcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2180() {
    tokenize(
        r##"{"description":"Named entity: hcirc; with a semi-colon","initialState":"Data","input":"&hcirc;","inputUtf16":[38,104,99,105,114,99,59],"output":[{"Character":{"data":"ƒ•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2181() {
    tokenize(
        r##"{"description":"Bad named entity: hearts without a semi-colon","initialState":"Data","input":"&hearts","inputUtf16":[38,104,101,97,114,116,115],"output":[{"Character":{"data":"&hearts"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2182() {
    tokenize(
        r##"{"description":"Named entity: hearts; with a semi-colon","initialState":"Data","input":"&hearts;","inputUtf16":[38,104,101,97,114,116,115,59],"output":[{"Character":{"data":"‚ô•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2183() {
    tokenize(
        r##"{"description":"Bad named entity: heartsuit without a semi-colon","initialState":"Data","input":"&heartsuit","inputUtf16":[38,104,101,97,114,116,115,117,105,116],"output":[{"Character":{"data":"&heartsuit"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2184() {
    tokenize(
        r##"{"description":"Named entity: heartsuit; with a semi-colon","initialState":"Data","input":"&heartsuit;","inputUtf16":[38,104,101,97,114,116,115,117,105,116,59],"output":[{"Character":{"data":"‚ô•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2185() {
    tokenize(
        r##"{"description":"Bad named entity: hellip without a semi-colon","initialState":"Data","input":"&hellip","inputUtf16":[38,104,101,108,108,105,112],"output":[{"Character":{"data":"&hellip"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2186() {
    tokenize(
        r##"{"description":"Named entity: hellip; with a semi-colon","initialState":"Data","input":"&hellip;","inputUtf16":[38,104,101,108,108,105,112,59],"output":[{"Character":{"data":"‚Ä¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2187() {
    tokenize(
        r##"{"description":"Bad named entity: hercon without a semi-colon","initialState":"Data","input":"&hercon","inputUtf16":[38,104,101,114,99,111,110],"output":[{"Character":{"data":"&hercon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2188() {
    tokenize(
        r##"{"description":"Named entity: hercon; with a semi-colon","initialState":"Data","input":"&hercon;","inputUtf16":[38,104,101,114,99,111,110,59],"output":[{"Character":{"data":"‚äπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2189() {
    tokenize(
        r##"{"description":"Bad named entity: hfr without a semi-colon","initialState":"Data","input":"&hfr","inputUtf16":[38,104,102,114],"output":[{"Character":{"data":"&hfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2190() {
    tokenize(
        r##"{"description":"Named entity: hfr; with a semi-colon","initialState":"Data","input":"&hfr;","inputUtf16":[38,104,102,114,59],"output":[{"Character":{"data":"ùî•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2191() {
    tokenize(
        r##"{"description":"Bad named entity: hksearow without a semi-colon","initialState":"Data","input":"&hksearow","inputUtf16":[38,104,107,115,101,97,114,111,119],"output":[{"Character":{"data":"&hksearow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2192() {
    tokenize(
        r##"{"description":"Named entity: hksearow; with a semi-colon","initialState":"Data","input":"&hksearow;","inputUtf16":[38,104,107,115,101,97,114,111,119,59],"output":[{"Character":{"data":"‚§•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2193() {
    tokenize(
        r##"{"description":"Bad named entity: hkswarow without a semi-colon","initialState":"Data","input":"&hkswarow","inputUtf16":[38,104,107,115,119,97,114,111,119],"output":[{"Character":{"data":"&hkswarow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2194() {
    tokenize(
        r##"{"description":"Named entity: hkswarow; with a semi-colon","initialState":"Data","input":"&hkswarow;","inputUtf16":[38,104,107,115,119,97,114,111,119,59],"output":[{"Character":{"data":"‚§¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2195() {
    tokenize(
        r##"{"description":"Bad named entity: hoarr without a semi-colon","initialState":"Data","input":"&hoarr","inputUtf16":[38,104,111,97,114,114],"output":[{"Character":{"data":"&hoarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2196() {
    tokenize(
        r##"{"description":"Named entity: hoarr; with a semi-colon","initialState":"Data","input":"&hoarr;","inputUtf16":[38,104,111,97,114,114,59],"output":[{"Character":{"data":"‚áø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2197() {
    tokenize(
        r##"{"description":"Bad named entity: homtht without a semi-colon","initialState":"Data","input":"&homtht","inputUtf16":[38,104,111,109,116,104,116],"output":[{"Character":{"data":"&homtht"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2198() {
    tokenize(
        r##"{"description":"Named entity: homtht; with a semi-colon","initialState":"Data","input":"&homtht;","inputUtf16":[38,104,111,109,116,104,116,59],"output":[{"Character":{"data":"‚àª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2199() {
    tokenize(
        r##"{"description":"Bad named entity: hookleftarrow without a semi-colon","initialState":"Data","input":"&hookleftarrow","inputUtf16":[38,104,111,111,107,108,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&hookleftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2200() {
    tokenize(
        r##"{"description":"Named entity: hookleftarrow; with a semi-colon","initialState":"Data","input":"&hookleftarrow;","inputUtf16":[38,104,111,111,107,108,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Ü©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2201() {
    tokenize(
        r##"{"description":"Bad named entity: hookrightarrow without a semi-colon","initialState":"Data","input":"&hookrightarrow","inputUtf16":[38,104,111,111,107,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&hookrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2202() {
    tokenize(
        r##"{"description":"Named entity: hookrightarrow; with a semi-colon","initialState":"Data","input":"&hookrightarrow;","inputUtf16":[38,104,111,111,107,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Ü™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2203() {
    tokenize(
        r##"{"description":"Bad named entity: hopf without a semi-colon","initialState":"Data","input":"&hopf","inputUtf16":[38,104,111,112,102],"output":[{"Character":{"data":"&hopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2204() {
    tokenize(
        r##"{"description":"Named entity: hopf; with a semi-colon","initialState":"Data","input":"&hopf;","inputUtf16":[38,104,111,112,102,59],"output":[{"Character":{"data":"ùïô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2205() {
    tokenize(
        r##"{"description":"Bad named entity: horbar without a semi-colon","initialState":"Data","input":"&horbar","inputUtf16":[38,104,111,114,98,97,114],"output":[{"Character":{"data":"&horbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2206() {
    tokenize(
        r##"{"description":"Named entity: horbar; with a semi-colon","initialState":"Data","input":"&horbar;","inputUtf16":[38,104,111,114,98,97,114,59],"output":[{"Character":{"data":"‚Äï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2207() {
    tokenize(
        r##"{"description":"Bad named entity: hscr without a semi-colon","initialState":"Data","input":"&hscr","inputUtf16":[38,104,115,99,114],"output":[{"Character":{"data":"&hscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2208() {
    tokenize(
        r##"{"description":"Named entity: hscr; with a semi-colon","initialState":"Data","input":"&hscr;","inputUtf16":[38,104,115,99,114,59],"output":[{"Character":{"data":"ùíΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2209() {
    tokenize(
        r##"{"description":"Bad named entity: hslash without a semi-colon","initialState":"Data","input":"&hslash","inputUtf16":[38,104,115,108,97,115,104],"output":[{"Character":{"data":"&hslash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2210() {
    tokenize(
        r##"{"description":"Named entity: hslash; with a semi-colon","initialState":"Data","input":"&hslash;","inputUtf16":[38,104,115,108,97,115,104,59],"output":[{"Character":{"data":"‚Ñè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2211() {
    tokenize(
        r##"{"description":"Bad named entity: hstrok without a semi-colon","initialState":"Data","input":"&hstrok","inputUtf16":[38,104,115,116,114,111,107],"output":[{"Character":{"data":"&hstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2212() {
    tokenize(
        r##"{"description":"Named entity: hstrok; with a semi-colon","initialState":"Data","input":"&hstrok;","inputUtf16":[38,104,115,116,114,111,107,59],"output":[{"Character":{"data":"ƒß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2213() {
    tokenize(
        r##"{"description":"Bad named entity: hybull without a semi-colon","initialState":"Data","input":"&hybull","inputUtf16":[38,104,121,98,117,108,108],"output":[{"Character":{"data":"&hybull"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2214() {
    tokenize(
        r##"{"description":"Named entity: hybull; with a semi-colon","initialState":"Data","input":"&hybull;","inputUtf16":[38,104,121,98,117,108,108,59],"output":[{"Character":{"data":"‚ÅÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2215() {
    tokenize(
        r##"{"description":"Bad named entity: hyphen without a semi-colon","initialState":"Data","input":"&hyphen","inputUtf16":[38,104,121,112,104,101,110],"output":[{"Character":{"data":"&hyphen"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2216() {
    tokenize(
        r##"{"description":"Named entity: hyphen; with a semi-colon","initialState":"Data","input":"&hyphen;","inputUtf16":[38,104,121,112,104,101,110,59],"output":[{"Character":{"data":"‚Äê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2217() {
    tokenize(
        r##"{"description":"Named entity: iacute without a semi-colon","initialState":"Data","input":"&iacute","inputUtf16":[38,105,97,99,117,116,101],"output":[{"Character":{"data":"√≠"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2218() {
    tokenize(
        r##"{"description":"Named entity: iacute; with a semi-colon","initialState":"Data","input":"&iacute;","inputUtf16":[38,105,97,99,117,116,101,59],"output":[{"Character":{"data":"√≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2219() {
    tokenize(
        r##"{"description":"Bad named entity: ic without a semi-colon","initialState":"Data","input":"&ic","inputUtf16":[38,105,99],"output":[{"Character":{"data":"&ic"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2220() {
    tokenize(
        r##"{"description":"Named entity: ic; with a semi-colon","initialState":"Data","input":"&ic;","inputUtf16":[38,105,99,59],"output":[{"Character":{"data":"‚Å£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2221() {
    tokenize(
        r##"{"description":"Named entity: icirc without a semi-colon","initialState":"Data","input":"&icirc","inputUtf16":[38,105,99,105,114,99],"output":[{"Character":{"data":"√Æ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_2222() {
    tokenize(
        r##"{"description":"Named entity: icirc; with a semi-colon","initialState":"Data","input":"&icirc;","inputUtf16":[38,105,99,105,114,99,59],"output":[{"Character":{"data":"√Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2223() {
    tokenize(
        r##"{"description":"Bad named entity: icy without a semi-colon","initialState":"Data","input":"&icy","inputUtf16":[38,105,99,121],"output":[{"Character":{"data":"&icy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2224() {
    tokenize(
        r##"{"description":"Named entity: icy; with a semi-colon","initialState":"Data","input":"&icy;","inputUtf16":[38,105,99,121,59],"output":[{"Character":{"data":"–∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2225() {
    tokenize(
        r##"{"description":"Bad named entity: iecy without a semi-colon","initialState":"Data","input":"&iecy","inputUtf16":[38,105,101,99,121],"output":[{"Character":{"data":"&iecy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2226() {
    tokenize(
        r##"{"description":"Named entity: iecy; with a semi-colon","initialState":"Data","input":"&iecy;","inputUtf16":[38,105,101,99,121,59],"output":[{"Character":{"data":"–µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2227() {
    tokenize(
        r##"{"description":"Named entity: iexcl without a semi-colon","initialState":"Data","input":"&iexcl","inputUtf16":[38,105,101,120,99,108],"output":[{"Character":{"data":"¬°"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_2228() {
    tokenize(
        r##"{"description":"Named entity: iexcl; with a semi-colon","initialState":"Data","input":"&iexcl;","inputUtf16":[38,105,101,120,99,108,59],"output":[{"Character":{"data":"¬°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2229() {
    tokenize(
        r##"{"description":"Bad named entity: iff without a semi-colon","initialState":"Data","input":"&iff","inputUtf16":[38,105,102,102],"output":[{"Character":{"data":"&iff"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2230() {
    tokenize(
        r##"{"description":"Named entity: iff; with a semi-colon","initialState":"Data","input":"&iff;","inputUtf16":[38,105,102,102,59],"output":[{"Character":{"data":"‚áî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2231() {
    tokenize(
        r##"{"description":"Bad named entity: ifr without a semi-colon","initialState":"Data","input":"&ifr","inputUtf16":[38,105,102,114],"output":[{"Character":{"data":"&ifr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2232() {
    tokenize(
        r##"{"description":"Named entity: ifr; with a semi-colon","initialState":"Data","input":"&ifr;","inputUtf16":[38,105,102,114,59],"output":[{"Character":{"data":"ùî¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2233() {
    tokenize(
        r##"{"description":"Named entity: igrave without a semi-colon","initialState":"Data","input":"&igrave","inputUtf16":[38,105,103,114,97,118,101],"output":[{"Character":{"data":"√¨"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2234() {
    tokenize(
        r##"{"description":"Named entity: igrave; with a semi-colon","initialState":"Data","input":"&igrave;","inputUtf16":[38,105,103,114,97,118,101,59],"output":[{"Character":{"data":"√¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2235() {
    tokenize(
        r##"{"description":"Bad named entity: ii without a semi-colon","initialState":"Data","input":"&ii","inputUtf16":[38,105,105],"output":[{"Character":{"data":"&ii"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2236() {
    tokenize(
        r##"{"description":"Named entity: ii; with a semi-colon","initialState":"Data","input":"&ii;","inputUtf16":[38,105,105,59],"output":[{"Character":{"data":"‚Öà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2237() {
    tokenize(
        r##"{"description":"Bad named entity: iiiint without a semi-colon","initialState":"Data","input":"&iiiint","inputUtf16":[38,105,105,105,105,110,116],"output":[{"Character":{"data":"&iiiint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2238() {
    tokenize(
        r##"{"description":"Named entity: iiiint; with a semi-colon","initialState":"Data","input":"&iiiint;","inputUtf16":[38,105,105,105,105,110,116,59],"output":[{"Character":{"data":"‚®å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2239() {
    tokenize(
        r##"{"description":"Bad named entity: iiint without a semi-colon","initialState":"Data","input":"&iiint","inputUtf16":[38,105,105,105,110,116],"output":[{"Character":{"data":"&iiint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2240() {
    tokenize(
        r##"{"description":"Named entity: iiint; with a semi-colon","initialState":"Data","input":"&iiint;","inputUtf16":[38,105,105,105,110,116,59],"output":[{"Character":{"data":"‚à≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2241() {
    tokenize(
        r##"{"description":"Bad named entity: iinfin without a semi-colon","initialState":"Data","input":"&iinfin","inputUtf16":[38,105,105,110,102,105,110],"output":[{"Character":{"data":"&iinfin"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2242() {
    tokenize(
        r##"{"description":"Named entity: iinfin; with a semi-colon","initialState":"Data","input":"&iinfin;","inputUtf16":[38,105,105,110,102,105,110,59],"output":[{"Character":{"data":"‚ßú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2243() {
    tokenize(
        r##"{"description":"Bad named entity: iiota without a semi-colon","initialState":"Data","input":"&iiota","inputUtf16":[38,105,105,111,116,97],"output":[{"Character":{"data":"&iiota"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2244() {
    tokenize(
        r##"{"description":"Named entity: iiota; with a semi-colon","initialState":"Data","input":"&iiota;","inputUtf16":[38,105,105,111,116,97,59],"output":[{"Character":{"data":"‚Ñ©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2245() {
    tokenize(
        r##"{"description":"Bad named entity: ijlig without a semi-colon","initialState":"Data","input":"&ijlig","inputUtf16":[38,105,106,108,105,103],"output":[{"Character":{"data":"&ijlig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2246() {
    tokenize(
        r##"{"description":"Named entity: ijlig; with a semi-colon","initialState":"Data","input":"&ijlig;","inputUtf16":[38,105,106,108,105,103,59],"output":[{"Character":{"data":"ƒ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2247() {
    tokenize(
        r##"{"description":"Bad named entity: imacr without a semi-colon","initialState":"Data","input":"&imacr","inputUtf16":[38,105,109,97,99,114],"output":[{"Character":{"data":"&imacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2248() {
    tokenize(
        r##"{"description":"Named entity: imacr; with a semi-colon","initialState":"Data","input":"&imacr;","inputUtf16":[38,105,109,97,99,114,59],"output":[{"Character":{"data":"ƒ´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2249() {
    tokenize(
        r##"{"description":"Bad named entity: image without a semi-colon","initialState":"Data","input":"&image","inputUtf16":[38,105,109,97,103,101],"output":[{"Character":{"data":"&image"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2250() {
    tokenize(
        r##"{"description":"Named entity: image; with a semi-colon","initialState":"Data","input":"&image;","inputUtf16":[38,105,109,97,103,101,59],"output":[{"Character":{"data":"‚Ñë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2251() {
    tokenize(
        r##"{"description":"Bad named entity: imagline without a semi-colon","initialState":"Data","input":"&imagline","inputUtf16":[38,105,109,97,103,108,105,110,101],"output":[{"Character":{"data":"&imagline"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2252() {
    tokenize(
        r##"{"description":"Named entity: imagline; with a semi-colon","initialState":"Data","input":"&imagline;","inputUtf16":[38,105,109,97,103,108,105,110,101,59],"output":[{"Character":{"data":"‚Ñê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2253() {
    tokenize(
        r##"{"description":"Bad named entity: imagpart without a semi-colon","initialState":"Data","input":"&imagpart","inputUtf16":[38,105,109,97,103,112,97,114,116],"output":[{"Character":{"data":"&imagpart"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2254() {
    tokenize(
        r##"{"description":"Named entity: imagpart; with a semi-colon","initialState":"Data","input":"&imagpart;","inputUtf16":[38,105,109,97,103,112,97,114,116,59],"output":[{"Character":{"data":"‚Ñë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2255() {
    tokenize(
        r##"{"description":"Bad named entity: imath without a semi-colon","initialState":"Data","input":"&imath","inputUtf16":[38,105,109,97,116,104],"output":[{"Character":{"data":"&imath"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2256() {
    tokenize(
        r##"{"description":"Named entity: imath; with a semi-colon","initialState":"Data","input":"&imath;","inputUtf16":[38,105,109,97,116,104,59],"output":[{"Character":{"data":"ƒ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2257() {
    tokenize(
        r##"{"description":"Bad named entity: imof without a semi-colon","initialState":"Data","input":"&imof","inputUtf16":[38,105,109,111,102],"output":[{"Character":{"data":"&imof"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2258() {
    tokenize(
        r##"{"description":"Named entity: imof; with a semi-colon","initialState":"Data","input":"&imof;","inputUtf16":[38,105,109,111,102,59],"output":[{"Character":{"data":"‚ä∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2259() {
    tokenize(
        r##"{"description":"Bad named entity: imped without a semi-colon","initialState":"Data","input":"&imped","inputUtf16":[38,105,109,112,101,100],"output":[{"Character":{"data":"&imped"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2260() {
    tokenize(
        r##"{"description":"Named entity: imped; with a semi-colon","initialState":"Data","input":"&imped;","inputUtf16":[38,105,109,112,101,100,59],"output":[{"Character":{"data":"∆µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2261() {
    tokenize(
        r##"{"description":"Bad named entity: in without a semi-colon","initialState":"Data","input":"&in","inputUtf16":[38,105,110],"output":[{"Character":{"data":"&in"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2262() {
    tokenize(
        r##"{"description":"Named entity: in; with a semi-colon","initialState":"Data","input":"&in;","inputUtf16":[38,105,110,59],"output":[{"Character":{"data":"‚àà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2263() {
    tokenize(
        r##"{"description":"Bad named entity: incare without a semi-colon","initialState":"Data","input":"&incare","inputUtf16":[38,105,110,99,97,114,101],"output":[{"Character":{"data":"&incare"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2264() {
    tokenize(
        r##"{"description":"Named entity: incare; with a semi-colon","initialState":"Data","input":"&incare;","inputUtf16":[38,105,110,99,97,114,101,59],"output":[{"Character":{"data":"‚ÑÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2265() {
    tokenize(
        r##"{"description":"Bad named entity: infin without a semi-colon","initialState":"Data","input":"&infin","inputUtf16":[38,105,110,102,105,110],"output":[{"Character":{"data":"&infin"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2266() {
    tokenize(
        r##"{"description":"Named entity: infin; with a semi-colon","initialState":"Data","input":"&infin;","inputUtf16":[38,105,110,102,105,110,59],"output":[{"Character":{"data":"‚àû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2267() {
    tokenize(
        r##"{"description":"Bad named entity: infintie without a semi-colon","initialState":"Data","input":"&infintie","inputUtf16":[38,105,110,102,105,110,116,105,101],"output":[{"Character":{"data":"&infintie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2268() {
    tokenize(
        r##"{"description":"Named entity: infintie; with a semi-colon","initialState":"Data","input":"&infintie;","inputUtf16":[38,105,110,102,105,110,116,105,101,59],"output":[{"Character":{"data":"‚ßù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2269() {
    tokenize(
        r##"{"description":"Bad named entity: inodot without a semi-colon","initialState":"Data","input":"&inodot","inputUtf16":[38,105,110,111,100,111,116],"output":[{"Character":{"data":"&inodot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2270() {
    tokenize(
        r##"{"description":"Named entity: inodot; with a semi-colon","initialState":"Data","input":"&inodot;","inputUtf16":[38,105,110,111,100,111,116,59],"output":[{"Character":{"data":"ƒ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2271() {
    tokenize(
        r##"{"description":"Bad named entity: int without a semi-colon","initialState":"Data","input":"&int","inputUtf16":[38,105,110,116],"output":[{"Character":{"data":"&int"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2272() {
    tokenize(
        r##"{"description":"Named entity: int; with a semi-colon","initialState":"Data","input":"&int;","inputUtf16":[38,105,110,116,59],"output":[{"Character":{"data":"‚à´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2273() {
    tokenize(
        r##"{"description":"Bad named entity: intcal without a semi-colon","initialState":"Data","input":"&intcal","inputUtf16":[38,105,110,116,99,97,108],"output":[{"Character":{"data":"&intcal"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2274() {
    tokenize(
        r##"{"description":"Named entity: intcal; with a semi-colon","initialState":"Data","input":"&intcal;","inputUtf16":[38,105,110,116,99,97,108,59],"output":[{"Character":{"data":"‚ä∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2275() {
    tokenize(
        r##"{"description":"Bad named entity: integers without a semi-colon","initialState":"Data","input":"&integers","inputUtf16":[38,105,110,116,101,103,101,114,115],"output":[{"Character":{"data":"&integers"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2276() {
    tokenize(
        r##"{"description":"Named entity: integers; with a semi-colon","initialState":"Data","input":"&integers;","inputUtf16":[38,105,110,116,101,103,101,114,115,59],"output":[{"Character":{"data":"‚Ñ§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2277() {
    tokenize(
        r##"{"description":"Bad named entity: intercal without a semi-colon","initialState":"Data","input":"&intercal","inputUtf16":[38,105,110,116,101,114,99,97,108],"output":[{"Character":{"data":"&intercal"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2278() {
    tokenize(
        r##"{"description":"Named entity: intercal; with a semi-colon","initialState":"Data","input":"&intercal;","inputUtf16":[38,105,110,116,101,114,99,97,108,59],"output":[{"Character":{"data":"‚ä∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2279() {
    tokenize(
        r##"{"description":"Bad named entity: intlarhk without a semi-colon","initialState":"Data","input":"&intlarhk","inputUtf16":[38,105,110,116,108,97,114,104,107],"output":[{"Character":{"data":"&intlarhk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2280() {
    tokenize(
        r##"{"description":"Named entity: intlarhk; with a semi-colon","initialState":"Data","input":"&intlarhk;","inputUtf16":[38,105,110,116,108,97,114,104,107,59],"output":[{"Character":{"data":"‚®ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2281() {
    tokenize(
        r##"{"description":"Bad named entity: intprod without a semi-colon","initialState":"Data","input":"&intprod","inputUtf16":[38,105,110,116,112,114,111,100],"output":[{"Character":{"data":"&intprod"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2282() {
    tokenize(
        r##"{"description":"Named entity: intprod; with a semi-colon","initialState":"Data","input":"&intprod;","inputUtf16":[38,105,110,116,112,114,111,100,59],"output":[{"Character":{"data":"‚®º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2283() {
    tokenize(
        r##"{"description":"Bad named entity: iocy without a semi-colon","initialState":"Data","input":"&iocy","inputUtf16":[38,105,111,99,121],"output":[{"Character":{"data":"&iocy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2284() {
    tokenize(
        r##"{"description":"Named entity: iocy; with a semi-colon","initialState":"Data","input":"&iocy;","inputUtf16":[38,105,111,99,121,59],"output":[{"Character":{"data":"—ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2285() {
    tokenize(
        r##"{"description":"Bad named entity: iogon without a semi-colon","initialState":"Data","input":"&iogon","inputUtf16":[38,105,111,103,111,110],"output":[{"Character":{"data":"&iogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2286() {
    tokenize(
        r##"{"description":"Named entity: iogon; with a semi-colon","initialState":"Data","input":"&iogon;","inputUtf16":[38,105,111,103,111,110,59],"output":[{"Character":{"data":"ƒØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2287() {
    tokenize(
        r##"{"description":"Bad named entity: iopf without a semi-colon","initialState":"Data","input":"&iopf","inputUtf16":[38,105,111,112,102],"output":[{"Character":{"data":"&iopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2288() {
    tokenize(
        r##"{"description":"Named entity: iopf; with a semi-colon","initialState":"Data","input":"&iopf;","inputUtf16":[38,105,111,112,102,59],"output":[{"Character":{"data":"ùïö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2289() {
    tokenize(
        r##"{"description":"Bad named entity: iota without a semi-colon","initialState":"Data","input":"&iota","inputUtf16":[38,105,111,116,97],"output":[{"Character":{"data":"&iota"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2290() {
    tokenize(
        r##"{"description":"Named entity: iota; with a semi-colon","initialState":"Data","input":"&iota;","inputUtf16":[38,105,111,116,97,59],"output":[{"Character":{"data":"Œπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2291() {
    tokenize(
        r##"{"description":"Bad named entity: iprod without a semi-colon","initialState":"Data","input":"&iprod","inputUtf16":[38,105,112,114,111,100],"output":[{"Character":{"data":"&iprod"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2292() {
    tokenize(
        r##"{"description":"Named entity: iprod; with a semi-colon","initialState":"Data","input":"&iprod;","inputUtf16":[38,105,112,114,111,100,59],"output":[{"Character":{"data":"‚®º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2293() {
    tokenize(
        r##"{"description":"Named entity: iquest without a semi-colon","initialState":"Data","input":"&iquest","inputUtf16":[38,105,113,117,101,115,116],"output":[{"Character":{"data":"¬ø"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2294() {
    tokenize(
        r##"{"description":"Named entity: iquest; with a semi-colon","initialState":"Data","input":"&iquest;","inputUtf16":[38,105,113,117,101,115,116,59],"output":[{"Character":{"data":"¬ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2295() {
    tokenize(
        r##"{"description":"Bad named entity: iscr without a semi-colon","initialState":"Data","input":"&iscr","inputUtf16":[38,105,115,99,114],"output":[{"Character":{"data":"&iscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2296() {
    tokenize(
        r##"{"description":"Named entity: iscr; with a semi-colon","initialState":"Data","input":"&iscr;","inputUtf16":[38,105,115,99,114,59],"output":[{"Character":{"data":"ùíæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2297() {
    tokenize(
        r##"{"description":"Bad named entity: isin without a semi-colon","initialState":"Data","input":"&isin","inputUtf16":[38,105,115,105,110],"output":[{"Character":{"data":"&isin"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2298() {
    tokenize(
        r##"{"description":"Named entity: isin; with a semi-colon","initialState":"Data","input":"&isin;","inputUtf16":[38,105,115,105,110,59],"output":[{"Character":{"data":"‚àà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2299() {
    tokenize(
        r##"{"description":"Bad named entity: isinE without a semi-colon","initialState":"Data","input":"&isinE","inputUtf16":[38,105,115,105,110,69],"output":[{"Character":{"data":"&isinE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2300() {
    tokenize(
        r##"{"description":"Named entity: isinE; with a semi-colon","initialState":"Data","input":"&isinE;","inputUtf16":[38,105,115,105,110,69,59],"output":[{"Character":{"data":"‚ãπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2301() {
    tokenize(
        r##"{"description":"Bad named entity: isindot without a semi-colon","initialState":"Data","input":"&isindot","inputUtf16":[38,105,115,105,110,100,111,116],"output":[{"Character":{"data":"&isindot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2302() {
    tokenize(
        r##"{"description":"Named entity: isindot; with a semi-colon","initialState":"Data","input":"&isindot;","inputUtf16":[38,105,115,105,110,100,111,116,59],"output":[{"Character":{"data":"‚ãµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2303() {
    tokenize(
        r##"{"description":"Bad named entity: isins without a semi-colon","initialState":"Data","input":"&isins","inputUtf16":[38,105,115,105,110,115],"output":[{"Character":{"data":"&isins"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2304() {
    tokenize(
        r##"{"description":"Named entity: isins; with a semi-colon","initialState":"Data","input":"&isins;","inputUtf16":[38,105,115,105,110,115,59],"output":[{"Character":{"data":"‚ã¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2305() {
    tokenize(
        r##"{"description":"Bad named entity: isinsv without a semi-colon","initialState":"Data","input":"&isinsv","inputUtf16":[38,105,115,105,110,115,118],"output":[{"Character":{"data":"&isinsv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2306() {
    tokenize(
        r##"{"description":"Named entity: isinsv; with a semi-colon","initialState":"Data","input":"&isinsv;","inputUtf16":[38,105,115,105,110,115,118,59],"output":[{"Character":{"data":"‚ã≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2307() {
    tokenize(
        r##"{"description":"Bad named entity: isinv without a semi-colon","initialState":"Data","input":"&isinv","inputUtf16":[38,105,115,105,110,118],"output":[{"Character":{"data":"&isinv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2308() {
    tokenize(
        r##"{"description":"Named entity: isinv; with a semi-colon","initialState":"Data","input":"&isinv;","inputUtf16":[38,105,115,105,110,118,59],"output":[{"Character":{"data":"‚àà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2309() {
    tokenize(
        r##"{"description":"Bad named entity: it without a semi-colon","initialState":"Data","input":"&it","inputUtf16":[38,105,116],"output":[{"Character":{"data":"&it"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2310() {
    tokenize(
        r##"{"description":"Named entity: it; with a semi-colon","initialState":"Data","input":"&it;","inputUtf16":[38,105,116,59],"output":[{"Character":{"data":"‚Å¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2311() {
    tokenize(
        r##"{"description":"Bad named entity: itilde without a semi-colon","initialState":"Data","input":"&itilde","inputUtf16":[38,105,116,105,108,100,101],"output":[{"Character":{"data":"&itilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2312() {
    tokenize(
        r##"{"description":"Named entity: itilde; with a semi-colon","initialState":"Data","input":"&itilde;","inputUtf16":[38,105,116,105,108,100,101,59],"output":[{"Character":{"data":"ƒ©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2313() {
    tokenize(
        r##"{"description":"Bad named entity: iukcy without a semi-colon","initialState":"Data","input":"&iukcy","inputUtf16":[38,105,117,107,99,121],"output":[{"Character":{"data":"&iukcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2314() {
    tokenize(
        r##"{"description":"Named entity: iukcy; with a semi-colon","initialState":"Data","input":"&iukcy;","inputUtf16":[38,105,117,107,99,121,59],"output":[{"Character":{"data":"—ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2315() {
    tokenize(
        r##"{"description":"Named entity: iuml without a semi-colon","initialState":"Data","input":"&iuml","inputUtf16":[38,105,117,109,108],"output":[{"Character":{"data":"√Ø"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_2316() {
    tokenize(
        r##"{"description":"Named entity: iuml; with a semi-colon","initialState":"Data","input":"&iuml;","inputUtf16":[38,105,117,109,108,59],"output":[{"Character":{"data":"√Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2317() {
    tokenize(
        r##"{"description":"Bad named entity: jcirc without a semi-colon","initialState":"Data","input":"&jcirc","inputUtf16":[38,106,99,105,114,99],"output":[{"Character":{"data":"&jcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2318() {
    tokenize(
        r##"{"description":"Named entity: jcirc; with a semi-colon","initialState":"Data","input":"&jcirc;","inputUtf16":[38,106,99,105,114,99,59],"output":[{"Character":{"data":"ƒµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2319() {
    tokenize(
        r##"{"description":"Bad named entity: jcy without a semi-colon","initialState":"Data","input":"&jcy","inputUtf16":[38,106,99,121],"output":[{"Character":{"data":"&jcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2320() {
    tokenize(
        r##"{"description":"Named entity: jcy; with a semi-colon","initialState":"Data","input":"&jcy;","inputUtf16":[38,106,99,121,59],"output":[{"Character":{"data":"–π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2321() {
    tokenize(
        r##"{"description":"Bad named entity: jfr without a semi-colon","initialState":"Data","input":"&jfr","inputUtf16":[38,106,102,114],"output":[{"Character":{"data":"&jfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2322() {
    tokenize(
        r##"{"description":"Named entity: jfr; with a semi-colon","initialState":"Data","input":"&jfr;","inputUtf16":[38,106,102,114,59],"output":[{"Character":{"data":"ùîß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2323() {
    tokenize(
        r##"{"description":"Bad named entity: jmath without a semi-colon","initialState":"Data","input":"&jmath","inputUtf16":[38,106,109,97,116,104],"output":[{"Character":{"data":"&jmath"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2324() {
    tokenize(
        r##"{"description":"Named entity: jmath; with a semi-colon","initialState":"Data","input":"&jmath;","inputUtf16":[38,106,109,97,116,104,59],"output":[{"Character":{"data":"»∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2325() {
    tokenize(
        r##"{"description":"Bad named entity: jopf without a semi-colon","initialState":"Data","input":"&jopf","inputUtf16":[38,106,111,112,102],"output":[{"Character":{"data":"&jopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2326() {
    tokenize(
        r##"{"description":"Named entity: jopf; with a semi-colon","initialState":"Data","input":"&jopf;","inputUtf16":[38,106,111,112,102,59],"output":[{"Character":{"data":"ùïõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2327() {
    tokenize(
        r##"{"description":"Bad named entity: jscr without a semi-colon","initialState":"Data","input":"&jscr","inputUtf16":[38,106,115,99,114],"output":[{"Character":{"data":"&jscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2328() {
    tokenize(
        r##"{"description":"Named entity: jscr; with a semi-colon","initialState":"Data","input":"&jscr;","inputUtf16":[38,106,115,99,114,59],"output":[{"Character":{"data":"ùíø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2329() {
    tokenize(
        r##"{"description":"Bad named entity: jsercy without a semi-colon","initialState":"Data","input":"&jsercy","inputUtf16":[38,106,115,101,114,99,121],"output":[{"Character":{"data":"&jsercy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2330() {
    tokenize(
        r##"{"description":"Named entity: jsercy; with a semi-colon","initialState":"Data","input":"&jsercy;","inputUtf16":[38,106,115,101,114,99,121,59],"output":[{"Character":{"data":"—ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2331() {
    tokenize(
        r##"{"description":"Bad named entity: jukcy without a semi-colon","initialState":"Data","input":"&jukcy","inputUtf16":[38,106,117,107,99,121],"output":[{"Character":{"data":"&jukcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2332() {
    tokenize(
        r##"{"description":"Named entity: jukcy; with a semi-colon","initialState":"Data","input":"&jukcy;","inputUtf16":[38,106,117,107,99,121,59],"output":[{"Character":{"data":"—î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2333() {
    tokenize(
        r##"{"description":"Bad named entity: kappa without a semi-colon","initialState":"Data","input":"&kappa","inputUtf16":[38,107,97,112,112,97],"output":[{"Character":{"data":"&kappa"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2334() {
    tokenize(
        r##"{"description":"Named entity: kappa; with a semi-colon","initialState":"Data","input":"&kappa;","inputUtf16":[38,107,97,112,112,97,59],"output":[{"Character":{"data":"Œ∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2335() {
    tokenize(
        r##"{"description":"Bad named entity: kappav without a semi-colon","initialState":"Data","input":"&kappav","inputUtf16":[38,107,97,112,112,97,118],"output":[{"Character":{"data":"&kappav"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2336() {
    tokenize(
        r##"{"description":"Named entity: kappav; with a semi-colon","initialState":"Data","input":"&kappav;","inputUtf16":[38,107,97,112,112,97,118,59],"output":[{"Character":{"data":"œ∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2337() {
    tokenize(
        r##"{"description":"Bad named entity: kcedil without a semi-colon","initialState":"Data","input":"&kcedil","inputUtf16":[38,107,99,101,100,105,108],"output":[{"Character":{"data":"&kcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2338() {
    tokenize(
        r##"{"description":"Named entity: kcedil; with a semi-colon","initialState":"Data","input":"&kcedil;","inputUtf16":[38,107,99,101,100,105,108,59],"output":[{"Character":{"data":"ƒ∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2339() {
    tokenize(
        r##"{"description":"Bad named entity: kcy without a semi-colon","initialState":"Data","input":"&kcy","inputUtf16":[38,107,99,121],"output":[{"Character":{"data":"&kcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2340() {
    tokenize(
        r##"{"description":"Named entity: kcy; with a semi-colon","initialState":"Data","input":"&kcy;","inputUtf16":[38,107,99,121,59],"output":[{"Character":{"data":"–∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2341() {
    tokenize(
        r##"{"description":"Bad named entity: kfr without a semi-colon","initialState":"Data","input":"&kfr","inputUtf16":[38,107,102,114],"output":[{"Character":{"data":"&kfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2342() {
    tokenize(
        r##"{"description":"Named entity: kfr; with a semi-colon","initialState":"Data","input":"&kfr;","inputUtf16":[38,107,102,114,59],"output":[{"Character":{"data":"ùî®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2343() {
    tokenize(
        r##"{"description":"Bad named entity: kgreen without a semi-colon","initialState":"Data","input":"&kgreen","inputUtf16":[38,107,103,114,101,101,110],"output":[{"Character":{"data":"&kgreen"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2344() {
    tokenize(
        r##"{"description":"Named entity: kgreen; with a semi-colon","initialState":"Data","input":"&kgreen;","inputUtf16":[38,107,103,114,101,101,110,59],"output":[{"Character":{"data":"ƒ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2345() {
    tokenize(
        r##"{"description":"Bad named entity: khcy without a semi-colon","initialState":"Data","input":"&khcy","inputUtf16":[38,107,104,99,121],"output":[{"Character":{"data":"&khcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2346() {
    tokenize(
        r##"{"description":"Named entity: khcy; with a semi-colon","initialState":"Data","input":"&khcy;","inputUtf16":[38,107,104,99,121,59],"output":[{"Character":{"data":"—Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2347() {
    tokenize(
        r##"{"description":"Bad named entity: kjcy without a semi-colon","initialState":"Data","input":"&kjcy","inputUtf16":[38,107,106,99,121],"output":[{"Character":{"data":"&kjcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2348() {
    tokenize(
        r##"{"description":"Named entity: kjcy; with a semi-colon","initialState":"Data","input":"&kjcy;","inputUtf16":[38,107,106,99,121,59],"output":[{"Character":{"data":"—ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2349() {
    tokenize(
        r##"{"description":"Bad named entity: kopf without a semi-colon","initialState":"Data","input":"&kopf","inputUtf16":[38,107,111,112,102],"output":[{"Character":{"data":"&kopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2350() {
    tokenize(
        r##"{"description":"Named entity: kopf; with a semi-colon","initialState":"Data","input":"&kopf;","inputUtf16":[38,107,111,112,102,59],"output":[{"Character":{"data":"ùïú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2351() {
    tokenize(
        r##"{"description":"Bad named entity: kscr without a semi-colon","initialState":"Data","input":"&kscr","inputUtf16":[38,107,115,99,114],"output":[{"Character":{"data":"&kscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2352() {
    tokenize(
        r##"{"description":"Named entity: kscr; with a semi-colon","initialState":"Data","input":"&kscr;","inputUtf16":[38,107,115,99,114,59],"output":[{"Character":{"data":"ùìÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2353() {
    tokenize(
        r##"{"description":"Bad named entity: lAarr without a semi-colon","initialState":"Data","input":"&lAarr","inputUtf16":[38,108,65,97,114,114],"output":[{"Character":{"data":"&lAarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2354() {
    tokenize(
        r##"{"description":"Named entity: lAarr; with a semi-colon","initialState":"Data","input":"&lAarr;","inputUtf16":[38,108,65,97,114,114,59],"output":[{"Character":{"data":"‚áö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2355() {
    tokenize(
        r##"{"description":"Bad named entity: lArr without a semi-colon","initialState":"Data","input":"&lArr","inputUtf16":[38,108,65,114,114],"output":[{"Character":{"data":"&lArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2356() {
    tokenize(
        r##"{"description":"Named entity: lArr; with a semi-colon","initialState":"Data","input":"&lArr;","inputUtf16":[38,108,65,114,114,59],"output":[{"Character":{"data":"‚áê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2357() {
    tokenize(
        r##"{"description":"Bad named entity: lAtail without a semi-colon","initialState":"Data","input":"&lAtail","inputUtf16":[38,108,65,116,97,105,108],"output":[{"Character":{"data":"&lAtail"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2358() {
    tokenize(
        r##"{"description":"Named entity: lAtail; with a semi-colon","initialState":"Data","input":"&lAtail;","inputUtf16":[38,108,65,116,97,105,108,59],"output":[{"Character":{"data":"‚§õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2359() {
    tokenize(
        r##"{"description":"Bad named entity: lBarr without a semi-colon","initialState":"Data","input":"&lBarr","inputUtf16":[38,108,66,97,114,114],"output":[{"Character":{"data":"&lBarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2360() {
    tokenize(
        r##"{"description":"Named entity: lBarr; with a semi-colon","initialState":"Data","input":"&lBarr;","inputUtf16":[38,108,66,97,114,114,59],"output":[{"Character":{"data":"‚§é"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2361() {
    tokenize(
        r##"{"description":"Bad named entity: lE without a semi-colon","initialState":"Data","input":"&lE","inputUtf16":[38,108,69],"output":[{"Character":{"data":"&lE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2362() {
    tokenize(
        r##"{"description":"Named entity: lE; with a semi-colon","initialState":"Data","input":"&lE;","inputUtf16":[38,108,69,59],"output":[{"Character":{"data":"‚â¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2363() {
    tokenize(
        r##"{"description":"Bad named entity: lEg without a semi-colon","initialState":"Data","input":"&lEg","inputUtf16":[38,108,69,103],"output":[{"Character":{"data":"&lEg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2364() {
    tokenize(
        r##"{"description":"Named entity: lEg; with a semi-colon","initialState":"Data","input":"&lEg;","inputUtf16":[38,108,69,103,59],"output":[{"Character":{"data":"‚™ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2365() {
    tokenize(
        r##"{"description":"Bad named entity: lHar without a semi-colon","initialState":"Data","input":"&lHar","inputUtf16":[38,108,72,97,114],"output":[{"Character":{"data":"&lHar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2366() {
    tokenize(
        r##"{"description":"Named entity: lHar; with a semi-colon","initialState":"Data","input":"&lHar;","inputUtf16":[38,108,72,97,114,59],"output":[{"Character":{"data":"‚•¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2367() {
    tokenize(
        r##"{"description":"Bad named entity: lacute without a semi-colon","initialState":"Data","input":"&lacute","inputUtf16":[38,108,97,99,117,116,101],"output":[{"Character":{"data":"&lacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2368() {
    tokenize(
        r##"{"description":"Named entity: lacute; with a semi-colon","initialState":"Data","input":"&lacute;","inputUtf16":[38,108,97,99,117,116,101,59],"output":[{"Character":{"data":"ƒ∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2369() {
    tokenize(
        r##"{"description":"Bad named entity: laemptyv without a semi-colon","initialState":"Data","input":"&laemptyv","inputUtf16":[38,108,97,101,109,112,116,121,118],"output":[{"Character":{"data":"&laemptyv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2370() {
    tokenize(
        r##"{"description":"Named entity: laemptyv; with a semi-colon","initialState":"Data","input":"&laemptyv;","inputUtf16":[38,108,97,101,109,112,116,121,118,59],"output":[{"Character":{"data":"‚¶¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2371() {
    tokenize(
        r##"{"description":"Bad named entity: lagran without a semi-colon","initialState":"Data","input":"&lagran","inputUtf16":[38,108,97,103,114,97,110],"output":[{"Character":{"data":"&lagran"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2372() {
    tokenize(
        r##"{"description":"Named entity: lagran; with a semi-colon","initialState":"Data","input":"&lagran;","inputUtf16":[38,108,97,103,114,97,110,59],"output":[{"Character":{"data":"‚Ñí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2373() {
    tokenize(
        r##"{"description":"Bad named entity: lambda without a semi-colon","initialState":"Data","input":"&lambda","inputUtf16":[38,108,97,109,98,100,97],"output":[{"Character":{"data":"&lambda"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2374() {
    tokenize(
        r##"{"description":"Named entity: lambda; with a semi-colon","initialState":"Data","input":"&lambda;","inputUtf16":[38,108,97,109,98,100,97,59],"output":[{"Character":{"data":"Œª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2375() {
    tokenize(
        r##"{"description":"Bad named entity: lang without a semi-colon","initialState":"Data","input":"&lang","inputUtf16":[38,108,97,110,103],"output":[{"Character":{"data":"&lang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2376() {
    tokenize(
        r##"{"description":"Named entity: lang; with a semi-colon","initialState":"Data","input":"&lang;","inputUtf16":[38,108,97,110,103,59],"output":[{"Character":{"data":"‚ü®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2377() {
    tokenize(
        r##"{"description":"Bad named entity: langd without a semi-colon","initialState":"Data","input":"&langd","inputUtf16":[38,108,97,110,103,100],"output":[{"Character":{"data":"&langd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2378() {
    tokenize(
        r##"{"description":"Named entity: langd; with a semi-colon","initialState":"Data","input":"&langd;","inputUtf16":[38,108,97,110,103,100,59],"output":[{"Character":{"data":"‚¶ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2379() {
    tokenize(
        r##"{"description":"Bad named entity: langle without a semi-colon","initialState":"Data","input":"&langle","inputUtf16":[38,108,97,110,103,108,101],"output":[{"Character":{"data":"&langle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2380() {
    tokenize(
        r##"{"description":"Named entity: langle; with a semi-colon","initialState":"Data","input":"&langle;","inputUtf16":[38,108,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ü®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2381() {
    tokenize(
        r##"{"description":"Bad named entity: lap without a semi-colon","initialState":"Data","input":"&lap","inputUtf16":[38,108,97,112],"output":[{"Character":{"data":"&lap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2382() {
    tokenize(
        r##"{"description":"Named entity: lap; with a semi-colon","initialState":"Data","input":"&lap;","inputUtf16":[38,108,97,112,59],"output":[{"Character":{"data":"‚™Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2383() {
    tokenize(
        r##"{"description":"Named entity: laquo without a semi-colon","initialState":"Data","input":"&laquo","inputUtf16":[38,108,97,113,117,111],"output":[{"Character":{"data":"¬´"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_2384() {
    tokenize(
        r##"{"description":"Named entity: laquo; with a semi-colon","initialState":"Data","input":"&laquo;","inputUtf16":[38,108,97,113,117,111,59],"output":[{"Character":{"data":"¬´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2385() {
    tokenize(
        r##"{"description":"Bad named entity: larr without a semi-colon","initialState":"Data","input":"&larr","inputUtf16":[38,108,97,114,114],"output":[{"Character":{"data":"&larr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2386() {
    tokenize(
        r##"{"description":"Named entity: larr; with a semi-colon","initialState":"Data","input":"&larr;","inputUtf16":[38,108,97,114,114,59],"output":[{"Character":{"data":"‚Üê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2387() {
    tokenize(
        r##"{"description":"Bad named entity: larrb without a semi-colon","initialState":"Data","input":"&larrb","inputUtf16":[38,108,97,114,114,98],"output":[{"Character":{"data":"&larrb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2388() {
    tokenize(
        r##"{"description":"Named entity: larrb; with a semi-colon","initialState":"Data","input":"&larrb;","inputUtf16":[38,108,97,114,114,98,59],"output":[{"Character":{"data":"‚á§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2389() {
    tokenize(
        r##"{"description":"Bad named entity: larrbfs without a semi-colon","initialState":"Data","input":"&larrbfs","inputUtf16":[38,108,97,114,114,98,102,115],"output":[{"Character":{"data":"&larrbfs"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2390() {
    tokenize(
        r##"{"description":"Named entity: larrbfs; with a semi-colon","initialState":"Data","input":"&larrbfs;","inputUtf16":[38,108,97,114,114,98,102,115,59],"output":[{"Character":{"data":"‚§ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2391() {
    tokenize(
        r##"{"description":"Bad named entity: larrfs without a semi-colon","initialState":"Data","input":"&larrfs","inputUtf16":[38,108,97,114,114,102,115],"output":[{"Character":{"data":"&larrfs"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2392() {
    tokenize(
        r##"{"description":"Named entity: larrfs; with a semi-colon","initialState":"Data","input":"&larrfs;","inputUtf16":[38,108,97,114,114,102,115,59],"output":[{"Character":{"data":"‚§ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2393() {
    tokenize(
        r##"{"description":"Bad named entity: larrhk without a semi-colon","initialState":"Data","input":"&larrhk","inputUtf16":[38,108,97,114,114,104,107],"output":[{"Character":{"data":"&larrhk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2394() {
    tokenize(
        r##"{"description":"Named entity: larrhk; with a semi-colon","initialState":"Data","input":"&larrhk;","inputUtf16":[38,108,97,114,114,104,107,59],"output":[{"Character":{"data":"‚Ü©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2395() {
    tokenize(
        r##"{"description":"Bad named entity: larrlp without a semi-colon","initialState":"Data","input":"&larrlp","inputUtf16":[38,108,97,114,114,108,112],"output":[{"Character":{"data":"&larrlp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2396() {
    tokenize(
        r##"{"description":"Named entity: larrlp; with a semi-colon","initialState":"Data","input":"&larrlp;","inputUtf16":[38,108,97,114,114,108,112,59],"output":[{"Character":{"data":"‚Ü´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2397() {
    tokenize(
        r##"{"description":"Bad named entity: larrpl without a semi-colon","initialState":"Data","input":"&larrpl","inputUtf16":[38,108,97,114,114,112,108],"output":[{"Character":{"data":"&larrpl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2398() {
    tokenize(
        r##"{"description":"Named entity: larrpl; with a semi-colon","initialState":"Data","input":"&larrpl;","inputUtf16":[38,108,97,114,114,112,108,59],"output":[{"Character":{"data":"‚§π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2399() {
    tokenize(
        r##"{"description":"Bad named entity: larrsim without a semi-colon","initialState":"Data","input":"&larrsim","inputUtf16":[38,108,97,114,114,115,105,109],"output":[{"Character":{"data":"&larrsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2400() {
    tokenize(
        r##"{"description":"Named entity: larrsim; with a semi-colon","initialState":"Data","input":"&larrsim;","inputUtf16":[38,108,97,114,114,115,105,109,59],"output":[{"Character":{"data":"‚•≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2401() {
    tokenize(
        r##"{"description":"Bad named entity: larrtl without a semi-colon","initialState":"Data","input":"&larrtl","inputUtf16":[38,108,97,114,114,116,108],"output":[{"Character":{"data":"&larrtl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2402() {
    tokenize(
        r##"{"description":"Named entity: larrtl; with a semi-colon","initialState":"Data","input":"&larrtl;","inputUtf16":[38,108,97,114,114,116,108,59],"output":[{"Character":{"data":"‚Ü¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2403() {
    tokenize(
        r##"{"description":"Bad named entity: lat without a semi-colon","initialState":"Data","input":"&lat","inputUtf16":[38,108,97,116],"output":[{"Character":{"data":"&lat"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2404() {
    tokenize(
        r##"{"description":"Named entity: lat; with a semi-colon","initialState":"Data","input":"&lat;","inputUtf16":[38,108,97,116,59],"output":[{"Character":{"data":"‚™´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2405() {
    tokenize(
        r##"{"description":"Bad named entity: latail without a semi-colon","initialState":"Data","input":"&latail","inputUtf16":[38,108,97,116,97,105,108],"output":[{"Character":{"data":"&latail"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2406() {
    tokenize(
        r##"{"description":"Named entity: latail; with a semi-colon","initialState":"Data","input":"&latail;","inputUtf16":[38,108,97,116,97,105,108,59],"output":[{"Character":{"data":"‚§ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2407() {
    tokenize(
        r##"{"description":"Bad named entity: late without a semi-colon","initialState":"Data","input":"&late","inputUtf16":[38,108,97,116,101],"output":[{"Character":{"data":"&late"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2408() {
    tokenize(
        r##"{"description":"Named entity: late; with a semi-colon","initialState":"Data","input":"&late;","inputUtf16":[38,108,97,116,101,59],"output":[{"Character":{"data":"‚™≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2409() {
    tokenize(
        r##"{"description":"Bad named entity: lates without a semi-colon","initialState":"Data","input":"&lates","inputUtf16":[38,108,97,116,101,115],"output":[{"Character":{"data":"&lates"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2410() {
    tokenize(
        r##"{"description":"Named entity: lates; with a semi-colon","initialState":"Data","input":"&lates;","inputUtf16":[38,108,97,116,101,115,59],"output":[{"Character":{"data":"‚™≠Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2411() {
    tokenize(
        r##"{"description":"Bad named entity: lbarr without a semi-colon","initialState":"Data","input":"&lbarr","inputUtf16":[38,108,98,97,114,114],"output":[{"Character":{"data":"&lbarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2412() {
    tokenize(
        r##"{"description":"Named entity: lbarr; with a semi-colon","initialState":"Data","input":"&lbarr;","inputUtf16":[38,108,98,97,114,114,59],"output":[{"Character":{"data":"‚§å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2413() {
    tokenize(
        r##"{"description":"Bad named entity: lbbrk without a semi-colon","initialState":"Data","input":"&lbbrk","inputUtf16":[38,108,98,98,114,107],"output":[{"Character":{"data":"&lbbrk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2414() {
    tokenize(
        r##"{"description":"Named entity: lbbrk; with a semi-colon","initialState":"Data","input":"&lbbrk;","inputUtf16":[38,108,98,98,114,107,59],"output":[{"Character":{"data":"‚ù≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2415() {
    tokenize(
        r##"{"description":"Bad named entity: lbrace without a semi-colon","initialState":"Data","input":"&lbrace","inputUtf16":[38,108,98,114,97,99,101],"output":[{"Character":{"data":"&lbrace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2416() {
    tokenize(
        r##"{"description":"Named entity: lbrace; with a semi-colon","initialState":"Data","input":"&lbrace;","inputUtf16":[38,108,98,114,97,99,101,59],"output":[{"Character":{"data":"{"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2417() {
    tokenize(
        r##"{"description":"Bad named entity: lbrack without a semi-colon","initialState":"Data","input":"&lbrack","inputUtf16":[38,108,98,114,97,99,107],"output":[{"Character":{"data":"&lbrack"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2418() {
    tokenize(
        r##"{"description":"Named entity: lbrack; with a semi-colon","initialState":"Data","input":"&lbrack;","inputUtf16":[38,108,98,114,97,99,107,59],"output":[{"Character":{"data":"["}}],"errors":[]}"##,
    );
}

#[test]
fn test_2419() {
    tokenize(
        r##"{"description":"Bad named entity: lbrke without a semi-colon","initialState":"Data","input":"&lbrke","inputUtf16":[38,108,98,114,107,101],"output":[{"Character":{"data":"&lbrke"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2420() {
    tokenize(
        r##"{"description":"Named entity: lbrke; with a semi-colon","initialState":"Data","input":"&lbrke;","inputUtf16":[38,108,98,114,107,101,59],"output":[{"Character":{"data":"‚¶ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2421() {
    tokenize(
        r##"{"description":"Bad named entity: lbrksld without a semi-colon","initialState":"Data","input":"&lbrksld","inputUtf16":[38,108,98,114,107,115,108,100],"output":[{"Character":{"data":"&lbrksld"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2422() {
    tokenize(
        r##"{"description":"Named entity: lbrksld; with a semi-colon","initialState":"Data","input":"&lbrksld;","inputUtf16":[38,108,98,114,107,115,108,100,59],"output":[{"Character":{"data":"‚¶è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2423() {
    tokenize(
        r##"{"description":"Bad named entity: lbrkslu without a semi-colon","initialState":"Data","input":"&lbrkslu","inputUtf16":[38,108,98,114,107,115,108,117],"output":[{"Character":{"data":"&lbrkslu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2424() {
    tokenize(
        r##"{"description":"Named entity: lbrkslu; with a semi-colon","initialState":"Data","input":"&lbrkslu;","inputUtf16":[38,108,98,114,107,115,108,117,59],"output":[{"Character":{"data":"‚¶ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2425() {
    tokenize(
        r##"{"description":"Bad named entity: lcaron without a semi-colon","initialState":"Data","input":"&lcaron","inputUtf16":[38,108,99,97,114,111,110],"output":[{"Character":{"data":"&lcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2426() {
    tokenize(
        r##"{"description":"Named entity: lcaron; with a semi-colon","initialState":"Data","input":"&lcaron;","inputUtf16":[38,108,99,97,114,111,110,59],"output":[{"Character":{"data":"ƒæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2427() {
    tokenize(
        r##"{"description":"Bad named entity: lcedil without a semi-colon","initialState":"Data","input":"&lcedil","inputUtf16":[38,108,99,101,100,105,108],"output":[{"Character":{"data":"&lcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2428() {
    tokenize(
        r##"{"description":"Named entity: lcedil; with a semi-colon","initialState":"Data","input":"&lcedil;","inputUtf16":[38,108,99,101,100,105,108,59],"output":[{"Character":{"data":"ƒº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2429() {
    tokenize(
        r##"{"description":"Bad named entity: lceil without a semi-colon","initialState":"Data","input":"&lceil","inputUtf16":[38,108,99,101,105,108],"output":[{"Character":{"data":"&lceil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2430() {
    tokenize(
        r##"{"description":"Named entity: lceil; with a semi-colon","initialState":"Data","input":"&lceil;","inputUtf16":[38,108,99,101,105,108,59],"output":[{"Character":{"data":"‚åà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2431() {
    tokenize(
        r##"{"description":"Bad named entity: lcub without a semi-colon","initialState":"Data","input":"&lcub","inputUtf16":[38,108,99,117,98],"output":[{"Character":{"data":"&lcub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2432() {
    tokenize(
        r##"{"description":"Named entity: lcub; with a semi-colon","initialState":"Data","input":"&lcub;","inputUtf16":[38,108,99,117,98,59],"output":[{"Character":{"data":"{"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2433() {
    tokenize(
        r##"{"description":"Bad named entity: lcy without a semi-colon","initialState":"Data","input":"&lcy","inputUtf16":[38,108,99,121],"output":[{"Character":{"data":"&lcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2434() {
    tokenize(
        r##"{"description":"Named entity: lcy; with a semi-colon","initialState":"Data","input":"&lcy;","inputUtf16":[38,108,99,121,59],"output":[{"Character":{"data":"–ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2435() {
    tokenize(
        r##"{"description":"Bad named entity: ldca without a semi-colon","initialState":"Data","input":"&ldca","inputUtf16":[38,108,100,99,97],"output":[{"Character":{"data":"&ldca"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2436() {
    tokenize(
        r##"{"description":"Named entity: ldca; with a semi-colon","initialState":"Data","input":"&ldca;","inputUtf16":[38,108,100,99,97,59],"output":[{"Character":{"data":"‚§∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2437() {
    tokenize(
        r##"{"description":"Bad named entity: ldquo without a semi-colon","initialState":"Data","input":"&ldquo","inputUtf16":[38,108,100,113,117,111],"output":[{"Character":{"data":"&ldquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2438() {
    tokenize(
        r##"{"description":"Named entity: ldquo; with a semi-colon","initialState":"Data","input":"&ldquo;","inputUtf16":[38,108,100,113,117,111,59],"output":[{"Character":{"data":"‚Äú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2439() {
    tokenize(
        r##"{"description":"Bad named entity: ldquor without a semi-colon","initialState":"Data","input":"&ldquor","inputUtf16":[38,108,100,113,117,111,114],"output":[{"Character":{"data":"&ldquor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2440() {
    tokenize(
        r##"{"description":"Named entity: ldquor; with a semi-colon","initialState":"Data","input":"&ldquor;","inputUtf16":[38,108,100,113,117,111,114,59],"output":[{"Character":{"data":"‚Äû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2441() {
    tokenize(
        r##"{"description":"Bad named entity: ldrdhar without a semi-colon","initialState":"Data","input":"&ldrdhar","inputUtf16":[38,108,100,114,100,104,97,114],"output":[{"Character":{"data":"&ldrdhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2442() {
    tokenize(
        r##"{"description":"Named entity: ldrdhar; with a semi-colon","initialState":"Data","input":"&ldrdhar;","inputUtf16":[38,108,100,114,100,104,97,114,59],"output":[{"Character":{"data":"‚•ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2443() {
    tokenize(
        r##"{"description":"Bad named entity: ldrushar without a semi-colon","initialState":"Data","input":"&ldrushar","inputUtf16":[38,108,100,114,117,115,104,97,114],"output":[{"Character":{"data":"&ldrushar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2444() {
    tokenize(
        r##"{"description":"Named entity: ldrushar; with a semi-colon","initialState":"Data","input":"&ldrushar;","inputUtf16":[38,108,100,114,117,115,104,97,114,59],"output":[{"Character":{"data":"‚•ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2445() {
    tokenize(
        r##"{"description":"Bad named entity: ldsh without a semi-colon","initialState":"Data","input":"&ldsh","inputUtf16":[38,108,100,115,104],"output":[{"Character":{"data":"&ldsh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2446() {
    tokenize(
        r##"{"description":"Named entity: ldsh; with a semi-colon","initialState":"Data","input":"&ldsh;","inputUtf16":[38,108,100,115,104,59],"output":[{"Character":{"data":"‚Ü≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2447() {
    tokenize(
        r##"{"description":"Bad named entity: le without a semi-colon","initialState":"Data","input":"&le","inputUtf16":[38,108,101],"output":[{"Character":{"data":"&le"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2448() {
    tokenize(
        r##"{"description":"Named entity: le; with a semi-colon","initialState":"Data","input":"&le;","inputUtf16":[38,108,101,59],"output":[{"Character":{"data":"‚â§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2449() {
    tokenize(
        r##"{"description":"Bad named entity: leftarrow without a semi-colon","initialState":"Data","input":"&leftarrow","inputUtf16":[38,108,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&leftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2450() {
    tokenize(
        r##"{"description":"Named entity: leftarrow; with a semi-colon","initialState":"Data","input":"&leftarrow;","inputUtf16":[38,108,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2451() {
    tokenize(
        r##"{"description":"Bad named entity: leftarrowtail without a semi-colon","initialState":"Data","input":"&leftarrowtail","inputUtf16":[38,108,101,102,116,97,114,114,111,119,116,97,105,108],"output":[{"Character":{"data":"&leftarrowtail"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2452() {
    tokenize(
        r##"{"description":"Named entity: leftarrowtail; with a semi-colon","initialState":"Data","input":"&leftarrowtail;","inputUtf16":[38,108,101,102,116,97,114,114,111,119,116,97,105,108,59],"output":[{"Character":{"data":"‚Ü¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2453() {
    tokenize(
        r##"{"description":"Bad named entity: leftharpoondown without a semi-colon","initialState":"Data","input":"&leftharpoondown","inputUtf16":[38,108,101,102,116,104,97,114,112,111,111,110,100,111,119,110],"output":[{"Character":{"data":"&leftharpoondown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2454() {
    tokenize(
        r##"{"description":"Named entity: leftharpoondown; with a semi-colon","initialState":"Data","input":"&leftharpoondown;","inputUtf16":[38,108,101,102,116,104,97,114,112,111,111,110,100,111,119,110,59],"output":[{"Character":{"data":"‚ÜΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2455() {
    tokenize(
        r##"{"description":"Bad named entity: leftharpoonup without a semi-colon","initialState":"Data","input":"&leftharpoonup","inputUtf16":[38,108,101,102,116,104,97,114,112,111,111,110,117,112],"output":[{"Character":{"data":"&leftharpoonup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2456() {
    tokenize(
        r##"{"description":"Named entity: leftharpoonup; with a semi-colon","initialState":"Data","input":"&leftharpoonup;","inputUtf16":[38,108,101,102,116,104,97,114,112,111,111,110,117,112,59],"output":[{"Character":{"data":"‚Üº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2457() {
    tokenize(
        r##"{"description":"Bad named entity: leftleftarrows without a semi-colon","initialState":"Data","input":"&leftleftarrows","inputUtf16":[38,108,101,102,116,108,101,102,116,97,114,114,111,119,115],"output":[{"Character":{"data":"&leftleftarrows"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2458() {
    tokenize(
        r##"{"description":"Named entity: leftleftarrows; with a semi-colon","initialState":"Data","input":"&leftleftarrows;","inputUtf16":[38,108,101,102,116,108,101,102,116,97,114,114,111,119,115,59],"output":[{"Character":{"data":"‚áá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2459() {
    tokenize(
        r##"{"description":"Bad named entity: leftrightarrow without a semi-colon","initialState":"Data","input":"&leftrightarrow","inputUtf16":[38,108,101,102,116,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&leftrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2460() {
    tokenize(
        r##"{"description":"Named entity: leftrightarrow; with a semi-colon","initialState":"Data","input":"&leftrightarrow;","inputUtf16":[38,108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2461() {
    tokenize(
        r##"{"description":"Bad named entity: leftrightarrows without a semi-colon","initialState":"Data","input":"&leftrightarrows","inputUtf16":[38,108,101,102,116,114,105,103,104,116,97,114,114,111,119,115],"output":[{"Character":{"data":"&leftrightarrows"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2462() {
    tokenize(
        r##"{"description":"Named entity: leftrightarrows; with a semi-colon","initialState":"Data","input":"&leftrightarrows;","inputUtf16":[38,108,101,102,116,114,105,103,104,116,97,114,114,111,119,115,59],"output":[{"Character":{"data":"‚áÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2463() {
    tokenize(
        r##"{"description":"Bad named entity: leftrightharpoons without a semi-colon","initialState":"Data","input":"&leftrightharpoons","inputUtf16":[38,108,101,102,116,114,105,103,104,116,104,97,114,112,111,111,110,115],"output":[{"Character":{"data":"&leftrightharpoons"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2464() {
    tokenize(
        r##"{"description":"Named entity: leftrightharpoons; with a semi-colon","initialState":"Data","input":"&leftrightharpoons;","inputUtf16":[38,108,101,102,116,114,105,103,104,116,104,97,114,112,111,111,110,115,59],"output":[{"Character":{"data":"‚áã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2465() {
    tokenize(
        r##"{"description":"Bad named entity: leftrightsquigarrow without a semi-colon","initialState":"Data","input":"&leftrightsquigarrow","inputUtf16":[38,108,101,102,116,114,105,103,104,116,115,113,117,105,103,97,114,114,111,119],"output":[{"Character":{"data":"&leftrightsquigarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2466() {
    tokenize(
        r##"{"description":"Named entity: leftrightsquigarrow; with a semi-colon","initialState":"Data","input":"&leftrightsquigarrow;","inputUtf16":[38,108,101,102,116,114,105,103,104,116,115,113,117,105,103,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Ü≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2467() {
    tokenize(
        r##"{"description":"Bad named entity: leftthreetimes without a semi-colon","initialState":"Data","input":"&leftthreetimes","inputUtf16":[38,108,101,102,116,116,104,114,101,101,116,105,109,101,115],"output":[{"Character":{"data":"&leftthreetimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2468() {
    tokenize(
        r##"{"description":"Named entity: leftthreetimes; with a semi-colon","initialState":"Data","input":"&leftthreetimes;","inputUtf16":[38,108,101,102,116,116,104,114,101,101,116,105,109,101,115,59],"output":[{"Character":{"data":"‚ãã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2469() {
    tokenize(
        r##"{"description":"Bad named entity: leg without a semi-colon","initialState":"Data","input":"&leg","inputUtf16":[38,108,101,103],"output":[{"Character":{"data":"&leg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2470() {
    tokenize(
        r##"{"description":"Named entity: leg; with a semi-colon","initialState":"Data","input":"&leg;","inputUtf16":[38,108,101,103,59],"output":[{"Character":{"data":"‚ãö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2471() {
    tokenize(
        r##"{"description":"Bad named entity: leq without a semi-colon","initialState":"Data","input":"&leq","inputUtf16":[38,108,101,113],"output":[{"Character":{"data":"&leq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2472() {
    tokenize(
        r##"{"description":"Named entity: leq; with a semi-colon","initialState":"Data","input":"&leq;","inputUtf16":[38,108,101,113,59],"output":[{"Character":{"data":"‚â§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2473() {
    tokenize(
        r##"{"description":"Bad named entity: leqq without a semi-colon","initialState":"Data","input":"&leqq","inputUtf16":[38,108,101,113,113],"output":[{"Character":{"data":"&leqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2474() {
    tokenize(
        r##"{"description":"Named entity: leqq; with a semi-colon","initialState":"Data","input":"&leqq;","inputUtf16":[38,108,101,113,113,59],"output":[{"Character":{"data":"‚â¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2475() {
    tokenize(
        r##"{"description":"Bad named entity: leqslant without a semi-colon","initialState":"Data","input":"&leqslant","inputUtf16":[38,108,101,113,115,108,97,110,116],"output":[{"Character":{"data":"&leqslant"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2476() {
    tokenize(
        r##"{"description":"Named entity: leqslant; with a semi-colon","initialState":"Data","input":"&leqslant;","inputUtf16":[38,108,101,113,115,108,97,110,116,59],"output":[{"Character":{"data":"‚©Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2477() {
    tokenize(
        r##"{"description":"Bad named entity: les without a semi-colon","initialState":"Data","input":"&les","inputUtf16":[38,108,101,115],"output":[{"Character":{"data":"&les"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2478() {
    tokenize(
        r##"{"description":"Named entity: les; with a semi-colon","initialState":"Data","input":"&les;","inputUtf16":[38,108,101,115,59],"output":[{"Character":{"data":"‚©Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2479() {
    tokenize(
        r##"{"description":"Bad named entity: lescc without a semi-colon","initialState":"Data","input":"&lescc","inputUtf16":[38,108,101,115,99,99],"output":[{"Character":{"data":"&lescc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2480() {
    tokenize(
        r##"{"description":"Named entity: lescc; with a semi-colon","initialState":"Data","input":"&lescc;","inputUtf16":[38,108,101,115,99,99,59],"output":[{"Character":{"data":"‚™®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2481() {
    tokenize(
        r##"{"description":"Bad named entity: lesdot without a semi-colon","initialState":"Data","input":"&lesdot","inputUtf16":[38,108,101,115,100,111,116],"output":[{"Character":{"data":"&lesdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2482() {
    tokenize(
        r##"{"description":"Named entity: lesdot; with a semi-colon","initialState":"Data","input":"&lesdot;","inputUtf16":[38,108,101,115,100,111,116,59],"output":[{"Character":{"data":"‚©ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2483() {
    tokenize(
        r##"{"description":"Bad named entity: lesdoto without a semi-colon","initialState":"Data","input":"&lesdoto","inputUtf16":[38,108,101,115,100,111,116,111],"output":[{"Character":{"data":"&lesdoto"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2484() {
    tokenize(
        r##"{"description":"Named entity: lesdoto; with a semi-colon","initialState":"Data","input":"&lesdoto;","inputUtf16":[38,108,101,115,100,111,116,111,59],"output":[{"Character":{"data":"‚™Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2485() {
    tokenize(
        r##"{"description":"Bad named entity: lesdotor without a semi-colon","initialState":"Data","input":"&lesdotor","inputUtf16":[38,108,101,115,100,111,116,111,114],"output":[{"Character":{"data":"&lesdotor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2486() {
    tokenize(
        r##"{"description":"Named entity: lesdotor; with a semi-colon","initialState":"Data","input":"&lesdotor;","inputUtf16":[38,108,101,115,100,111,116,111,114,59],"output":[{"Character":{"data":"‚™É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2487() {
    tokenize(
        r##"{"description":"Bad named entity: lesg without a semi-colon","initialState":"Data","input":"&lesg","inputUtf16":[38,108,101,115,103],"output":[{"Character":{"data":"&lesg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2488() {
    tokenize(
        r##"{"description":"Named entity: lesg; with a semi-colon","initialState":"Data","input":"&lesg;","inputUtf16":[38,108,101,115,103,59],"output":[{"Character":{"data":"‚ãöÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2489() {
    tokenize(
        r##"{"description":"Bad named entity: lesges without a semi-colon","initialState":"Data","input":"&lesges","inputUtf16":[38,108,101,115,103,101,115],"output":[{"Character":{"data":"&lesges"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2490() {
    tokenize(
        r##"{"description":"Named entity: lesges; with a semi-colon","initialState":"Data","input":"&lesges;","inputUtf16":[38,108,101,115,103,101,115,59],"output":[{"Character":{"data":"‚™ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2491() {
    tokenize(
        r##"{"description":"Bad named entity: lessapprox without a semi-colon","initialState":"Data","input":"&lessapprox","inputUtf16":[38,108,101,115,115,97,112,112,114,111,120],"output":[{"Character":{"data":"&lessapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2492() {
    tokenize(
        r##"{"description":"Named entity: lessapprox; with a semi-colon","initialState":"Data","input":"&lessapprox;","inputUtf16":[38,108,101,115,115,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2493() {
    tokenize(
        r##"{"description":"Bad named entity: lessdot without a semi-colon","initialState":"Data","input":"&lessdot","inputUtf16":[38,108,101,115,115,100,111,116],"output":[{"Character":{"data":"&lessdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2494() {
    tokenize(
        r##"{"description":"Named entity: lessdot; with a semi-colon","initialState":"Data","input":"&lessdot;","inputUtf16":[38,108,101,115,115,100,111,116,59],"output":[{"Character":{"data":"‚ãñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2495() {
    tokenize(
        r##"{"description":"Bad named entity: lesseqgtr without a semi-colon","initialState":"Data","input":"&lesseqgtr","inputUtf16":[38,108,101,115,115,101,113,103,116,114],"output":[{"Character":{"data":"&lesseqgtr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2496() {
    tokenize(
        r##"{"description":"Named entity: lesseqgtr; with a semi-colon","initialState":"Data","input":"&lesseqgtr;","inputUtf16":[38,108,101,115,115,101,113,103,116,114,59],"output":[{"Character":{"data":"‚ãö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2497() {
    tokenize(
        r##"{"description":"Bad named entity: lesseqqgtr without a semi-colon","initialState":"Data","input":"&lesseqqgtr","inputUtf16":[38,108,101,115,115,101,113,113,103,116,114],"output":[{"Character":{"data":"&lesseqqgtr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2498() {
    tokenize(
        r##"{"description":"Named entity: lesseqqgtr; with a semi-colon","initialState":"Data","input":"&lesseqqgtr;","inputUtf16":[38,108,101,115,115,101,113,113,103,116,114,59],"output":[{"Character":{"data":"‚™ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2499() {
    tokenize(
        r##"{"description":"Bad named entity: lessgtr without a semi-colon","initialState":"Data","input":"&lessgtr","inputUtf16":[38,108,101,115,115,103,116,114],"output":[{"Character":{"data":"&lessgtr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2500() {
    tokenize(
        r##"{"description":"Named entity: lessgtr; with a semi-colon","initialState":"Data","input":"&lessgtr;","inputUtf16":[38,108,101,115,115,103,116,114,59],"output":[{"Character":{"data":"‚â∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2501() {
    tokenize(
        r##"{"description":"Bad named entity: lesssim without a semi-colon","initialState":"Data","input":"&lesssim","inputUtf16":[38,108,101,115,115,115,105,109],"output":[{"Character":{"data":"&lesssim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2502() {
    tokenize(
        r##"{"description":"Named entity: lesssim; with a semi-colon","initialState":"Data","input":"&lesssim;","inputUtf16":[38,108,101,115,115,115,105,109,59],"output":[{"Character":{"data":"‚â≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2503() {
    tokenize(
        r##"{"description":"Bad named entity: lfisht without a semi-colon","initialState":"Data","input":"&lfisht","inputUtf16":[38,108,102,105,115,104,116],"output":[{"Character":{"data":"&lfisht"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2504() {
    tokenize(
        r##"{"description":"Named entity: lfisht; with a semi-colon","initialState":"Data","input":"&lfisht;","inputUtf16":[38,108,102,105,115,104,116,59],"output":[{"Character":{"data":"‚•º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2505() {
    tokenize(
        r##"{"description":"Bad named entity: lfloor without a semi-colon","initialState":"Data","input":"&lfloor","inputUtf16":[38,108,102,108,111,111,114],"output":[{"Character":{"data":"&lfloor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2506() {
    tokenize(
        r##"{"description":"Named entity: lfloor; with a semi-colon","initialState":"Data","input":"&lfloor;","inputUtf16":[38,108,102,108,111,111,114,59],"output":[{"Character":{"data":"‚åä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2507() {
    tokenize(
        r##"{"description":"Bad named entity: lfr without a semi-colon","initialState":"Data","input":"&lfr","inputUtf16":[38,108,102,114],"output":[{"Character":{"data":"&lfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2508() {
    tokenize(
        r##"{"description":"Named entity: lfr; with a semi-colon","initialState":"Data","input":"&lfr;","inputUtf16":[38,108,102,114,59],"output":[{"Character":{"data":"ùî©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2509() {
    tokenize(
        r##"{"description":"Bad named entity: lg without a semi-colon","initialState":"Data","input":"&lg","inputUtf16":[38,108,103],"output":[{"Character":{"data":"&lg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2510() {
    tokenize(
        r##"{"description":"Named entity: lg; with a semi-colon","initialState":"Data","input":"&lg;","inputUtf16":[38,108,103,59],"output":[{"Character":{"data":"‚â∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2511() {
    tokenize(
        r##"{"description":"Bad named entity: lgE without a semi-colon","initialState":"Data","input":"&lgE","inputUtf16":[38,108,103,69],"output":[{"Character":{"data":"&lgE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2512() {
    tokenize(
        r##"{"description":"Named entity: lgE; with a semi-colon","initialState":"Data","input":"&lgE;","inputUtf16":[38,108,103,69,59],"output":[{"Character":{"data":"‚™ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2513() {
    tokenize(
        r##"{"description":"Bad named entity: lhard without a semi-colon","initialState":"Data","input":"&lhard","inputUtf16":[38,108,104,97,114,100],"output":[{"Character":{"data":"&lhard"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2514() {
    tokenize(
        r##"{"description":"Named entity: lhard; with a semi-colon","initialState":"Data","input":"&lhard;","inputUtf16":[38,108,104,97,114,100,59],"output":[{"Character":{"data":"‚ÜΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2515() {
    tokenize(
        r##"{"description":"Bad named entity: lharu without a semi-colon","initialState":"Data","input":"&lharu","inputUtf16":[38,108,104,97,114,117],"output":[{"Character":{"data":"&lharu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2516() {
    tokenize(
        r##"{"description":"Named entity: lharu; with a semi-colon","initialState":"Data","input":"&lharu;","inputUtf16":[38,108,104,97,114,117,59],"output":[{"Character":{"data":"‚Üº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2517() {
    tokenize(
        r##"{"description":"Bad named entity: lharul without a semi-colon","initialState":"Data","input":"&lharul","inputUtf16":[38,108,104,97,114,117,108],"output":[{"Character":{"data":"&lharul"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2518() {
    tokenize(
        r##"{"description":"Named entity: lharul; with a semi-colon","initialState":"Data","input":"&lharul;","inputUtf16":[38,108,104,97,114,117,108,59],"output":[{"Character":{"data":"‚•™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2519() {
    tokenize(
        r##"{"description":"Bad named entity: lhblk without a semi-colon","initialState":"Data","input":"&lhblk","inputUtf16":[38,108,104,98,108,107],"output":[{"Character":{"data":"&lhblk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2520() {
    tokenize(
        r##"{"description":"Named entity: lhblk; with a semi-colon","initialState":"Data","input":"&lhblk;","inputUtf16":[38,108,104,98,108,107,59],"output":[{"Character":{"data":"‚ñÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2521() {
    tokenize(
        r##"{"description":"Bad named entity: ljcy without a semi-colon","initialState":"Data","input":"&ljcy","inputUtf16":[38,108,106,99,121],"output":[{"Character":{"data":"&ljcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2522() {
    tokenize(
        r##"{"description":"Named entity: ljcy; with a semi-colon","initialState":"Data","input":"&ljcy;","inputUtf16":[38,108,106,99,121,59],"output":[{"Character":{"data":"—ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2523() {
    tokenize(
        r##"{"description":"Bad named entity: ll without a semi-colon","initialState":"Data","input":"&ll","inputUtf16":[38,108,108],"output":[{"Character":{"data":"&ll"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2524() {
    tokenize(
        r##"{"description":"Named entity: ll; with a semi-colon","initialState":"Data","input":"&ll;","inputUtf16":[38,108,108,59],"output":[{"Character":{"data":"‚â™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2525() {
    tokenize(
        r##"{"description":"Bad named entity: llarr without a semi-colon","initialState":"Data","input":"&llarr","inputUtf16":[38,108,108,97,114,114],"output":[{"Character":{"data":"&llarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2526() {
    tokenize(
        r##"{"description":"Named entity: llarr; with a semi-colon","initialState":"Data","input":"&llarr;","inputUtf16":[38,108,108,97,114,114,59],"output":[{"Character":{"data":"‚áá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2527() {
    tokenize(
        r##"{"description":"Bad named entity: llcorner without a semi-colon","initialState":"Data","input":"&llcorner","inputUtf16":[38,108,108,99,111,114,110,101,114],"output":[{"Character":{"data":"&llcorner"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2528() {
    tokenize(
        r##"{"description":"Named entity: llcorner; with a semi-colon","initialState":"Data","input":"&llcorner;","inputUtf16":[38,108,108,99,111,114,110,101,114,59],"output":[{"Character":{"data":"‚åû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2529() {
    tokenize(
        r##"{"description":"Bad named entity: llhard without a semi-colon","initialState":"Data","input":"&llhard","inputUtf16":[38,108,108,104,97,114,100],"output":[{"Character":{"data":"&llhard"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2530() {
    tokenize(
        r##"{"description":"Named entity: llhard; with a semi-colon","initialState":"Data","input":"&llhard;","inputUtf16":[38,108,108,104,97,114,100,59],"output":[{"Character":{"data":"‚•´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2531() {
    tokenize(
        r##"{"description":"Bad named entity: lltri without a semi-colon","initialState":"Data","input":"&lltri","inputUtf16":[38,108,108,116,114,105],"output":[{"Character":{"data":"&lltri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2532() {
    tokenize(
        r##"{"description":"Named entity: lltri; with a semi-colon","initialState":"Data","input":"&lltri;","inputUtf16":[38,108,108,116,114,105,59],"output":[{"Character":{"data":"‚ó∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2533() {
    tokenize(
        r##"{"description":"Bad named entity: lmidot without a semi-colon","initialState":"Data","input":"&lmidot","inputUtf16":[38,108,109,105,100,111,116],"output":[{"Character":{"data":"&lmidot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2534() {
    tokenize(
        r##"{"description":"Named entity: lmidot; with a semi-colon","initialState":"Data","input":"&lmidot;","inputUtf16":[38,108,109,105,100,111,116,59],"output":[{"Character":{"data":"≈Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2535() {
    tokenize(
        r##"{"description":"Bad named entity: lmoust without a semi-colon","initialState":"Data","input":"&lmoust","inputUtf16":[38,108,109,111,117,115,116],"output":[{"Character":{"data":"&lmoust"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2536() {
    tokenize(
        r##"{"description":"Named entity: lmoust; with a semi-colon","initialState":"Data","input":"&lmoust;","inputUtf16":[38,108,109,111,117,115,116,59],"output":[{"Character":{"data":"‚é∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2537() {
    tokenize(
        r##"{"description":"Bad named entity: lmoustache without a semi-colon","initialState":"Data","input":"&lmoustache","inputUtf16":[38,108,109,111,117,115,116,97,99,104,101],"output":[{"Character":{"data":"&lmoustache"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2538() {
    tokenize(
        r##"{"description":"Named entity: lmoustache; with a semi-colon","initialState":"Data","input":"&lmoustache;","inputUtf16":[38,108,109,111,117,115,116,97,99,104,101,59],"output":[{"Character":{"data":"‚é∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2539() {
    tokenize(
        r##"{"description":"Bad named entity: lnE without a semi-colon","initialState":"Data","input":"&lnE","inputUtf16":[38,108,110,69],"output":[{"Character":{"data":"&lnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2540() {
    tokenize(
        r##"{"description":"Named entity: lnE; with a semi-colon","initialState":"Data","input":"&lnE;","inputUtf16":[38,108,110,69,59],"output":[{"Character":{"data":"‚â®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2541() {
    tokenize(
        r##"{"description":"Bad named entity: lnap without a semi-colon","initialState":"Data","input":"&lnap","inputUtf16":[38,108,110,97,112],"output":[{"Character":{"data":"&lnap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2542() {
    tokenize(
        r##"{"description":"Named entity: lnap; with a semi-colon","initialState":"Data","input":"&lnap;","inputUtf16":[38,108,110,97,112,59],"output":[{"Character":{"data":"‚™â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2543() {
    tokenize(
        r##"{"description":"Bad named entity: lnapprox without a semi-colon","initialState":"Data","input":"&lnapprox","inputUtf16":[38,108,110,97,112,112,114,111,120],"output":[{"Character":{"data":"&lnapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2544() {
    tokenize(
        r##"{"description":"Named entity: lnapprox; with a semi-colon","initialState":"Data","input":"&lnapprox;","inputUtf16":[38,108,110,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2545() {
    tokenize(
        r##"{"description":"Bad named entity: lne without a semi-colon","initialState":"Data","input":"&lne","inputUtf16":[38,108,110,101],"output":[{"Character":{"data":"&lne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2546() {
    tokenize(
        r##"{"description":"Named entity: lne; with a semi-colon","initialState":"Data","input":"&lne;","inputUtf16":[38,108,110,101,59],"output":[{"Character":{"data":"‚™á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2547() {
    tokenize(
        r##"{"description":"Bad named entity: lneq without a semi-colon","initialState":"Data","input":"&lneq","inputUtf16":[38,108,110,101,113],"output":[{"Character":{"data":"&lneq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2548() {
    tokenize(
        r##"{"description":"Named entity: lneq; with a semi-colon","initialState":"Data","input":"&lneq;","inputUtf16":[38,108,110,101,113,59],"output":[{"Character":{"data":"‚™á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2549() {
    tokenize(
        r##"{"description":"Bad named entity: lneqq without a semi-colon","initialState":"Data","input":"&lneqq","inputUtf16":[38,108,110,101,113,113],"output":[{"Character":{"data":"&lneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2550() {
    tokenize(
        r##"{"description":"Named entity: lneqq; with a semi-colon","initialState":"Data","input":"&lneqq;","inputUtf16":[38,108,110,101,113,113,59],"output":[{"Character":{"data":"‚â®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2551() {
    tokenize(
        r##"{"description":"Bad named entity: lnsim without a semi-colon","initialState":"Data","input":"&lnsim","inputUtf16":[38,108,110,115,105,109],"output":[{"Character":{"data":"&lnsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2552() {
    tokenize(
        r##"{"description":"Named entity: lnsim; with a semi-colon","initialState":"Data","input":"&lnsim;","inputUtf16":[38,108,110,115,105,109,59],"output":[{"Character":{"data":"‚ã¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2553() {
    tokenize(
        r##"{"description":"Bad named entity: loang without a semi-colon","initialState":"Data","input":"&loang","inputUtf16":[38,108,111,97,110,103],"output":[{"Character":{"data":"&loang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2554() {
    tokenize(
        r##"{"description":"Named entity: loang; with a semi-colon","initialState":"Data","input":"&loang;","inputUtf16":[38,108,111,97,110,103,59],"output":[{"Character":{"data":"‚ü¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2555() {
    tokenize(
        r##"{"description":"Bad named entity: loarr without a semi-colon","initialState":"Data","input":"&loarr","inputUtf16":[38,108,111,97,114,114],"output":[{"Character":{"data":"&loarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2556() {
    tokenize(
        r##"{"description":"Named entity: loarr; with a semi-colon","initialState":"Data","input":"&loarr;","inputUtf16":[38,108,111,97,114,114,59],"output":[{"Character":{"data":"‚áΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2557() {
    tokenize(
        r##"{"description":"Bad named entity: lobrk without a semi-colon","initialState":"Data","input":"&lobrk","inputUtf16":[38,108,111,98,114,107],"output":[{"Character":{"data":"&lobrk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2558() {
    tokenize(
        r##"{"description":"Named entity: lobrk; with a semi-colon","initialState":"Data","input":"&lobrk;","inputUtf16":[38,108,111,98,114,107,59],"output":[{"Character":{"data":"‚ü¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2559() {
    tokenize(
        r##"{"description":"Bad named entity: longleftarrow without a semi-colon","initialState":"Data","input":"&longleftarrow","inputUtf16":[38,108,111,110,103,108,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&longleftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2560() {
    tokenize(
        r##"{"description":"Named entity: longleftarrow; with a semi-colon","initialState":"Data","input":"&longleftarrow;","inputUtf16":[38,108,111,110,103,108,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚üµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2561() {
    tokenize(
        r##"{"description":"Bad named entity: longleftrightarrow without a semi-colon","initialState":"Data","input":"&longleftrightarrow","inputUtf16":[38,108,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&longleftrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2562() {
    tokenize(
        r##"{"description":"Named entity: longleftrightarrow; with a semi-colon","initialState":"Data","input":"&longleftrightarrow;","inputUtf16":[38,108,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2563() {
    tokenize(
        r##"{"description":"Bad named entity: longmapsto without a semi-colon","initialState":"Data","input":"&longmapsto","inputUtf16":[38,108,111,110,103,109,97,112,115,116,111],"output":[{"Character":{"data":"&longmapsto"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2564() {
    tokenize(
        r##"{"description":"Named entity: longmapsto; with a semi-colon","initialState":"Data","input":"&longmapsto;","inputUtf16":[38,108,111,110,103,109,97,112,115,116,111,59],"output":[{"Character":{"data":"‚üº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2565() {
    tokenize(
        r##"{"description":"Bad named entity: longrightarrow without a semi-colon","initialState":"Data","input":"&longrightarrow","inputUtf16":[38,108,111,110,103,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&longrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2566() {
    tokenize(
        r##"{"description":"Named entity: longrightarrow; with a semi-colon","initialState":"Data","input":"&longrightarrow;","inputUtf16":[38,108,111,110,103,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚ü∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2567() {
    tokenize(
        r##"{"description":"Bad named entity: looparrowleft without a semi-colon","initialState":"Data","input":"&looparrowleft","inputUtf16":[38,108,111,111,112,97,114,114,111,119,108,101,102,116],"output":[{"Character":{"data":"&looparrowleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2568() {
    tokenize(
        r##"{"description":"Named entity: looparrowleft; with a semi-colon","initialState":"Data","input":"&looparrowleft;","inputUtf16":[38,108,111,111,112,97,114,114,111,119,108,101,102,116,59],"output":[{"Character":{"data":"‚Ü´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2569() {
    tokenize(
        r##"{"description":"Bad named entity: looparrowright without a semi-colon","initialState":"Data","input":"&looparrowright","inputUtf16":[38,108,111,111,112,97,114,114,111,119,114,105,103,104,116],"output":[{"Character":{"data":"&looparrowright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2570() {
    tokenize(
        r##"{"description":"Named entity: looparrowright; with a semi-colon","initialState":"Data","input":"&looparrowright;","inputUtf16":[38,108,111,111,112,97,114,114,111,119,114,105,103,104,116,59],"output":[{"Character":{"data":"‚Ü¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2571() {
    tokenize(
        r##"{"description":"Bad named entity: lopar without a semi-colon","initialState":"Data","input":"&lopar","inputUtf16":[38,108,111,112,97,114],"output":[{"Character":{"data":"&lopar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2572() {
    tokenize(
        r##"{"description":"Named entity: lopar; with a semi-colon","initialState":"Data","input":"&lopar;","inputUtf16":[38,108,111,112,97,114,59],"output":[{"Character":{"data":"‚¶Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2573() {
    tokenize(
        r##"{"description":"Bad named entity: lopf without a semi-colon","initialState":"Data","input":"&lopf","inputUtf16":[38,108,111,112,102],"output":[{"Character":{"data":"&lopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2574() {
    tokenize(
        r##"{"description":"Named entity: lopf; with a semi-colon","initialState":"Data","input":"&lopf;","inputUtf16":[38,108,111,112,102,59],"output":[{"Character":{"data":"ùïù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2575() {
    tokenize(
        r##"{"description":"Bad named entity: loplus without a semi-colon","initialState":"Data","input":"&loplus","inputUtf16":[38,108,111,112,108,117,115],"output":[{"Character":{"data":"&loplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2576() {
    tokenize(
        r##"{"description":"Named entity: loplus; with a semi-colon","initialState":"Data","input":"&loplus;","inputUtf16":[38,108,111,112,108,117,115,59],"output":[{"Character":{"data":"‚®≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2577() {
    tokenize(
        r##"{"description":"Bad named entity: lotimes without a semi-colon","initialState":"Data","input":"&lotimes","inputUtf16":[38,108,111,116,105,109,101,115],"output":[{"Character":{"data":"&lotimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2578() {
    tokenize(
        r##"{"description":"Named entity: lotimes; with a semi-colon","initialState":"Data","input":"&lotimes;","inputUtf16":[38,108,111,116,105,109,101,115,59],"output":[{"Character":{"data":"‚®¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2579() {
    tokenize(
        r##"{"description":"Bad named entity: lowast without a semi-colon","initialState":"Data","input":"&lowast","inputUtf16":[38,108,111,119,97,115,116],"output":[{"Character":{"data":"&lowast"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2580() {
    tokenize(
        r##"{"description":"Named entity: lowast; with a semi-colon","initialState":"Data","input":"&lowast;","inputUtf16":[38,108,111,119,97,115,116,59],"output":[{"Character":{"data":"‚àó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2581() {
    tokenize(
        r##"{"description":"Bad named entity: lowbar without a semi-colon","initialState":"Data","input":"&lowbar","inputUtf16":[38,108,111,119,98,97,114],"output":[{"Character":{"data":"&lowbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2582() {
    tokenize(
        r##"{"description":"Named entity: lowbar; with a semi-colon","initialState":"Data","input":"&lowbar;","inputUtf16":[38,108,111,119,98,97,114,59],"output":[{"Character":{"data":"_"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2583() {
    tokenize(
        r##"{"description":"Bad named entity: loz without a semi-colon","initialState":"Data","input":"&loz","inputUtf16":[38,108,111,122],"output":[{"Character":{"data":"&loz"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2584() {
    tokenize(
        r##"{"description":"Named entity: loz; with a semi-colon","initialState":"Data","input":"&loz;","inputUtf16":[38,108,111,122,59],"output":[{"Character":{"data":"‚óä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2585() {
    tokenize(
        r##"{"description":"Bad named entity: lozenge without a semi-colon","initialState":"Data","input":"&lozenge","inputUtf16":[38,108,111,122,101,110,103,101],"output":[{"Character":{"data":"&lozenge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2586() {
    tokenize(
        r##"{"description":"Named entity: lozenge; with a semi-colon","initialState":"Data","input":"&lozenge;","inputUtf16":[38,108,111,122,101,110,103,101,59],"output":[{"Character":{"data":"‚óä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2587() {
    tokenize(
        r##"{"description":"Bad named entity: lozf without a semi-colon","initialState":"Data","input":"&lozf","inputUtf16":[38,108,111,122,102],"output":[{"Character":{"data":"&lozf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2588() {
    tokenize(
        r##"{"description":"Named entity: lozf; with a semi-colon","initialState":"Data","input":"&lozf;","inputUtf16":[38,108,111,122,102,59],"output":[{"Character":{"data":"‚ß´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2589() {
    tokenize(
        r##"{"description":"Bad named entity: lpar without a semi-colon","initialState":"Data","input":"&lpar","inputUtf16":[38,108,112,97,114],"output":[{"Character":{"data":"&lpar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2590() {
    tokenize(
        r##"{"description":"Named entity: lpar; with a semi-colon","initialState":"Data","input":"&lpar;","inputUtf16":[38,108,112,97,114,59],"output":[{"Character":{"data":"("}}],"errors":[]}"##,
    );
}

#[test]
fn test_2591() {
    tokenize(
        r##"{"description":"Bad named entity: lparlt without a semi-colon","initialState":"Data","input":"&lparlt","inputUtf16":[38,108,112,97,114,108,116],"output":[{"Character":{"data":"&lparlt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2592() {
    tokenize(
        r##"{"description":"Named entity: lparlt; with a semi-colon","initialState":"Data","input":"&lparlt;","inputUtf16":[38,108,112,97,114,108,116,59],"output":[{"Character":{"data":"‚¶ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2593() {
    tokenize(
        r##"{"description":"Bad named entity: lrarr without a semi-colon","initialState":"Data","input":"&lrarr","inputUtf16":[38,108,114,97,114,114],"output":[{"Character":{"data":"&lrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2594() {
    tokenize(
        r##"{"description":"Named entity: lrarr; with a semi-colon","initialState":"Data","input":"&lrarr;","inputUtf16":[38,108,114,97,114,114,59],"output":[{"Character":{"data":"‚áÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2595() {
    tokenize(
        r##"{"description":"Bad named entity: lrcorner without a semi-colon","initialState":"Data","input":"&lrcorner","inputUtf16":[38,108,114,99,111,114,110,101,114],"output":[{"Character":{"data":"&lrcorner"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2596() {
    tokenize(
        r##"{"description":"Named entity: lrcorner; with a semi-colon","initialState":"Data","input":"&lrcorner;","inputUtf16":[38,108,114,99,111,114,110,101,114,59],"output":[{"Character":{"data":"‚åü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2597() {
    tokenize(
        r##"{"description":"Bad named entity: lrhar without a semi-colon","initialState":"Data","input":"&lrhar","inputUtf16":[38,108,114,104,97,114],"output":[{"Character":{"data":"&lrhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2598() {
    tokenize(
        r##"{"description":"Named entity: lrhar; with a semi-colon","initialState":"Data","input":"&lrhar;","inputUtf16":[38,108,114,104,97,114,59],"output":[{"Character":{"data":"‚áã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2599() {
    tokenize(
        r##"{"description":"Bad named entity: lrhard without a semi-colon","initialState":"Data","input":"&lrhard","inputUtf16":[38,108,114,104,97,114,100],"output":[{"Character":{"data":"&lrhard"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2600() {
    tokenize(
        r##"{"description":"Named entity: lrhard; with a semi-colon","initialState":"Data","input":"&lrhard;","inputUtf16":[38,108,114,104,97,114,100,59],"output":[{"Character":{"data":"‚•≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2601() {
    tokenize(
        r##"{"description":"Bad named entity: lrm without a semi-colon","initialState":"Data","input":"&lrm","inputUtf16":[38,108,114,109],"output":[{"Character":{"data":"&lrm"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2602() {
    tokenize(
        r##"{"description":"Named entity: lrm; with a semi-colon","initialState":"Data","input":"&lrm;","inputUtf16":[38,108,114,109,59],"output":[{"Character":{"data":"‚Äé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2603() {
    tokenize(
        r##"{"description":"Bad named entity: lrtri without a semi-colon","initialState":"Data","input":"&lrtri","inputUtf16":[38,108,114,116,114,105],"output":[{"Character":{"data":"&lrtri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2604() {
    tokenize(
        r##"{"description":"Named entity: lrtri; with a semi-colon","initialState":"Data","input":"&lrtri;","inputUtf16":[38,108,114,116,114,105,59],"output":[{"Character":{"data":"‚äø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2605() {
    tokenize(
        r##"{"description":"Bad named entity: lsaquo without a semi-colon","initialState":"Data","input":"&lsaquo","inputUtf16":[38,108,115,97,113,117,111],"output":[{"Character":{"data":"&lsaquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2606() {
    tokenize(
        r##"{"description":"Named entity: lsaquo; with a semi-colon","initialState":"Data","input":"&lsaquo;","inputUtf16":[38,108,115,97,113,117,111,59],"output":[{"Character":{"data":"‚Äπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2607() {
    tokenize(
        r##"{"description":"Bad named entity: lscr without a semi-colon","initialState":"Data","input":"&lscr","inputUtf16":[38,108,115,99,114],"output":[{"Character":{"data":"&lscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2608() {
    tokenize(
        r##"{"description":"Named entity: lscr; with a semi-colon","initialState":"Data","input":"&lscr;","inputUtf16":[38,108,115,99,114,59],"output":[{"Character":{"data":"ùìÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2609() {
    tokenize(
        r##"{"description":"Bad named entity: lsh without a semi-colon","initialState":"Data","input":"&lsh","inputUtf16":[38,108,115,104],"output":[{"Character":{"data":"&lsh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2610() {
    tokenize(
        r##"{"description":"Named entity: lsh; with a semi-colon","initialState":"Data","input":"&lsh;","inputUtf16":[38,108,115,104,59],"output":[{"Character":{"data":"‚Ü∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2611() {
    tokenize(
        r##"{"description":"Bad named entity: lsim without a semi-colon","initialState":"Data","input":"&lsim","inputUtf16":[38,108,115,105,109],"output":[{"Character":{"data":"&lsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2612() {
    tokenize(
        r##"{"description":"Named entity: lsim; with a semi-colon","initialState":"Data","input":"&lsim;","inputUtf16":[38,108,115,105,109,59],"output":[{"Character":{"data":"‚â≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2613() {
    tokenize(
        r##"{"description":"Bad named entity: lsime without a semi-colon","initialState":"Data","input":"&lsime","inputUtf16":[38,108,115,105,109,101],"output":[{"Character":{"data":"&lsime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2614() {
    tokenize(
        r##"{"description":"Named entity: lsime; with a semi-colon","initialState":"Data","input":"&lsime;","inputUtf16":[38,108,115,105,109,101,59],"output":[{"Character":{"data":"‚™ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2615() {
    tokenize(
        r##"{"description":"Bad named entity: lsimg without a semi-colon","initialState":"Data","input":"&lsimg","inputUtf16":[38,108,115,105,109,103],"output":[{"Character":{"data":"&lsimg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2616() {
    tokenize(
        r##"{"description":"Named entity: lsimg; with a semi-colon","initialState":"Data","input":"&lsimg;","inputUtf16":[38,108,115,105,109,103,59],"output":[{"Character":{"data":"‚™è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2617() {
    tokenize(
        r##"{"description":"Bad named entity: lsqb without a semi-colon","initialState":"Data","input":"&lsqb","inputUtf16":[38,108,115,113,98],"output":[{"Character":{"data":"&lsqb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2618() {
    tokenize(
        r##"{"description":"Named entity: lsqb; with a semi-colon","initialState":"Data","input":"&lsqb;","inputUtf16":[38,108,115,113,98,59],"output":[{"Character":{"data":"["}}],"errors":[]}"##,
    );
}

#[test]
fn test_2619() {
    tokenize(
        r##"{"description":"Bad named entity: lsquo without a semi-colon","initialState":"Data","input":"&lsquo","inputUtf16":[38,108,115,113,117,111],"output":[{"Character":{"data":"&lsquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2620() {
    tokenize(
        r##"{"description":"Named entity: lsquo; with a semi-colon","initialState":"Data","input":"&lsquo;","inputUtf16":[38,108,115,113,117,111,59],"output":[{"Character":{"data":"‚Äò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2621() {
    tokenize(
        r##"{"description":"Bad named entity: lsquor without a semi-colon","initialState":"Data","input":"&lsquor","inputUtf16":[38,108,115,113,117,111,114],"output":[{"Character":{"data":"&lsquor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2622() {
    tokenize(
        r##"{"description":"Named entity: lsquor; with a semi-colon","initialState":"Data","input":"&lsquor;","inputUtf16":[38,108,115,113,117,111,114,59],"output":[{"Character":{"data":"‚Äö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2623() {
    tokenize(
        r##"{"description":"Bad named entity: lstrok without a semi-colon","initialState":"Data","input":"&lstrok","inputUtf16":[38,108,115,116,114,111,107],"output":[{"Character":{"data":"&lstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2624() {
    tokenize(
        r##"{"description":"Named entity: lstrok; with a semi-colon","initialState":"Data","input":"&lstrok;","inputUtf16":[38,108,115,116,114,111,107,59],"output":[{"Character":{"data":"≈Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2625() {
    tokenize(
        r##"{"description":"Named entity: lt without a semi-colon","initialState":"Data","input":"&lt","inputUtf16":[38,108,116],"output":[{"Character":{"data":"<"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":4}}]}"##,
    );
}

#[test]
fn test_2626() {
    tokenize(
        r##"{"description":"Named entity: lt; with a semi-colon","initialState":"Data","input":"&lt;","inputUtf16":[38,108,116,59],"output":[{"Character":{"data":"<"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2627() {
    tokenize(
        r##"{"description":"Named entity: ltcc; with a semi-colon","initialState":"Data","input":"&ltcc;","inputUtf16":[38,108,116,99,99,59],"output":[{"Character":{"data":"‚™¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2628() {
    tokenize(
        r##"{"description":"Named entity: ltcir; with a semi-colon","initialState":"Data","input":"&ltcir;","inputUtf16":[38,108,116,99,105,114,59],"output":[{"Character":{"data":"‚©π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2629() {
    tokenize(
        r##"{"description":"Named entity: ltdot; with a semi-colon","initialState":"Data","input":"&ltdot;","inputUtf16":[38,108,116,100,111,116,59],"output":[{"Character":{"data":"‚ãñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2630() {
    tokenize(
        r##"{"description":"Named entity: lthree; with a semi-colon","initialState":"Data","input":"&lthree;","inputUtf16":[38,108,116,104,114,101,101,59],"output":[{"Character":{"data":"‚ãã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2631() {
    tokenize(
        r##"{"description":"Named entity: ltimes; with a semi-colon","initialState":"Data","input":"&ltimes;","inputUtf16":[38,108,116,105,109,101,115,59],"output":[{"Character":{"data":"‚ãâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2632() {
    tokenize(
        r##"{"description":"Named entity: ltlarr; with a semi-colon","initialState":"Data","input":"&ltlarr;","inputUtf16":[38,108,116,108,97,114,114,59],"output":[{"Character":{"data":"‚•∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2633() {
    tokenize(
        r##"{"description":"Named entity: ltquest; with a semi-colon","initialState":"Data","input":"&ltquest;","inputUtf16":[38,108,116,113,117,101,115,116,59],"output":[{"Character":{"data":"‚©ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2634() {
    tokenize(
        r##"{"description":"Named entity: ltrPar; with a semi-colon","initialState":"Data","input":"&ltrPar;","inputUtf16":[38,108,116,114,80,97,114,59],"output":[{"Character":{"data":"‚¶ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2635() {
    tokenize(
        r##"{"description":"Named entity: ltri; with a semi-colon","initialState":"Data","input":"&ltri;","inputUtf16":[38,108,116,114,105,59],"output":[{"Character":{"data":"‚óÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2636() {
    tokenize(
        r##"{"description":"Named entity: ltrie; with a semi-colon","initialState":"Data","input":"&ltrie;","inputUtf16":[38,108,116,114,105,101,59],"output":[{"Character":{"data":"‚ä¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2637() {
    tokenize(
        r##"{"description":"Named entity: ltrif; with a semi-colon","initialState":"Data","input":"&ltrif;","inputUtf16":[38,108,116,114,105,102,59],"output":[{"Character":{"data":"‚óÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2638() {
    tokenize(
        r##"{"description":"Bad named entity: lurdshar without a semi-colon","initialState":"Data","input":"&lurdshar","inputUtf16":[38,108,117,114,100,115,104,97,114],"output":[{"Character":{"data":"&lurdshar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2639() {
    tokenize(
        r##"{"description":"Named entity: lurdshar; with a semi-colon","initialState":"Data","input":"&lurdshar;","inputUtf16":[38,108,117,114,100,115,104,97,114,59],"output":[{"Character":{"data":"‚•ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2640() {
    tokenize(
        r##"{"description":"Bad named entity: luruhar without a semi-colon","initialState":"Data","input":"&luruhar","inputUtf16":[38,108,117,114,117,104,97,114],"output":[{"Character":{"data":"&luruhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2641() {
    tokenize(
        r##"{"description":"Named entity: luruhar; with a semi-colon","initialState":"Data","input":"&luruhar;","inputUtf16":[38,108,117,114,117,104,97,114,59],"output":[{"Character":{"data":"‚•¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2642() {
    tokenize(
        r##"{"description":"Bad named entity: lvertneqq without a semi-colon","initialState":"Data","input":"&lvertneqq","inputUtf16":[38,108,118,101,114,116,110,101,113,113],"output":[{"Character":{"data":"&lvertneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2643() {
    tokenize(
        r##"{"description":"Named entity: lvertneqq; with a semi-colon","initialState":"Data","input":"&lvertneqq;","inputUtf16":[38,108,118,101,114,116,110,101,113,113,59],"output":[{"Character":{"data":"‚â®Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2644() {
    tokenize(
        r##"{"description":"Bad named entity: lvnE without a semi-colon","initialState":"Data","input":"&lvnE","inputUtf16":[38,108,118,110,69],"output":[{"Character":{"data":"&lvnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2645() {
    tokenize(
        r##"{"description":"Named entity: lvnE; with a semi-colon","initialState":"Data","input":"&lvnE;","inputUtf16":[38,108,118,110,69,59],"output":[{"Character":{"data":"‚â®Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2646() {
    tokenize(
        r##"{"description":"Bad named entity: mDDot without a semi-colon","initialState":"Data","input":"&mDDot","inputUtf16":[38,109,68,68,111,116],"output":[{"Character":{"data":"&mDDot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2647() {
    tokenize(
        r##"{"description":"Named entity: mDDot; with a semi-colon","initialState":"Data","input":"&mDDot;","inputUtf16":[38,109,68,68,111,116,59],"output":[{"Character":{"data":"‚à∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2648() {
    tokenize(
        r##"{"description":"Named entity: macr without a semi-colon","initialState":"Data","input":"&macr","inputUtf16":[38,109,97,99,114],"output":[{"Character":{"data":"¬Ø"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_2649() {
    tokenize(
        r##"{"description":"Named entity: macr; with a semi-colon","initialState":"Data","input":"&macr;","inputUtf16":[38,109,97,99,114,59],"output":[{"Character":{"data":"¬Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2650() {
    tokenize(
        r##"{"description":"Bad named entity: male without a semi-colon","initialState":"Data","input":"&male","inputUtf16":[38,109,97,108,101],"output":[{"Character":{"data":"&male"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2651() {
    tokenize(
        r##"{"description":"Named entity: male; with a semi-colon","initialState":"Data","input":"&male;","inputUtf16":[38,109,97,108,101,59],"output":[{"Character":{"data":"‚ôÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2652() {
    tokenize(
        r##"{"description":"Bad named entity: malt without a semi-colon","initialState":"Data","input":"&malt","inputUtf16":[38,109,97,108,116],"output":[{"Character":{"data":"&malt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2653() {
    tokenize(
        r##"{"description":"Named entity: malt; with a semi-colon","initialState":"Data","input":"&malt;","inputUtf16":[38,109,97,108,116,59],"output":[{"Character":{"data":"‚ú†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2654() {
    tokenize(
        r##"{"description":"Bad named entity: maltese without a semi-colon","initialState":"Data","input":"&maltese","inputUtf16":[38,109,97,108,116,101,115,101],"output":[{"Character":{"data":"&maltese"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2655() {
    tokenize(
        r##"{"description":"Named entity: maltese; with a semi-colon","initialState":"Data","input":"&maltese;","inputUtf16":[38,109,97,108,116,101,115,101,59],"output":[{"Character":{"data":"‚ú†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2656() {
    tokenize(
        r##"{"description":"Bad named entity: map without a semi-colon","initialState":"Data","input":"&map","inputUtf16":[38,109,97,112],"output":[{"Character":{"data":"&map"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2657() {
    tokenize(
        r##"{"description":"Named entity: map; with a semi-colon","initialState":"Data","input":"&map;","inputUtf16":[38,109,97,112,59],"output":[{"Character":{"data":"‚Ü¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2658() {
    tokenize(
        r##"{"description":"Bad named entity: mapsto without a semi-colon","initialState":"Data","input":"&mapsto","inputUtf16":[38,109,97,112,115,116,111],"output":[{"Character":{"data":"&mapsto"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2659() {
    tokenize(
        r##"{"description":"Named entity: mapsto; with a semi-colon","initialState":"Data","input":"&mapsto;","inputUtf16":[38,109,97,112,115,116,111,59],"output":[{"Character":{"data":"‚Ü¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2660() {
    tokenize(
        r##"{"description":"Bad named entity: mapstodown without a semi-colon","initialState":"Data","input":"&mapstodown","inputUtf16":[38,109,97,112,115,116,111,100,111,119,110],"output":[{"Character":{"data":"&mapstodown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2661() {
    tokenize(
        r##"{"description":"Named entity: mapstodown; with a semi-colon","initialState":"Data","input":"&mapstodown;","inputUtf16":[38,109,97,112,115,116,111,100,111,119,110,59],"output":[{"Character":{"data":"‚Üß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2662() {
    tokenize(
        r##"{"description":"Bad named entity: mapstoleft without a semi-colon","initialState":"Data","input":"&mapstoleft","inputUtf16":[38,109,97,112,115,116,111,108,101,102,116],"output":[{"Character":{"data":"&mapstoleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2663() {
    tokenize(
        r##"{"description":"Named entity: mapstoleft; with a semi-colon","initialState":"Data","input":"&mapstoleft;","inputUtf16":[38,109,97,112,115,116,111,108,101,102,116,59],"output":[{"Character":{"data":"‚Ü§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2664() {
    tokenize(
        r##"{"description":"Bad named entity: mapstoup without a semi-colon","initialState":"Data","input":"&mapstoup","inputUtf16":[38,109,97,112,115,116,111,117,112],"output":[{"Character":{"data":"&mapstoup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2665() {
    tokenize(
        r##"{"description":"Named entity: mapstoup; with a semi-colon","initialState":"Data","input":"&mapstoup;","inputUtf16":[38,109,97,112,115,116,111,117,112,59],"output":[{"Character":{"data":"‚Ü•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2666() {
    tokenize(
        r##"{"description":"Bad named entity: marker without a semi-colon","initialState":"Data","input":"&marker","inputUtf16":[38,109,97,114,107,101,114],"output":[{"Character":{"data":"&marker"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2667() {
    tokenize(
        r##"{"description":"Named entity: marker; with a semi-colon","initialState":"Data","input":"&marker;","inputUtf16":[38,109,97,114,107,101,114,59],"output":[{"Character":{"data":"‚ñÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2668() {
    tokenize(
        r##"{"description":"Bad named entity: mcomma without a semi-colon","initialState":"Data","input":"&mcomma","inputUtf16":[38,109,99,111,109,109,97],"output":[{"Character":{"data":"&mcomma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2669() {
    tokenize(
        r##"{"description":"Named entity: mcomma; with a semi-colon","initialState":"Data","input":"&mcomma;","inputUtf16":[38,109,99,111,109,109,97,59],"output":[{"Character":{"data":"‚®©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2670() {
    tokenize(
        r##"{"description":"Bad named entity: mcy without a semi-colon","initialState":"Data","input":"&mcy","inputUtf16":[38,109,99,121],"output":[{"Character":{"data":"&mcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2671() {
    tokenize(
        r##"{"description":"Named entity: mcy; with a semi-colon","initialState":"Data","input":"&mcy;","inputUtf16":[38,109,99,121,59],"output":[{"Character":{"data":"–º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2672() {
    tokenize(
        r##"{"description":"Bad named entity: mdash without a semi-colon","initialState":"Data","input":"&mdash","inputUtf16":[38,109,100,97,115,104],"output":[{"Character":{"data":"&mdash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2673() {
    tokenize(
        r##"{"description":"Named entity: mdash; with a semi-colon","initialState":"Data","input":"&mdash;","inputUtf16":[38,109,100,97,115,104,59],"output":[{"Character":{"data":"‚Äî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2674() {
    tokenize(
        r##"{"description":"Bad named entity: measuredangle without a semi-colon","initialState":"Data","input":"&measuredangle","inputUtf16":[38,109,101,97,115,117,114,101,100,97,110,103,108,101],"output":[{"Character":{"data":"&measuredangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2675() {
    tokenize(
        r##"{"description":"Named entity: measuredangle; with a semi-colon","initialState":"Data","input":"&measuredangle;","inputUtf16":[38,109,101,97,115,117,114,101,100,97,110,103,108,101,59],"output":[{"Character":{"data":"‚à°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2676() {
    tokenize(
        r##"{"description":"Bad named entity: mfr without a semi-colon","initialState":"Data","input":"&mfr","inputUtf16":[38,109,102,114],"output":[{"Character":{"data":"&mfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2677() {
    tokenize(
        r##"{"description":"Named entity: mfr; with a semi-colon","initialState":"Data","input":"&mfr;","inputUtf16":[38,109,102,114,59],"output":[{"Character":{"data":"ùî™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2678() {
    tokenize(
        r##"{"description":"Bad named entity: mho without a semi-colon","initialState":"Data","input":"&mho","inputUtf16":[38,109,104,111],"output":[{"Character":{"data":"&mho"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2679() {
    tokenize(
        r##"{"description":"Named entity: mho; with a semi-colon","initialState":"Data","input":"&mho;","inputUtf16":[38,109,104,111,59],"output":[{"Character":{"data":"‚Ñß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2680() {
    tokenize(
        r##"{"description":"Named entity: micro without a semi-colon","initialState":"Data","input":"&micro","inputUtf16":[38,109,105,99,114,111],"output":[{"Character":{"data":"¬µ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_2681() {
    tokenize(
        r##"{"description":"Named entity: micro; with a semi-colon","initialState":"Data","input":"&micro;","inputUtf16":[38,109,105,99,114,111,59],"output":[{"Character":{"data":"¬µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2682() {
    tokenize(
        r##"{"description":"Bad named entity: mid without a semi-colon","initialState":"Data","input":"&mid","inputUtf16":[38,109,105,100],"output":[{"Character":{"data":"&mid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2683() {
    tokenize(
        r##"{"description":"Named entity: mid; with a semi-colon","initialState":"Data","input":"&mid;","inputUtf16":[38,109,105,100,59],"output":[{"Character":{"data":"‚à£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2684() {
    tokenize(
        r##"{"description":"Bad named entity: midast without a semi-colon","initialState":"Data","input":"&midast","inputUtf16":[38,109,105,100,97,115,116],"output":[{"Character":{"data":"&midast"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2685() {
    tokenize(
        r##"{"description":"Named entity: midast; with a semi-colon","initialState":"Data","input":"&midast;","inputUtf16":[38,109,105,100,97,115,116,59],"output":[{"Character":{"data":"*"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2686() {
    tokenize(
        r##"{"description":"Bad named entity: midcir without a semi-colon","initialState":"Data","input":"&midcir","inputUtf16":[38,109,105,100,99,105,114],"output":[{"Character":{"data":"&midcir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2687() {
    tokenize(
        r##"{"description":"Named entity: midcir; with a semi-colon","initialState":"Data","input":"&midcir;","inputUtf16":[38,109,105,100,99,105,114,59],"output":[{"Character":{"data":"‚´∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2688() {
    tokenize(
        r##"{"description":"Named entity: middot without a semi-colon","initialState":"Data","input":"&middot","inputUtf16":[38,109,105,100,100,111,116],"output":[{"Character":{"data":"¬∑"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2689() {
    tokenize(
        r##"{"description":"Named entity: middot; with a semi-colon","initialState":"Data","input":"&middot;","inputUtf16":[38,109,105,100,100,111,116,59],"output":[{"Character":{"data":"¬∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2690() {
    tokenize(
        r##"{"description":"Bad named entity: minus without a semi-colon","initialState":"Data","input":"&minus","inputUtf16":[38,109,105,110,117,115],"output":[{"Character":{"data":"&minus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2691() {
    tokenize(
        r##"{"description":"Named entity: minus; with a semi-colon","initialState":"Data","input":"&minus;","inputUtf16":[38,109,105,110,117,115,59],"output":[{"Character":{"data":"‚àí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2692() {
    tokenize(
        r##"{"description":"Bad named entity: minusb without a semi-colon","initialState":"Data","input":"&minusb","inputUtf16":[38,109,105,110,117,115,98],"output":[{"Character":{"data":"&minusb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2693() {
    tokenize(
        r##"{"description":"Named entity: minusb; with a semi-colon","initialState":"Data","input":"&minusb;","inputUtf16":[38,109,105,110,117,115,98,59],"output":[{"Character":{"data":"‚äü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2694() {
    tokenize(
        r##"{"description":"Bad named entity: minusd without a semi-colon","initialState":"Data","input":"&minusd","inputUtf16":[38,109,105,110,117,115,100],"output":[{"Character":{"data":"&minusd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2695() {
    tokenize(
        r##"{"description":"Named entity: minusd; with a semi-colon","initialState":"Data","input":"&minusd;","inputUtf16":[38,109,105,110,117,115,100,59],"output":[{"Character":{"data":"‚à∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2696() {
    tokenize(
        r##"{"description":"Bad named entity: minusdu without a semi-colon","initialState":"Data","input":"&minusdu","inputUtf16":[38,109,105,110,117,115,100,117],"output":[{"Character":{"data":"&minusdu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2697() {
    tokenize(
        r##"{"description":"Named entity: minusdu; with a semi-colon","initialState":"Data","input":"&minusdu;","inputUtf16":[38,109,105,110,117,115,100,117,59],"output":[{"Character":{"data":"‚®™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2698() {
    tokenize(
        r##"{"description":"Bad named entity: mlcp without a semi-colon","initialState":"Data","input":"&mlcp","inputUtf16":[38,109,108,99,112],"output":[{"Character":{"data":"&mlcp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2699() {
    tokenize(
        r##"{"description":"Named entity: mlcp; with a semi-colon","initialState":"Data","input":"&mlcp;","inputUtf16":[38,109,108,99,112,59],"output":[{"Character":{"data":"‚´õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2700() {
    tokenize(
        r##"{"description":"Bad named entity: mldr without a semi-colon","initialState":"Data","input":"&mldr","inputUtf16":[38,109,108,100,114],"output":[{"Character":{"data":"&mldr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2701() {
    tokenize(
        r##"{"description":"Named entity: mldr; with a semi-colon","initialState":"Data","input":"&mldr;","inputUtf16":[38,109,108,100,114,59],"output":[{"Character":{"data":"‚Ä¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2702() {
    tokenize(
        r##"{"description":"Bad named entity: mnplus without a semi-colon","initialState":"Data","input":"&mnplus","inputUtf16":[38,109,110,112,108,117,115],"output":[{"Character":{"data":"&mnplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2703() {
    tokenize(
        r##"{"description":"Named entity: mnplus; with a semi-colon","initialState":"Data","input":"&mnplus;","inputUtf16":[38,109,110,112,108,117,115,59],"output":[{"Character":{"data":"‚àì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2704() {
    tokenize(
        r##"{"description":"Bad named entity: models without a semi-colon","initialState":"Data","input":"&models","inputUtf16":[38,109,111,100,101,108,115],"output":[{"Character":{"data":"&models"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2705() {
    tokenize(
        r##"{"description":"Named entity: models; with a semi-colon","initialState":"Data","input":"&models;","inputUtf16":[38,109,111,100,101,108,115,59],"output":[{"Character":{"data":"‚äß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2706() {
    tokenize(
        r##"{"description":"Bad named entity: mopf without a semi-colon","initialState":"Data","input":"&mopf","inputUtf16":[38,109,111,112,102],"output":[{"Character":{"data":"&mopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2707() {
    tokenize(
        r##"{"description":"Named entity: mopf; with a semi-colon","initialState":"Data","input":"&mopf;","inputUtf16":[38,109,111,112,102,59],"output":[{"Character":{"data":"ùïû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2708() {
    tokenize(
        r##"{"description":"Bad named entity: mp without a semi-colon","initialState":"Data","input":"&mp","inputUtf16":[38,109,112],"output":[{"Character":{"data":"&mp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2709() {
    tokenize(
        r##"{"description":"Named entity: mp; with a semi-colon","initialState":"Data","input":"&mp;","inputUtf16":[38,109,112,59],"output":[{"Character":{"data":"‚àì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2710() {
    tokenize(
        r##"{"description":"Bad named entity: mscr without a semi-colon","initialState":"Data","input":"&mscr","inputUtf16":[38,109,115,99,114],"output":[{"Character":{"data":"&mscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2711() {
    tokenize(
        r##"{"description":"Named entity: mscr; with a semi-colon","initialState":"Data","input":"&mscr;","inputUtf16":[38,109,115,99,114,59],"output":[{"Character":{"data":"ùìÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2712() {
    tokenize(
        r##"{"description":"Bad named entity: mstpos without a semi-colon","initialState":"Data","input":"&mstpos","inputUtf16":[38,109,115,116,112,111,115],"output":[{"Character":{"data":"&mstpos"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2713() {
    tokenize(
        r##"{"description":"Named entity: mstpos; with a semi-colon","initialState":"Data","input":"&mstpos;","inputUtf16":[38,109,115,116,112,111,115,59],"output":[{"Character":{"data":"‚àæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2714() {
    tokenize(
        r##"{"description":"Bad named entity: mu without a semi-colon","initialState":"Data","input":"&mu","inputUtf16":[38,109,117],"output":[{"Character":{"data":"&mu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2715() {
    tokenize(
        r##"{"description":"Named entity: mu; with a semi-colon","initialState":"Data","input":"&mu;","inputUtf16":[38,109,117,59],"output":[{"Character":{"data":"Œº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2716() {
    tokenize(
        r##"{"description":"Bad named entity: multimap without a semi-colon","initialState":"Data","input":"&multimap","inputUtf16":[38,109,117,108,116,105,109,97,112],"output":[{"Character":{"data":"&multimap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2717() {
    tokenize(
        r##"{"description":"Named entity: multimap; with a semi-colon","initialState":"Data","input":"&multimap;","inputUtf16":[38,109,117,108,116,105,109,97,112,59],"output":[{"Character":{"data":"‚ä∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2718() {
    tokenize(
        r##"{"description":"Bad named entity: mumap without a semi-colon","initialState":"Data","input":"&mumap","inputUtf16":[38,109,117,109,97,112],"output":[{"Character":{"data":"&mumap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2719() {
    tokenize(
        r##"{"description":"Named entity: mumap; with a semi-colon","initialState":"Data","input":"&mumap;","inputUtf16":[38,109,117,109,97,112,59],"output":[{"Character":{"data":"‚ä∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2720() {
    tokenize(
        r##"{"description":"Bad named entity: nGg without a semi-colon","initialState":"Data","input":"&nGg","inputUtf16":[38,110,71,103],"output":[{"Character":{"data":"&nGg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2721() {
    tokenize(
        r##"{"description":"Named entity: nGg; with a semi-colon","initialState":"Data","input":"&nGg;","inputUtf16":[38,110,71,103,59],"output":[{"Character":{"data":"‚ãôÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2722() {
    tokenize(
        r##"{"description":"Bad named entity: nGt without a semi-colon","initialState":"Data","input":"&nGt","inputUtf16":[38,110,71,116],"output":[{"Character":{"data":"&nGt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2723() {
    tokenize(
        r##"{"description":"Named entity: nGt; with a semi-colon","initialState":"Data","input":"&nGt;","inputUtf16":[38,110,71,116,59],"output":[{"Character":{"data":"‚â´‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2724() {
    tokenize(
        r##"{"description":"Bad named entity: nGtv without a semi-colon","initialState":"Data","input":"&nGtv","inputUtf16":[38,110,71,116,118],"output":[{"Character":{"data":"&nGtv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2725() {
    tokenize(
        r##"{"description":"Named entity: nGtv; with a semi-colon","initialState":"Data","input":"&nGtv;","inputUtf16":[38,110,71,116,118,59],"output":[{"Character":{"data":"‚â´Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2726() {
    tokenize(
        r##"{"description":"Bad named entity: nLeftarrow without a semi-colon","initialState":"Data","input":"&nLeftarrow","inputUtf16":[38,110,76,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&nLeftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2727() {
    tokenize(
        r##"{"description":"Named entity: nLeftarrow; with a semi-colon","initialState":"Data","input":"&nLeftarrow;","inputUtf16":[38,110,76,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2728() {
    tokenize(
        r##"{"description":"Bad named entity: nLeftrightarrow without a semi-colon","initialState":"Data","input":"&nLeftrightarrow","inputUtf16":[38,110,76,101,102,116,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&nLeftrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2729() {
    tokenize(
        r##"{"description":"Named entity: nLeftrightarrow; with a semi-colon","initialState":"Data","input":"&nLeftrightarrow;","inputUtf16":[38,110,76,101,102,116,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2730() {
    tokenize(
        r##"{"description":"Bad named entity: nLl without a semi-colon","initialState":"Data","input":"&nLl","inputUtf16":[38,110,76,108],"output":[{"Character":{"data":"&nLl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2731() {
    tokenize(
        r##"{"description":"Named entity: nLl; with a semi-colon","initialState":"Data","input":"&nLl;","inputUtf16":[38,110,76,108,59],"output":[{"Character":{"data":"‚ãòÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2732() {
    tokenize(
        r##"{"description":"Bad named entity: nLt without a semi-colon","initialState":"Data","input":"&nLt","inputUtf16":[38,110,76,116],"output":[{"Character":{"data":"&nLt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2733() {
    tokenize(
        r##"{"description":"Named entity: nLt; with a semi-colon","initialState":"Data","input":"&nLt;","inputUtf16":[38,110,76,116,59],"output":[{"Character":{"data":"‚â™‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2734() {
    tokenize(
        r##"{"description":"Bad named entity: nLtv without a semi-colon","initialState":"Data","input":"&nLtv","inputUtf16":[38,110,76,116,118],"output":[{"Character":{"data":"&nLtv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2735() {
    tokenize(
        r##"{"description":"Named entity: nLtv; with a semi-colon","initialState":"Data","input":"&nLtv;","inputUtf16":[38,110,76,116,118,59],"output":[{"Character":{"data":"‚â™Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2736() {
    tokenize(
        r##"{"description":"Bad named entity: nRightarrow without a semi-colon","initialState":"Data","input":"&nRightarrow","inputUtf16":[38,110,82,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&nRightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2737() {
    tokenize(
        r##"{"description":"Named entity: nRightarrow; with a semi-colon","initialState":"Data","input":"&nRightarrow;","inputUtf16":[38,110,82,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚áè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2738() {
    tokenize(
        r##"{"description":"Bad named entity: nVDash without a semi-colon","initialState":"Data","input":"&nVDash","inputUtf16":[38,110,86,68,97,115,104],"output":[{"Character":{"data":"&nVDash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2739() {
    tokenize(
        r##"{"description":"Named entity: nVDash; with a semi-colon","initialState":"Data","input":"&nVDash;","inputUtf16":[38,110,86,68,97,115,104,59],"output":[{"Character":{"data":"‚äØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2740() {
    tokenize(
        r##"{"description":"Bad named entity: nVdash without a semi-colon","initialState":"Data","input":"&nVdash","inputUtf16":[38,110,86,100,97,115,104],"output":[{"Character":{"data":"&nVdash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2741() {
    tokenize(
        r##"{"description":"Named entity: nVdash; with a semi-colon","initialState":"Data","input":"&nVdash;","inputUtf16":[38,110,86,100,97,115,104,59],"output":[{"Character":{"data":"‚äÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2742() {
    tokenize(
        r##"{"description":"Bad named entity: nabla without a semi-colon","initialState":"Data","input":"&nabla","inputUtf16":[38,110,97,98,108,97],"output":[{"Character":{"data":"&nabla"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2743() {
    tokenize(
        r##"{"description":"Named entity: nabla; with a semi-colon","initialState":"Data","input":"&nabla;","inputUtf16":[38,110,97,98,108,97,59],"output":[{"Character":{"data":"‚àá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2744() {
    tokenize(
        r##"{"description":"Bad named entity: nacute without a semi-colon","initialState":"Data","input":"&nacute","inputUtf16":[38,110,97,99,117,116,101],"output":[{"Character":{"data":"&nacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2745() {
    tokenize(
        r##"{"description":"Named entity: nacute; with a semi-colon","initialState":"Data","input":"&nacute;","inputUtf16":[38,110,97,99,117,116,101,59],"output":[{"Character":{"data":"≈Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2746() {
    tokenize(
        r##"{"description":"Bad named entity: nang without a semi-colon","initialState":"Data","input":"&nang","inputUtf16":[38,110,97,110,103],"output":[{"Character":{"data":"&nang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2747() {
    tokenize(
        r##"{"description":"Named entity: nang; with a semi-colon","initialState":"Data","input":"&nang;","inputUtf16":[38,110,97,110,103,59],"output":[{"Character":{"data":"‚à†‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2748() {
    tokenize(
        r##"{"description":"Bad named entity: nap without a semi-colon","initialState":"Data","input":"&nap","inputUtf16":[38,110,97,112],"output":[{"Character":{"data":"&nap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2749() {
    tokenize(
        r##"{"description":"Named entity: nap; with a semi-colon","initialState":"Data","input":"&nap;","inputUtf16":[38,110,97,112,59],"output":[{"Character":{"data":"‚ââ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2750() {
    tokenize(
        r##"{"description":"Bad named entity: napE without a semi-colon","initialState":"Data","input":"&napE","inputUtf16":[38,110,97,112,69],"output":[{"Character":{"data":"&napE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2751() {
    tokenize(
        r##"{"description":"Named entity: napE; with a semi-colon","initialState":"Data","input":"&napE;","inputUtf16":[38,110,97,112,69,59],"output":[{"Character":{"data":"‚©∞Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2752() {
    tokenize(
        r##"{"description":"Bad named entity: napid without a semi-colon","initialState":"Data","input":"&napid","inputUtf16":[38,110,97,112,105,100],"output":[{"Character":{"data":"&napid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2753() {
    tokenize(
        r##"{"description":"Named entity: napid; with a semi-colon","initialState":"Data","input":"&napid;","inputUtf16":[38,110,97,112,105,100,59],"output":[{"Character":{"data":"‚âãÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2754() {
    tokenize(
        r##"{"description":"Bad named entity: napos without a semi-colon","initialState":"Data","input":"&napos","inputUtf16":[38,110,97,112,111,115],"output":[{"Character":{"data":"&napos"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2755() {
    tokenize(
        r##"{"description":"Named entity: napos; with a semi-colon","initialState":"Data","input":"&napos;","inputUtf16":[38,110,97,112,111,115,59],"output":[{"Character":{"data":"≈â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2756() {
    tokenize(
        r##"{"description":"Bad named entity: napprox without a semi-colon","initialState":"Data","input":"&napprox","inputUtf16":[38,110,97,112,112,114,111,120],"output":[{"Character":{"data":"&napprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2757() {
    tokenize(
        r##"{"description":"Named entity: napprox; with a semi-colon","initialState":"Data","input":"&napprox;","inputUtf16":[38,110,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚ââ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2758() {
    tokenize(
        r##"{"description":"Bad named entity: natur without a semi-colon","initialState":"Data","input":"&natur","inputUtf16":[38,110,97,116,117,114],"output":[{"Character":{"data":"&natur"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2759() {
    tokenize(
        r##"{"description":"Named entity: natur; with a semi-colon","initialState":"Data","input":"&natur;","inputUtf16":[38,110,97,116,117,114,59],"output":[{"Character":{"data":"‚ôÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2760() {
    tokenize(
        r##"{"description":"Bad named entity: natural without a semi-colon","initialState":"Data","input":"&natural","inputUtf16":[38,110,97,116,117,114,97,108],"output":[{"Character":{"data":"&natural"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2761() {
    tokenize(
        r##"{"description":"Named entity: natural; with a semi-colon","initialState":"Data","input":"&natural;","inputUtf16":[38,110,97,116,117,114,97,108,59],"output":[{"Character":{"data":"‚ôÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2762() {
    tokenize(
        r##"{"description":"Bad named entity: naturals without a semi-colon","initialState":"Data","input":"&naturals","inputUtf16":[38,110,97,116,117,114,97,108,115],"output":[{"Character":{"data":"&naturals"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2763() {
    tokenize(
        r##"{"description":"Named entity: naturals; with a semi-colon","initialState":"Data","input":"&naturals;","inputUtf16":[38,110,97,116,117,114,97,108,115,59],"output":[{"Character":{"data":"‚Ñï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2764() {
    tokenize(
        r##"{"description":"Named entity: nbsp without a semi-colon","initialState":"Data","input":"&nbsp","inputUtf16":[38,110,98,115,112],"output":[{"Character":{"data":"¬†"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_2765() {
    tokenize(
        r##"{"description":"Named entity: nbsp; with a semi-colon","initialState":"Data","input":"&nbsp;","inputUtf16":[38,110,98,115,112,59],"output":[{"Character":{"data":"¬†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2766() {
    tokenize(
        r##"{"description":"Bad named entity: nbump without a semi-colon","initialState":"Data","input":"&nbump","inputUtf16":[38,110,98,117,109,112],"output":[{"Character":{"data":"&nbump"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2767() {
    tokenize(
        r##"{"description":"Named entity: nbump; with a semi-colon","initialState":"Data","input":"&nbump;","inputUtf16":[38,110,98,117,109,112,59],"output":[{"Character":{"data":"‚âéÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2768() {
    tokenize(
        r##"{"description":"Bad named entity: nbumpe without a semi-colon","initialState":"Data","input":"&nbumpe","inputUtf16":[38,110,98,117,109,112,101],"output":[{"Character":{"data":"&nbumpe"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2769() {
    tokenize(
        r##"{"description":"Named entity: nbumpe; with a semi-colon","initialState":"Data","input":"&nbumpe;","inputUtf16":[38,110,98,117,109,112,101,59],"output":[{"Character":{"data":"‚âèÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2770() {
    tokenize(
        r##"{"description":"Bad named entity: ncap without a semi-colon","initialState":"Data","input":"&ncap","inputUtf16":[38,110,99,97,112],"output":[{"Character":{"data":"&ncap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2771() {
    tokenize(
        r##"{"description":"Named entity: ncap; with a semi-colon","initialState":"Data","input":"&ncap;","inputUtf16":[38,110,99,97,112,59],"output":[{"Character":{"data":"‚©É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2772() {
    tokenize(
        r##"{"description":"Bad named entity: ncaron without a semi-colon","initialState":"Data","input":"&ncaron","inputUtf16":[38,110,99,97,114,111,110],"output":[{"Character":{"data":"&ncaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2773() {
    tokenize(
        r##"{"description":"Named entity: ncaron; with a semi-colon","initialState":"Data","input":"&ncaron;","inputUtf16":[38,110,99,97,114,111,110,59],"output":[{"Character":{"data":"≈à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2774() {
    tokenize(
        r##"{"description":"Bad named entity: ncedil without a semi-colon","initialState":"Data","input":"&ncedil","inputUtf16":[38,110,99,101,100,105,108],"output":[{"Character":{"data":"&ncedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2775() {
    tokenize(
        r##"{"description":"Named entity: ncedil; with a semi-colon","initialState":"Data","input":"&ncedil;","inputUtf16":[38,110,99,101,100,105,108,59],"output":[{"Character":{"data":"≈Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2776() {
    tokenize(
        r##"{"description":"Bad named entity: ncong without a semi-colon","initialState":"Data","input":"&ncong","inputUtf16":[38,110,99,111,110,103],"output":[{"Character":{"data":"&ncong"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2777() {
    tokenize(
        r##"{"description":"Named entity: ncong; with a semi-colon","initialState":"Data","input":"&ncong;","inputUtf16":[38,110,99,111,110,103,59],"output":[{"Character":{"data":"‚âá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2778() {
    tokenize(
        r##"{"description":"Bad named entity: ncongdot without a semi-colon","initialState":"Data","input":"&ncongdot","inputUtf16":[38,110,99,111,110,103,100,111,116],"output":[{"Character":{"data":"&ncongdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2779() {
    tokenize(
        r##"{"description":"Named entity: ncongdot; with a semi-colon","initialState":"Data","input":"&ncongdot;","inputUtf16":[38,110,99,111,110,103,100,111,116,59],"output":[{"Character":{"data":"‚©≠Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2780() {
    tokenize(
        r##"{"description":"Bad named entity: ncup without a semi-colon","initialState":"Data","input":"&ncup","inputUtf16":[38,110,99,117,112],"output":[{"Character":{"data":"&ncup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2781() {
    tokenize(
        r##"{"description":"Named entity: ncup; with a semi-colon","initialState":"Data","input":"&ncup;","inputUtf16":[38,110,99,117,112,59],"output":[{"Character":{"data":"‚©Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2782() {
    tokenize(
        r##"{"description":"Bad named entity: ncy without a semi-colon","initialState":"Data","input":"&ncy","inputUtf16":[38,110,99,121],"output":[{"Character":{"data":"&ncy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2783() {
    tokenize(
        r##"{"description":"Named entity: ncy; with a semi-colon","initialState":"Data","input":"&ncy;","inputUtf16":[38,110,99,121,59],"output":[{"Character":{"data":"–Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2784() {
    tokenize(
        r##"{"description":"Bad named entity: ndash without a semi-colon","initialState":"Data","input":"&ndash","inputUtf16":[38,110,100,97,115,104],"output":[{"Character":{"data":"&ndash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2785() {
    tokenize(
        r##"{"description":"Named entity: ndash; with a semi-colon","initialState":"Data","input":"&ndash;","inputUtf16":[38,110,100,97,115,104,59],"output":[{"Character":{"data":"‚Äì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2786() {
    tokenize(
        r##"{"description":"Bad named entity: ne without a semi-colon","initialState":"Data","input":"&ne","inputUtf16":[38,110,101],"output":[{"Character":{"data":"&ne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2787() {
    tokenize(
        r##"{"description":"Named entity: ne; with a semi-colon","initialState":"Data","input":"&ne;","inputUtf16":[38,110,101,59],"output":[{"Character":{"data":"‚â†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2788() {
    tokenize(
        r##"{"description":"Bad named entity: neArr without a semi-colon","initialState":"Data","input":"&neArr","inputUtf16":[38,110,101,65,114,114],"output":[{"Character":{"data":"&neArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2789() {
    tokenize(
        r##"{"description":"Named entity: neArr; with a semi-colon","initialState":"Data","input":"&neArr;","inputUtf16":[38,110,101,65,114,114,59],"output":[{"Character":{"data":"‚áó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2790() {
    tokenize(
        r##"{"description":"Bad named entity: nearhk without a semi-colon","initialState":"Data","input":"&nearhk","inputUtf16":[38,110,101,97,114,104,107],"output":[{"Character":{"data":"&nearhk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2791() {
    tokenize(
        r##"{"description":"Named entity: nearhk; with a semi-colon","initialState":"Data","input":"&nearhk;","inputUtf16":[38,110,101,97,114,104,107,59],"output":[{"Character":{"data":"‚§§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2792() {
    tokenize(
        r##"{"description":"Bad named entity: nearr without a semi-colon","initialState":"Data","input":"&nearr","inputUtf16":[38,110,101,97,114,114],"output":[{"Character":{"data":"&nearr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2793() {
    tokenize(
        r##"{"description":"Named entity: nearr; with a semi-colon","initialState":"Data","input":"&nearr;","inputUtf16":[38,110,101,97,114,114,59],"output":[{"Character":{"data":"‚Üó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2794() {
    tokenize(
        r##"{"description":"Bad named entity: nearrow without a semi-colon","initialState":"Data","input":"&nearrow","inputUtf16":[38,110,101,97,114,114,111,119],"output":[{"Character":{"data":"&nearrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2795() {
    tokenize(
        r##"{"description":"Named entity: nearrow; with a semi-colon","initialState":"Data","input":"&nearrow;","inputUtf16":[38,110,101,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2796() {
    tokenize(
        r##"{"description":"Bad named entity: nedot without a semi-colon","initialState":"Data","input":"&nedot","inputUtf16":[38,110,101,100,111,116],"output":[{"Character":{"data":"&nedot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2797() {
    tokenize(
        r##"{"description":"Named entity: nedot; with a semi-colon","initialState":"Data","input":"&nedot;","inputUtf16":[38,110,101,100,111,116,59],"output":[{"Character":{"data":"‚âêÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2798() {
    tokenize(
        r##"{"description":"Bad named entity: nequiv without a semi-colon","initialState":"Data","input":"&nequiv","inputUtf16":[38,110,101,113,117,105,118],"output":[{"Character":{"data":"&nequiv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2799() {
    tokenize(
        r##"{"description":"Named entity: nequiv; with a semi-colon","initialState":"Data","input":"&nequiv;","inputUtf16":[38,110,101,113,117,105,118,59],"output":[{"Character":{"data":"‚â¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2800() {
    tokenize(
        r##"{"description":"Bad named entity: nesear without a semi-colon","initialState":"Data","input":"&nesear","inputUtf16":[38,110,101,115,101,97,114],"output":[{"Character":{"data":"&nesear"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2801() {
    tokenize(
        r##"{"description":"Named entity: nesear; with a semi-colon","initialState":"Data","input":"&nesear;","inputUtf16":[38,110,101,115,101,97,114,59],"output":[{"Character":{"data":"‚§®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2802() {
    tokenize(
        r##"{"description":"Bad named entity: nesim without a semi-colon","initialState":"Data","input":"&nesim","inputUtf16":[38,110,101,115,105,109],"output":[{"Character":{"data":"&nesim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2803() {
    tokenize(
        r##"{"description":"Named entity: nesim; with a semi-colon","initialState":"Data","input":"&nesim;","inputUtf16":[38,110,101,115,105,109,59],"output":[{"Character":{"data":"‚âÇÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2804() {
    tokenize(
        r##"{"description":"Bad named entity: nexist without a semi-colon","initialState":"Data","input":"&nexist","inputUtf16":[38,110,101,120,105,115,116],"output":[{"Character":{"data":"&nexist"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2805() {
    tokenize(
        r##"{"description":"Named entity: nexist; with a semi-colon","initialState":"Data","input":"&nexist;","inputUtf16":[38,110,101,120,105,115,116,59],"output":[{"Character":{"data":"‚àÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2806() {
    tokenize(
        r##"{"description":"Bad named entity: nexists without a semi-colon","initialState":"Data","input":"&nexists","inputUtf16":[38,110,101,120,105,115,116,115],"output":[{"Character":{"data":"&nexists"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2807() {
    tokenize(
        r##"{"description":"Named entity: nexists; with a semi-colon","initialState":"Data","input":"&nexists;","inputUtf16":[38,110,101,120,105,115,116,115,59],"output":[{"Character":{"data":"‚àÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2808() {
    tokenize(
        r##"{"description":"Bad named entity: nfr without a semi-colon","initialState":"Data","input":"&nfr","inputUtf16":[38,110,102,114],"output":[{"Character":{"data":"&nfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2809() {
    tokenize(
        r##"{"description":"Named entity: nfr; with a semi-colon","initialState":"Data","input":"&nfr;","inputUtf16":[38,110,102,114,59],"output":[{"Character":{"data":"ùî´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2810() {
    tokenize(
        r##"{"description":"Bad named entity: ngE without a semi-colon","initialState":"Data","input":"&ngE","inputUtf16":[38,110,103,69],"output":[{"Character":{"data":"&ngE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2811() {
    tokenize(
        r##"{"description":"Named entity: ngE; with a semi-colon","initialState":"Data","input":"&ngE;","inputUtf16":[38,110,103,69,59],"output":[{"Character":{"data":"‚âßÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2812() {
    tokenize(
        r##"{"description":"Bad named entity: nge without a semi-colon","initialState":"Data","input":"&nge","inputUtf16":[38,110,103,101],"output":[{"Character":{"data":"&nge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2813() {
    tokenize(
        r##"{"description":"Named entity: nge; with a semi-colon","initialState":"Data","input":"&nge;","inputUtf16":[38,110,103,101,59],"output":[{"Character":{"data":"‚â±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2814() {
    tokenize(
        r##"{"description":"Bad named entity: ngeq without a semi-colon","initialState":"Data","input":"&ngeq","inputUtf16":[38,110,103,101,113],"output":[{"Character":{"data":"&ngeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2815() {
    tokenize(
        r##"{"description":"Named entity: ngeq; with a semi-colon","initialState":"Data","input":"&ngeq;","inputUtf16":[38,110,103,101,113,59],"output":[{"Character":{"data":"‚â±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2816() {
    tokenize(
        r##"{"description":"Bad named entity: ngeqq without a semi-colon","initialState":"Data","input":"&ngeqq","inputUtf16":[38,110,103,101,113,113],"output":[{"Character":{"data":"&ngeqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2817() {
    tokenize(
        r##"{"description":"Named entity: ngeqq; with a semi-colon","initialState":"Data","input":"&ngeqq;","inputUtf16":[38,110,103,101,113,113,59],"output":[{"Character":{"data":"‚âßÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2818() {
    tokenize(
        r##"{"description":"Bad named entity: ngeqslant without a semi-colon","initialState":"Data","input":"&ngeqslant","inputUtf16":[38,110,103,101,113,115,108,97,110,116],"output":[{"Character":{"data":"&ngeqslant"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2819() {
    tokenize(
        r##"{"description":"Named entity: ngeqslant; with a semi-colon","initialState":"Data","input":"&ngeqslant;","inputUtf16":[38,110,103,101,113,115,108,97,110,116,59],"output":[{"Character":{"data":"‚©æÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2820() {
    tokenize(
        r##"{"description":"Bad named entity: nges without a semi-colon","initialState":"Data","input":"&nges","inputUtf16":[38,110,103,101,115],"output":[{"Character":{"data":"&nges"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2821() {
    tokenize(
        r##"{"description":"Named entity: nges; with a semi-colon","initialState":"Data","input":"&nges;","inputUtf16":[38,110,103,101,115,59],"output":[{"Character":{"data":"‚©æÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2822() {
    tokenize(
        r##"{"description":"Bad named entity: ngsim without a semi-colon","initialState":"Data","input":"&ngsim","inputUtf16":[38,110,103,115,105,109],"output":[{"Character":{"data":"&ngsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2823() {
    tokenize(
        r##"{"description":"Named entity: ngsim; with a semi-colon","initialState":"Data","input":"&ngsim;","inputUtf16":[38,110,103,115,105,109,59],"output":[{"Character":{"data":"‚âµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2824() {
    tokenize(
        r##"{"description":"Bad named entity: ngt without a semi-colon","initialState":"Data","input":"&ngt","inputUtf16":[38,110,103,116],"output":[{"Character":{"data":"&ngt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2825() {
    tokenize(
        r##"{"description":"Named entity: ngt; with a semi-colon","initialState":"Data","input":"&ngt;","inputUtf16":[38,110,103,116,59],"output":[{"Character":{"data":"‚âØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2826() {
    tokenize(
        r##"{"description":"Bad named entity: ngtr without a semi-colon","initialState":"Data","input":"&ngtr","inputUtf16":[38,110,103,116,114],"output":[{"Character":{"data":"&ngtr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2827() {
    tokenize(
        r##"{"description":"Named entity: ngtr; with a semi-colon","initialState":"Data","input":"&ngtr;","inputUtf16":[38,110,103,116,114,59],"output":[{"Character":{"data":"‚âØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2828() {
    tokenize(
        r##"{"description":"Bad named entity: nhArr without a semi-colon","initialState":"Data","input":"&nhArr","inputUtf16":[38,110,104,65,114,114],"output":[{"Character":{"data":"&nhArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2829() {
    tokenize(
        r##"{"description":"Named entity: nhArr; with a semi-colon","initialState":"Data","input":"&nhArr;","inputUtf16":[38,110,104,65,114,114,59],"output":[{"Character":{"data":"‚áé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2830() {
    tokenize(
        r##"{"description":"Bad named entity: nharr without a semi-colon","initialState":"Data","input":"&nharr","inputUtf16":[38,110,104,97,114,114],"output":[{"Character":{"data":"&nharr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2831() {
    tokenize(
        r##"{"description":"Named entity: nharr; with a semi-colon","initialState":"Data","input":"&nharr;","inputUtf16":[38,110,104,97,114,114,59],"output":[{"Character":{"data":"‚ÜÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2832() {
    tokenize(
        r##"{"description":"Bad named entity: nhpar without a semi-colon","initialState":"Data","input":"&nhpar","inputUtf16":[38,110,104,112,97,114],"output":[{"Character":{"data":"&nhpar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2833() {
    tokenize(
        r##"{"description":"Named entity: nhpar; with a semi-colon","initialState":"Data","input":"&nhpar;","inputUtf16":[38,110,104,112,97,114,59],"output":[{"Character":{"data":"‚´≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2834() {
    tokenize(
        r##"{"description":"Bad named entity: ni without a semi-colon","initialState":"Data","input":"&ni","inputUtf16":[38,110,105],"output":[{"Character":{"data":"&ni"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2835() {
    tokenize(
        r##"{"description":"Named entity: ni; with a semi-colon","initialState":"Data","input":"&ni;","inputUtf16":[38,110,105,59],"output":[{"Character":{"data":"‚àã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2836() {
    tokenize(
        r##"{"description":"Bad named entity: nis without a semi-colon","initialState":"Data","input":"&nis","inputUtf16":[38,110,105,115],"output":[{"Character":{"data":"&nis"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2837() {
    tokenize(
        r##"{"description":"Named entity: nis; with a semi-colon","initialState":"Data","input":"&nis;","inputUtf16":[38,110,105,115,59],"output":[{"Character":{"data":"‚ãº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2838() {
    tokenize(
        r##"{"description":"Bad named entity: nisd without a semi-colon","initialState":"Data","input":"&nisd","inputUtf16":[38,110,105,115,100],"output":[{"Character":{"data":"&nisd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2839() {
    tokenize(
        r##"{"description":"Named entity: nisd; with a semi-colon","initialState":"Data","input":"&nisd;","inputUtf16":[38,110,105,115,100,59],"output":[{"Character":{"data":"‚ã∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2840() {
    tokenize(
        r##"{"description":"Bad named entity: niv without a semi-colon","initialState":"Data","input":"&niv","inputUtf16":[38,110,105,118],"output":[{"Character":{"data":"&niv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2841() {
    tokenize(
        r##"{"description":"Named entity: niv; with a semi-colon","initialState":"Data","input":"&niv;","inputUtf16":[38,110,105,118,59],"output":[{"Character":{"data":"‚àã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2842() {
    tokenize(
        r##"{"description":"Bad named entity: njcy without a semi-colon","initialState":"Data","input":"&njcy","inputUtf16":[38,110,106,99,121],"output":[{"Character":{"data":"&njcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2843() {
    tokenize(
        r##"{"description":"Named entity: njcy; with a semi-colon","initialState":"Data","input":"&njcy;","inputUtf16":[38,110,106,99,121,59],"output":[{"Character":{"data":"—ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2844() {
    tokenize(
        r##"{"description":"Bad named entity: nlArr without a semi-colon","initialState":"Data","input":"&nlArr","inputUtf16":[38,110,108,65,114,114],"output":[{"Character":{"data":"&nlArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2845() {
    tokenize(
        r##"{"description":"Named entity: nlArr; with a semi-colon","initialState":"Data","input":"&nlArr;","inputUtf16":[38,110,108,65,114,114,59],"output":[{"Character":{"data":"‚áç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2846() {
    tokenize(
        r##"{"description":"Bad named entity: nlE without a semi-colon","initialState":"Data","input":"&nlE","inputUtf16":[38,110,108,69],"output":[{"Character":{"data":"&nlE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2847() {
    tokenize(
        r##"{"description":"Named entity: nlE; with a semi-colon","initialState":"Data","input":"&nlE;","inputUtf16":[38,110,108,69,59],"output":[{"Character":{"data":"‚â¶Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2848() {
    tokenize(
        r##"{"description":"Bad named entity: nlarr without a semi-colon","initialState":"Data","input":"&nlarr","inputUtf16":[38,110,108,97,114,114],"output":[{"Character":{"data":"&nlarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2849() {
    tokenize(
        r##"{"description":"Named entity: nlarr; with a semi-colon","initialState":"Data","input":"&nlarr;","inputUtf16":[38,110,108,97,114,114,59],"output":[{"Character":{"data":"‚Üö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2850() {
    tokenize(
        r##"{"description":"Bad named entity: nldr without a semi-colon","initialState":"Data","input":"&nldr","inputUtf16":[38,110,108,100,114],"output":[{"Character":{"data":"&nldr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2851() {
    tokenize(
        r##"{"description":"Named entity: nldr; with a semi-colon","initialState":"Data","input":"&nldr;","inputUtf16":[38,110,108,100,114,59],"output":[{"Character":{"data":"‚Ä•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2852() {
    tokenize(
        r##"{"description":"Bad named entity: nle without a semi-colon","initialState":"Data","input":"&nle","inputUtf16":[38,110,108,101],"output":[{"Character":{"data":"&nle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2853() {
    tokenize(
        r##"{"description":"Named entity: nle; with a semi-colon","initialState":"Data","input":"&nle;","inputUtf16":[38,110,108,101,59],"output":[{"Character":{"data":"‚â∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2854() {
    tokenize(
        r##"{"description":"Bad named entity: nleftarrow without a semi-colon","initialState":"Data","input":"&nleftarrow","inputUtf16":[38,110,108,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&nleftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2855() {
    tokenize(
        r##"{"description":"Named entity: nleftarrow; with a semi-colon","initialState":"Data","input":"&nleftarrow;","inputUtf16":[38,110,108,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2856() {
    tokenize(
        r##"{"description":"Bad named entity: nleftrightarrow without a semi-colon","initialState":"Data","input":"&nleftrightarrow","inputUtf16":[38,110,108,101,102,116,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&nleftrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2857() {
    tokenize(
        r##"{"description":"Named entity: nleftrightarrow; with a semi-colon","initialState":"Data","input":"&nleftrightarrow;","inputUtf16":[38,110,108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚ÜÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2858() {
    tokenize(
        r##"{"description":"Bad named entity: nleq without a semi-colon","initialState":"Data","input":"&nleq","inputUtf16":[38,110,108,101,113],"output":[{"Character":{"data":"&nleq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2859() {
    tokenize(
        r##"{"description":"Named entity: nleq; with a semi-colon","initialState":"Data","input":"&nleq;","inputUtf16":[38,110,108,101,113,59],"output":[{"Character":{"data":"‚â∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2860() {
    tokenize(
        r##"{"description":"Bad named entity: nleqq without a semi-colon","initialState":"Data","input":"&nleqq","inputUtf16":[38,110,108,101,113,113],"output":[{"Character":{"data":"&nleqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2861() {
    tokenize(
        r##"{"description":"Named entity: nleqq; with a semi-colon","initialState":"Data","input":"&nleqq;","inputUtf16":[38,110,108,101,113,113,59],"output":[{"Character":{"data":"‚â¶Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2862() {
    tokenize(
        r##"{"description":"Bad named entity: nleqslant without a semi-colon","initialState":"Data","input":"&nleqslant","inputUtf16":[38,110,108,101,113,115,108,97,110,116],"output":[{"Character":{"data":"&nleqslant"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2863() {
    tokenize(
        r##"{"description":"Named entity: nleqslant; with a semi-colon","initialState":"Data","input":"&nleqslant;","inputUtf16":[38,110,108,101,113,115,108,97,110,116,59],"output":[{"Character":{"data":"‚©ΩÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2864() {
    tokenize(
        r##"{"description":"Bad named entity: nles without a semi-colon","initialState":"Data","input":"&nles","inputUtf16":[38,110,108,101,115],"output":[{"Character":{"data":"&nles"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2865() {
    tokenize(
        r##"{"description":"Named entity: nles; with a semi-colon","initialState":"Data","input":"&nles;","inputUtf16":[38,110,108,101,115,59],"output":[{"Character":{"data":"‚©ΩÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2866() {
    tokenize(
        r##"{"description":"Bad named entity: nless without a semi-colon","initialState":"Data","input":"&nless","inputUtf16":[38,110,108,101,115,115],"output":[{"Character":{"data":"&nless"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2867() {
    tokenize(
        r##"{"description":"Named entity: nless; with a semi-colon","initialState":"Data","input":"&nless;","inputUtf16":[38,110,108,101,115,115,59],"output":[{"Character":{"data":"‚âÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2868() {
    tokenize(
        r##"{"description":"Bad named entity: nlsim without a semi-colon","initialState":"Data","input":"&nlsim","inputUtf16":[38,110,108,115,105,109],"output":[{"Character":{"data":"&nlsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2869() {
    tokenize(
        r##"{"description":"Named entity: nlsim; with a semi-colon","initialState":"Data","input":"&nlsim;","inputUtf16":[38,110,108,115,105,109,59],"output":[{"Character":{"data":"‚â¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2870() {
    tokenize(
        r##"{"description":"Bad named entity: nlt without a semi-colon","initialState":"Data","input":"&nlt","inputUtf16":[38,110,108,116],"output":[{"Character":{"data":"&nlt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2871() {
    tokenize(
        r##"{"description":"Named entity: nlt; with a semi-colon","initialState":"Data","input":"&nlt;","inputUtf16":[38,110,108,116,59],"output":[{"Character":{"data":"‚âÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2872() {
    tokenize(
        r##"{"description":"Bad named entity: nltri without a semi-colon","initialState":"Data","input":"&nltri","inputUtf16":[38,110,108,116,114,105],"output":[{"Character":{"data":"&nltri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2873() {
    tokenize(
        r##"{"description":"Named entity: nltri; with a semi-colon","initialState":"Data","input":"&nltri;","inputUtf16":[38,110,108,116,114,105,59],"output":[{"Character":{"data":"‚ã™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2874() {
    tokenize(
        r##"{"description":"Bad named entity: nltrie without a semi-colon","initialState":"Data","input":"&nltrie","inputUtf16":[38,110,108,116,114,105,101],"output":[{"Character":{"data":"&nltrie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2875() {
    tokenize(
        r##"{"description":"Named entity: nltrie; with a semi-colon","initialState":"Data","input":"&nltrie;","inputUtf16":[38,110,108,116,114,105,101,59],"output":[{"Character":{"data":"‚ã¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2876() {
    tokenize(
        r##"{"description":"Bad named entity: nmid without a semi-colon","initialState":"Data","input":"&nmid","inputUtf16":[38,110,109,105,100],"output":[{"Character":{"data":"&nmid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2877() {
    tokenize(
        r##"{"description":"Named entity: nmid; with a semi-colon","initialState":"Data","input":"&nmid;","inputUtf16":[38,110,109,105,100,59],"output":[{"Character":{"data":"‚à§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2878() {
    tokenize(
        r##"{"description":"Bad named entity: nopf without a semi-colon","initialState":"Data","input":"&nopf","inputUtf16":[38,110,111,112,102],"output":[{"Character":{"data":"&nopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2879() {
    tokenize(
        r##"{"description":"Named entity: nopf; with a semi-colon","initialState":"Data","input":"&nopf;","inputUtf16":[38,110,111,112,102,59],"output":[{"Character":{"data":"ùïü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2880() {
    tokenize(
        r##"{"description":"Named entity: not without a semi-colon","initialState":"Data","input":"&not","inputUtf16":[38,110,111,116],"output":[{"Character":{"data":"¬¨"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_2881() {
    tokenize(
        r##"{"description":"Named entity: not; with a semi-colon","initialState":"Data","input":"&not;","inputUtf16":[38,110,111,116,59],"output":[{"Character":{"data":"¬¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2882() {
    tokenize(
        r##"{"description":"Named entity: notin; with a semi-colon","initialState":"Data","input":"&notin;","inputUtf16":[38,110,111,116,105,110,59],"output":[{"Character":{"data":"‚àâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2883() {
    tokenize(
        r##"{"description":"Named entity: notinE; with a semi-colon","initialState":"Data","input":"&notinE;","inputUtf16":[38,110,111,116,105,110,69,59],"output":[{"Character":{"data":"‚ãπÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2884() {
    tokenize(
        r##"{"description":"Named entity: notindot; with a semi-colon","initialState":"Data","input":"&notindot;","inputUtf16":[38,110,111,116,105,110,100,111,116,59],"output":[{"Character":{"data":"‚ãµÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2885() {
    tokenize(
        r##"{"description":"Named entity: notinva; with a semi-colon","initialState":"Data","input":"&notinva;","inputUtf16":[38,110,111,116,105,110,118,97,59],"output":[{"Character":{"data":"‚àâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2886() {
    tokenize(
        r##"{"description":"Named entity: notinvb; with a semi-colon","initialState":"Data","input":"&notinvb;","inputUtf16":[38,110,111,116,105,110,118,98,59],"output":[{"Character":{"data":"‚ã∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2887() {
    tokenize(
        r##"{"description":"Named entity: notinvc; with a semi-colon","initialState":"Data","input":"&notinvc;","inputUtf16":[38,110,111,116,105,110,118,99,59],"output":[{"Character":{"data":"‚ã∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2888() {
    tokenize(
        r##"{"description":"Named entity: notni; with a semi-colon","initialState":"Data","input":"&notni;","inputUtf16":[38,110,111,116,110,105,59],"output":[{"Character":{"data":"‚àå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2889() {
    tokenize(
        r##"{"description":"Named entity: notniva; with a semi-colon","initialState":"Data","input":"&notniva;","inputUtf16":[38,110,111,116,110,105,118,97,59],"output":[{"Character":{"data":"‚àå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2890() {
    tokenize(
        r##"{"description":"Named entity: notnivb; with a semi-colon","initialState":"Data","input":"&notnivb;","inputUtf16":[38,110,111,116,110,105,118,98,59],"output":[{"Character":{"data":"‚ãæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2891() {
    tokenize(
        r##"{"description":"Named entity: notnivc; with a semi-colon","initialState":"Data","input":"&notnivc;","inputUtf16":[38,110,111,116,110,105,118,99,59],"output":[{"Character":{"data":"‚ãΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2892() {
    tokenize(
        r##"{"description":"Bad named entity: npar without a semi-colon","initialState":"Data","input":"&npar","inputUtf16":[38,110,112,97,114],"output":[{"Character":{"data":"&npar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2893() {
    tokenize(
        r##"{"description":"Named entity: npar; with a semi-colon","initialState":"Data","input":"&npar;","inputUtf16":[38,110,112,97,114,59],"output":[{"Character":{"data":"‚à¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2894() {
    tokenize(
        r##"{"description":"Bad named entity: nparallel without a semi-colon","initialState":"Data","input":"&nparallel","inputUtf16":[38,110,112,97,114,97,108,108,101,108],"output":[{"Character":{"data":"&nparallel"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2895() {
    tokenize(
        r##"{"description":"Named entity: nparallel; with a semi-colon","initialState":"Data","input":"&nparallel;","inputUtf16":[38,110,112,97,114,97,108,108,101,108,59],"output":[{"Character":{"data":"‚à¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2896() {
    tokenize(
        r##"{"description":"Bad named entity: nparsl without a semi-colon","initialState":"Data","input":"&nparsl","inputUtf16":[38,110,112,97,114,115,108],"output":[{"Character":{"data":"&nparsl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2897() {
    tokenize(
        r##"{"description":"Named entity: nparsl; with a semi-colon","initialState":"Data","input":"&nparsl;","inputUtf16":[38,110,112,97,114,115,108,59],"output":[{"Character":{"data":"‚´Ω‚É•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2898() {
    tokenize(
        r##"{"description":"Bad named entity: npart without a semi-colon","initialState":"Data","input":"&npart","inputUtf16":[38,110,112,97,114,116],"output":[{"Character":{"data":"&npart"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2899() {
    tokenize(
        r##"{"description":"Named entity: npart; with a semi-colon","initialState":"Data","input":"&npart;","inputUtf16":[38,110,112,97,114,116,59],"output":[{"Character":{"data":"‚àÇÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2900() {
    tokenize(
        r##"{"description":"Bad named entity: npolint without a semi-colon","initialState":"Data","input":"&npolint","inputUtf16":[38,110,112,111,108,105,110,116],"output":[{"Character":{"data":"&npolint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2901() {
    tokenize(
        r##"{"description":"Named entity: npolint; with a semi-colon","initialState":"Data","input":"&npolint;","inputUtf16":[38,110,112,111,108,105,110,116,59],"output":[{"Character":{"data":"‚®î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2902() {
    tokenize(
        r##"{"description":"Bad named entity: npr without a semi-colon","initialState":"Data","input":"&npr","inputUtf16":[38,110,112,114],"output":[{"Character":{"data":"&npr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2903() {
    tokenize(
        r##"{"description":"Named entity: npr; with a semi-colon","initialState":"Data","input":"&npr;","inputUtf16":[38,110,112,114,59],"output":[{"Character":{"data":"‚äÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2904() {
    tokenize(
        r##"{"description":"Bad named entity: nprcue without a semi-colon","initialState":"Data","input":"&nprcue","inputUtf16":[38,110,112,114,99,117,101],"output":[{"Character":{"data":"&nprcue"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2905() {
    tokenize(
        r##"{"description":"Named entity: nprcue; with a semi-colon","initialState":"Data","input":"&nprcue;","inputUtf16":[38,110,112,114,99,117,101,59],"output":[{"Character":{"data":"‚ã†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2906() {
    tokenize(
        r##"{"description":"Bad named entity: npre without a semi-colon","initialState":"Data","input":"&npre","inputUtf16":[38,110,112,114,101],"output":[{"Character":{"data":"&npre"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2907() {
    tokenize(
        r##"{"description":"Named entity: npre; with a semi-colon","initialState":"Data","input":"&npre;","inputUtf16":[38,110,112,114,101,59],"output":[{"Character":{"data":"‚™ØÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2908() {
    tokenize(
        r##"{"description":"Bad named entity: nprec without a semi-colon","initialState":"Data","input":"&nprec","inputUtf16":[38,110,112,114,101,99],"output":[{"Character":{"data":"&nprec"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2909() {
    tokenize(
        r##"{"description":"Named entity: nprec; with a semi-colon","initialState":"Data","input":"&nprec;","inputUtf16":[38,110,112,114,101,99,59],"output":[{"Character":{"data":"‚äÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2910() {
    tokenize(
        r##"{"description":"Bad named entity: npreceq without a semi-colon","initialState":"Data","input":"&npreceq","inputUtf16":[38,110,112,114,101,99,101,113],"output":[{"Character":{"data":"&npreceq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2911() {
    tokenize(
        r##"{"description":"Named entity: npreceq; with a semi-colon","initialState":"Data","input":"&npreceq;","inputUtf16":[38,110,112,114,101,99,101,113,59],"output":[{"Character":{"data":"‚™ØÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2912() {
    tokenize(
        r##"{"description":"Bad named entity: nrArr without a semi-colon","initialState":"Data","input":"&nrArr","inputUtf16":[38,110,114,65,114,114],"output":[{"Character":{"data":"&nrArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2913() {
    tokenize(
        r##"{"description":"Named entity: nrArr; with a semi-colon","initialState":"Data","input":"&nrArr;","inputUtf16":[38,110,114,65,114,114,59],"output":[{"Character":{"data":"‚áè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2914() {
    tokenize(
        r##"{"description":"Bad named entity: nrarr without a semi-colon","initialState":"Data","input":"&nrarr","inputUtf16":[38,110,114,97,114,114],"output":[{"Character":{"data":"&nrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2915() {
    tokenize(
        r##"{"description":"Named entity: nrarr; with a semi-colon","initialState":"Data","input":"&nrarr;","inputUtf16":[38,110,114,97,114,114,59],"output":[{"Character":{"data":"‚Üõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2916() {
    tokenize(
        r##"{"description":"Bad named entity: nrarrc without a semi-colon","initialState":"Data","input":"&nrarrc","inputUtf16":[38,110,114,97,114,114,99],"output":[{"Character":{"data":"&nrarrc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2917() {
    tokenize(
        r##"{"description":"Named entity: nrarrc; with a semi-colon","initialState":"Data","input":"&nrarrc;","inputUtf16":[38,110,114,97,114,114,99,59],"output":[{"Character":{"data":"‚§≥Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2918() {
    tokenize(
        r##"{"description":"Bad named entity: nrarrw without a semi-colon","initialState":"Data","input":"&nrarrw","inputUtf16":[38,110,114,97,114,114,119],"output":[{"Character":{"data":"&nrarrw"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2919() {
    tokenize(
        r##"{"description":"Named entity: nrarrw; with a semi-colon","initialState":"Data","input":"&nrarrw;","inputUtf16":[38,110,114,97,114,114,119,59],"output":[{"Character":{"data":"‚ÜùÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2920() {
    tokenize(
        r##"{"description":"Bad named entity: nrightarrow without a semi-colon","initialState":"Data","input":"&nrightarrow","inputUtf16":[38,110,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&nrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2921() {
    tokenize(
        r##"{"description":"Named entity: nrightarrow; with a semi-colon","initialState":"Data","input":"&nrightarrow;","inputUtf16":[38,110,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2922() {
    tokenize(
        r##"{"description":"Bad named entity: nrtri without a semi-colon","initialState":"Data","input":"&nrtri","inputUtf16":[38,110,114,116,114,105],"output":[{"Character":{"data":"&nrtri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2923() {
    tokenize(
        r##"{"description":"Named entity: nrtri; with a semi-colon","initialState":"Data","input":"&nrtri;","inputUtf16":[38,110,114,116,114,105,59],"output":[{"Character":{"data":"‚ã´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2924() {
    tokenize(
        r##"{"description":"Bad named entity: nrtrie without a semi-colon","initialState":"Data","input":"&nrtrie","inputUtf16":[38,110,114,116,114,105,101],"output":[{"Character":{"data":"&nrtrie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2925() {
    tokenize(
        r##"{"description":"Named entity: nrtrie; with a semi-colon","initialState":"Data","input":"&nrtrie;","inputUtf16":[38,110,114,116,114,105,101,59],"output":[{"Character":{"data":"‚ã≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2926() {
    tokenize(
        r##"{"description":"Bad named entity: nsc without a semi-colon","initialState":"Data","input":"&nsc","inputUtf16":[38,110,115,99],"output":[{"Character":{"data":"&nsc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2927() {
    tokenize(
        r##"{"description":"Named entity: nsc; with a semi-colon","initialState":"Data","input":"&nsc;","inputUtf16":[38,110,115,99,59],"output":[{"Character":{"data":"‚äÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2928() {
    tokenize(
        r##"{"description":"Bad named entity: nsccue without a semi-colon","initialState":"Data","input":"&nsccue","inputUtf16":[38,110,115,99,99,117,101],"output":[{"Character":{"data":"&nsccue"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2929() {
    tokenize(
        r##"{"description":"Named entity: nsccue; with a semi-colon","initialState":"Data","input":"&nsccue;","inputUtf16":[38,110,115,99,99,117,101,59],"output":[{"Character":{"data":"‚ã°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2930() {
    tokenize(
        r##"{"description":"Bad named entity: nsce without a semi-colon","initialState":"Data","input":"&nsce","inputUtf16":[38,110,115,99,101],"output":[{"Character":{"data":"&nsce"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2931() {
    tokenize(
        r##"{"description":"Named entity: nsce; with a semi-colon","initialState":"Data","input":"&nsce;","inputUtf16":[38,110,115,99,101,59],"output":[{"Character":{"data":"‚™∞Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2932() {
    tokenize(
        r##"{"description":"Bad named entity: nscr without a semi-colon","initialState":"Data","input":"&nscr","inputUtf16":[38,110,115,99,114],"output":[{"Character":{"data":"&nscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2933() {
    tokenize(
        r##"{"description":"Named entity: nscr; with a semi-colon","initialState":"Data","input":"&nscr;","inputUtf16":[38,110,115,99,114,59],"output":[{"Character":{"data":"ùìÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2934() {
    tokenize(
        r##"{"description":"Bad named entity: nshortmid without a semi-colon","initialState":"Data","input":"&nshortmid","inputUtf16":[38,110,115,104,111,114,116,109,105,100],"output":[{"Character":{"data":"&nshortmid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2935() {
    tokenize(
        r##"{"description":"Named entity: nshortmid; with a semi-colon","initialState":"Data","input":"&nshortmid;","inputUtf16":[38,110,115,104,111,114,116,109,105,100,59],"output":[{"Character":{"data":"‚à§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2936() {
    tokenize(
        r##"{"description":"Bad named entity: nshortparallel without a semi-colon","initialState":"Data","input":"&nshortparallel","inputUtf16":[38,110,115,104,111,114,116,112,97,114,97,108,108,101,108],"output":[{"Character":{"data":"&nshortparallel"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2937() {
    tokenize(
        r##"{"description":"Named entity: nshortparallel; with a semi-colon","initialState":"Data","input":"&nshortparallel;","inputUtf16":[38,110,115,104,111,114,116,112,97,114,97,108,108,101,108,59],"output":[{"Character":{"data":"‚à¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2938() {
    tokenize(
        r##"{"description":"Bad named entity: nsim without a semi-colon","initialState":"Data","input":"&nsim","inputUtf16":[38,110,115,105,109],"output":[{"Character":{"data":"&nsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2939() {
    tokenize(
        r##"{"description":"Named entity: nsim; with a semi-colon","initialState":"Data","input":"&nsim;","inputUtf16":[38,110,115,105,109,59],"output":[{"Character":{"data":"‚âÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2940() {
    tokenize(
        r##"{"description":"Bad named entity: nsime without a semi-colon","initialState":"Data","input":"&nsime","inputUtf16":[38,110,115,105,109,101],"output":[{"Character":{"data":"&nsime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2941() {
    tokenize(
        r##"{"description":"Named entity: nsime; with a semi-colon","initialState":"Data","input":"&nsime;","inputUtf16":[38,110,115,105,109,101,59],"output":[{"Character":{"data":"‚âÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2942() {
    tokenize(
        r##"{"description":"Bad named entity: nsimeq without a semi-colon","initialState":"Data","input":"&nsimeq","inputUtf16":[38,110,115,105,109,101,113],"output":[{"Character":{"data":"&nsimeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2943() {
    tokenize(
        r##"{"description":"Named entity: nsimeq; with a semi-colon","initialState":"Data","input":"&nsimeq;","inputUtf16":[38,110,115,105,109,101,113,59],"output":[{"Character":{"data":"‚âÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2944() {
    tokenize(
        r##"{"description":"Bad named entity: nsmid without a semi-colon","initialState":"Data","input":"&nsmid","inputUtf16":[38,110,115,109,105,100],"output":[{"Character":{"data":"&nsmid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2945() {
    tokenize(
        r##"{"description":"Named entity: nsmid; with a semi-colon","initialState":"Data","input":"&nsmid;","inputUtf16":[38,110,115,109,105,100,59],"output":[{"Character":{"data":"‚à§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2946() {
    tokenize(
        r##"{"description":"Bad named entity: nspar without a semi-colon","initialState":"Data","input":"&nspar","inputUtf16":[38,110,115,112,97,114],"output":[{"Character":{"data":"&nspar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2947() {
    tokenize(
        r##"{"description":"Named entity: nspar; with a semi-colon","initialState":"Data","input":"&nspar;","inputUtf16":[38,110,115,112,97,114,59],"output":[{"Character":{"data":"‚à¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2948() {
    tokenize(
        r##"{"description":"Bad named entity: nsqsube without a semi-colon","initialState":"Data","input":"&nsqsube","inputUtf16":[38,110,115,113,115,117,98,101],"output":[{"Character":{"data":"&nsqsube"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2949() {
    tokenize(
        r##"{"description":"Named entity: nsqsube; with a semi-colon","initialState":"Data","input":"&nsqsube;","inputUtf16":[38,110,115,113,115,117,98,101,59],"output":[{"Character":{"data":"‚ã¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2950() {
    tokenize(
        r##"{"description":"Bad named entity: nsqsupe without a semi-colon","initialState":"Data","input":"&nsqsupe","inputUtf16":[38,110,115,113,115,117,112,101],"output":[{"Character":{"data":"&nsqsupe"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2951() {
    tokenize(
        r##"{"description":"Named entity: nsqsupe; with a semi-colon","initialState":"Data","input":"&nsqsupe;","inputUtf16":[38,110,115,113,115,117,112,101,59],"output":[{"Character":{"data":"‚ã£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2952() {
    tokenize(
        r##"{"description":"Bad named entity: nsub without a semi-colon","initialState":"Data","input":"&nsub","inputUtf16":[38,110,115,117,98],"output":[{"Character":{"data":"&nsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2953() {
    tokenize(
        r##"{"description":"Named entity: nsub; with a semi-colon","initialState":"Data","input":"&nsub;","inputUtf16":[38,110,115,117,98,59],"output":[{"Character":{"data":"‚äÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2954() {
    tokenize(
        r##"{"description":"Bad named entity: nsubE without a semi-colon","initialState":"Data","input":"&nsubE","inputUtf16":[38,110,115,117,98,69],"output":[{"Character":{"data":"&nsubE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2955() {
    tokenize(
        r##"{"description":"Named entity: nsubE; with a semi-colon","initialState":"Data","input":"&nsubE;","inputUtf16":[38,110,115,117,98,69,59],"output":[{"Character":{"data":"‚´ÖÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2956() {
    tokenize(
        r##"{"description":"Bad named entity: nsube without a semi-colon","initialState":"Data","input":"&nsube","inputUtf16":[38,110,115,117,98,101],"output":[{"Character":{"data":"&nsube"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2957() {
    tokenize(
        r##"{"description":"Named entity: nsube; with a semi-colon","initialState":"Data","input":"&nsube;","inputUtf16":[38,110,115,117,98,101,59],"output":[{"Character":{"data":"‚äà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2958() {
    tokenize(
        r##"{"description":"Bad named entity: nsubset without a semi-colon","initialState":"Data","input":"&nsubset","inputUtf16":[38,110,115,117,98,115,101,116],"output":[{"Character":{"data":"&nsubset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2959() {
    tokenize(
        r##"{"description":"Named entity: nsubset; with a semi-colon","initialState":"Data","input":"&nsubset;","inputUtf16":[38,110,115,117,98,115,101,116,59],"output":[{"Character":{"data":"‚äÇ‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2960() {
    tokenize(
        r##"{"description":"Bad named entity: nsubseteq without a semi-colon","initialState":"Data","input":"&nsubseteq","inputUtf16":[38,110,115,117,98,115,101,116,101,113],"output":[{"Character":{"data":"&nsubseteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2961() {
    tokenize(
        r##"{"description":"Named entity: nsubseteq; with a semi-colon","initialState":"Data","input":"&nsubseteq;","inputUtf16":[38,110,115,117,98,115,101,116,101,113,59],"output":[{"Character":{"data":"‚äà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2962() {
    tokenize(
        r##"{"description":"Bad named entity: nsubseteqq without a semi-colon","initialState":"Data","input":"&nsubseteqq","inputUtf16":[38,110,115,117,98,115,101,116,101,113,113],"output":[{"Character":{"data":"&nsubseteqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2963() {
    tokenize(
        r##"{"description":"Named entity: nsubseteqq; with a semi-colon","initialState":"Data","input":"&nsubseteqq;","inputUtf16":[38,110,115,117,98,115,101,116,101,113,113,59],"output":[{"Character":{"data":"‚´ÖÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2964() {
    tokenize(
        r##"{"description":"Bad named entity: nsucc without a semi-colon","initialState":"Data","input":"&nsucc","inputUtf16":[38,110,115,117,99,99],"output":[{"Character":{"data":"&nsucc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2965() {
    tokenize(
        r##"{"description":"Named entity: nsucc; with a semi-colon","initialState":"Data","input":"&nsucc;","inputUtf16":[38,110,115,117,99,99,59],"output":[{"Character":{"data":"‚äÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2966() {
    tokenize(
        r##"{"description":"Bad named entity: nsucceq without a semi-colon","initialState":"Data","input":"&nsucceq","inputUtf16":[38,110,115,117,99,99,101,113],"output":[{"Character":{"data":"&nsucceq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2967() {
    tokenize(
        r##"{"description":"Named entity: nsucceq; with a semi-colon","initialState":"Data","input":"&nsucceq;","inputUtf16":[38,110,115,117,99,99,101,113,59],"output":[{"Character":{"data":"‚™∞Ã∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2968() {
    tokenize(
        r##"{"description":"Bad named entity: nsup without a semi-colon","initialState":"Data","input":"&nsup","inputUtf16":[38,110,115,117,112],"output":[{"Character":{"data":"&nsup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2969() {
    tokenize(
        r##"{"description":"Named entity: nsup; with a semi-colon","initialState":"Data","input":"&nsup;","inputUtf16":[38,110,115,117,112,59],"output":[{"Character":{"data":"‚äÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2970() {
    tokenize(
        r##"{"description":"Bad named entity: nsupE without a semi-colon","initialState":"Data","input":"&nsupE","inputUtf16":[38,110,115,117,112,69],"output":[{"Character":{"data":"&nsupE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2971() {
    tokenize(
        r##"{"description":"Named entity: nsupE; with a semi-colon","initialState":"Data","input":"&nsupE;","inputUtf16":[38,110,115,117,112,69,59],"output":[{"Character":{"data":"‚´ÜÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2972() {
    tokenize(
        r##"{"description":"Bad named entity: nsupe without a semi-colon","initialState":"Data","input":"&nsupe","inputUtf16":[38,110,115,117,112,101],"output":[{"Character":{"data":"&nsupe"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2973() {
    tokenize(
        r##"{"description":"Named entity: nsupe; with a semi-colon","initialState":"Data","input":"&nsupe;","inputUtf16":[38,110,115,117,112,101,59],"output":[{"Character":{"data":"‚äâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2974() {
    tokenize(
        r##"{"description":"Bad named entity: nsupset without a semi-colon","initialState":"Data","input":"&nsupset","inputUtf16":[38,110,115,117,112,115,101,116],"output":[{"Character":{"data":"&nsupset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2975() {
    tokenize(
        r##"{"description":"Named entity: nsupset; with a semi-colon","initialState":"Data","input":"&nsupset;","inputUtf16":[38,110,115,117,112,115,101,116,59],"output":[{"Character":{"data":"‚äÉ‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2976() {
    tokenize(
        r##"{"description":"Bad named entity: nsupseteq without a semi-colon","initialState":"Data","input":"&nsupseteq","inputUtf16":[38,110,115,117,112,115,101,116,101,113],"output":[{"Character":{"data":"&nsupseteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2977() {
    tokenize(
        r##"{"description":"Named entity: nsupseteq; with a semi-colon","initialState":"Data","input":"&nsupseteq;","inputUtf16":[38,110,115,117,112,115,101,116,101,113,59],"output":[{"Character":{"data":"‚äâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2978() {
    tokenize(
        r##"{"description":"Bad named entity: nsupseteqq without a semi-colon","initialState":"Data","input":"&nsupseteqq","inputUtf16":[38,110,115,117,112,115,101,116,101,113,113],"output":[{"Character":{"data":"&nsupseteqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2979() {
    tokenize(
        r##"{"description":"Named entity: nsupseteqq; with a semi-colon","initialState":"Data","input":"&nsupseteqq;","inputUtf16":[38,110,115,117,112,115,101,116,101,113,113,59],"output":[{"Character":{"data":"‚´ÜÃ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2980() {
    tokenize(
        r##"{"description":"Bad named entity: ntgl without a semi-colon","initialState":"Data","input":"&ntgl","inputUtf16":[38,110,116,103,108],"output":[{"Character":{"data":"&ntgl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2981() {
    tokenize(
        r##"{"description":"Named entity: ntgl; with a semi-colon","initialState":"Data","input":"&ntgl;","inputUtf16":[38,110,116,103,108,59],"output":[{"Character":{"data":"‚âπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2982() {
    tokenize(
        r##"{"description":"Named entity: ntilde without a semi-colon","initialState":"Data","input":"&ntilde","inputUtf16":[38,110,116,105,108,100,101],"output":[{"Character":{"data":"√±"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_2983() {
    tokenize(
        r##"{"description":"Named entity: ntilde; with a semi-colon","initialState":"Data","input":"&ntilde;","inputUtf16":[38,110,116,105,108,100,101,59],"output":[{"Character":{"data":"√±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2984() {
    tokenize(
        r##"{"description":"Bad named entity: ntlg without a semi-colon","initialState":"Data","input":"&ntlg","inputUtf16":[38,110,116,108,103],"output":[{"Character":{"data":"&ntlg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2985() {
    tokenize(
        r##"{"description":"Named entity: ntlg; with a semi-colon","initialState":"Data","input":"&ntlg;","inputUtf16":[38,110,116,108,103,59],"output":[{"Character":{"data":"‚â∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2986() {
    tokenize(
        r##"{"description":"Bad named entity: ntriangleleft without a semi-colon","initialState":"Data","input":"&ntriangleleft","inputUtf16":[38,110,116,114,105,97,110,103,108,101,108,101,102,116],"output":[{"Character":{"data":"&ntriangleleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2987() {
    tokenize(
        r##"{"description":"Named entity: ntriangleleft; with a semi-colon","initialState":"Data","input":"&ntriangleleft;","inputUtf16":[38,110,116,114,105,97,110,103,108,101,108,101,102,116,59],"output":[{"Character":{"data":"‚ã™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2988() {
    tokenize(
        r##"{"description":"Bad named entity: ntrianglelefteq without a semi-colon","initialState":"Data","input":"&ntrianglelefteq","inputUtf16":[38,110,116,114,105,97,110,103,108,101,108,101,102,116,101,113],"output":[{"Character":{"data":"&ntrianglelefteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2989() {
    tokenize(
        r##"{"description":"Named entity: ntrianglelefteq; with a semi-colon","initialState":"Data","input":"&ntrianglelefteq;","inputUtf16":[38,110,116,114,105,97,110,103,108,101,108,101,102,116,101,113,59],"output":[{"Character":{"data":"‚ã¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2990() {
    tokenize(
        r##"{"description":"Bad named entity: ntriangleright without a semi-colon","initialState":"Data","input":"&ntriangleright","inputUtf16":[38,110,116,114,105,97,110,103,108,101,114,105,103,104,116],"output":[{"Character":{"data":"&ntriangleright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2991() {
    tokenize(
        r##"{"description":"Named entity: ntriangleright; with a semi-colon","initialState":"Data","input":"&ntriangleright;","inputUtf16":[38,110,116,114,105,97,110,103,108,101,114,105,103,104,116,59],"output":[{"Character":{"data":"‚ã´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2992() {
    tokenize(
        r##"{"description":"Bad named entity: ntrianglerighteq without a semi-colon","initialState":"Data","input":"&ntrianglerighteq","inputUtf16":[38,110,116,114,105,97,110,103,108,101,114,105,103,104,116,101,113],"output":[{"Character":{"data":"&ntrianglerighteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2993() {
    tokenize(
        r##"{"description":"Named entity: ntrianglerighteq; with a semi-colon","initialState":"Data","input":"&ntrianglerighteq;","inputUtf16":[38,110,116,114,105,97,110,103,108,101,114,105,103,104,116,101,113,59],"output":[{"Character":{"data":"‚ã≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2994() {
    tokenize(
        r##"{"description":"Bad named entity: nu without a semi-colon","initialState":"Data","input":"&nu","inputUtf16":[38,110,117],"output":[{"Character":{"data":"&nu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2995() {
    tokenize(
        r##"{"description":"Named entity: nu; with a semi-colon","initialState":"Data","input":"&nu;","inputUtf16":[38,110,117,59],"output":[{"Character":{"data":"ŒΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2996() {
    tokenize(
        r##"{"description":"Bad named entity: num without a semi-colon","initialState":"Data","input":"&num","inputUtf16":[38,110,117,109],"output":[{"Character":{"data":"&num"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2997() {
    tokenize(
        r##"{"description":"Named entity: num; with a semi-colon","initialState":"Data","input":"&num;","inputUtf16":[38,110,117,109,59],"output":[{"Character":{"data":"#"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2998() {
    tokenize(
        r##"{"description":"Bad named entity: numero without a semi-colon","initialState":"Data","input":"&numero","inputUtf16":[38,110,117,109,101,114,111],"output":[{"Character":{"data":"&numero"}}],"errors":[]}"##,
    );
}

#[test]
fn test_2999() {
    tokenize(
        r##"{"description":"Named entity: numero; with a semi-colon","initialState":"Data","input":"&numero;","inputUtf16":[38,110,117,109,101,114,111,59],"output":[{"Character":{"data":"‚Ññ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3000() {
    tokenize(
        r##"{"description":"Bad named entity: numsp without a semi-colon","initialState":"Data","input":"&numsp","inputUtf16":[38,110,117,109,115,112],"output":[{"Character":{"data":"&numsp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3001() {
    tokenize(
        r##"{"description":"Named entity: numsp; with a semi-colon","initialState":"Data","input":"&numsp;","inputUtf16":[38,110,117,109,115,112,59],"output":[{"Character":{"data":"‚Äá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3002() {
    tokenize(
        r##"{"description":"Bad named entity: nvDash without a semi-colon","initialState":"Data","input":"&nvDash","inputUtf16":[38,110,118,68,97,115,104],"output":[{"Character":{"data":"&nvDash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3003() {
    tokenize(
        r##"{"description":"Named entity: nvDash; with a semi-colon","initialState":"Data","input":"&nvDash;","inputUtf16":[38,110,118,68,97,115,104,59],"output":[{"Character":{"data":"‚ä≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3004() {
    tokenize(
        r##"{"description":"Bad named entity: nvHarr without a semi-colon","initialState":"Data","input":"&nvHarr","inputUtf16":[38,110,118,72,97,114,114],"output":[{"Character":{"data":"&nvHarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3005() {
    tokenize(
        r##"{"description":"Named entity: nvHarr; with a semi-colon","initialState":"Data","input":"&nvHarr;","inputUtf16":[38,110,118,72,97,114,114,59],"output":[{"Character":{"data":"‚§Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3006() {
    tokenize(
        r##"{"description":"Bad named entity: nvap without a semi-colon","initialState":"Data","input":"&nvap","inputUtf16":[38,110,118,97,112],"output":[{"Character":{"data":"&nvap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3007() {
    tokenize(
        r##"{"description":"Named entity: nvap; with a semi-colon","initialState":"Data","input":"&nvap;","inputUtf16":[38,110,118,97,112,59],"output":[{"Character":{"data":"‚âç‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3008() {
    tokenize(
        r##"{"description":"Bad named entity: nvdash without a semi-colon","initialState":"Data","input":"&nvdash","inputUtf16":[38,110,118,100,97,115,104],"output":[{"Character":{"data":"&nvdash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3009() {
    tokenize(
        r##"{"description":"Named entity: nvdash; with a semi-colon","initialState":"Data","input":"&nvdash;","inputUtf16":[38,110,118,100,97,115,104,59],"output":[{"Character":{"data":"‚ä¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3010() {
    tokenize(
        r##"{"description":"Bad named entity: nvge without a semi-colon","initialState":"Data","input":"&nvge","inputUtf16":[38,110,118,103,101],"output":[{"Character":{"data":"&nvge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3011() {
    tokenize(
        r##"{"description":"Named entity: nvge; with a semi-colon","initialState":"Data","input":"&nvge;","inputUtf16":[38,110,118,103,101,59],"output":[{"Character":{"data":"‚â•‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3012() {
    tokenize(
        r##"{"description":"Bad named entity: nvgt without a semi-colon","initialState":"Data","input":"&nvgt","inputUtf16":[38,110,118,103,116],"output":[{"Character":{"data":"&nvgt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3013() {
    tokenize(
        r##"{"description":"Named entity: nvgt; with a semi-colon","initialState":"Data","input":"&nvgt;","inputUtf16":[38,110,118,103,116,59],"output":[{"Character":{"data":">‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3014() {
    tokenize(
        r##"{"description":"Bad named entity: nvinfin without a semi-colon","initialState":"Data","input":"&nvinfin","inputUtf16":[38,110,118,105,110,102,105,110],"output":[{"Character":{"data":"&nvinfin"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3015() {
    tokenize(
        r##"{"description":"Named entity: nvinfin; with a semi-colon","initialState":"Data","input":"&nvinfin;","inputUtf16":[38,110,118,105,110,102,105,110,59],"output":[{"Character":{"data":"‚ßû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3016() {
    tokenize(
        r##"{"description":"Bad named entity: nvlArr without a semi-colon","initialState":"Data","input":"&nvlArr","inputUtf16":[38,110,118,108,65,114,114],"output":[{"Character":{"data":"&nvlArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3017() {
    tokenize(
        r##"{"description":"Named entity: nvlArr; with a semi-colon","initialState":"Data","input":"&nvlArr;","inputUtf16":[38,110,118,108,65,114,114,59],"output":[{"Character":{"data":"‚§Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3018() {
    tokenize(
        r##"{"description":"Bad named entity: nvle without a semi-colon","initialState":"Data","input":"&nvle","inputUtf16":[38,110,118,108,101],"output":[{"Character":{"data":"&nvle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3019() {
    tokenize(
        r##"{"description":"Named entity: nvle; with a semi-colon","initialState":"Data","input":"&nvle;","inputUtf16":[38,110,118,108,101,59],"output":[{"Character":{"data":"‚â§‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3020() {
    tokenize(
        r##"{"description":"Bad named entity: nvlt without a semi-colon","initialState":"Data","input":"&nvlt","inputUtf16":[38,110,118,108,116],"output":[{"Character":{"data":"&nvlt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3021() {
    tokenize(
        r##"{"description":"Named entity: nvlt; with a semi-colon","initialState":"Data","input":"&nvlt;","inputUtf16":[38,110,118,108,116,59],"output":[{"Character":{"data":"<‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3022() {
    tokenize(
        r##"{"description":"Bad named entity: nvltrie without a semi-colon","initialState":"Data","input":"&nvltrie","inputUtf16":[38,110,118,108,116,114,105,101],"output":[{"Character":{"data":"&nvltrie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3023() {
    tokenize(
        r##"{"description":"Named entity: nvltrie; with a semi-colon","initialState":"Data","input":"&nvltrie;","inputUtf16":[38,110,118,108,116,114,105,101,59],"output":[{"Character":{"data":"‚ä¥‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3024() {
    tokenize(
        r##"{"description":"Bad named entity: nvrArr without a semi-colon","initialState":"Data","input":"&nvrArr","inputUtf16":[38,110,118,114,65,114,114],"output":[{"Character":{"data":"&nvrArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3025() {
    tokenize(
        r##"{"description":"Named entity: nvrArr; with a semi-colon","initialState":"Data","input":"&nvrArr;","inputUtf16":[38,110,118,114,65,114,114,59],"output":[{"Character":{"data":"‚§É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3026() {
    tokenize(
        r##"{"description":"Bad named entity: nvrtrie without a semi-colon","initialState":"Data","input":"&nvrtrie","inputUtf16":[38,110,118,114,116,114,105,101],"output":[{"Character":{"data":"&nvrtrie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3027() {
    tokenize(
        r##"{"description":"Named entity: nvrtrie; with a semi-colon","initialState":"Data","input":"&nvrtrie;","inputUtf16":[38,110,118,114,116,114,105,101,59],"output":[{"Character":{"data":"‚äµ‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3028() {
    tokenize(
        r##"{"description":"Bad named entity: nvsim without a semi-colon","initialState":"Data","input":"&nvsim","inputUtf16":[38,110,118,115,105,109],"output":[{"Character":{"data":"&nvsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3029() {
    tokenize(
        r##"{"description":"Named entity: nvsim; with a semi-colon","initialState":"Data","input":"&nvsim;","inputUtf16":[38,110,118,115,105,109,59],"output":[{"Character":{"data":"‚àº‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3030() {
    tokenize(
        r##"{"description":"Bad named entity: nwArr without a semi-colon","initialState":"Data","input":"&nwArr","inputUtf16":[38,110,119,65,114,114],"output":[{"Character":{"data":"&nwArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3031() {
    tokenize(
        r##"{"description":"Named entity: nwArr; with a semi-colon","initialState":"Data","input":"&nwArr;","inputUtf16":[38,110,119,65,114,114,59],"output":[{"Character":{"data":"‚áñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3032() {
    tokenize(
        r##"{"description":"Bad named entity: nwarhk without a semi-colon","initialState":"Data","input":"&nwarhk","inputUtf16":[38,110,119,97,114,104,107],"output":[{"Character":{"data":"&nwarhk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3033() {
    tokenize(
        r##"{"description":"Named entity: nwarhk; with a semi-colon","initialState":"Data","input":"&nwarhk;","inputUtf16":[38,110,119,97,114,104,107,59],"output":[{"Character":{"data":"‚§£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3034() {
    tokenize(
        r##"{"description":"Bad named entity: nwarr without a semi-colon","initialState":"Data","input":"&nwarr","inputUtf16":[38,110,119,97,114,114],"output":[{"Character":{"data":"&nwarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3035() {
    tokenize(
        r##"{"description":"Named entity: nwarr; with a semi-colon","initialState":"Data","input":"&nwarr;","inputUtf16":[38,110,119,97,114,114,59],"output":[{"Character":{"data":"‚Üñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3036() {
    tokenize(
        r##"{"description":"Bad named entity: nwarrow without a semi-colon","initialState":"Data","input":"&nwarrow","inputUtf16":[38,110,119,97,114,114,111,119],"output":[{"Character":{"data":"&nwarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3037() {
    tokenize(
        r##"{"description":"Named entity: nwarrow; with a semi-colon","initialState":"Data","input":"&nwarrow;","inputUtf16":[38,110,119,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3038() {
    tokenize(
        r##"{"description":"Bad named entity: nwnear without a semi-colon","initialState":"Data","input":"&nwnear","inputUtf16":[38,110,119,110,101,97,114],"output":[{"Character":{"data":"&nwnear"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3039() {
    tokenize(
        r##"{"description":"Named entity: nwnear; with a semi-colon","initialState":"Data","input":"&nwnear;","inputUtf16":[38,110,119,110,101,97,114,59],"output":[{"Character":{"data":"‚§ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3040() {
    tokenize(
        r##"{"description":"Bad named entity: oS without a semi-colon","initialState":"Data","input":"&oS","inputUtf16":[38,111,83],"output":[{"Character":{"data":"&oS"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3041() {
    tokenize(
        r##"{"description":"Named entity: oS; with a semi-colon","initialState":"Data","input":"&oS;","inputUtf16":[38,111,83,59],"output":[{"Character":{"data":"‚ìà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3042() {
    tokenize(
        r##"{"description":"Named entity: oacute without a semi-colon","initialState":"Data","input":"&oacute","inputUtf16":[38,111,97,99,117,116,101],"output":[{"Character":{"data":"√≥"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_3043() {
    tokenize(
        r##"{"description":"Named entity: oacute; with a semi-colon","initialState":"Data","input":"&oacute;","inputUtf16":[38,111,97,99,117,116,101,59],"output":[{"Character":{"data":"√≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3044() {
    tokenize(
        r##"{"description":"Bad named entity: oast without a semi-colon","initialState":"Data","input":"&oast","inputUtf16":[38,111,97,115,116],"output":[{"Character":{"data":"&oast"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3045() {
    tokenize(
        r##"{"description":"Named entity: oast; with a semi-colon","initialState":"Data","input":"&oast;","inputUtf16":[38,111,97,115,116,59],"output":[{"Character":{"data":"‚äõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3046() {
    tokenize(
        r##"{"description":"Bad named entity: ocir without a semi-colon","initialState":"Data","input":"&ocir","inputUtf16":[38,111,99,105,114],"output":[{"Character":{"data":"&ocir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3047() {
    tokenize(
        r##"{"description":"Named entity: ocir; with a semi-colon","initialState":"Data","input":"&ocir;","inputUtf16":[38,111,99,105,114,59],"output":[{"Character":{"data":"‚äö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3048() {
    tokenize(
        r##"{"description":"Named entity: ocirc without a semi-colon","initialState":"Data","input":"&ocirc","inputUtf16":[38,111,99,105,114,99],"output":[{"Character":{"data":"√¥"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_3049() {
    tokenize(
        r##"{"description":"Named entity: ocirc; with a semi-colon","initialState":"Data","input":"&ocirc;","inputUtf16":[38,111,99,105,114,99,59],"output":[{"Character":{"data":"√¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3050() {
    tokenize(
        r##"{"description":"Bad named entity: ocy without a semi-colon","initialState":"Data","input":"&ocy","inputUtf16":[38,111,99,121],"output":[{"Character":{"data":"&ocy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3051() {
    tokenize(
        r##"{"description":"Named entity: ocy; with a semi-colon","initialState":"Data","input":"&ocy;","inputUtf16":[38,111,99,121,59],"output":[{"Character":{"data":"–æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3052() {
    tokenize(
        r##"{"description":"Bad named entity: odash without a semi-colon","initialState":"Data","input":"&odash","inputUtf16":[38,111,100,97,115,104],"output":[{"Character":{"data":"&odash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3053() {
    tokenize(
        r##"{"description":"Named entity: odash; with a semi-colon","initialState":"Data","input":"&odash;","inputUtf16":[38,111,100,97,115,104,59],"output":[{"Character":{"data":"‚äù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3054() {
    tokenize(
        r##"{"description":"Bad named entity: odblac without a semi-colon","initialState":"Data","input":"&odblac","inputUtf16":[38,111,100,98,108,97,99],"output":[{"Character":{"data":"&odblac"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3055() {
    tokenize(
        r##"{"description":"Named entity: odblac; with a semi-colon","initialState":"Data","input":"&odblac;","inputUtf16":[38,111,100,98,108,97,99,59],"output":[{"Character":{"data":"≈ë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3056() {
    tokenize(
        r##"{"description":"Bad named entity: odiv without a semi-colon","initialState":"Data","input":"&odiv","inputUtf16":[38,111,100,105,118],"output":[{"Character":{"data":"&odiv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3057() {
    tokenize(
        r##"{"description":"Named entity: odiv; with a semi-colon","initialState":"Data","input":"&odiv;","inputUtf16":[38,111,100,105,118,59],"output":[{"Character":{"data":"‚®∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3058() {
    tokenize(
        r##"{"description":"Bad named entity: odot without a semi-colon","initialState":"Data","input":"&odot","inputUtf16":[38,111,100,111,116],"output":[{"Character":{"data":"&odot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3059() {
    tokenize(
        r##"{"description":"Named entity: odot; with a semi-colon","initialState":"Data","input":"&odot;","inputUtf16":[38,111,100,111,116,59],"output":[{"Character":{"data":"‚äô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3060() {
    tokenize(
        r##"{"description":"Bad named entity: odsold without a semi-colon","initialState":"Data","input":"&odsold","inputUtf16":[38,111,100,115,111,108,100],"output":[{"Character":{"data":"&odsold"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3061() {
    tokenize(
        r##"{"description":"Named entity: odsold; with a semi-colon","initialState":"Data","input":"&odsold;","inputUtf16":[38,111,100,115,111,108,100,59],"output":[{"Character":{"data":"‚¶º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3062() {
    tokenize(
        r##"{"description":"Bad named entity: oelig without a semi-colon","initialState":"Data","input":"&oelig","inputUtf16":[38,111,101,108,105,103],"output":[{"Character":{"data":"&oelig"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3063() {
    tokenize(
        r##"{"description":"Named entity: oelig; with a semi-colon","initialState":"Data","input":"&oelig;","inputUtf16":[38,111,101,108,105,103,59],"output":[{"Character":{"data":"≈ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3064() {
    tokenize(
        r##"{"description":"Bad named entity: ofcir without a semi-colon","initialState":"Data","input":"&ofcir","inputUtf16":[38,111,102,99,105,114],"output":[{"Character":{"data":"&ofcir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3065() {
    tokenize(
        r##"{"description":"Named entity: ofcir; with a semi-colon","initialState":"Data","input":"&ofcir;","inputUtf16":[38,111,102,99,105,114,59],"output":[{"Character":{"data":"‚¶ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3066() {
    tokenize(
        r##"{"description":"Bad named entity: ofr without a semi-colon","initialState":"Data","input":"&ofr","inputUtf16":[38,111,102,114],"output":[{"Character":{"data":"&ofr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3067() {
    tokenize(
        r##"{"description":"Named entity: ofr; with a semi-colon","initialState":"Data","input":"&ofr;","inputUtf16":[38,111,102,114,59],"output":[{"Character":{"data":"ùî¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3068() {
    tokenize(
        r##"{"description":"Bad named entity: ogon without a semi-colon","initialState":"Data","input":"&ogon","inputUtf16":[38,111,103,111,110],"output":[{"Character":{"data":"&ogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3069() {
    tokenize(
        r##"{"description":"Named entity: ogon; with a semi-colon","initialState":"Data","input":"&ogon;","inputUtf16":[38,111,103,111,110,59],"output":[{"Character":{"data":"Àõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3070() {
    tokenize(
        r##"{"description":"Named entity: ograve without a semi-colon","initialState":"Data","input":"&ograve","inputUtf16":[38,111,103,114,97,118,101],"output":[{"Character":{"data":"√≤"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_3071() {
    tokenize(
        r##"{"description":"Named entity: ograve; with a semi-colon","initialState":"Data","input":"&ograve;","inputUtf16":[38,111,103,114,97,118,101,59],"output":[{"Character":{"data":"√≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3072() {
    tokenize(
        r##"{"description":"Bad named entity: ogt without a semi-colon","initialState":"Data","input":"&ogt","inputUtf16":[38,111,103,116],"output":[{"Character":{"data":"&ogt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3073() {
    tokenize(
        r##"{"description":"Named entity: ogt; with a semi-colon","initialState":"Data","input":"&ogt;","inputUtf16":[38,111,103,116,59],"output":[{"Character":{"data":"‚ßÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3074() {
    tokenize(
        r##"{"description":"Bad named entity: ohbar without a semi-colon","initialState":"Data","input":"&ohbar","inputUtf16":[38,111,104,98,97,114],"output":[{"Character":{"data":"&ohbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3075() {
    tokenize(
        r##"{"description":"Named entity: ohbar; with a semi-colon","initialState":"Data","input":"&ohbar;","inputUtf16":[38,111,104,98,97,114,59],"output":[{"Character":{"data":"‚¶µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3076() {
    tokenize(
        r##"{"description":"Bad named entity: ohm without a semi-colon","initialState":"Data","input":"&ohm","inputUtf16":[38,111,104,109],"output":[{"Character":{"data":"&ohm"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3077() {
    tokenize(
        r##"{"description":"Named entity: ohm; with a semi-colon","initialState":"Data","input":"&ohm;","inputUtf16":[38,111,104,109,59],"output":[{"Character":{"data":"Œ©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3078() {
    tokenize(
        r##"{"description":"Bad named entity: oint without a semi-colon","initialState":"Data","input":"&oint","inputUtf16":[38,111,105,110,116],"output":[{"Character":{"data":"&oint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3079() {
    tokenize(
        r##"{"description":"Named entity: oint; with a semi-colon","initialState":"Data","input":"&oint;","inputUtf16":[38,111,105,110,116,59],"output":[{"Character":{"data":"‚àÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3080() {
    tokenize(
        r##"{"description":"Bad named entity: olarr without a semi-colon","initialState":"Data","input":"&olarr","inputUtf16":[38,111,108,97,114,114],"output":[{"Character":{"data":"&olarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3081() {
    tokenize(
        r##"{"description":"Named entity: olarr; with a semi-colon","initialState":"Data","input":"&olarr;","inputUtf16":[38,111,108,97,114,114,59],"output":[{"Character":{"data":"‚Ü∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3082() {
    tokenize(
        r##"{"description":"Bad named entity: olcir without a semi-colon","initialState":"Data","input":"&olcir","inputUtf16":[38,111,108,99,105,114],"output":[{"Character":{"data":"&olcir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3083() {
    tokenize(
        r##"{"description":"Named entity: olcir; with a semi-colon","initialState":"Data","input":"&olcir;","inputUtf16":[38,111,108,99,105,114,59],"output":[{"Character":{"data":"‚¶æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3084() {
    tokenize(
        r##"{"description":"Bad named entity: olcross without a semi-colon","initialState":"Data","input":"&olcross","inputUtf16":[38,111,108,99,114,111,115,115],"output":[{"Character":{"data":"&olcross"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3085() {
    tokenize(
        r##"{"description":"Named entity: olcross; with a semi-colon","initialState":"Data","input":"&olcross;","inputUtf16":[38,111,108,99,114,111,115,115,59],"output":[{"Character":{"data":"‚¶ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3086() {
    tokenize(
        r##"{"description":"Bad named entity: oline without a semi-colon","initialState":"Data","input":"&oline","inputUtf16":[38,111,108,105,110,101],"output":[{"Character":{"data":"&oline"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3087() {
    tokenize(
        r##"{"description":"Named entity: oline; with a semi-colon","initialState":"Data","input":"&oline;","inputUtf16":[38,111,108,105,110,101,59],"output":[{"Character":{"data":"‚Äæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3088() {
    tokenize(
        r##"{"description":"Bad named entity: olt without a semi-colon","initialState":"Data","input":"&olt","inputUtf16":[38,111,108,116],"output":[{"Character":{"data":"&olt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3089() {
    tokenize(
        r##"{"description":"Named entity: olt; with a semi-colon","initialState":"Data","input":"&olt;","inputUtf16":[38,111,108,116,59],"output":[{"Character":{"data":"‚ßÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3090() {
    tokenize(
        r##"{"description":"Bad named entity: omacr without a semi-colon","initialState":"Data","input":"&omacr","inputUtf16":[38,111,109,97,99,114],"output":[{"Character":{"data":"&omacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3091() {
    tokenize(
        r##"{"description":"Named entity: omacr; with a semi-colon","initialState":"Data","input":"&omacr;","inputUtf16":[38,111,109,97,99,114,59],"output":[{"Character":{"data":"≈ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3092() {
    tokenize(
        r##"{"description":"Bad named entity: omega without a semi-colon","initialState":"Data","input":"&omega","inputUtf16":[38,111,109,101,103,97],"output":[{"Character":{"data":"&omega"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3093() {
    tokenize(
        r##"{"description":"Named entity: omega; with a semi-colon","initialState":"Data","input":"&omega;","inputUtf16":[38,111,109,101,103,97,59],"output":[{"Character":{"data":"œâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3094() {
    tokenize(
        r##"{"description":"Bad named entity: omicron without a semi-colon","initialState":"Data","input":"&omicron","inputUtf16":[38,111,109,105,99,114,111,110],"output":[{"Character":{"data":"&omicron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3095() {
    tokenize(
        r##"{"description":"Named entity: omicron; with a semi-colon","initialState":"Data","input":"&omicron;","inputUtf16":[38,111,109,105,99,114,111,110,59],"output":[{"Character":{"data":"Œø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3096() {
    tokenize(
        r##"{"description":"Bad named entity: omid without a semi-colon","initialState":"Data","input":"&omid","inputUtf16":[38,111,109,105,100],"output":[{"Character":{"data":"&omid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3097() {
    tokenize(
        r##"{"description":"Named entity: omid; with a semi-colon","initialState":"Data","input":"&omid;","inputUtf16":[38,111,109,105,100,59],"output":[{"Character":{"data":"‚¶∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3098() {
    tokenize(
        r##"{"description":"Bad named entity: ominus without a semi-colon","initialState":"Data","input":"&ominus","inputUtf16":[38,111,109,105,110,117,115],"output":[{"Character":{"data":"&ominus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3099() {
    tokenize(
        r##"{"description":"Named entity: ominus; with a semi-colon","initialState":"Data","input":"&ominus;","inputUtf16":[38,111,109,105,110,117,115,59],"output":[{"Character":{"data":"‚äñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3100() {
    tokenize(
        r##"{"description":"Bad named entity: oopf without a semi-colon","initialState":"Data","input":"&oopf","inputUtf16":[38,111,111,112,102],"output":[{"Character":{"data":"&oopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3101() {
    tokenize(
        r##"{"description":"Named entity: oopf; with a semi-colon","initialState":"Data","input":"&oopf;","inputUtf16":[38,111,111,112,102,59],"output":[{"Character":{"data":"ùï†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3102() {
    tokenize(
        r##"{"description":"Bad named entity: opar without a semi-colon","initialState":"Data","input":"&opar","inputUtf16":[38,111,112,97,114],"output":[{"Character":{"data":"&opar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3103() {
    tokenize(
        r##"{"description":"Named entity: opar; with a semi-colon","initialState":"Data","input":"&opar;","inputUtf16":[38,111,112,97,114,59],"output":[{"Character":{"data":"‚¶∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3104() {
    tokenize(
        r##"{"description":"Bad named entity: operp without a semi-colon","initialState":"Data","input":"&operp","inputUtf16":[38,111,112,101,114,112],"output":[{"Character":{"data":"&operp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3105() {
    tokenize(
        r##"{"description":"Named entity: operp; with a semi-colon","initialState":"Data","input":"&operp;","inputUtf16":[38,111,112,101,114,112,59],"output":[{"Character":{"data":"‚¶π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3106() {
    tokenize(
        r##"{"description":"Bad named entity: oplus without a semi-colon","initialState":"Data","input":"&oplus","inputUtf16":[38,111,112,108,117,115],"output":[{"Character":{"data":"&oplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3107() {
    tokenize(
        r##"{"description":"Named entity: oplus; with a semi-colon","initialState":"Data","input":"&oplus;","inputUtf16":[38,111,112,108,117,115,59],"output":[{"Character":{"data":"‚äï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3108() {
    tokenize(
        r##"{"description":"Bad named entity: or without a semi-colon","initialState":"Data","input":"&or","inputUtf16":[38,111,114],"output":[{"Character":{"data":"&or"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3109() {
    tokenize(
        r##"{"description":"Named entity: or; with a semi-colon","initialState":"Data","input":"&or;","inputUtf16":[38,111,114,59],"output":[{"Character":{"data":"‚à®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3110() {
    tokenize(
        r##"{"description":"Bad named entity: orarr without a semi-colon","initialState":"Data","input":"&orarr","inputUtf16":[38,111,114,97,114,114],"output":[{"Character":{"data":"&orarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3111() {
    tokenize(
        r##"{"description":"Named entity: orarr; with a semi-colon","initialState":"Data","input":"&orarr;","inputUtf16":[38,111,114,97,114,114,59],"output":[{"Character":{"data":"‚Üª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3112() {
    tokenize(
        r##"{"description":"Bad named entity: ord without a semi-colon","initialState":"Data","input":"&ord","inputUtf16":[38,111,114,100],"output":[{"Character":{"data":"&ord"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3113() {
    tokenize(
        r##"{"description":"Named entity: ord; with a semi-colon","initialState":"Data","input":"&ord;","inputUtf16":[38,111,114,100,59],"output":[{"Character":{"data":"‚©ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3114() {
    tokenize(
        r##"{"description":"Bad named entity: order without a semi-colon","initialState":"Data","input":"&order","inputUtf16":[38,111,114,100,101,114],"output":[{"Character":{"data":"&order"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3115() {
    tokenize(
        r##"{"description":"Named entity: order; with a semi-colon","initialState":"Data","input":"&order;","inputUtf16":[38,111,114,100,101,114,59],"output":[{"Character":{"data":"‚Ñ¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3116() {
    tokenize(
        r##"{"description":"Bad named entity: orderof without a semi-colon","initialState":"Data","input":"&orderof","inputUtf16":[38,111,114,100,101,114,111,102],"output":[{"Character":{"data":"&orderof"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3117() {
    tokenize(
        r##"{"description":"Named entity: orderof; with a semi-colon","initialState":"Data","input":"&orderof;","inputUtf16":[38,111,114,100,101,114,111,102,59],"output":[{"Character":{"data":"‚Ñ¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3118() {
    tokenize(
        r##"{"description":"Named entity: ordf without a semi-colon","initialState":"Data","input":"&ordf","inputUtf16":[38,111,114,100,102],"output":[{"Character":{"data":"¬™"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3119() {
    tokenize(
        r##"{"description":"Named entity: ordf; with a semi-colon","initialState":"Data","input":"&ordf;","inputUtf16":[38,111,114,100,102,59],"output":[{"Character":{"data":"¬™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3120() {
    tokenize(
        r##"{"description":"Named entity: ordm without a semi-colon","initialState":"Data","input":"&ordm","inputUtf16":[38,111,114,100,109],"output":[{"Character":{"data":"¬∫"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3121() {
    tokenize(
        r##"{"description":"Named entity: ordm; with a semi-colon","initialState":"Data","input":"&ordm;","inputUtf16":[38,111,114,100,109,59],"output":[{"Character":{"data":"¬∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3122() {
    tokenize(
        r##"{"description":"Bad named entity: origof without a semi-colon","initialState":"Data","input":"&origof","inputUtf16":[38,111,114,105,103,111,102],"output":[{"Character":{"data":"&origof"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3123() {
    tokenize(
        r##"{"description":"Named entity: origof; with a semi-colon","initialState":"Data","input":"&origof;","inputUtf16":[38,111,114,105,103,111,102,59],"output":[{"Character":{"data":"‚ä∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3124() {
    tokenize(
        r##"{"description":"Bad named entity: oror without a semi-colon","initialState":"Data","input":"&oror","inputUtf16":[38,111,114,111,114],"output":[{"Character":{"data":"&oror"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3125() {
    tokenize(
        r##"{"description":"Named entity: oror; with a semi-colon","initialState":"Data","input":"&oror;","inputUtf16":[38,111,114,111,114,59],"output":[{"Character":{"data":"‚©ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3126() {
    tokenize(
        r##"{"description":"Bad named entity: orslope without a semi-colon","initialState":"Data","input":"&orslope","inputUtf16":[38,111,114,115,108,111,112,101],"output":[{"Character":{"data":"&orslope"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3127() {
    tokenize(
        r##"{"description":"Named entity: orslope; with a semi-colon","initialState":"Data","input":"&orslope;","inputUtf16":[38,111,114,115,108,111,112,101,59],"output":[{"Character":{"data":"‚©ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3128() {
    tokenize(
        r##"{"description":"Bad named entity: orv without a semi-colon","initialState":"Data","input":"&orv","inputUtf16":[38,111,114,118],"output":[{"Character":{"data":"&orv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3129() {
    tokenize(
        r##"{"description":"Named entity: orv; with a semi-colon","initialState":"Data","input":"&orv;","inputUtf16":[38,111,114,118,59],"output":[{"Character":{"data":"‚©õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3130() {
    tokenize(
        r##"{"description":"Bad named entity: oscr without a semi-colon","initialState":"Data","input":"&oscr","inputUtf16":[38,111,115,99,114],"output":[{"Character":{"data":"&oscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3131() {
    tokenize(
        r##"{"description":"Named entity: oscr; with a semi-colon","initialState":"Data","input":"&oscr;","inputUtf16":[38,111,115,99,114,59],"output":[{"Character":{"data":"‚Ñ¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3132() {
    tokenize(
        r##"{"description":"Named entity: oslash without a semi-colon","initialState":"Data","input":"&oslash","inputUtf16":[38,111,115,108,97,115,104],"output":[{"Character":{"data":"√∏"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_3133() {
    tokenize(
        r##"{"description":"Named entity: oslash; with a semi-colon","initialState":"Data","input":"&oslash;","inputUtf16":[38,111,115,108,97,115,104,59],"output":[{"Character":{"data":"√∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3134() {
    tokenize(
        r##"{"description":"Bad named entity: osol without a semi-colon","initialState":"Data","input":"&osol","inputUtf16":[38,111,115,111,108],"output":[{"Character":{"data":"&osol"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3135() {
    tokenize(
        r##"{"description":"Named entity: osol; with a semi-colon","initialState":"Data","input":"&osol;","inputUtf16":[38,111,115,111,108,59],"output":[{"Character":{"data":"‚äò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3136() {
    tokenize(
        r##"{"description":"Named entity: otilde without a semi-colon","initialState":"Data","input":"&otilde","inputUtf16":[38,111,116,105,108,100,101],"output":[{"Character":{"data":"√µ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_3137() {
    tokenize(
        r##"{"description":"Named entity: otilde; with a semi-colon","initialState":"Data","input":"&otilde;","inputUtf16":[38,111,116,105,108,100,101,59],"output":[{"Character":{"data":"√µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3138() {
    tokenize(
        r##"{"description":"Bad named entity: otimes without a semi-colon","initialState":"Data","input":"&otimes","inputUtf16":[38,111,116,105,109,101,115],"output":[{"Character":{"data":"&otimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3139() {
    tokenize(
        r##"{"description":"Named entity: otimes; with a semi-colon","initialState":"Data","input":"&otimes;","inputUtf16":[38,111,116,105,109,101,115,59],"output":[{"Character":{"data":"‚äó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3140() {
    tokenize(
        r##"{"description":"Bad named entity: otimesas without a semi-colon","initialState":"Data","input":"&otimesas","inputUtf16":[38,111,116,105,109,101,115,97,115],"output":[{"Character":{"data":"&otimesas"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3141() {
    tokenize(
        r##"{"description":"Named entity: otimesas; with a semi-colon","initialState":"Data","input":"&otimesas;","inputUtf16":[38,111,116,105,109,101,115,97,115,59],"output":[{"Character":{"data":"‚®∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3142() {
    tokenize(
        r##"{"description":"Named entity: ouml without a semi-colon","initialState":"Data","input":"&ouml","inputUtf16":[38,111,117,109,108],"output":[{"Character":{"data":"√∂"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3143() {
    tokenize(
        r##"{"description":"Named entity: ouml; with a semi-colon","initialState":"Data","input":"&ouml;","inputUtf16":[38,111,117,109,108,59],"output":[{"Character":{"data":"√∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3144() {
    tokenize(
        r##"{"description":"Bad named entity: ovbar without a semi-colon","initialState":"Data","input":"&ovbar","inputUtf16":[38,111,118,98,97,114],"output":[{"Character":{"data":"&ovbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3145() {
    tokenize(
        r##"{"description":"Named entity: ovbar; with a semi-colon","initialState":"Data","input":"&ovbar;","inputUtf16":[38,111,118,98,97,114,59],"output":[{"Character":{"data":"‚åΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3146() {
    tokenize(
        r##"{"description":"Bad named entity: par without a semi-colon","initialState":"Data","input":"&par","inputUtf16":[38,112,97,114],"output":[{"Character":{"data":"&par"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3147() {
    tokenize(
        r##"{"description":"Named entity: par; with a semi-colon","initialState":"Data","input":"&par;","inputUtf16":[38,112,97,114,59],"output":[{"Character":{"data":"‚à•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3148() {
    tokenize(
        r##"{"description":"Named entity: para without a semi-colon","initialState":"Data","input":"&para","inputUtf16":[38,112,97,114,97],"output":[{"Character":{"data":"¬∂"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3149() {
    tokenize(
        r##"{"description":"Named entity: para; with a semi-colon","initialState":"Data","input":"&para;","inputUtf16":[38,112,97,114,97,59],"output":[{"Character":{"data":"¬∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3150() {
    tokenize(
        r##"{"description":"Named entity: parallel; with a semi-colon","initialState":"Data","input":"&parallel;","inputUtf16":[38,112,97,114,97,108,108,101,108,59],"output":[{"Character":{"data":"‚à•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3151() {
    tokenize(
        r##"{"description":"Bad named entity: parsim without a semi-colon","initialState":"Data","input":"&parsim","inputUtf16":[38,112,97,114,115,105,109],"output":[{"Character":{"data":"&parsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3152() {
    tokenize(
        r##"{"description":"Named entity: parsim; with a semi-colon","initialState":"Data","input":"&parsim;","inputUtf16":[38,112,97,114,115,105,109,59],"output":[{"Character":{"data":"‚´≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3153() {
    tokenize(
        r##"{"description":"Bad named entity: parsl without a semi-colon","initialState":"Data","input":"&parsl","inputUtf16":[38,112,97,114,115,108],"output":[{"Character":{"data":"&parsl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3154() {
    tokenize(
        r##"{"description":"Named entity: parsl; with a semi-colon","initialState":"Data","input":"&parsl;","inputUtf16":[38,112,97,114,115,108,59],"output":[{"Character":{"data":"‚´Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3155() {
    tokenize(
        r##"{"description":"Bad named entity: part without a semi-colon","initialState":"Data","input":"&part","inputUtf16":[38,112,97,114,116],"output":[{"Character":{"data":"&part"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3156() {
    tokenize(
        r##"{"description":"Named entity: part; with a semi-colon","initialState":"Data","input":"&part;","inputUtf16":[38,112,97,114,116,59],"output":[{"Character":{"data":"‚àÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3157() {
    tokenize(
        r##"{"description":"Bad named entity: pcy without a semi-colon","initialState":"Data","input":"&pcy","inputUtf16":[38,112,99,121],"output":[{"Character":{"data":"&pcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3158() {
    tokenize(
        r##"{"description":"Named entity: pcy; with a semi-colon","initialState":"Data","input":"&pcy;","inputUtf16":[38,112,99,121,59],"output":[{"Character":{"data":"–ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3159() {
    tokenize(
        r##"{"description":"Bad named entity: percnt without a semi-colon","initialState":"Data","input":"&percnt","inputUtf16":[38,112,101,114,99,110,116],"output":[{"Character":{"data":"&percnt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3160() {
    tokenize(
        r##"{"description":"Named entity: percnt; with a semi-colon","initialState":"Data","input":"&percnt;","inputUtf16":[38,112,101,114,99,110,116,59],"output":[{"Character":{"data":"%"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3161() {
    tokenize(
        r##"{"description":"Bad named entity: period without a semi-colon","initialState":"Data","input":"&period","inputUtf16":[38,112,101,114,105,111,100],"output":[{"Character":{"data":"&period"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3162() {
    tokenize(
        r##"{"description":"Named entity: period; with a semi-colon","initialState":"Data","input":"&period;","inputUtf16":[38,112,101,114,105,111,100,59],"output":[{"Character":{"data":"."}}],"errors":[]}"##,
    );
}

#[test]
fn test_3163() {
    tokenize(
        r##"{"description":"Bad named entity: permil without a semi-colon","initialState":"Data","input":"&permil","inputUtf16":[38,112,101,114,109,105,108],"output":[{"Character":{"data":"&permil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3164() {
    tokenize(
        r##"{"description":"Named entity: permil; with a semi-colon","initialState":"Data","input":"&permil;","inputUtf16":[38,112,101,114,109,105,108,59],"output":[{"Character":{"data":"‚Ä∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3165() {
    tokenize(
        r##"{"description":"Bad named entity: perp without a semi-colon","initialState":"Data","input":"&perp","inputUtf16":[38,112,101,114,112],"output":[{"Character":{"data":"&perp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3166() {
    tokenize(
        r##"{"description":"Named entity: perp; with a semi-colon","initialState":"Data","input":"&perp;","inputUtf16":[38,112,101,114,112,59],"output":[{"Character":{"data":"‚ä•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3167() {
    tokenize(
        r##"{"description":"Bad named entity: pertenk without a semi-colon","initialState":"Data","input":"&pertenk","inputUtf16":[38,112,101,114,116,101,110,107],"output":[{"Character":{"data":"&pertenk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3168() {
    tokenize(
        r##"{"description":"Named entity: pertenk; with a semi-colon","initialState":"Data","input":"&pertenk;","inputUtf16":[38,112,101,114,116,101,110,107,59],"output":[{"Character":{"data":"‚Ä±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3169() {
    tokenize(
        r##"{"description":"Bad named entity: pfr without a semi-colon","initialState":"Data","input":"&pfr","inputUtf16":[38,112,102,114],"output":[{"Character":{"data":"&pfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3170() {
    tokenize(
        r##"{"description":"Named entity: pfr; with a semi-colon","initialState":"Data","input":"&pfr;","inputUtf16":[38,112,102,114,59],"output":[{"Character":{"data":"ùî≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3171() {
    tokenize(
        r##"{"description":"Bad named entity: phi without a semi-colon","initialState":"Data","input":"&phi","inputUtf16":[38,112,104,105],"output":[{"Character":{"data":"&phi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3172() {
    tokenize(
        r##"{"description":"Named entity: phi; with a semi-colon","initialState":"Data","input":"&phi;","inputUtf16":[38,112,104,105,59],"output":[{"Character":{"data":"œÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3173() {
    tokenize(
        r##"{"description":"Bad named entity: phiv without a semi-colon","initialState":"Data","input":"&phiv","inputUtf16":[38,112,104,105,118],"output":[{"Character":{"data":"&phiv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3174() {
    tokenize(
        r##"{"description":"Named entity: phiv; with a semi-colon","initialState":"Data","input":"&phiv;","inputUtf16":[38,112,104,105,118,59],"output":[{"Character":{"data":"œï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3175() {
    tokenize(
        r##"{"description":"Bad named entity: phmmat without a semi-colon","initialState":"Data","input":"&phmmat","inputUtf16":[38,112,104,109,109,97,116],"output":[{"Character":{"data":"&phmmat"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3176() {
    tokenize(
        r##"{"description":"Named entity: phmmat; with a semi-colon","initialState":"Data","input":"&phmmat;","inputUtf16":[38,112,104,109,109,97,116,59],"output":[{"Character":{"data":"‚Ñ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3177() {
    tokenize(
        r##"{"description":"Bad named entity: phone without a semi-colon","initialState":"Data","input":"&phone","inputUtf16":[38,112,104,111,110,101],"output":[{"Character":{"data":"&phone"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3178() {
    tokenize(
        r##"{"description":"Named entity: phone; with a semi-colon","initialState":"Data","input":"&phone;","inputUtf16":[38,112,104,111,110,101,59],"output":[{"Character":{"data":"‚òé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3179() {
    tokenize(
        r##"{"description":"Bad named entity: pi without a semi-colon","initialState":"Data","input":"&pi","inputUtf16":[38,112,105],"output":[{"Character":{"data":"&pi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3180() {
    tokenize(
        r##"{"description":"Named entity: pi; with a semi-colon","initialState":"Data","input":"&pi;","inputUtf16":[38,112,105,59],"output":[{"Character":{"data":"œÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3181() {
    tokenize(
        r##"{"description":"Bad named entity: pitchfork without a semi-colon","initialState":"Data","input":"&pitchfork","inputUtf16":[38,112,105,116,99,104,102,111,114,107],"output":[{"Character":{"data":"&pitchfork"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3182() {
    tokenize(
        r##"{"description":"Named entity: pitchfork; with a semi-colon","initialState":"Data","input":"&pitchfork;","inputUtf16":[38,112,105,116,99,104,102,111,114,107,59],"output":[{"Character":{"data":"‚ãî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3183() {
    tokenize(
        r##"{"description":"Bad named entity: piv without a semi-colon","initialState":"Data","input":"&piv","inputUtf16":[38,112,105,118],"output":[{"Character":{"data":"&piv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3184() {
    tokenize(
        r##"{"description":"Named entity: piv; with a semi-colon","initialState":"Data","input":"&piv;","inputUtf16":[38,112,105,118,59],"output":[{"Character":{"data":"œñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3185() {
    tokenize(
        r##"{"description":"Bad named entity: planck without a semi-colon","initialState":"Data","input":"&planck","inputUtf16":[38,112,108,97,110,99,107],"output":[{"Character":{"data":"&planck"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3186() {
    tokenize(
        r##"{"description":"Named entity: planck; with a semi-colon","initialState":"Data","input":"&planck;","inputUtf16":[38,112,108,97,110,99,107,59],"output":[{"Character":{"data":"‚Ñè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3187() {
    tokenize(
        r##"{"description":"Bad named entity: planckh without a semi-colon","initialState":"Data","input":"&planckh","inputUtf16":[38,112,108,97,110,99,107,104],"output":[{"Character":{"data":"&planckh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3188() {
    tokenize(
        r##"{"description":"Named entity: planckh; with a semi-colon","initialState":"Data","input":"&planckh;","inputUtf16":[38,112,108,97,110,99,107,104,59],"output":[{"Character":{"data":"‚Ñé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3189() {
    tokenize(
        r##"{"description":"Bad named entity: plankv without a semi-colon","initialState":"Data","input":"&plankv","inputUtf16":[38,112,108,97,110,107,118],"output":[{"Character":{"data":"&plankv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3190() {
    tokenize(
        r##"{"description":"Named entity: plankv; with a semi-colon","initialState":"Data","input":"&plankv;","inputUtf16":[38,112,108,97,110,107,118,59],"output":[{"Character":{"data":"‚Ñè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3191() {
    tokenize(
        r##"{"description":"Bad named entity: plus without a semi-colon","initialState":"Data","input":"&plus","inputUtf16":[38,112,108,117,115],"output":[{"Character":{"data":"&plus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3192() {
    tokenize(
        r##"{"description":"Named entity: plus; with a semi-colon","initialState":"Data","input":"&plus;","inputUtf16":[38,112,108,117,115,59],"output":[{"Character":{"data":"+"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3193() {
    tokenize(
        r##"{"description":"Bad named entity: plusacir without a semi-colon","initialState":"Data","input":"&plusacir","inputUtf16":[38,112,108,117,115,97,99,105,114],"output":[{"Character":{"data":"&plusacir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3194() {
    tokenize(
        r##"{"description":"Named entity: plusacir; with a semi-colon","initialState":"Data","input":"&plusacir;","inputUtf16":[38,112,108,117,115,97,99,105,114,59],"output":[{"Character":{"data":"‚®£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3195() {
    tokenize(
        r##"{"description":"Bad named entity: plusb without a semi-colon","initialState":"Data","input":"&plusb","inputUtf16":[38,112,108,117,115,98],"output":[{"Character":{"data":"&plusb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3196() {
    tokenize(
        r##"{"description":"Named entity: plusb; with a semi-colon","initialState":"Data","input":"&plusb;","inputUtf16":[38,112,108,117,115,98,59],"output":[{"Character":{"data":"‚äû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3197() {
    tokenize(
        r##"{"description":"Bad named entity: pluscir without a semi-colon","initialState":"Data","input":"&pluscir","inputUtf16":[38,112,108,117,115,99,105,114],"output":[{"Character":{"data":"&pluscir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3198() {
    tokenize(
        r##"{"description":"Named entity: pluscir; with a semi-colon","initialState":"Data","input":"&pluscir;","inputUtf16":[38,112,108,117,115,99,105,114,59],"output":[{"Character":{"data":"‚®¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3199() {
    tokenize(
        r##"{"description":"Bad named entity: plusdo without a semi-colon","initialState":"Data","input":"&plusdo","inputUtf16":[38,112,108,117,115,100,111],"output":[{"Character":{"data":"&plusdo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3200() {
    tokenize(
        r##"{"description":"Named entity: plusdo; with a semi-colon","initialState":"Data","input":"&plusdo;","inputUtf16":[38,112,108,117,115,100,111,59],"output":[{"Character":{"data":"‚àî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3201() {
    tokenize(
        r##"{"description":"Bad named entity: plusdu without a semi-colon","initialState":"Data","input":"&plusdu","inputUtf16":[38,112,108,117,115,100,117],"output":[{"Character":{"data":"&plusdu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3202() {
    tokenize(
        r##"{"description":"Named entity: plusdu; with a semi-colon","initialState":"Data","input":"&plusdu;","inputUtf16":[38,112,108,117,115,100,117,59],"output":[{"Character":{"data":"‚®•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3203() {
    tokenize(
        r##"{"description":"Bad named entity: pluse without a semi-colon","initialState":"Data","input":"&pluse","inputUtf16":[38,112,108,117,115,101],"output":[{"Character":{"data":"&pluse"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3204() {
    tokenize(
        r##"{"description":"Named entity: pluse; with a semi-colon","initialState":"Data","input":"&pluse;","inputUtf16":[38,112,108,117,115,101,59],"output":[{"Character":{"data":"‚©≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3205() {
    tokenize(
        r##"{"description":"Named entity: plusmn without a semi-colon","initialState":"Data","input":"&plusmn","inputUtf16":[38,112,108,117,115,109,110],"output":[{"Character":{"data":"¬±"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_3206() {
    tokenize(
        r##"{"description":"Named entity: plusmn; with a semi-colon","initialState":"Data","input":"&plusmn;","inputUtf16":[38,112,108,117,115,109,110,59],"output":[{"Character":{"data":"¬±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3207() {
    tokenize(
        r##"{"description":"Bad named entity: plussim without a semi-colon","initialState":"Data","input":"&plussim","inputUtf16":[38,112,108,117,115,115,105,109],"output":[{"Character":{"data":"&plussim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3208() {
    tokenize(
        r##"{"description":"Named entity: plussim; with a semi-colon","initialState":"Data","input":"&plussim;","inputUtf16":[38,112,108,117,115,115,105,109,59],"output":[{"Character":{"data":"‚®¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3209() {
    tokenize(
        r##"{"description":"Bad named entity: plustwo without a semi-colon","initialState":"Data","input":"&plustwo","inputUtf16":[38,112,108,117,115,116,119,111],"output":[{"Character":{"data":"&plustwo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3210() {
    tokenize(
        r##"{"description":"Named entity: plustwo; with a semi-colon","initialState":"Data","input":"&plustwo;","inputUtf16":[38,112,108,117,115,116,119,111,59],"output":[{"Character":{"data":"‚®ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3211() {
    tokenize(
        r##"{"description":"Bad named entity: pm without a semi-colon","initialState":"Data","input":"&pm","inputUtf16":[38,112,109],"output":[{"Character":{"data":"&pm"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3212() {
    tokenize(
        r##"{"description":"Named entity: pm; with a semi-colon","initialState":"Data","input":"&pm;","inputUtf16":[38,112,109,59],"output":[{"Character":{"data":"¬±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3213() {
    tokenize(
        r##"{"description":"Bad named entity: pointint without a semi-colon","initialState":"Data","input":"&pointint","inputUtf16":[38,112,111,105,110,116,105,110,116],"output":[{"Character":{"data":"&pointint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3214() {
    tokenize(
        r##"{"description":"Named entity: pointint; with a semi-colon","initialState":"Data","input":"&pointint;","inputUtf16":[38,112,111,105,110,116,105,110,116,59],"output":[{"Character":{"data":"‚®ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3215() {
    tokenize(
        r##"{"description":"Bad named entity: popf without a semi-colon","initialState":"Data","input":"&popf","inputUtf16":[38,112,111,112,102],"output":[{"Character":{"data":"&popf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3216() {
    tokenize(
        r##"{"description":"Named entity: popf; with a semi-colon","initialState":"Data","input":"&popf;","inputUtf16":[38,112,111,112,102,59],"output":[{"Character":{"data":"ùï°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3217() {
    tokenize(
        r##"{"description":"Named entity: pound without a semi-colon","initialState":"Data","input":"&pound","inputUtf16":[38,112,111,117,110,100],"output":[{"Character":{"data":"¬£"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_3218() {
    tokenize(
        r##"{"description":"Named entity: pound; with a semi-colon","initialState":"Data","input":"&pound;","inputUtf16":[38,112,111,117,110,100,59],"output":[{"Character":{"data":"¬£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3219() {
    tokenize(
        r##"{"description":"Bad named entity: pr without a semi-colon","initialState":"Data","input":"&pr","inputUtf16":[38,112,114],"output":[{"Character":{"data":"&pr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3220() {
    tokenize(
        r##"{"description":"Named entity: pr; with a semi-colon","initialState":"Data","input":"&pr;","inputUtf16":[38,112,114,59],"output":[{"Character":{"data":"‚â∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3221() {
    tokenize(
        r##"{"description":"Bad named entity: prE without a semi-colon","initialState":"Data","input":"&prE","inputUtf16":[38,112,114,69],"output":[{"Character":{"data":"&prE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3222() {
    tokenize(
        r##"{"description":"Named entity: prE; with a semi-colon","initialState":"Data","input":"&prE;","inputUtf16":[38,112,114,69,59],"output":[{"Character":{"data":"‚™≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3223() {
    tokenize(
        r##"{"description":"Bad named entity: prap without a semi-colon","initialState":"Data","input":"&prap","inputUtf16":[38,112,114,97,112],"output":[{"Character":{"data":"&prap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3224() {
    tokenize(
        r##"{"description":"Named entity: prap; with a semi-colon","initialState":"Data","input":"&prap;","inputUtf16":[38,112,114,97,112,59],"output":[{"Character":{"data":"‚™∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3225() {
    tokenize(
        r##"{"description":"Bad named entity: prcue without a semi-colon","initialState":"Data","input":"&prcue","inputUtf16":[38,112,114,99,117,101],"output":[{"Character":{"data":"&prcue"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3226() {
    tokenize(
        r##"{"description":"Named entity: prcue; with a semi-colon","initialState":"Data","input":"&prcue;","inputUtf16":[38,112,114,99,117,101,59],"output":[{"Character":{"data":"‚âº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3227() {
    tokenize(
        r##"{"description":"Bad named entity: pre without a semi-colon","initialState":"Data","input":"&pre","inputUtf16":[38,112,114,101],"output":[{"Character":{"data":"&pre"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3228() {
    tokenize(
        r##"{"description":"Named entity: pre; with a semi-colon","initialState":"Data","input":"&pre;","inputUtf16":[38,112,114,101,59],"output":[{"Character":{"data":"‚™Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3229() {
    tokenize(
        r##"{"description":"Bad named entity: prec without a semi-colon","initialState":"Data","input":"&prec","inputUtf16":[38,112,114,101,99],"output":[{"Character":{"data":"&prec"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3230() {
    tokenize(
        r##"{"description":"Named entity: prec; with a semi-colon","initialState":"Data","input":"&prec;","inputUtf16":[38,112,114,101,99,59],"output":[{"Character":{"data":"‚â∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3231() {
    tokenize(
        r##"{"description":"Bad named entity: precapprox without a semi-colon","initialState":"Data","input":"&precapprox","inputUtf16":[38,112,114,101,99,97,112,112,114,111,120],"output":[{"Character":{"data":"&precapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3232() {
    tokenize(
        r##"{"description":"Named entity: precapprox; with a semi-colon","initialState":"Data","input":"&precapprox;","inputUtf16":[38,112,114,101,99,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3233() {
    tokenize(
        r##"{"description":"Bad named entity: preccurlyeq without a semi-colon","initialState":"Data","input":"&preccurlyeq","inputUtf16":[38,112,114,101,99,99,117,114,108,121,101,113],"output":[{"Character":{"data":"&preccurlyeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3234() {
    tokenize(
        r##"{"description":"Named entity: preccurlyeq; with a semi-colon","initialState":"Data","input":"&preccurlyeq;","inputUtf16":[38,112,114,101,99,99,117,114,108,121,101,113,59],"output":[{"Character":{"data":"‚âº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3235() {
    tokenize(
        r##"{"description":"Bad named entity: preceq without a semi-colon","initialState":"Data","input":"&preceq","inputUtf16":[38,112,114,101,99,101,113],"output":[{"Character":{"data":"&preceq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3236() {
    tokenize(
        r##"{"description":"Named entity: preceq; with a semi-colon","initialState":"Data","input":"&preceq;","inputUtf16":[38,112,114,101,99,101,113,59],"output":[{"Character":{"data":"‚™Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3237() {
    tokenize(
        r##"{"description":"Bad named entity: precnapprox without a semi-colon","initialState":"Data","input":"&precnapprox","inputUtf16":[38,112,114,101,99,110,97,112,112,114,111,120],"output":[{"Character":{"data":"&precnapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3238() {
    tokenize(
        r##"{"description":"Named entity: precnapprox; with a semi-colon","initialState":"Data","input":"&precnapprox;","inputUtf16":[38,112,114,101,99,110,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3239() {
    tokenize(
        r##"{"description":"Bad named entity: precneqq without a semi-colon","initialState":"Data","input":"&precneqq","inputUtf16":[38,112,114,101,99,110,101,113,113],"output":[{"Character":{"data":"&precneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3240() {
    tokenize(
        r##"{"description":"Named entity: precneqq; with a semi-colon","initialState":"Data","input":"&precneqq;","inputUtf16":[38,112,114,101,99,110,101,113,113,59],"output":[{"Character":{"data":"‚™µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3241() {
    tokenize(
        r##"{"description":"Bad named entity: precnsim without a semi-colon","initialState":"Data","input":"&precnsim","inputUtf16":[38,112,114,101,99,110,115,105,109],"output":[{"Character":{"data":"&precnsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3242() {
    tokenize(
        r##"{"description":"Named entity: precnsim; with a semi-colon","initialState":"Data","input":"&precnsim;","inputUtf16":[38,112,114,101,99,110,115,105,109,59],"output":[{"Character":{"data":"‚ã®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3243() {
    tokenize(
        r##"{"description":"Bad named entity: precsim without a semi-colon","initialState":"Data","input":"&precsim","inputUtf16":[38,112,114,101,99,115,105,109],"output":[{"Character":{"data":"&precsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3244() {
    tokenize(
        r##"{"description":"Named entity: precsim; with a semi-colon","initialState":"Data","input":"&precsim;","inputUtf16":[38,112,114,101,99,115,105,109,59],"output":[{"Character":{"data":"‚âæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3245() {
    tokenize(
        r##"{"description":"Bad named entity: prime without a semi-colon","initialState":"Data","input":"&prime","inputUtf16":[38,112,114,105,109,101],"output":[{"Character":{"data":"&prime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3246() {
    tokenize(
        r##"{"description":"Named entity: prime; with a semi-colon","initialState":"Data","input":"&prime;","inputUtf16":[38,112,114,105,109,101,59],"output":[{"Character":{"data":"‚Ä≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3247() {
    tokenize(
        r##"{"description":"Bad named entity: primes without a semi-colon","initialState":"Data","input":"&primes","inputUtf16":[38,112,114,105,109,101,115],"output":[{"Character":{"data":"&primes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3248() {
    tokenize(
        r##"{"description":"Named entity: primes; with a semi-colon","initialState":"Data","input":"&primes;","inputUtf16":[38,112,114,105,109,101,115,59],"output":[{"Character":{"data":"‚Ñô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3249() {
    tokenize(
        r##"{"description":"Bad named entity: prnE without a semi-colon","initialState":"Data","input":"&prnE","inputUtf16":[38,112,114,110,69],"output":[{"Character":{"data":"&prnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3250() {
    tokenize(
        r##"{"description":"Named entity: prnE; with a semi-colon","initialState":"Data","input":"&prnE;","inputUtf16":[38,112,114,110,69,59],"output":[{"Character":{"data":"‚™µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3251() {
    tokenize(
        r##"{"description":"Bad named entity: prnap without a semi-colon","initialState":"Data","input":"&prnap","inputUtf16":[38,112,114,110,97,112],"output":[{"Character":{"data":"&prnap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3252() {
    tokenize(
        r##"{"description":"Named entity: prnap; with a semi-colon","initialState":"Data","input":"&prnap;","inputUtf16":[38,112,114,110,97,112,59],"output":[{"Character":{"data":"‚™π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3253() {
    tokenize(
        r##"{"description":"Bad named entity: prnsim without a semi-colon","initialState":"Data","input":"&prnsim","inputUtf16":[38,112,114,110,115,105,109],"output":[{"Character":{"data":"&prnsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3254() {
    tokenize(
        r##"{"description":"Named entity: prnsim; with a semi-colon","initialState":"Data","input":"&prnsim;","inputUtf16":[38,112,114,110,115,105,109,59],"output":[{"Character":{"data":"‚ã®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3255() {
    tokenize(
        r##"{"description":"Bad named entity: prod without a semi-colon","initialState":"Data","input":"&prod","inputUtf16":[38,112,114,111,100],"output":[{"Character":{"data":"&prod"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3256() {
    tokenize(
        r##"{"description":"Named entity: prod; with a semi-colon","initialState":"Data","input":"&prod;","inputUtf16":[38,112,114,111,100,59],"output":[{"Character":{"data":"‚àè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3257() {
    tokenize(
        r##"{"description":"Bad named entity: profalar without a semi-colon","initialState":"Data","input":"&profalar","inputUtf16":[38,112,114,111,102,97,108,97,114],"output":[{"Character":{"data":"&profalar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3258() {
    tokenize(
        r##"{"description":"Named entity: profalar; with a semi-colon","initialState":"Data","input":"&profalar;","inputUtf16":[38,112,114,111,102,97,108,97,114,59],"output":[{"Character":{"data":"‚åÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3259() {
    tokenize(
        r##"{"description":"Bad named entity: profline without a semi-colon","initialState":"Data","input":"&profline","inputUtf16":[38,112,114,111,102,108,105,110,101],"output":[{"Character":{"data":"&profline"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3260() {
    tokenize(
        r##"{"description":"Named entity: profline; with a semi-colon","initialState":"Data","input":"&profline;","inputUtf16":[38,112,114,111,102,108,105,110,101,59],"output":[{"Character":{"data":"‚åí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3261() {
    tokenize(
        r##"{"description":"Bad named entity: profsurf without a semi-colon","initialState":"Data","input":"&profsurf","inputUtf16":[38,112,114,111,102,115,117,114,102],"output":[{"Character":{"data":"&profsurf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3262() {
    tokenize(
        r##"{"description":"Named entity: profsurf; with a semi-colon","initialState":"Data","input":"&profsurf;","inputUtf16":[38,112,114,111,102,115,117,114,102,59],"output":[{"Character":{"data":"‚åì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3263() {
    tokenize(
        r##"{"description":"Bad named entity: prop without a semi-colon","initialState":"Data","input":"&prop","inputUtf16":[38,112,114,111,112],"output":[{"Character":{"data":"&prop"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3264() {
    tokenize(
        r##"{"description":"Named entity: prop; with a semi-colon","initialState":"Data","input":"&prop;","inputUtf16":[38,112,114,111,112,59],"output":[{"Character":{"data":"‚àù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3265() {
    tokenize(
        r##"{"description":"Bad named entity: propto without a semi-colon","initialState":"Data","input":"&propto","inputUtf16":[38,112,114,111,112,116,111],"output":[{"Character":{"data":"&propto"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3266() {
    tokenize(
        r##"{"description":"Named entity: propto; with a semi-colon","initialState":"Data","input":"&propto;","inputUtf16":[38,112,114,111,112,116,111,59],"output":[{"Character":{"data":"‚àù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3267() {
    tokenize(
        r##"{"description":"Bad named entity: prsim without a semi-colon","initialState":"Data","input":"&prsim","inputUtf16":[38,112,114,115,105,109],"output":[{"Character":{"data":"&prsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3268() {
    tokenize(
        r##"{"description":"Named entity: prsim; with a semi-colon","initialState":"Data","input":"&prsim;","inputUtf16":[38,112,114,115,105,109,59],"output":[{"Character":{"data":"‚âæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3269() {
    tokenize(
        r##"{"description":"Bad named entity: prurel without a semi-colon","initialState":"Data","input":"&prurel","inputUtf16":[38,112,114,117,114,101,108],"output":[{"Character":{"data":"&prurel"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3270() {
    tokenize(
        r##"{"description":"Named entity: prurel; with a semi-colon","initialState":"Data","input":"&prurel;","inputUtf16":[38,112,114,117,114,101,108,59],"output":[{"Character":{"data":"‚ä∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3271() {
    tokenize(
        r##"{"description":"Bad named entity: pscr without a semi-colon","initialState":"Data","input":"&pscr","inputUtf16":[38,112,115,99,114],"output":[{"Character":{"data":"&pscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3272() {
    tokenize(
        r##"{"description":"Named entity: pscr; with a semi-colon","initialState":"Data","input":"&pscr;","inputUtf16":[38,112,115,99,114,59],"output":[{"Character":{"data":"ùìÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3273() {
    tokenize(
        r##"{"description":"Bad named entity: psi without a semi-colon","initialState":"Data","input":"&psi","inputUtf16":[38,112,115,105],"output":[{"Character":{"data":"&psi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3274() {
    tokenize(
        r##"{"description":"Named entity: psi; with a semi-colon","initialState":"Data","input":"&psi;","inputUtf16":[38,112,115,105,59],"output":[{"Character":{"data":"œà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3275() {
    tokenize(
        r##"{"description":"Bad named entity: puncsp without a semi-colon","initialState":"Data","input":"&puncsp","inputUtf16":[38,112,117,110,99,115,112],"output":[{"Character":{"data":"&puncsp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3276() {
    tokenize(
        r##"{"description":"Named entity: puncsp; with a semi-colon","initialState":"Data","input":"&puncsp;","inputUtf16":[38,112,117,110,99,115,112,59],"output":[{"Character":{"data":"‚Äà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3277() {
    tokenize(
        r##"{"description":"Bad named entity: qfr without a semi-colon","initialState":"Data","input":"&qfr","inputUtf16":[38,113,102,114],"output":[{"Character":{"data":"&qfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3278() {
    tokenize(
        r##"{"description":"Named entity: qfr; with a semi-colon","initialState":"Data","input":"&qfr;","inputUtf16":[38,113,102,114,59],"output":[{"Character":{"data":"ùîÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3279() {
    tokenize(
        r##"{"description":"Bad named entity: qint without a semi-colon","initialState":"Data","input":"&qint","inputUtf16":[38,113,105,110,116],"output":[{"Character":{"data":"&qint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3280() {
    tokenize(
        r##"{"description":"Named entity: qint; with a semi-colon","initialState":"Data","input":"&qint;","inputUtf16":[38,113,105,110,116,59],"output":[{"Character":{"data":"‚®å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3281() {
    tokenize(
        r##"{"description":"Bad named entity: qopf without a semi-colon","initialState":"Data","input":"&qopf","inputUtf16":[38,113,111,112,102],"output":[{"Character":{"data":"&qopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3282() {
    tokenize(
        r##"{"description":"Named entity: qopf; with a semi-colon","initialState":"Data","input":"&qopf;","inputUtf16":[38,113,111,112,102,59],"output":[{"Character":{"data":"ùï¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3283() {
    tokenize(
        r##"{"description":"Bad named entity: qprime without a semi-colon","initialState":"Data","input":"&qprime","inputUtf16":[38,113,112,114,105,109,101],"output":[{"Character":{"data":"&qprime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3284() {
    tokenize(
        r##"{"description":"Named entity: qprime; with a semi-colon","initialState":"Data","input":"&qprime;","inputUtf16":[38,113,112,114,105,109,101,59],"output":[{"Character":{"data":"‚Åó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3285() {
    tokenize(
        r##"{"description":"Bad named entity: qscr without a semi-colon","initialState":"Data","input":"&qscr","inputUtf16":[38,113,115,99,114],"output":[{"Character":{"data":"&qscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3286() {
    tokenize(
        r##"{"description":"Named entity: qscr; with a semi-colon","initialState":"Data","input":"&qscr;","inputUtf16":[38,113,115,99,114,59],"output":[{"Character":{"data":"ùìÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3287() {
    tokenize(
        r##"{"description":"Bad named entity: quaternions without a semi-colon","initialState":"Data","input":"&quaternions","inputUtf16":[38,113,117,97,116,101,114,110,105,111,110,115],"output":[{"Character":{"data":"&quaternions"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3288() {
    tokenize(
        r##"{"description":"Named entity: quaternions; with a semi-colon","initialState":"Data","input":"&quaternions;","inputUtf16":[38,113,117,97,116,101,114,110,105,111,110,115,59],"output":[{"Character":{"data":"‚Ñç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3289() {
    tokenize(
        r##"{"description":"Bad named entity: quatint without a semi-colon","initialState":"Data","input":"&quatint","inputUtf16":[38,113,117,97,116,105,110,116],"output":[{"Character":{"data":"&quatint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3290() {
    tokenize(
        r##"{"description":"Named entity: quatint; with a semi-colon","initialState":"Data","input":"&quatint;","inputUtf16":[38,113,117,97,116,105,110,116,59],"output":[{"Character":{"data":"‚®ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3291() {
    tokenize(
        r##"{"description":"Bad named entity: quest without a semi-colon","initialState":"Data","input":"&quest","inputUtf16":[38,113,117,101,115,116],"output":[{"Character":{"data":"&quest"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3292() {
    tokenize(
        r##"{"description":"Named entity: quest; with a semi-colon","initialState":"Data","input":"&quest;","inputUtf16":[38,113,117,101,115,116,59],"output":[{"Character":{"data":"?"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3293() {
    tokenize(
        r##"{"description":"Bad named entity: questeq without a semi-colon","initialState":"Data","input":"&questeq","inputUtf16":[38,113,117,101,115,116,101,113],"output":[{"Character":{"data":"&questeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3294() {
    tokenize(
        r##"{"description":"Named entity: questeq; with a semi-colon","initialState":"Data","input":"&questeq;","inputUtf16":[38,113,117,101,115,116,101,113,59],"output":[{"Character":{"data":"‚âü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3295() {
    tokenize(
        r##"{"description":"Named entity: quot without a semi-colon","initialState":"Data","input":"&quot","inputUtf16":[38,113,117,111,116],"output":[{"Character":{"data":"\""}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3296() {
    tokenize(
        r##"{"description":"Named entity: quot; with a semi-colon","initialState":"Data","input":"&quot;","inputUtf16":[38,113,117,111,116,59],"output":[{"Character":{"data":"\""}}],"errors":[]}"##,
    );
}

#[test]
fn test_3297() {
    tokenize(
        r##"{"description":"Bad named entity: rAarr without a semi-colon","initialState":"Data","input":"&rAarr","inputUtf16":[38,114,65,97,114,114],"output":[{"Character":{"data":"&rAarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3298() {
    tokenize(
        r##"{"description":"Named entity: rAarr; with a semi-colon","initialState":"Data","input":"&rAarr;","inputUtf16":[38,114,65,97,114,114,59],"output":[{"Character":{"data":"‚áõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3299() {
    tokenize(
        r##"{"description":"Bad named entity: rArr without a semi-colon","initialState":"Data","input":"&rArr","inputUtf16":[38,114,65,114,114],"output":[{"Character":{"data":"&rArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3300() {
    tokenize(
        r##"{"description":"Named entity: rArr; with a semi-colon","initialState":"Data","input":"&rArr;","inputUtf16":[38,114,65,114,114,59],"output":[{"Character":{"data":"‚áí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3301() {
    tokenize(
        r##"{"description":"Bad named entity: rAtail without a semi-colon","initialState":"Data","input":"&rAtail","inputUtf16":[38,114,65,116,97,105,108],"output":[{"Character":{"data":"&rAtail"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3302() {
    tokenize(
        r##"{"description":"Named entity: rAtail; with a semi-colon","initialState":"Data","input":"&rAtail;","inputUtf16":[38,114,65,116,97,105,108,59],"output":[{"Character":{"data":"‚§ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3303() {
    tokenize(
        r##"{"description":"Bad named entity: rBarr without a semi-colon","initialState":"Data","input":"&rBarr","inputUtf16":[38,114,66,97,114,114],"output":[{"Character":{"data":"&rBarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3304() {
    tokenize(
        r##"{"description":"Named entity: rBarr; with a semi-colon","initialState":"Data","input":"&rBarr;","inputUtf16":[38,114,66,97,114,114,59],"output":[{"Character":{"data":"‚§è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3305() {
    tokenize(
        r##"{"description":"Bad named entity: rHar without a semi-colon","initialState":"Data","input":"&rHar","inputUtf16":[38,114,72,97,114],"output":[{"Character":{"data":"&rHar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3306() {
    tokenize(
        r##"{"description":"Named entity: rHar; with a semi-colon","initialState":"Data","input":"&rHar;","inputUtf16":[38,114,72,97,114,59],"output":[{"Character":{"data":"‚•§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3307() {
    tokenize(
        r##"{"description":"Bad named entity: race without a semi-colon","initialState":"Data","input":"&race","inputUtf16":[38,114,97,99,101],"output":[{"Character":{"data":"&race"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3308() {
    tokenize(
        r##"{"description":"Named entity: race; with a semi-colon","initialState":"Data","input":"&race;","inputUtf16":[38,114,97,99,101,59],"output":[{"Character":{"data":"‚àΩÃ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3309() {
    tokenize(
        r##"{"description":"Bad named entity: racute without a semi-colon","initialState":"Data","input":"&racute","inputUtf16":[38,114,97,99,117,116,101],"output":[{"Character":{"data":"&racute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3310() {
    tokenize(
        r##"{"description":"Named entity: racute; with a semi-colon","initialState":"Data","input":"&racute;","inputUtf16":[38,114,97,99,117,116,101,59],"output":[{"Character":{"data":"≈ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3311() {
    tokenize(
        r##"{"description":"Bad named entity: radic without a semi-colon","initialState":"Data","input":"&radic","inputUtf16":[38,114,97,100,105,99],"output":[{"Character":{"data":"&radic"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3312() {
    tokenize(
        r##"{"description":"Named entity: radic; with a semi-colon","initialState":"Data","input":"&radic;","inputUtf16":[38,114,97,100,105,99,59],"output":[{"Character":{"data":"‚àö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3313() {
    tokenize(
        r##"{"description":"Bad named entity: raemptyv without a semi-colon","initialState":"Data","input":"&raemptyv","inputUtf16":[38,114,97,101,109,112,116,121,118],"output":[{"Character":{"data":"&raemptyv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3314() {
    tokenize(
        r##"{"description":"Named entity: raemptyv; with a semi-colon","initialState":"Data","input":"&raemptyv;","inputUtf16":[38,114,97,101,109,112,116,121,118,59],"output":[{"Character":{"data":"‚¶≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3315() {
    tokenize(
        r##"{"description":"Bad named entity: rang without a semi-colon","initialState":"Data","input":"&rang","inputUtf16":[38,114,97,110,103],"output":[{"Character":{"data":"&rang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3316() {
    tokenize(
        r##"{"description":"Named entity: rang; with a semi-colon","initialState":"Data","input":"&rang;","inputUtf16":[38,114,97,110,103,59],"output":[{"Character":{"data":"‚ü©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3317() {
    tokenize(
        r##"{"description":"Bad named entity: rangd without a semi-colon","initialState":"Data","input":"&rangd","inputUtf16":[38,114,97,110,103,100],"output":[{"Character":{"data":"&rangd"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3318() {
    tokenize(
        r##"{"description":"Named entity: rangd; with a semi-colon","initialState":"Data","input":"&rangd;","inputUtf16":[38,114,97,110,103,100,59],"output":[{"Character":{"data":"‚¶í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3319() {
    tokenize(
        r##"{"description":"Bad named entity: range without a semi-colon","initialState":"Data","input":"&range","inputUtf16":[38,114,97,110,103,101],"output":[{"Character":{"data":"&range"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3320() {
    tokenize(
        r##"{"description":"Named entity: range; with a semi-colon","initialState":"Data","input":"&range;","inputUtf16":[38,114,97,110,103,101,59],"output":[{"Character":{"data":"‚¶•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3321() {
    tokenize(
        r##"{"description":"Bad named entity: rangle without a semi-colon","initialState":"Data","input":"&rangle","inputUtf16":[38,114,97,110,103,108,101],"output":[{"Character":{"data":"&rangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3322() {
    tokenize(
        r##"{"description":"Named entity: rangle; with a semi-colon","initialState":"Data","input":"&rangle;","inputUtf16":[38,114,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ü©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3323() {
    tokenize(
        r##"{"description":"Named entity: raquo without a semi-colon","initialState":"Data","input":"&raquo","inputUtf16":[38,114,97,113,117,111],"output":[{"Character":{"data":"¬ª"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_3324() {
    tokenize(
        r##"{"description":"Named entity: raquo; with a semi-colon","initialState":"Data","input":"&raquo;","inputUtf16":[38,114,97,113,117,111,59],"output":[{"Character":{"data":"¬ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3325() {
    tokenize(
        r##"{"description":"Bad named entity: rarr without a semi-colon","initialState":"Data","input":"&rarr","inputUtf16":[38,114,97,114,114],"output":[{"Character":{"data":"&rarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3326() {
    tokenize(
        r##"{"description":"Named entity: rarr; with a semi-colon","initialState":"Data","input":"&rarr;","inputUtf16":[38,114,97,114,114,59],"output":[{"Character":{"data":"‚Üí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3327() {
    tokenize(
        r##"{"description":"Bad named entity: rarrap without a semi-colon","initialState":"Data","input":"&rarrap","inputUtf16":[38,114,97,114,114,97,112],"output":[{"Character":{"data":"&rarrap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3328() {
    tokenize(
        r##"{"description":"Named entity: rarrap; with a semi-colon","initialState":"Data","input":"&rarrap;","inputUtf16":[38,114,97,114,114,97,112,59],"output":[{"Character":{"data":"‚•µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3329() {
    tokenize(
        r##"{"description":"Bad named entity: rarrb without a semi-colon","initialState":"Data","input":"&rarrb","inputUtf16":[38,114,97,114,114,98],"output":[{"Character":{"data":"&rarrb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3330() {
    tokenize(
        r##"{"description":"Named entity: rarrb; with a semi-colon","initialState":"Data","input":"&rarrb;","inputUtf16":[38,114,97,114,114,98,59],"output":[{"Character":{"data":"‚á•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3331() {
    tokenize(
        r##"{"description":"Bad named entity: rarrbfs without a semi-colon","initialState":"Data","input":"&rarrbfs","inputUtf16":[38,114,97,114,114,98,102,115],"output":[{"Character":{"data":"&rarrbfs"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3332() {
    tokenize(
        r##"{"description":"Named entity: rarrbfs; with a semi-colon","initialState":"Data","input":"&rarrbfs;","inputUtf16":[38,114,97,114,114,98,102,115,59],"output":[{"Character":{"data":"‚§†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3333() {
    tokenize(
        r##"{"description":"Bad named entity: rarrc without a semi-colon","initialState":"Data","input":"&rarrc","inputUtf16":[38,114,97,114,114,99],"output":[{"Character":{"data":"&rarrc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3334() {
    tokenize(
        r##"{"description":"Named entity: rarrc; with a semi-colon","initialState":"Data","input":"&rarrc;","inputUtf16":[38,114,97,114,114,99,59],"output":[{"Character":{"data":"‚§≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3335() {
    tokenize(
        r##"{"description":"Bad named entity: rarrfs without a semi-colon","initialState":"Data","input":"&rarrfs","inputUtf16":[38,114,97,114,114,102,115],"output":[{"Character":{"data":"&rarrfs"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3336() {
    tokenize(
        r##"{"description":"Named entity: rarrfs; with a semi-colon","initialState":"Data","input":"&rarrfs;","inputUtf16":[38,114,97,114,114,102,115,59],"output":[{"Character":{"data":"‚§û"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3337() {
    tokenize(
        r##"{"description":"Bad named entity: rarrhk without a semi-colon","initialState":"Data","input":"&rarrhk","inputUtf16":[38,114,97,114,114,104,107],"output":[{"Character":{"data":"&rarrhk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3338() {
    tokenize(
        r##"{"description":"Named entity: rarrhk; with a semi-colon","initialState":"Data","input":"&rarrhk;","inputUtf16":[38,114,97,114,114,104,107,59],"output":[{"Character":{"data":"‚Ü™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3339() {
    tokenize(
        r##"{"description":"Bad named entity: rarrlp without a semi-colon","initialState":"Data","input":"&rarrlp","inputUtf16":[38,114,97,114,114,108,112],"output":[{"Character":{"data":"&rarrlp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3340() {
    tokenize(
        r##"{"description":"Named entity: rarrlp; with a semi-colon","initialState":"Data","input":"&rarrlp;","inputUtf16":[38,114,97,114,114,108,112,59],"output":[{"Character":{"data":"‚Ü¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3341() {
    tokenize(
        r##"{"description":"Bad named entity: rarrpl without a semi-colon","initialState":"Data","input":"&rarrpl","inputUtf16":[38,114,97,114,114,112,108],"output":[{"Character":{"data":"&rarrpl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3342() {
    tokenize(
        r##"{"description":"Named entity: rarrpl; with a semi-colon","initialState":"Data","input":"&rarrpl;","inputUtf16":[38,114,97,114,114,112,108,59],"output":[{"Character":{"data":"‚•Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3343() {
    tokenize(
        r##"{"description":"Bad named entity: rarrsim without a semi-colon","initialState":"Data","input":"&rarrsim","inputUtf16":[38,114,97,114,114,115,105,109],"output":[{"Character":{"data":"&rarrsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3344() {
    tokenize(
        r##"{"description":"Named entity: rarrsim; with a semi-colon","initialState":"Data","input":"&rarrsim;","inputUtf16":[38,114,97,114,114,115,105,109,59],"output":[{"Character":{"data":"‚•¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3345() {
    tokenize(
        r##"{"description":"Bad named entity: rarrtl without a semi-colon","initialState":"Data","input":"&rarrtl","inputUtf16":[38,114,97,114,114,116,108],"output":[{"Character":{"data":"&rarrtl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3346() {
    tokenize(
        r##"{"description":"Named entity: rarrtl; with a semi-colon","initialState":"Data","input":"&rarrtl;","inputUtf16":[38,114,97,114,114,116,108,59],"output":[{"Character":{"data":"‚Ü£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3347() {
    tokenize(
        r##"{"description":"Bad named entity: rarrw without a semi-colon","initialState":"Data","input":"&rarrw","inputUtf16":[38,114,97,114,114,119],"output":[{"Character":{"data":"&rarrw"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3348() {
    tokenize(
        r##"{"description":"Named entity: rarrw; with a semi-colon","initialState":"Data","input":"&rarrw;","inputUtf16":[38,114,97,114,114,119,59],"output":[{"Character":{"data":"‚Üù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3349() {
    tokenize(
        r##"{"description":"Bad named entity: ratail without a semi-colon","initialState":"Data","input":"&ratail","inputUtf16":[38,114,97,116,97,105,108],"output":[{"Character":{"data":"&ratail"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3350() {
    tokenize(
        r##"{"description":"Named entity: ratail; with a semi-colon","initialState":"Data","input":"&ratail;","inputUtf16":[38,114,97,116,97,105,108,59],"output":[{"Character":{"data":"‚§ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3351() {
    tokenize(
        r##"{"description":"Bad named entity: ratio without a semi-colon","initialState":"Data","input":"&ratio","inputUtf16":[38,114,97,116,105,111],"output":[{"Character":{"data":"&ratio"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3352() {
    tokenize(
        r##"{"description":"Named entity: ratio; with a semi-colon","initialState":"Data","input":"&ratio;","inputUtf16":[38,114,97,116,105,111,59],"output":[{"Character":{"data":"‚à∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3353() {
    tokenize(
        r##"{"description":"Bad named entity: rationals without a semi-colon","initialState":"Data","input":"&rationals","inputUtf16":[38,114,97,116,105,111,110,97,108,115],"output":[{"Character":{"data":"&rationals"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3354() {
    tokenize(
        r##"{"description":"Named entity: rationals; with a semi-colon","initialState":"Data","input":"&rationals;","inputUtf16":[38,114,97,116,105,111,110,97,108,115,59],"output":[{"Character":{"data":"‚Ñö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3355() {
    tokenize(
        r##"{"description":"Bad named entity: rbarr without a semi-colon","initialState":"Data","input":"&rbarr","inputUtf16":[38,114,98,97,114,114],"output":[{"Character":{"data":"&rbarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3356() {
    tokenize(
        r##"{"description":"Named entity: rbarr; with a semi-colon","initialState":"Data","input":"&rbarr;","inputUtf16":[38,114,98,97,114,114,59],"output":[{"Character":{"data":"‚§ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3357() {
    tokenize(
        r##"{"description":"Bad named entity: rbbrk without a semi-colon","initialState":"Data","input":"&rbbrk","inputUtf16":[38,114,98,98,114,107],"output":[{"Character":{"data":"&rbbrk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3358() {
    tokenize(
        r##"{"description":"Named entity: rbbrk; with a semi-colon","initialState":"Data","input":"&rbbrk;","inputUtf16":[38,114,98,98,114,107,59],"output":[{"Character":{"data":"‚ù≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3359() {
    tokenize(
        r##"{"description":"Bad named entity: rbrace without a semi-colon","initialState":"Data","input":"&rbrace","inputUtf16":[38,114,98,114,97,99,101],"output":[{"Character":{"data":"&rbrace"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3360() {
    tokenize(
        r##"{"description":"Named entity: rbrace; with a semi-colon","initialState":"Data","input":"&rbrace;","inputUtf16":[38,114,98,114,97,99,101,59],"output":[{"Character":{"data":"}"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3361() {
    tokenize(
        r##"{"description":"Bad named entity: rbrack without a semi-colon","initialState":"Data","input":"&rbrack","inputUtf16":[38,114,98,114,97,99,107],"output":[{"Character":{"data":"&rbrack"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3362() {
    tokenize(
        r##"{"description":"Named entity: rbrack; with a semi-colon","initialState":"Data","input":"&rbrack;","inputUtf16":[38,114,98,114,97,99,107,59],"output":[{"Character":{"data":"]"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3363() {
    tokenize(
        r##"{"description":"Bad named entity: rbrke without a semi-colon","initialState":"Data","input":"&rbrke","inputUtf16":[38,114,98,114,107,101],"output":[{"Character":{"data":"&rbrke"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3364() {
    tokenize(
        r##"{"description":"Named entity: rbrke; with a semi-colon","initialState":"Data","input":"&rbrke;","inputUtf16":[38,114,98,114,107,101,59],"output":[{"Character":{"data":"‚¶å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3365() {
    tokenize(
        r##"{"description":"Bad named entity: rbrksld without a semi-colon","initialState":"Data","input":"&rbrksld","inputUtf16":[38,114,98,114,107,115,108,100],"output":[{"Character":{"data":"&rbrksld"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3366() {
    tokenize(
        r##"{"description":"Named entity: rbrksld; with a semi-colon","initialState":"Data","input":"&rbrksld;","inputUtf16":[38,114,98,114,107,115,108,100,59],"output":[{"Character":{"data":"‚¶é"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3367() {
    tokenize(
        r##"{"description":"Bad named entity: rbrkslu without a semi-colon","initialState":"Data","input":"&rbrkslu","inputUtf16":[38,114,98,114,107,115,108,117],"output":[{"Character":{"data":"&rbrkslu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3368() {
    tokenize(
        r##"{"description":"Named entity: rbrkslu; with a semi-colon","initialState":"Data","input":"&rbrkslu;","inputUtf16":[38,114,98,114,107,115,108,117,59],"output":[{"Character":{"data":"‚¶ê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3369() {
    tokenize(
        r##"{"description":"Bad named entity: rcaron without a semi-colon","initialState":"Data","input":"&rcaron","inputUtf16":[38,114,99,97,114,111,110],"output":[{"Character":{"data":"&rcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3370() {
    tokenize(
        r##"{"description":"Named entity: rcaron; with a semi-colon","initialState":"Data","input":"&rcaron;","inputUtf16":[38,114,99,97,114,111,110,59],"output":[{"Character":{"data":"≈ô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3371() {
    tokenize(
        r##"{"description":"Bad named entity: rcedil without a semi-colon","initialState":"Data","input":"&rcedil","inputUtf16":[38,114,99,101,100,105,108],"output":[{"Character":{"data":"&rcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3372() {
    tokenize(
        r##"{"description":"Named entity: rcedil; with a semi-colon","initialState":"Data","input":"&rcedil;","inputUtf16":[38,114,99,101,100,105,108,59],"output":[{"Character":{"data":"≈ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3373() {
    tokenize(
        r##"{"description":"Bad named entity: rceil without a semi-colon","initialState":"Data","input":"&rceil","inputUtf16":[38,114,99,101,105,108],"output":[{"Character":{"data":"&rceil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3374() {
    tokenize(
        r##"{"description":"Named entity: rceil; with a semi-colon","initialState":"Data","input":"&rceil;","inputUtf16":[38,114,99,101,105,108,59],"output":[{"Character":{"data":"‚åâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3375() {
    tokenize(
        r##"{"description":"Bad named entity: rcub without a semi-colon","initialState":"Data","input":"&rcub","inputUtf16":[38,114,99,117,98],"output":[{"Character":{"data":"&rcub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3376() {
    tokenize(
        r##"{"description":"Named entity: rcub; with a semi-colon","initialState":"Data","input":"&rcub;","inputUtf16":[38,114,99,117,98,59],"output":[{"Character":{"data":"}"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3377() {
    tokenize(
        r##"{"description":"Bad named entity: rcy without a semi-colon","initialState":"Data","input":"&rcy","inputUtf16":[38,114,99,121],"output":[{"Character":{"data":"&rcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3378() {
    tokenize(
        r##"{"description":"Named entity: rcy; with a semi-colon","initialState":"Data","input":"&rcy;","inputUtf16":[38,114,99,121,59],"output":[{"Character":{"data":"—Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3379() {
    tokenize(
        r##"{"description":"Bad named entity: rdca without a semi-colon","initialState":"Data","input":"&rdca","inputUtf16":[38,114,100,99,97],"output":[{"Character":{"data":"&rdca"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3380() {
    tokenize(
        r##"{"description":"Named entity: rdca; with a semi-colon","initialState":"Data","input":"&rdca;","inputUtf16":[38,114,100,99,97,59],"output":[{"Character":{"data":"‚§∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3381() {
    tokenize(
        r##"{"description":"Bad named entity: rdldhar without a semi-colon","initialState":"Data","input":"&rdldhar","inputUtf16":[38,114,100,108,100,104,97,114],"output":[{"Character":{"data":"&rdldhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3382() {
    tokenize(
        r##"{"description":"Named entity: rdldhar; with a semi-colon","initialState":"Data","input":"&rdldhar;","inputUtf16":[38,114,100,108,100,104,97,114,59],"output":[{"Character":{"data":"‚•©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3383() {
    tokenize(
        r##"{"description":"Bad named entity: rdquo without a semi-colon","initialState":"Data","input":"&rdquo","inputUtf16":[38,114,100,113,117,111],"output":[{"Character":{"data":"&rdquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3384() {
    tokenize(
        r##"{"description":"Named entity: rdquo; with a semi-colon","initialState":"Data","input":"&rdquo;","inputUtf16":[38,114,100,113,117,111,59],"output":[{"Character":{"data":"‚Äù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3385() {
    tokenize(
        r##"{"description":"Bad named entity: rdquor without a semi-colon","initialState":"Data","input":"&rdquor","inputUtf16":[38,114,100,113,117,111,114],"output":[{"Character":{"data":"&rdquor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3386() {
    tokenize(
        r##"{"description":"Named entity: rdquor; with a semi-colon","initialState":"Data","input":"&rdquor;","inputUtf16":[38,114,100,113,117,111,114,59],"output":[{"Character":{"data":"‚Äù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3387() {
    tokenize(
        r##"{"description":"Bad named entity: rdsh without a semi-colon","initialState":"Data","input":"&rdsh","inputUtf16":[38,114,100,115,104],"output":[{"Character":{"data":"&rdsh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3388() {
    tokenize(
        r##"{"description":"Named entity: rdsh; with a semi-colon","initialState":"Data","input":"&rdsh;","inputUtf16":[38,114,100,115,104,59],"output":[{"Character":{"data":"‚Ü≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3389() {
    tokenize(
        r##"{"description":"Bad named entity: real without a semi-colon","initialState":"Data","input":"&real","inputUtf16":[38,114,101,97,108],"output":[{"Character":{"data":"&real"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3390() {
    tokenize(
        r##"{"description":"Named entity: real; with a semi-colon","initialState":"Data","input":"&real;","inputUtf16":[38,114,101,97,108,59],"output":[{"Character":{"data":"‚Ñú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3391() {
    tokenize(
        r##"{"description":"Bad named entity: realine without a semi-colon","initialState":"Data","input":"&realine","inputUtf16":[38,114,101,97,108,105,110,101],"output":[{"Character":{"data":"&realine"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3392() {
    tokenize(
        r##"{"description":"Named entity: realine; with a semi-colon","initialState":"Data","input":"&realine;","inputUtf16":[38,114,101,97,108,105,110,101,59],"output":[{"Character":{"data":"‚Ñõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3393() {
    tokenize(
        r##"{"description":"Bad named entity: realpart without a semi-colon","initialState":"Data","input":"&realpart","inputUtf16":[38,114,101,97,108,112,97,114,116],"output":[{"Character":{"data":"&realpart"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3394() {
    tokenize(
        r##"{"description":"Named entity: realpart; with a semi-colon","initialState":"Data","input":"&realpart;","inputUtf16":[38,114,101,97,108,112,97,114,116,59],"output":[{"Character":{"data":"‚Ñú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3395() {
    tokenize(
        r##"{"description":"Bad named entity: reals without a semi-colon","initialState":"Data","input":"&reals","inputUtf16":[38,114,101,97,108,115],"output":[{"Character":{"data":"&reals"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3396() {
    tokenize(
        r##"{"description":"Named entity: reals; with a semi-colon","initialState":"Data","input":"&reals;","inputUtf16":[38,114,101,97,108,115,59],"output":[{"Character":{"data":"‚Ñù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3397() {
    tokenize(
        r##"{"description":"Bad named entity: rect without a semi-colon","initialState":"Data","input":"&rect","inputUtf16":[38,114,101,99,116],"output":[{"Character":{"data":"&rect"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3398() {
    tokenize(
        r##"{"description":"Named entity: rect; with a semi-colon","initialState":"Data","input":"&rect;","inputUtf16":[38,114,101,99,116,59],"output":[{"Character":{"data":"‚ñ≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3399() {
    tokenize(
        r##"{"description":"Named entity: reg without a semi-colon","initialState":"Data","input":"&reg","inputUtf16":[38,114,101,103],"output":[{"Character":{"data":"¬Æ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_3400() {
    tokenize(
        r##"{"description":"Named entity: reg; with a semi-colon","initialState":"Data","input":"&reg;","inputUtf16":[38,114,101,103,59],"output":[{"Character":{"data":"¬Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3401() {
    tokenize(
        r##"{"description":"Bad named entity: rfisht without a semi-colon","initialState":"Data","input":"&rfisht","inputUtf16":[38,114,102,105,115,104,116],"output":[{"Character":{"data":"&rfisht"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3402() {
    tokenize(
        r##"{"description":"Named entity: rfisht; with a semi-colon","initialState":"Data","input":"&rfisht;","inputUtf16":[38,114,102,105,115,104,116,59],"output":[{"Character":{"data":"‚•Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3403() {
    tokenize(
        r##"{"description":"Bad named entity: rfloor without a semi-colon","initialState":"Data","input":"&rfloor","inputUtf16":[38,114,102,108,111,111,114],"output":[{"Character":{"data":"&rfloor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3404() {
    tokenize(
        r##"{"description":"Named entity: rfloor; with a semi-colon","initialState":"Data","input":"&rfloor;","inputUtf16":[38,114,102,108,111,111,114,59],"output":[{"Character":{"data":"‚åã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3405() {
    tokenize(
        r##"{"description":"Bad named entity: rfr without a semi-colon","initialState":"Data","input":"&rfr","inputUtf16":[38,114,102,114],"output":[{"Character":{"data":"&rfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3406() {
    tokenize(
        r##"{"description":"Named entity: rfr; with a semi-colon","initialState":"Data","input":"&rfr;","inputUtf16":[38,114,102,114,59],"output":[{"Character":{"data":"ùîØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3407() {
    tokenize(
        r##"{"description":"Bad named entity: rhard without a semi-colon","initialState":"Data","input":"&rhard","inputUtf16":[38,114,104,97,114,100],"output":[{"Character":{"data":"&rhard"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3408() {
    tokenize(
        r##"{"description":"Named entity: rhard; with a semi-colon","initialState":"Data","input":"&rhard;","inputUtf16":[38,114,104,97,114,100,59],"output":[{"Character":{"data":"‚áÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3409() {
    tokenize(
        r##"{"description":"Bad named entity: rharu without a semi-colon","initialState":"Data","input":"&rharu","inputUtf16":[38,114,104,97,114,117],"output":[{"Character":{"data":"&rharu"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3410() {
    tokenize(
        r##"{"description":"Named entity: rharu; with a semi-colon","initialState":"Data","input":"&rharu;","inputUtf16":[38,114,104,97,114,117,59],"output":[{"Character":{"data":"‚áÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3411() {
    tokenize(
        r##"{"description":"Bad named entity: rharul without a semi-colon","initialState":"Data","input":"&rharul","inputUtf16":[38,114,104,97,114,117,108],"output":[{"Character":{"data":"&rharul"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3412() {
    tokenize(
        r##"{"description":"Named entity: rharul; with a semi-colon","initialState":"Data","input":"&rharul;","inputUtf16":[38,114,104,97,114,117,108,59],"output":[{"Character":{"data":"‚•¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3413() {
    tokenize(
        r##"{"description":"Bad named entity: rho without a semi-colon","initialState":"Data","input":"&rho","inputUtf16":[38,114,104,111],"output":[{"Character":{"data":"&rho"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3414() {
    tokenize(
        r##"{"description":"Named entity: rho; with a semi-colon","initialState":"Data","input":"&rho;","inputUtf16":[38,114,104,111,59],"output":[{"Character":{"data":"œÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3415() {
    tokenize(
        r##"{"description":"Bad named entity: rhov without a semi-colon","initialState":"Data","input":"&rhov","inputUtf16":[38,114,104,111,118],"output":[{"Character":{"data":"&rhov"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3416() {
    tokenize(
        r##"{"description":"Named entity: rhov; with a semi-colon","initialState":"Data","input":"&rhov;","inputUtf16":[38,114,104,111,118,59],"output":[{"Character":{"data":"œ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3417() {
    tokenize(
        r##"{"description":"Bad named entity: rightarrow without a semi-colon","initialState":"Data","input":"&rightarrow","inputUtf16":[38,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&rightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3418() {
    tokenize(
        r##"{"description":"Named entity: rightarrow; with a semi-colon","initialState":"Data","input":"&rightarrow;","inputUtf16":[38,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3419() {
    tokenize(
        r##"{"description":"Bad named entity: rightarrowtail without a semi-colon","initialState":"Data","input":"&rightarrowtail","inputUtf16":[38,114,105,103,104,116,97,114,114,111,119,116,97,105,108],"output":[{"Character":{"data":"&rightarrowtail"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3420() {
    tokenize(
        r##"{"description":"Named entity: rightarrowtail; with a semi-colon","initialState":"Data","input":"&rightarrowtail;","inputUtf16":[38,114,105,103,104,116,97,114,114,111,119,116,97,105,108,59],"output":[{"Character":{"data":"‚Ü£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3421() {
    tokenize(
        r##"{"description":"Bad named entity: rightharpoondown without a semi-colon","initialState":"Data","input":"&rightharpoondown","inputUtf16":[38,114,105,103,104,116,104,97,114,112,111,111,110,100,111,119,110],"output":[{"Character":{"data":"&rightharpoondown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3422() {
    tokenize(
        r##"{"description":"Named entity: rightharpoondown; with a semi-colon","initialState":"Data","input":"&rightharpoondown;","inputUtf16":[38,114,105,103,104,116,104,97,114,112,111,111,110,100,111,119,110,59],"output":[{"Character":{"data":"‚áÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3423() {
    tokenize(
        r##"{"description":"Bad named entity: rightharpoonup without a semi-colon","initialState":"Data","input":"&rightharpoonup","inputUtf16":[38,114,105,103,104,116,104,97,114,112,111,111,110,117,112],"output":[{"Character":{"data":"&rightharpoonup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3424() {
    tokenize(
        r##"{"description":"Named entity: rightharpoonup; with a semi-colon","initialState":"Data","input":"&rightharpoonup;","inputUtf16":[38,114,105,103,104,116,104,97,114,112,111,111,110,117,112,59],"output":[{"Character":{"data":"‚áÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3425() {
    tokenize(
        r##"{"description":"Bad named entity: rightleftarrows without a semi-colon","initialState":"Data","input":"&rightleftarrows","inputUtf16":[38,114,105,103,104,116,108,101,102,116,97,114,114,111,119,115],"output":[{"Character":{"data":"&rightleftarrows"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3426() {
    tokenize(
        r##"{"description":"Named entity: rightleftarrows; with a semi-colon","initialState":"Data","input":"&rightleftarrows;","inputUtf16":[38,114,105,103,104,116,108,101,102,116,97,114,114,111,119,115,59],"output":[{"Character":{"data":"‚áÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3427() {
    tokenize(
        r##"{"description":"Bad named entity: rightleftharpoons without a semi-colon","initialState":"Data","input":"&rightleftharpoons","inputUtf16":[38,114,105,103,104,116,108,101,102,116,104,97,114,112,111,111,110,115],"output":[{"Character":{"data":"&rightleftharpoons"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3428() {
    tokenize(
        r##"{"description":"Named entity: rightleftharpoons; with a semi-colon","initialState":"Data","input":"&rightleftharpoons;","inputUtf16":[38,114,105,103,104,116,108,101,102,116,104,97,114,112,111,111,110,115,59],"output":[{"Character":{"data":"‚áå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3429() {
    tokenize(
        r##"{"description":"Bad named entity: rightrightarrows without a semi-colon","initialState":"Data","input":"&rightrightarrows","inputUtf16":[38,114,105,103,104,116,114,105,103,104,116,97,114,114,111,119,115],"output":[{"Character":{"data":"&rightrightarrows"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3430() {
    tokenize(
        r##"{"description":"Named entity: rightrightarrows; with a semi-colon","initialState":"Data","input":"&rightrightarrows;","inputUtf16":[38,114,105,103,104,116,114,105,103,104,116,97,114,114,111,119,115,59],"output":[{"Character":{"data":"‚áâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3431() {
    tokenize(
        r##"{"description":"Bad named entity: rightsquigarrow without a semi-colon","initialState":"Data","input":"&rightsquigarrow","inputUtf16":[38,114,105,103,104,116,115,113,117,105,103,97,114,114,111,119],"output":[{"Character":{"data":"&rightsquigarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3432() {
    tokenize(
        r##"{"description":"Named entity: rightsquigarrow; with a semi-colon","initialState":"Data","input":"&rightsquigarrow;","inputUtf16":[38,114,105,103,104,116,115,113,117,105,103,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3433() {
    tokenize(
        r##"{"description":"Bad named entity: rightthreetimes without a semi-colon","initialState":"Data","input":"&rightthreetimes","inputUtf16":[38,114,105,103,104,116,116,104,114,101,101,116,105,109,101,115],"output":[{"Character":{"data":"&rightthreetimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3434() {
    tokenize(
        r##"{"description":"Named entity: rightthreetimes; with a semi-colon","initialState":"Data","input":"&rightthreetimes;","inputUtf16":[38,114,105,103,104,116,116,104,114,101,101,116,105,109,101,115,59],"output":[{"Character":{"data":"‚ãå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3435() {
    tokenize(
        r##"{"description":"Bad named entity: ring without a semi-colon","initialState":"Data","input":"&ring","inputUtf16":[38,114,105,110,103],"output":[{"Character":{"data":"&ring"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3436() {
    tokenize(
        r##"{"description":"Named entity: ring; with a semi-colon","initialState":"Data","input":"&ring;","inputUtf16":[38,114,105,110,103,59],"output":[{"Character":{"data":"Àö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3437() {
    tokenize(
        r##"{"description":"Bad named entity: risingdotseq without a semi-colon","initialState":"Data","input":"&risingdotseq","inputUtf16":[38,114,105,115,105,110,103,100,111,116,115,101,113],"output":[{"Character":{"data":"&risingdotseq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3438() {
    tokenize(
        r##"{"description":"Named entity: risingdotseq; with a semi-colon","initialState":"Data","input":"&risingdotseq;","inputUtf16":[38,114,105,115,105,110,103,100,111,116,115,101,113,59],"output":[{"Character":{"data":"‚âì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3439() {
    tokenize(
        r##"{"description":"Bad named entity: rlarr without a semi-colon","initialState":"Data","input":"&rlarr","inputUtf16":[38,114,108,97,114,114],"output":[{"Character":{"data":"&rlarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3440() {
    tokenize(
        r##"{"description":"Named entity: rlarr; with a semi-colon","initialState":"Data","input":"&rlarr;","inputUtf16":[38,114,108,97,114,114,59],"output":[{"Character":{"data":"‚áÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3441() {
    tokenize(
        r##"{"description":"Bad named entity: rlhar without a semi-colon","initialState":"Data","input":"&rlhar","inputUtf16":[38,114,108,104,97,114],"output":[{"Character":{"data":"&rlhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3442() {
    tokenize(
        r##"{"description":"Named entity: rlhar; with a semi-colon","initialState":"Data","input":"&rlhar;","inputUtf16":[38,114,108,104,97,114,59],"output":[{"Character":{"data":"‚áå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3443() {
    tokenize(
        r##"{"description":"Bad named entity: rlm without a semi-colon","initialState":"Data","input":"&rlm","inputUtf16":[38,114,108,109],"output":[{"Character":{"data":"&rlm"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3444() {
    tokenize(
        r##"{"description":"Named entity: rlm; with a semi-colon","initialState":"Data","input":"&rlm;","inputUtf16":[38,114,108,109,59],"output":[{"Character":{"data":"‚Äè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3445() {
    tokenize(
        r##"{"description":"Bad named entity: rmoust without a semi-colon","initialState":"Data","input":"&rmoust","inputUtf16":[38,114,109,111,117,115,116],"output":[{"Character":{"data":"&rmoust"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3446() {
    tokenize(
        r##"{"description":"Named entity: rmoust; with a semi-colon","initialState":"Data","input":"&rmoust;","inputUtf16":[38,114,109,111,117,115,116,59],"output":[{"Character":{"data":"‚é±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3447() {
    tokenize(
        r##"{"description":"Bad named entity: rmoustache without a semi-colon","initialState":"Data","input":"&rmoustache","inputUtf16":[38,114,109,111,117,115,116,97,99,104,101],"output":[{"Character":{"data":"&rmoustache"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3448() {
    tokenize(
        r##"{"description":"Named entity: rmoustache; with a semi-colon","initialState":"Data","input":"&rmoustache;","inputUtf16":[38,114,109,111,117,115,116,97,99,104,101,59],"output":[{"Character":{"data":"‚é±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3449() {
    tokenize(
        r##"{"description":"Bad named entity: rnmid without a semi-colon","initialState":"Data","input":"&rnmid","inputUtf16":[38,114,110,109,105,100],"output":[{"Character":{"data":"&rnmid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3450() {
    tokenize(
        r##"{"description":"Named entity: rnmid; with a semi-colon","initialState":"Data","input":"&rnmid;","inputUtf16":[38,114,110,109,105,100,59],"output":[{"Character":{"data":"‚´Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3451() {
    tokenize(
        r##"{"description":"Bad named entity: roang without a semi-colon","initialState":"Data","input":"&roang","inputUtf16":[38,114,111,97,110,103],"output":[{"Character":{"data":"&roang"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3452() {
    tokenize(
        r##"{"description":"Named entity: roang; with a semi-colon","initialState":"Data","input":"&roang;","inputUtf16":[38,114,111,97,110,103,59],"output":[{"Character":{"data":"‚ü≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3453() {
    tokenize(
        r##"{"description":"Bad named entity: roarr without a semi-colon","initialState":"Data","input":"&roarr","inputUtf16":[38,114,111,97,114,114],"output":[{"Character":{"data":"&roarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3454() {
    tokenize(
        r##"{"description":"Named entity: roarr; with a semi-colon","initialState":"Data","input":"&roarr;","inputUtf16":[38,114,111,97,114,114,59],"output":[{"Character":{"data":"‚áæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3455() {
    tokenize(
        r##"{"description":"Bad named entity: robrk without a semi-colon","initialState":"Data","input":"&robrk","inputUtf16":[38,114,111,98,114,107],"output":[{"Character":{"data":"&robrk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3456() {
    tokenize(
        r##"{"description":"Named entity: robrk; with a semi-colon","initialState":"Data","input":"&robrk;","inputUtf16":[38,114,111,98,114,107,59],"output":[{"Character":{"data":"‚üß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3457() {
    tokenize(
        r##"{"description":"Bad named entity: ropar without a semi-colon","initialState":"Data","input":"&ropar","inputUtf16":[38,114,111,112,97,114],"output":[{"Character":{"data":"&ropar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3458() {
    tokenize(
        r##"{"description":"Named entity: ropar; with a semi-colon","initialState":"Data","input":"&ropar;","inputUtf16":[38,114,111,112,97,114,59],"output":[{"Character":{"data":"‚¶Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3459() {
    tokenize(
        r##"{"description":"Bad named entity: ropf without a semi-colon","initialState":"Data","input":"&ropf","inputUtf16":[38,114,111,112,102],"output":[{"Character":{"data":"&ropf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3460() {
    tokenize(
        r##"{"description":"Named entity: ropf; with a semi-colon","initialState":"Data","input":"&ropf;","inputUtf16":[38,114,111,112,102,59],"output":[{"Character":{"data":"ùï£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3461() {
    tokenize(
        r##"{"description":"Bad named entity: roplus without a semi-colon","initialState":"Data","input":"&roplus","inputUtf16":[38,114,111,112,108,117,115],"output":[{"Character":{"data":"&roplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3462() {
    tokenize(
        r##"{"description":"Named entity: roplus; with a semi-colon","initialState":"Data","input":"&roplus;","inputUtf16":[38,114,111,112,108,117,115,59],"output":[{"Character":{"data":"‚®Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3463() {
    tokenize(
        r##"{"description":"Bad named entity: rotimes without a semi-colon","initialState":"Data","input":"&rotimes","inputUtf16":[38,114,111,116,105,109,101,115],"output":[{"Character":{"data":"&rotimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3464() {
    tokenize(
        r##"{"description":"Named entity: rotimes; with a semi-colon","initialState":"Data","input":"&rotimes;","inputUtf16":[38,114,111,116,105,109,101,115,59],"output":[{"Character":{"data":"‚®µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3465() {
    tokenize(
        r##"{"description":"Bad named entity: rpar without a semi-colon","initialState":"Data","input":"&rpar","inputUtf16":[38,114,112,97,114],"output":[{"Character":{"data":"&rpar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3466() {
    tokenize(
        r##"{"description":"Named entity: rpar; with a semi-colon","initialState":"Data","input":"&rpar;","inputUtf16":[38,114,112,97,114,59],"output":[{"Character":{"data":")"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3467() {
    tokenize(
        r##"{"description":"Bad named entity: rpargt without a semi-colon","initialState":"Data","input":"&rpargt","inputUtf16":[38,114,112,97,114,103,116],"output":[{"Character":{"data":"&rpargt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3468() {
    tokenize(
        r##"{"description":"Named entity: rpargt; with a semi-colon","initialState":"Data","input":"&rpargt;","inputUtf16":[38,114,112,97,114,103,116,59],"output":[{"Character":{"data":"‚¶î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3469() {
    tokenize(
        r##"{"description":"Bad named entity: rppolint without a semi-colon","initialState":"Data","input":"&rppolint","inputUtf16":[38,114,112,112,111,108,105,110,116],"output":[{"Character":{"data":"&rppolint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3470() {
    tokenize(
        r##"{"description":"Named entity: rppolint; with a semi-colon","initialState":"Data","input":"&rppolint;","inputUtf16":[38,114,112,112,111,108,105,110,116,59],"output":[{"Character":{"data":"‚®í"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3471() {
    tokenize(
        r##"{"description":"Bad named entity: rrarr without a semi-colon","initialState":"Data","input":"&rrarr","inputUtf16":[38,114,114,97,114,114],"output":[{"Character":{"data":"&rrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3472() {
    tokenize(
        r##"{"description":"Named entity: rrarr; with a semi-colon","initialState":"Data","input":"&rrarr;","inputUtf16":[38,114,114,97,114,114,59],"output":[{"Character":{"data":"‚áâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3473() {
    tokenize(
        r##"{"description":"Bad named entity: rsaquo without a semi-colon","initialState":"Data","input":"&rsaquo","inputUtf16":[38,114,115,97,113,117,111],"output":[{"Character":{"data":"&rsaquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3474() {
    tokenize(
        r##"{"description":"Named entity: rsaquo; with a semi-colon","initialState":"Data","input":"&rsaquo;","inputUtf16":[38,114,115,97,113,117,111,59],"output":[{"Character":{"data":"‚Ä∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3475() {
    tokenize(
        r##"{"description":"Bad named entity: rscr without a semi-colon","initialState":"Data","input":"&rscr","inputUtf16":[38,114,115,99,114],"output":[{"Character":{"data":"&rscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3476() {
    tokenize(
        r##"{"description":"Named entity: rscr; with a semi-colon","initialState":"Data","input":"&rscr;","inputUtf16":[38,114,115,99,114,59],"output":[{"Character":{"data":"ùìá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3477() {
    tokenize(
        r##"{"description":"Bad named entity: rsh without a semi-colon","initialState":"Data","input":"&rsh","inputUtf16":[38,114,115,104],"output":[{"Character":{"data":"&rsh"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3478() {
    tokenize(
        r##"{"description":"Named entity: rsh; with a semi-colon","initialState":"Data","input":"&rsh;","inputUtf16":[38,114,115,104,59],"output":[{"Character":{"data":"‚Ü±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3479() {
    tokenize(
        r##"{"description":"Bad named entity: rsqb without a semi-colon","initialState":"Data","input":"&rsqb","inputUtf16":[38,114,115,113,98],"output":[{"Character":{"data":"&rsqb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3480() {
    tokenize(
        r##"{"description":"Named entity: rsqb; with a semi-colon","initialState":"Data","input":"&rsqb;","inputUtf16":[38,114,115,113,98,59],"output":[{"Character":{"data":"]"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3481() {
    tokenize(
        r##"{"description":"Bad named entity: rsquo without a semi-colon","initialState":"Data","input":"&rsquo","inputUtf16":[38,114,115,113,117,111],"output":[{"Character":{"data":"&rsquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3482() {
    tokenize(
        r##"{"description":"Named entity: rsquo; with a semi-colon","initialState":"Data","input":"&rsquo;","inputUtf16":[38,114,115,113,117,111,59],"output":[{"Character":{"data":"‚Äô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3483() {
    tokenize(
        r##"{"description":"Bad named entity: rsquor without a semi-colon","initialState":"Data","input":"&rsquor","inputUtf16":[38,114,115,113,117,111,114],"output":[{"Character":{"data":"&rsquor"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3484() {
    tokenize(
        r##"{"description":"Named entity: rsquor; with a semi-colon","initialState":"Data","input":"&rsquor;","inputUtf16":[38,114,115,113,117,111,114,59],"output":[{"Character":{"data":"‚Äô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3485() {
    tokenize(
        r##"{"description":"Bad named entity: rthree without a semi-colon","initialState":"Data","input":"&rthree","inputUtf16":[38,114,116,104,114,101,101],"output":[{"Character":{"data":"&rthree"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3486() {
    tokenize(
        r##"{"description":"Named entity: rthree; with a semi-colon","initialState":"Data","input":"&rthree;","inputUtf16":[38,114,116,104,114,101,101,59],"output":[{"Character":{"data":"‚ãå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3487() {
    tokenize(
        r##"{"description":"Bad named entity: rtimes without a semi-colon","initialState":"Data","input":"&rtimes","inputUtf16":[38,114,116,105,109,101,115],"output":[{"Character":{"data":"&rtimes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3488() {
    tokenize(
        r##"{"description":"Named entity: rtimes; with a semi-colon","initialState":"Data","input":"&rtimes;","inputUtf16":[38,114,116,105,109,101,115,59],"output":[{"Character":{"data":"‚ãä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3489() {
    tokenize(
        r##"{"description":"Bad named entity: rtri without a semi-colon","initialState":"Data","input":"&rtri","inputUtf16":[38,114,116,114,105],"output":[{"Character":{"data":"&rtri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3490() {
    tokenize(
        r##"{"description":"Named entity: rtri; with a semi-colon","initialState":"Data","input":"&rtri;","inputUtf16":[38,114,116,114,105,59],"output":[{"Character":{"data":"‚ñπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3491() {
    tokenize(
        r##"{"description":"Bad named entity: rtrie without a semi-colon","initialState":"Data","input":"&rtrie","inputUtf16":[38,114,116,114,105,101],"output":[{"Character":{"data":"&rtrie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3492() {
    tokenize(
        r##"{"description":"Named entity: rtrie; with a semi-colon","initialState":"Data","input":"&rtrie;","inputUtf16":[38,114,116,114,105,101,59],"output":[{"Character":{"data":"‚äµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3493() {
    tokenize(
        r##"{"description":"Bad named entity: rtrif without a semi-colon","initialState":"Data","input":"&rtrif","inputUtf16":[38,114,116,114,105,102],"output":[{"Character":{"data":"&rtrif"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3494() {
    tokenize(
        r##"{"description":"Named entity: rtrif; with a semi-colon","initialState":"Data","input":"&rtrif;","inputUtf16":[38,114,116,114,105,102,59],"output":[{"Character":{"data":"‚ñ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3495() {
    tokenize(
        r##"{"description":"Bad named entity: rtriltri without a semi-colon","initialState":"Data","input":"&rtriltri","inputUtf16":[38,114,116,114,105,108,116,114,105],"output":[{"Character":{"data":"&rtriltri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3496() {
    tokenize(
        r##"{"description":"Named entity: rtriltri; with a semi-colon","initialState":"Data","input":"&rtriltri;","inputUtf16":[38,114,116,114,105,108,116,114,105,59],"output":[{"Character":{"data":"‚ßé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3497() {
    tokenize(
        r##"{"description":"Bad named entity: ruluhar without a semi-colon","initialState":"Data","input":"&ruluhar","inputUtf16":[38,114,117,108,117,104,97,114],"output":[{"Character":{"data":"&ruluhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3498() {
    tokenize(
        r##"{"description":"Named entity: ruluhar; with a semi-colon","initialState":"Data","input":"&ruluhar;","inputUtf16":[38,114,117,108,117,104,97,114,59],"output":[{"Character":{"data":"‚•®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3499() {
    tokenize(
        r##"{"description":"Bad named entity: rx without a semi-colon","initialState":"Data","input":"&rx","inputUtf16":[38,114,120],"output":[{"Character":{"data":"&rx"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3500() {
    tokenize(
        r##"{"description":"Named entity: rx; with a semi-colon","initialState":"Data","input":"&rx;","inputUtf16":[38,114,120,59],"output":[{"Character":{"data":"‚Ñû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3501() {
    tokenize(
        r##"{"description":"Bad named entity: sacute without a semi-colon","initialState":"Data","input":"&sacute","inputUtf16":[38,115,97,99,117,116,101],"output":[{"Character":{"data":"&sacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3502() {
    tokenize(
        r##"{"description":"Named entity: sacute; with a semi-colon","initialState":"Data","input":"&sacute;","inputUtf16":[38,115,97,99,117,116,101,59],"output":[{"Character":{"data":"≈õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3503() {
    tokenize(
        r##"{"description":"Bad named entity: sbquo without a semi-colon","initialState":"Data","input":"&sbquo","inputUtf16":[38,115,98,113,117,111],"output":[{"Character":{"data":"&sbquo"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3504() {
    tokenize(
        r##"{"description":"Named entity: sbquo; with a semi-colon","initialState":"Data","input":"&sbquo;","inputUtf16":[38,115,98,113,117,111,59],"output":[{"Character":{"data":"‚Äö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3505() {
    tokenize(
        r##"{"description":"Bad named entity: sc without a semi-colon","initialState":"Data","input":"&sc","inputUtf16":[38,115,99],"output":[{"Character":{"data":"&sc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3506() {
    tokenize(
        r##"{"description":"Named entity: sc; with a semi-colon","initialState":"Data","input":"&sc;","inputUtf16":[38,115,99,59],"output":[{"Character":{"data":"‚âª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3507() {
    tokenize(
        r##"{"description":"Bad named entity: scE without a semi-colon","initialState":"Data","input":"&scE","inputUtf16":[38,115,99,69],"output":[{"Character":{"data":"&scE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3508() {
    tokenize(
        r##"{"description":"Named entity: scE; with a semi-colon","initialState":"Data","input":"&scE;","inputUtf16":[38,115,99,69,59],"output":[{"Character":{"data":"‚™¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3509() {
    tokenize(
        r##"{"description":"Bad named entity: scap without a semi-colon","initialState":"Data","input":"&scap","inputUtf16":[38,115,99,97,112],"output":[{"Character":{"data":"&scap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3510() {
    tokenize(
        r##"{"description":"Named entity: scap; with a semi-colon","initialState":"Data","input":"&scap;","inputUtf16":[38,115,99,97,112,59],"output":[{"Character":{"data":"‚™∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3511() {
    tokenize(
        r##"{"description":"Bad named entity: scaron without a semi-colon","initialState":"Data","input":"&scaron","inputUtf16":[38,115,99,97,114,111,110],"output":[{"Character":{"data":"&scaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3512() {
    tokenize(
        r##"{"description":"Named entity: scaron; with a semi-colon","initialState":"Data","input":"&scaron;","inputUtf16":[38,115,99,97,114,111,110,59],"output":[{"Character":{"data":"≈°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3513() {
    tokenize(
        r##"{"description":"Bad named entity: sccue without a semi-colon","initialState":"Data","input":"&sccue","inputUtf16":[38,115,99,99,117,101],"output":[{"Character":{"data":"&sccue"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3514() {
    tokenize(
        r##"{"description":"Named entity: sccue; with a semi-colon","initialState":"Data","input":"&sccue;","inputUtf16":[38,115,99,99,117,101,59],"output":[{"Character":{"data":"‚âΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3515() {
    tokenize(
        r##"{"description":"Bad named entity: sce without a semi-colon","initialState":"Data","input":"&sce","inputUtf16":[38,115,99,101],"output":[{"Character":{"data":"&sce"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3516() {
    tokenize(
        r##"{"description":"Named entity: sce; with a semi-colon","initialState":"Data","input":"&sce;","inputUtf16":[38,115,99,101,59],"output":[{"Character":{"data":"‚™∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3517() {
    tokenize(
        r##"{"description":"Bad named entity: scedil without a semi-colon","initialState":"Data","input":"&scedil","inputUtf16":[38,115,99,101,100,105,108],"output":[{"Character":{"data":"&scedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3518() {
    tokenize(
        r##"{"description":"Named entity: scedil; with a semi-colon","initialState":"Data","input":"&scedil;","inputUtf16":[38,115,99,101,100,105,108,59],"output":[{"Character":{"data":"≈ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3519() {
    tokenize(
        r##"{"description":"Bad named entity: scirc without a semi-colon","initialState":"Data","input":"&scirc","inputUtf16":[38,115,99,105,114,99],"output":[{"Character":{"data":"&scirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3520() {
    tokenize(
        r##"{"description":"Named entity: scirc; with a semi-colon","initialState":"Data","input":"&scirc;","inputUtf16":[38,115,99,105,114,99,59],"output":[{"Character":{"data":"≈ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3521() {
    tokenize(
        r##"{"description":"Bad named entity: scnE without a semi-colon","initialState":"Data","input":"&scnE","inputUtf16":[38,115,99,110,69],"output":[{"Character":{"data":"&scnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3522() {
    tokenize(
        r##"{"description":"Named entity: scnE; with a semi-colon","initialState":"Data","input":"&scnE;","inputUtf16":[38,115,99,110,69,59],"output":[{"Character":{"data":"‚™∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3523() {
    tokenize(
        r##"{"description":"Bad named entity: scnap without a semi-colon","initialState":"Data","input":"&scnap","inputUtf16":[38,115,99,110,97,112],"output":[{"Character":{"data":"&scnap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3524() {
    tokenize(
        r##"{"description":"Named entity: scnap; with a semi-colon","initialState":"Data","input":"&scnap;","inputUtf16":[38,115,99,110,97,112,59],"output":[{"Character":{"data":"‚™∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3525() {
    tokenize(
        r##"{"description":"Bad named entity: scnsim without a semi-colon","initialState":"Data","input":"&scnsim","inputUtf16":[38,115,99,110,115,105,109],"output":[{"Character":{"data":"&scnsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3526() {
    tokenize(
        r##"{"description":"Named entity: scnsim; with a semi-colon","initialState":"Data","input":"&scnsim;","inputUtf16":[38,115,99,110,115,105,109,59],"output":[{"Character":{"data":"‚ã©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3527() {
    tokenize(
        r##"{"description":"Bad named entity: scpolint without a semi-colon","initialState":"Data","input":"&scpolint","inputUtf16":[38,115,99,112,111,108,105,110,116],"output":[{"Character":{"data":"&scpolint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3528() {
    tokenize(
        r##"{"description":"Named entity: scpolint; with a semi-colon","initialState":"Data","input":"&scpolint;","inputUtf16":[38,115,99,112,111,108,105,110,116,59],"output":[{"Character":{"data":"‚®ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3529() {
    tokenize(
        r##"{"description":"Bad named entity: scsim without a semi-colon","initialState":"Data","input":"&scsim","inputUtf16":[38,115,99,115,105,109],"output":[{"Character":{"data":"&scsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3530() {
    tokenize(
        r##"{"description":"Named entity: scsim; with a semi-colon","initialState":"Data","input":"&scsim;","inputUtf16":[38,115,99,115,105,109,59],"output":[{"Character":{"data":"‚âø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3531() {
    tokenize(
        r##"{"description":"Bad named entity: scy without a semi-colon","initialState":"Data","input":"&scy","inputUtf16":[38,115,99,121],"output":[{"Character":{"data":"&scy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3532() {
    tokenize(
        r##"{"description":"Named entity: scy; with a semi-colon","initialState":"Data","input":"&scy;","inputUtf16":[38,115,99,121,59],"output":[{"Character":{"data":"—Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3533() {
    tokenize(
        r##"{"description":"Bad named entity: sdot without a semi-colon","initialState":"Data","input":"&sdot","inputUtf16":[38,115,100,111,116],"output":[{"Character":{"data":"&sdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3534() {
    tokenize(
        r##"{"description":"Named entity: sdot; with a semi-colon","initialState":"Data","input":"&sdot;","inputUtf16":[38,115,100,111,116,59],"output":[{"Character":{"data":"‚ãÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3535() {
    tokenize(
        r##"{"description":"Bad named entity: sdotb without a semi-colon","initialState":"Data","input":"&sdotb","inputUtf16":[38,115,100,111,116,98],"output":[{"Character":{"data":"&sdotb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3536() {
    tokenize(
        r##"{"description":"Named entity: sdotb; with a semi-colon","initialState":"Data","input":"&sdotb;","inputUtf16":[38,115,100,111,116,98,59],"output":[{"Character":{"data":"‚ä°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3537() {
    tokenize(
        r##"{"description":"Bad named entity: sdote without a semi-colon","initialState":"Data","input":"&sdote","inputUtf16":[38,115,100,111,116,101],"output":[{"Character":{"data":"&sdote"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3538() {
    tokenize(
        r##"{"description":"Named entity: sdote; with a semi-colon","initialState":"Data","input":"&sdote;","inputUtf16":[38,115,100,111,116,101,59],"output":[{"Character":{"data":"‚©¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3539() {
    tokenize(
        r##"{"description":"Bad named entity: seArr without a semi-colon","initialState":"Data","input":"&seArr","inputUtf16":[38,115,101,65,114,114],"output":[{"Character":{"data":"&seArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3540() {
    tokenize(
        r##"{"description":"Named entity: seArr; with a semi-colon","initialState":"Data","input":"&seArr;","inputUtf16":[38,115,101,65,114,114,59],"output":[{"Character":{"data":"‚áò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3541() {
    tokenize(
        r##"{"description":"Bad named entity: searhk without a semi-colon","initialState":"Data","input":"&searhk","inputUtf16":[38,115,101,97,114,104,107],"output":[{"Character":{"data":"&searhk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3542() {
    tokenize(
        r##"{"description":"Named entity: searhk; with a semi-colon","initialState":"Data","input":"&searhk;","inputUtf16":[38,115,101,97,114,104,107,59],"output":[{"Character":{"data":"‚§•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3543() {
    tokenize(
        r##"{"description":"Bad named entity: searr without a semi-colon","initialState":"Data","input":"&searr","inputUtf16":[38,115,101,97,114,114],"output":[{"Character":{"data":"&searr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3544() {
    tokenize(
        r##"{"description":"Named entity: searr; with a semi-colon","initialState":"Data","input":"&searr;","inputUtf16":[38,115,101,97,114,114,59],"output":[{"Character":{"data":"‚Üò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3545() {
    tokenize(
        r##"{"description":"Bad named entity: searrow without a semi-colon","initialState":"Data","input":"&searrow","inputUtf16":[38,115,101,97,114,114,111,119],"output":[{"Character":{"data":"&searrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3546() {
    tokenize(
        r##"{"description":"Named entity: searrow; with a semi-colon","initialState":"Data","input":"&searrow;","inputUtf16":[38,115,101,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3547() {
    tokenize(
        r##"{"description":"Named entity: sect without a semi-colon","initialState":"Data","input":"&sect","inputUtf16":[38,115,101,99,116],"output":[{"Character":{"data":"¬ß"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3548() {
    tokenize(
        r##"{"description":"Named entity: sect; with a semi-colon","initialState":"Data","input":"&sect;","inputUtf16":[38,115,101,99,116,59],"output":[{"Character":{"data":"¬ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3549() {
    tokenize(
        r##"{"description":"Bad named entity: semi without a semi-colon","initialState":"Data","input":"&semi","inputUtf16":[38,115,101,109,105],"output":[{"Character":{"data":"&semi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3550() {
    tokenize(
        r##"{"description":"Named entity: semi; with a semi-colon","initialState":"Data","input":"&semi;","inputUtf16":[38,115,101,109,105,59],"output":[{"Character":{"data":";"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3551() {
    tokenize(
        r##"{"description":"Bad named entity: seswar without a semi-colon","initialState":"Data","input":"&seswar","inputUtf16":[38,115,101,115,119,97,114],"output":[{"Character":{"data":"&seswar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3552() {
    tokenize(
        r##"{"description":"Named entity: seswar; with a semi-colon","initialState":"Data","input":"&seswar;","inputUtf16":[38,115,101,115,119,97,114,59],"output":[{"Character":{"data":"‚§©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3553() {
    tokenize(
        r##"{"description":"Bad named entity: setminus without a semi-colon","initialState":"Data","input":"&setminus","inputUtf16":[38,115,101,116,109,105,110,117,115],"output":[{"Character":{"data":"&setminus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3554() {
    tokenize(
        r##"{"description":"Named entity: setminus; with a semi-colon","initialState":"Data","input":"&setminus;","inputUtf16":[38,115,101,116,109,105,110,117,115,59],"output":[{"Character":{"data":"‚àñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3555() {
    tokenize(
        r##"{"description":"Bad named entity: setmn without a semi-colon","initialState":"Data","input":"&setmn","inputUtf16":[38,115,101,116,109,110],"output":[{"Character":{"data":"&setmn"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3556() {
    tokenize(
        r##"{"description":"Named entity: setmn; with a semi-colon","initialState":"Data","input":"&setmn;","inputUtf16":[38,115,101,116,109,110,59],"output":[{"Character":{"data":"‚àñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3557() {
    tokenize(
        r##"{"description":"Bad named entity: sext without a semi-colon","initialState":"Data","input":"&sext","inputUtf16":[38,115,101,120,116],"output":[{"Character":{"data":"&sext"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3558() {
    tokenize(
        r##"{"description":"Named entity: sext; with a semi-colon","initialState":"Data","input":"&sext;","inputUtf16":[38,115,101,120,116,59],"output":[{"Character":{"data":"‚ú∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3559() {
    tokenize(
        r##"{"description":"Bad named entity: sfr without a semi-colon","initialState":"Data","input":"&sfr","inputUtf16":[38,115,102,114],"output":[{"Character":{"data":"&sfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3560() {
    tokenize(
        r##"{"description":"Named entity: sfr; with a semi-colon","initialState":"Data","input":"&sfr;","inputUtf16":[38,115,102,114,59],"output":[{"Character":{"data":"ùî∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3561() {
    tokenize(
        r##"{"description":"Bad named entity: sfrown without a semi-colon","initialState":"Data","input":"&sfrown","inputUtf16":[38,115,102,114,111,119,110],"output":[{"Character":{"data":"&sfrown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3562() {
    tokenize(
        r##"{"description":"Named entity: sfrown; with a semi-colon","initialState":"Data","input":"&sfrown;","inputUtf16":[38,115,102,114,111,119,110,59],"output":[{"Character":{"data":"‚å¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3563() {
    tokenize(
        r##"{"description":"Bad named entity: sharp without a semi-colon","initialState":"Data","input":"&sharp","inputUtf16":[38,115,104,97,114,112],"output":[{"Character":{"data":"&sharp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3564() {
    tokenize(
        r##"{"description":"Named entity: sharp; with a semi-colon","initialState":"Data","input":"&sharp;","inputUtf16":[38,115,104,97,114,112,59],"output":[{"Character":{"data":"‚ôØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3565() {
    tokenize(
        r##"{"description":"Bad named entity: shchcy without a semi-colon","initialState":"Data","input":"&shchcy","inputUtf16":[38,115,104,99,104,99,121],"output":[{"Character":{"data":"&shchcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3566() {
    tokenize(
        r##"{"description":"Named entity: shchcy; with a semi-colon","initialState":"Data","input":"&shchcy;","inputUtf16":[38,115,104,99,104,99,121,59],"output":[{"Character":{"data":"—â"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3567() {
    tokenize(
        r##"{"description":"Bad named entity: shcy without a semi-colon","initialState":"Data","input":"&shcy","inputUtf16":[38,115,104,99,121],"output":[{"Character":{"data":"&shcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3568() {
    tokenize(
        r##"{"description":"Named entity: shcy; with a semi-colon","initialState":"Data","input":"&shcy;","inputUtf16":[38,115,104,99,121,59],"output":[{"Character":{"data":"—à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3569() {
    tokenize(
        r##"{"description":"Bad named entity: shortmid without a semi-colon","initialState":"Data","input":"&shortmid","inputUtf16":[38,115,104,111,114,116,109,105,100],"output":[{"Character":{"data":"&shortmid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3570() {
    tokenize(
        r##"{"description":"Named entity: shortmid; with a semi-colon","initialState":"Data","input":"&shortmid;","inputUtf16":[38,115,104,111,114,116,109,105,100,59],"output":[{"Character":{"data":"‚à£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3571() {
    tokenize(
        r##"{"description":"Bad named entity: shortparallel without a semi-colon","initialState":"Data","input":"&shortparallel","inputUtf16":[38,115,104,111,114,116,112,97,114,97,108,108,101,108],"output":[{"Character":{"data":"&shortparallel"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3572() {
    tokenize(
        r##"{"description":"Named entity: shortparallel; with a semi-colon","initialState":"Data","input":"&shortparallel;","inputUtf16":[38,115,104,111,114,116,112,97,114,97,108,108,101,108,59],"output":[{"Character":{"data":"‚à•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3573() {
    tokenize(
        r##"{"description":"Named entity: shy without a semi-colon","initialState":"Data","input":"&shy","inputUtf16":[38,115,104,121],"output":[{"Character":{"data":"¬≠"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_3574() {
    tokenize(
        r##"{"description":"Named entity: shy; with a semi-colon","initialState":"Data","input":"&shy;","inputUtf16":[38,115,104,121,59],"output":[{"Character":{"data":"¬≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3575() {
    tokenize(
        r##"{"description":"Bad named entity: sigma without a semi-colon","initialState":"Data","input":"&sigma","inputUtf16":[38,115,105,103,109,97],"output":[{"Character":{"data":"&sigma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3576() {
    tokenize(
        r##"{"description":"Named entity: sigma; with a semi-colon","initialState":"Data","input":"&sigma;","inputUtf16":[38,115,105,103,109,97,59],"output":[{"Character":{"data":"œÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3577() {
    tokenize(
        r##"{"description":"Bad named entity: sigmaf without a semi-colon","initialState":"Data","input":"&sigmaf","inputUtf16":[38,115,105,103,109,97,102],"output":[{"Character":{"data":"&sigmaf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3578() {
    tokenize(
        r##"{"description":"Named entity: sigmaf; with a semi-colon","initialState":"Data","input":"&sigmaf;","inputUtf16":[38,115,105,103,109,97,102,59],"output":[{"Character":{"data":"œÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3579() {
    tokenize(
        r##"{"description":"Bad named entity: sigmav without a semi-colon","initialState":"Data","input":"&sigmav","inputUtf16":[38,115,105,103,109,97,118],"output":[{"Character":{"data":"&sigmav"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3580() {
    tokenize(
        r##"{"description":"Named entity: sigmav; with a semi-colon","initialState":"Data","input":"&sigmav;","inputUtf16":[38,115,105,103,109,97,118,59],"output":[{"Character":{"data":"œÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3581() {
    tokenize(
        r##"{"description":"Bad named entity: sim without a semi-colon","initialState":"Data","input":"&sim","inputUtf16":[38,115,105,109],"output":[{"Character":{"data":"&sim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3582() {
    tokenize(
        r##"{"description":"Named entity: sim; with a semi-colon","initialState":"Data","input":"&sim;","inputUtf16":[38,115,105,109,59],"output":[{"Character":{"data":"‚àº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3583() {
    tokenize(
        r##"{"description":"Bad named entity: simdot without a semi-colon","initialState":"Data","input":"&simdot","inputUtf16":[38,115,105,109,100,111,116],"output":[{"Character":{"data":"&simdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3584() {
    tokenize(
        r##"{"description":"Named entity: simdot; with a semi-colon","initialState":"Data","input":"&simdot;","inputUtf16":[38,115,105,109,100,111,116,59],"output":[{"Character":{"data":"‚©™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3585() {
    tokenize(
        r##"{"description":"Bad named entity: sime without a semi-colon","initialState":"Data","input":"&sime","inputUtf16":[38,115,105,109,101],"output":[{"Character":{"data":"&sime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3586() {
    tokenize(
        r##"{"description":"Named entity: sime; with a semi-colon","initialState":"Data","input":"&sime;","inputUtf16":[38,115,105,109,101,59],"output":[{"Character":{"data":"‚âÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3587() {
    tokenize(
        r##"{"description":"Bad named entity: simeq without a semi-colon","initialState":"Data","input":"&simeq","inputUtf16":[38,115,105,109,101,113],"output":[{"Character":{"data":"&simeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3588() {
    tokenize(
        r##"{"description":"Named entity: simeq; with a semi-colon","initialState":"Data","input":"&simeq;","inputUtf16":[38,115,105,109,101,113,59],"output":[{"Character":{"data":"‚âÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3589() {
    tokenize(
        r##"{"description":"Bad named entity: simg without a semi-colon","initialState":"Data","input":"&simg","inputUtf16":[38,115,105,109,103],"output":[{"Character":{"data":"&simg"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3590() {
    tokenize(
        r##"{"description":"Named entity: simg; with a semi-colon","initialState":"Data","input":"&simg;","inputUtf16":[38,115,105,109,103,59],"output":[{"Character":{"data":"‚™û"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3591() {
    tokenize(
        r##"{"description":"Bad named entity: simgE without a semi-colon","initialState":"Data","input":"&simgE","inputUtf16":[38,115,105,109,103,69],"output":[{"Character":{"data":"&simgE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3592() {
    tokenize(
        r##"{"description":"Named entity: simgE; with a semi-colon","initialState":"Data","input":"&simgE;","inputUtf16":[38,115,105,109,103,69,59],"output":[{"Character":{"data":"‚™†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3593() {
    tokenize(
        r##"{"description":"Bad named entity: siml without a semi-colon","initialState":"Data","input":"&siml","inputUtf16":[38,115,105,109,108],"output":[{"Character":{"data":"&siml"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3594() {
    tokenize(
        r##"{"description":"Named entity: siml; with a semi-colon","initialState":"Data","input":"&siml;","inputUtf16":[38,115,105,109,108,59],"output":[{"Character":{"data":"‚™ù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3595() {
    tokenize(
        r##"{"description":"Bad named entity: simlE without a semi-colon","initialState":"Data","input":"&simlE","inputUtf16":[38,115,105,109,108,69],"output":[{"Character":{"data":"&simlE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3596() {
    tokenize(
        r##"{"description":"Named entity: simlE; with a semi-colon","initialState":"Data","input":"&simlE;","inputUtf16":[38,115,105,109,108,69,59],"output":[{"Character":{"data":"‚™ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3597() {
    tokenize(
        r##"{"description":"Bad named entity: simne without a semi-colon","initialState":"Data","input":"&simne","inputUtf16":[38,115,105,109,110,101],"output":[{"Character":{"data":"&simne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3598() {
    tokenize(
        r##"{"description":"Named entity: simne; with a semi-colon","initialState":"Data","input":"&simne;","inputUtf16":[38,115,105,109,110,101,59],"output":[{"Character":{"data":"‚âÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3599() {
    tokenize(
        r##"{"description":"Bad named entity: simplus without a semi-colon","initialState":"Data","input":"&simplus","inputUtf16":[38,115,105,109,112,108,117,115],"output":[{"Character":{"data":"&simplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3600() {
    tokenize(
        r##"{"description":"Named entity: simplus; with a semi-colon","initialState":"Data","input":"&simplus;","inputUtf16":[38,115,105,109,112,108,117,115,59],"output":[{"Character":{"data":"‚®§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3601() {
    tokenize(
        r##"{"description":"Bad named entity: simrarr without a semi-colon","initialState":"Data","input":"&simrarr","inputUtf16":[38,115,105,109,114,97,114,114],"output":[{"Character":{"data":"&simrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3602() {
    tokenize(
        r##"{"description":"Named entity: simrarr; with a semi-colon","initialState":"Data","input":"&simrarr;","inputUtf16":[38,115,105,109,114,97,114,114,59],"output":[{"Character":{"data":"‚•≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3603() {
    tokenize(
        r##"{"description":"Bad named entity: slarr without a semi-colon","initialState":"Data","input":"&slarr","inputUtf16":[38,115,108,97,114,114],"output":[{"Character":{"data":"&slarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3604() {
    tokenize(
        r##"{"description":"Named entity: slarr; with a semi-colon","initialState":"Data","input":"&slarr;","inputUtf16":[38,115,108,97,114,114,59],"output":[{"Character":{"data":"‚Üê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3605() {
    tokenize(
        r##"{"description":"Bad named entity: smallsetminus without a semi-colon","initialState":"Data","input":"&smallsetminus","inputUtf16":[38,115,109,97,108,108,115,101,116,109,105,110,117,115],"output":[{"Character":{"data":"&smallsetminus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3606() {
    tokenize(
        r##"{"description":"Named entity: smallsetminus; with a semi-colon","initialState":"Data","input":"&smallsetminus;","inputUtf16":[38,115,109,97,108,108,115,101,116,109,105,110,117,115,59],"output":[{"Character":{"data":"‚àñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3607() {
    tokenize(
        r##"{"description":"Bad named entity: smashp without a semi-colon","initialState":"Data","input":"&smashp","inputUtf16":[38,115,109,97,115,104,112],"output":[{"Character":{"data":"&smashp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3608() {
    tokenize(
        r##"{"description":"Named entity: smashp; with a semi-colon","initialState":"Data","input":"&smashp;","inputUtf16":[38,115,109,97,115,104,112,59],"output":[{"Character":{"data":"‚®≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3609() {
    tokenize(
        r##"{"description":"Bad named entity: smeparsl without a semi-colon","initialState":"Data","input":"&smeparsl","inputUtf16":[38,115,109,101,112,97,114,115,108],"output":[{"Character":{"data":"&smeparsl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3610() {
    tokenize(
        r##"{"description":"Named entity: smeparsl; with a semi-colon","initialState":"Data","input":"&smeparsl;","inputUtf16":[38,115,109,101,112,97,114,115,108,59],"output":[{"Character":{"data":"‚ß§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3611() {
    tokenize(
        r##"{"description":"Bad named entity: smid without a semi-colon","initialState":"Data","input":"&smid","inputUtf16":[38,115,109,105,100],"output":[{"Character":{"data":"&smid"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3612() {
    tokenize(
        r##"{"description":"Named entity: smid; with a semi-colon","initialState":"Data","input":"&smid;","inputUtf16":[38,115,109,105,100,59],"output":[{"Character":{"data":"‚à£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3613() {
    tokenize(
        r##"{"description":"Bad named entity: smile without a semi-colon","initialState":"Data","input":"&smile","inputUtf16":[38,115,109,105,108,101],"output":[{"Character":{"data":"&smile"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3614() {
    tokenize(
        r##"{"description":"Named entity: smile; with a semi-colon","initialState":"Data","input":"&smile;","inputUtf16":[38,115,109,105,108,101,59],"output":[{"Character":{"data":"‚å£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3615() {
    tokenize(
        r##"{"description":"Bad named entity: smt without a semi-colon","initialState":"Data","input":"&smt","inputUtf16":[38,115,109,116],"output":[{"Character":{"data":"&smt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3616() {
    tokenize(
        r##"{"description":"Named entity: smt; with a semi-colon","initialState":"Data","input":"&smt;","inputUtf16":[38,115,109,116,59],"output":[{"Character":{"data":"‚™™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3617() {
    tokenize(
        r##"{"description":"Bad named entity: smte without a semi-colon","initialState":"Data","input":"&smte","inputUtf16":[38,115,109,116,101],"output":[{"Character":{"data":"&smte"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3618() {
    tokenize(
        r##"{"description":"Named entity: smte; with a semi-colon","initialState":"Data","input":"&smte;","inputUtf16":[38,115,109,116,101,59],"output":[{"Character":{"data":"‚™¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3619() {
    tokenize(
        r##"{"description":"Bad named entity: smtes without a semi-colon","initialState":"Data","input":"&smtes","inputUtf16":[38,115,109,116,101,115],"output":[{"Character":{"data":"&smtes"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3620() {
    tokenize(
        r##"{"description":"Named entity: smtes; with a semi-colon","initialState":"Data","input":"&smtes;","inputUtf16":[38,115,109,116,101,115,59],"output":[{"Character":{"data":"‚™¨Ô∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3621() {
    tokenize(
        r##"{"description":"Bad named entity: softcy without a semi-colon","initialState":"Data","input":"&softcy","inputUtf16":[38,115,111,102,116,99,121],"output":[{"Character":{"data":"&softcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3622() {
    tokenize(
        r##"{"description":"Named entity: softcy; with a semi-colon","initialState":"Data","input":"&softcy;","inputUtf16":[38,115,111,102,116,99,121,59],"output":[{"Character":{"data":"—å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3623() {
    tokenize(
        r##"{"description":"Bad named entity: sol without a semi-colon","initialState":"Data","input":"&sol","inputUtf16":[38,115,111,108],"output":[{"Character":{"data":"&sol"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3624() {
    tokenize(
        r##"{"description":"Named entity: sol; with a semi-colon","initialState":"Data","input":"&sol;","inputUtf16":[38,115,111,108,59],"output":[{"Character":{"data":"/"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3625() {
    tokenize(
        r##"{"description":"Bad named entity: solb without a semi-colon","initialState":"Data","input":"&solb","inputUtf16":[38,115,111,108,98],"output":[{"Character":{"data":"&solb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3626() {
    tokenize(
        r##"{"description":"Named entity: solb; with a semi-colon","initialState":"Data","input":"&solb;","inputUtf16":[38,115,111,108,98,59],"output":[{"Character":{"data":"‚ßÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3627() {
    tokenize(
        r##"{"description":"Bad named entity: solbar without a semi-colon","initialState":"Data","input":"&solbar","inputUtf16":[38,115,111,108,98,97,114],"output":[{"Character":{"data":"&solbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3628() {
    tokenize(
        r##"{"description":"Named entity: solbar; with a semi-colon","initialState":"Data","input":"&solbar;","inputUtf16":[38,115,111,108,98,97,114,59],"output":[{"Character":{"data":"‚åø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3629() {
    tokenize(
        r##"{"description":"Bad named entity: sopf without a semi-colon","initialState":"Data","input":"&sopf","inputUtf16":[38,115,111,112,102],"output":[{"Character":{"data":"&sopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3630() {
    tokenize(
        r##"{"description":"Named entity: sopf; with a semi-colon","initialState":"Data","input":"&sopf;","inputUtf16":[38,115,111,112,102,59],"output":[{"Character":{"data":"ùï§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3631() {
    tokenize(
        r##"{"description":"Bad named entity: spades without a semi-colon","initialState":"Data","input":"&spades","inputUtf16":[38,115,112,97,100,101,115],"output":[{"Character":{"data":"&spades"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3632() {
    tokenize(
        r##"{"description":"Named entity: spades; with a semi-colon","initialState":"Data","input":"&spades;","inputUtf16":[38,115,112,97,100,101,115,59],"output":[{"Character":{"data":"‚ô†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3633() {
    tokenize(
        r##"{"description":"Bad named entity: spadesuit without a semi-colon","initialState":"Data","input":"&spadesuit","inputUtf16":[38,115,112,97,100,101,115,117,105,116],"output":[{"Character":{"data":"&spadesuit"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3634() {
    tokenize(
        r##"{"description":"Named entity: spadesuit; with a semi-colon","initialState":"Data","input":"&spadesuit;","inputUtf16":[38,115,112,97,100,101,115,117,105,116,59],"output":[{"Character":{"data":"‚ô†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3635() {
    tokenize(
        r##"{"description":"Bad named entity: spar without a semi-colon","initialState":"Data","input":"&spar","inputUtf16":[38,115,112,97,114],"output":[{"Character":{"data":"&spar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3636() {
    tokenize(
        r##"{"description":"Named entity: spar; with a semi-colon","initialState":"Data","input":"&spar;","inputUtf16":[38,115,112,97,114,59],"output":[{"Character":{"data":"‚à•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3637() {
    tokenize(
        r##"{"description":"Bad named entity: sqcap without a semi-colon","initialState":"Data","input":"&sqcap","inputUtf16":[38,115,113,99,97,112],"output":[{"Character":{"data":"&sqcap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3638() {
    tokenize(
        r##"{"description":"Named entity: sqcap; with a semi-colon","initialState":"Data","input":"&sqcap;","inputUtf16":[38,115,113,99,97,112,59],"output":[{"Character":{"data":"‚äì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3639() {
    tokenize(
        r##"{"description":"Bad named entity: sqcaps without a semi-colon","initialState":"Data","input":"&sqcaps","inputUtf16":[38,115,113,99,97,112,115],"output":[{"Character":{"data":"&sqcaps"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3640() {
    tokenize(
        r##"{"description":"Named entity: sqcaps; with a semi-colon","initialState":"Data","input":"&sqcaps;","inputUtf16":[38,115,113,99,97,112,115,59],"output":[{"Character":{"data":"‚äìÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3641() {
    tokenize(
        r##"{"description":"Bad named entity: sqcup without a semi-colon","initialState":"Data","input":"&sqcup","inputUtf16":[38,115,113,99,117,112],"output":[{"Character":{"data":"&sqcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3642() {
    tokenize(
        r##"{"description":"Named entity: sqcup; with a semi-colon","initialState":"Data","input":"&sqcup;","inputUtf16":[38,115,113,99,117,112,59],"output":[{"Character":{"data":"‚äî"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3643() {
    tokenize(
        r##"{"description":"Bad named entity: sqcups without a semi-colon","initialState":"Data","input":"&sqcups","inputUtf16":[38,115,113,99,117,112,115],"output":[{"Character":{"data":"&sqcups"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3644() {
    tokenize(
        r##"{"description":"Named entity: sqcups; with a semi-colon","initialState":"Data","input":"&sqcups;","inputUtf16":[38,115,113,99,117,112,115,59],"output":[{"Character":{"data":"‚äîÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3645() {
    tokenize(
        r##"{"description":"Bad named entity: sqsub without a semi-colon","initialState":"Data","input":"&sqsub","inputUtf16":[38,115,113,115,117,98],"output":[{"Character":{"data":"&sqsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3646() {
    tokenize(
        r##"{"description":"Named entity: sqsub; with a semi-colon","initialState":"Data","input":"&sqsub;","inputUtf16":[38,115,113,115,117,98,59],"output":[{"Character":{"data":"‚äè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3647() {
    tokenize(
        r##"{"description":"Bad named entity: sqsube without a semi-colon","initialState":"Data","input":"&sqsube","inputUtf16":[38,115,113,115,117,98,101],"output":[{"Character":{"data":"&sqsube"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3648() {
    tokenize(
        r##"{"description":"Named entity: sqsube; with a semi-colon","initialState":"Data","input":"&sqsube;","inputUtf16":[38,115,113,115,117,98,101,59],"output":[{"Character":{"data":"‚äë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3649() {
    tokenize(
        r##"{"description":"Bad named entity: sqsubset without a semi-colon","initialState":"Data","input":"&sqsubset","inputUtf16":[38,115,113,115,117,98,115,101,116],"output":[{"Character":{"data":"&sqsubset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3650() {
    tokenize(
        r##"{"description":"Named entity: sqsubset; with a semi-colon","initialState":"Data","input":"&sqsubset;","inputUtf16":[38,115,113,115,117,98,115,101,116,59],"output":[{"Character":{"data":"‚äè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3651() {
    tokenize(
        r##"{"description":"Bad named entity: sqsubseteq without a semi-colon","initialState":"Data","input":"&sqsubseteq","inputUtf16":[38,115,113,115,117,98,115,101,116,101,113],"output":[{"Character":{"data":"&sqsubseteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3652() {
    tokenize(
        r##"{"description":"Named entity: sqsubseteq; with a semi-colon","initialState":"Data","input":"&sqsubseteq;","inputUtf16":[38,115,113,115,117,98,115,101,116,101,113,59],"output":[{"Character":{"data":"‚äë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3653() {
    tokenize(
        r##"{"description":"Bad named entity: sqsup without a semi-colon","initialState":"Data","input":"&sqsup","inputUtf16":[38,115,113,115,117,112],"output":[{"Character":{"data":"&sqsup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3654() {
    tokenize(
        r##"{"description":"Named entity: sqsup; with a semi-colon","initialState":"Data","input":"&sqsup;","inputUtf16":[38,115,113,115,117,112,59],"output":[{"Character":{"data":"‚äê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3655() {
    tokenize(
        r##"{"description":"Bad named entity: sqsupe without a semi-colon","initialState":"Data","input":"&sqsupe","inputUtf16":[38,115,113,115,117,112,101],"output":[{"Character":{"data":"&sqsupe"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3656() {
    tokenize(
        r##"{"description":"Named entity: sqsupe; with a semi-colon","initialState":"Data","input":"&sqsupe;","inputUtf16":[38,115,113,115,117,112,101,59],"output":[{"Character":{"data":"‚äí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3657() {
    tokenize(
        r##"{"description":"Bad named entity: sqsupset without a semi-colon","initialState":"Data","input":"&sqsupset","inputUtf16":[38,115,113,115,117,112,115,101,116],"output":[{"Character":{"data":"&sqsupset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3658() {
    tokenize(
        r##"{"description":"Named entity: sqsupset; with a semi-colon","initialState":"Data","input":"&sqsupset;","inputUtf16":[38,115,113,115,117,112,115,101,116,59],"output":[{"Character":{"data":"‚äê"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3659() {
    tokenize(
        r##"{"description":"Bad named entity: sqsupseteq without a semi-colon","initialState":"Data","input":"&sqsupseteq","inputUtf16":[38,115,113,115,117,112,115,101,116,101,113],"output":[{"Character":{"data":"&sqsupseteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3660() {
    tokenize(
        r##"{"description":"Named entity: sqsupseteq; with a semi-colon","initialState":"Data","input":"&sqsupseteq;","inputUtf16":[38,115,113,115,117,112,115,101,116,101,113,59],"output":[{"Character":{"data":"‚äí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3661() {
    tokenize(
        r##"{"description":"Bad named entity: squ without a semi-colon","initialState":"Data","input":"&squ","inputUtf16":[38,115,113,117],"output":[{"Character":{"data":"&squ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3662() {
    tokenize(
        r##"{"description":"Named entity: squ; with a semi-colon","initialState":"Data","input":"&squ;","inputUtf16":[38,115,113,117,59],"output":[{"Character":{"data":"‚ñ°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3663() {
    tokenize(
        r##"{"description":"Bad named entity: square without a semi-colon","initialState":"Data","input":"&square","inputUtf16":[38,115,113,117,97,114,101],"output":[{"Character":{"data":"&square"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3664() {
    tokenize(
        r##"{"description":"Named entity: square; with a semi-colon","initialState":"Data","input":"&square;","inputUtf16":[38,115,113,117,97,114,101,59],"output":[{"Character":{"data":"‚ñ°"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3665() {
    tokenize(
        r##"{"description":"Bad named entity: squarf without a semi-colon","initialState":"Data","input":"&squarf","inputUtf16":[38,115,113,117,97,114,102],"output":[{"Character":{"data":"&squarf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3666() {
    tokenize(
        r##"{"description":"Named entity: squarf; with a semi-colon","initialState":"Data","input":"&squarf;","inputUtf16":[38,115,113,117,97,114,102,59],"output":[{"Character":{"data":"‚ñ™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3667() {
    tokenize(
        r##"{"description":"Bad named entity: squf without a semi-colon","initialState":"Data","input":"&squf","inputUtf16":[38,115,113,117,102],"output":[{"Character":{"data":"&squf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3668() {
    tokenize(
        r##"{"description":"Named entity: squf; with a semi-colon","initialState":"Data","input":"&squf;","inputUtf16":[38,115,113,117,102,59],"output":[{"Character":{"data":"‚ñ™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3669() {
    tokenize(
        r##"{"description":"Bad named entity: srarr without a semi-colon","initialState":"Data","input":"&srarr","inputUtf16":[38,115,114,97,114,114],"output":[{"Character":{"data":"&srarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3670() {
    tokenize(
        r##"{"description":"Named entity: srarr; with a semi-colon","initialState":"Data","input":"&srarr;","inputUtf16":[38,115,114,97,114,114,59],"output":[{"Character":{"data":"‚Üí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3671() {
    tokenize(
        r##"{"description":"Bad named entity: sscr without a semi-colon","initialState":"Data","input":"&sscr","inputUtf16":[38,115,115,99,114],"output":[{"Character":{"data":"&sscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3672() {
    tokenize(
        r##"{"description":"Named entity: sscr; with a semi-colon","initialState":"Data","input":"&sscr;","inputUtf16":[38,115,115,99,114,59],"output":[{"Character":{"data":"ùìà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3673() {
    tokenize(
        r##"{"description":"Bad named entity: ssetmn without a semi-colon","initialState":"Data","input":"&ssetmn","inputUtf16":[38,115,115,101,116,109,110],"output":[{"Character":{"data":"&ssetmn"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3674() {
    tokenize(
        r##"{"description":"Named entity: ssetmn; with a semi-colon","initialState":"Data","input":"&ssetmn;","inputUtf16":[38,115,115,101,116,109,110,59],"output":[{"Character":{"data":"‚àñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3675() {
    tokenize(
        r##"{"description":"Bad named entity: ssmile without a semi-colon","initialState":"Data","input":"&ssmile","inputUtf16":[38,115,115,109,105,108,101],"output":[{"Character":{"data":"&ssmile"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3676() {
    tokenize(
        r##"{"description":"Named entity: ssmile; with a semi-colon","initialState":"Data","input":"&ssmile;","inputUtf16":[38,115,115,109,105,108,101,59],"output":[{"Character":{"data":"‚å£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3677() {
    tokenize(
        r##"{"description":"Bad named entity: sstarf without a semi-colon","initialState":"Data","input":"&sstarf","inputUtf16":[38,115,115,116,97,114,102],"output":[{"Character":{"data":"&sstarf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3678() {
    tokenize(
        r##"{"description":"Named entity: sstarf; with a semi-colon","initialState":"Data","input":"&sstarf;","inputUtf16":[38,115,115,116,97,114,102,59],"output":[{"Character":{"data":"‚ãÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3679() {
    tokenize(
        r##"{"description":"Bad named entity: star without a semi-colon","initialState":"Data","input":"&star","inputUtf16":[38,115,116,97,114],"output":[{"Character":{"data":"&star"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3680() {
    tokenize(
        r##"{"description":"Named entity: star; with a semi-colon","initialState":"Data","input":"&star;","inputUtf16":[38,115,116,97,114,59],"output":[{"Character":{"data":"‚òÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3681() {
    tokenize(
        r##"{"description":"Bad named entity: starf without a semi-colon","initialState":"Data","input":"&starf","inputUtf16":[38,115,116,97,114,102],"output":[{"Character":{"data":"&starf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3682() {
    tokenize(
        r##"{"description":"Named entity: starf; with a semi-colon","initialState":"Data","input":"&starf;","inputUtf16":[38,115,116,97,114,102,59],"output":[{"Character":{"data":"‚òÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3683() {
    tokenize(
        r##"{"description":"Bad named entity: straightepsilon without a semi-colon","initialState":"Data","input":"&straightepsilon","inputUtf16":[38,115,116,114,97,105,103,104,116,101,112,115,105,108,111,110],"output":[{"Character":{"data":"&straightepsilon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3684() {
    tokenize(
        r##"{"description":"Named entity: straightepsilon; with a semi-colon","initialState":"Data","input":"&straightepsilon;","inputUtf16":[38,115,116,114,97,105,103,104,116,101,112,115,105,108,111,110,59],"output":[{"Character":{"data":"œµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3685() {
    tokenize(
        r##"{"description":"Bad named entity: straightphi without a semi-colon","initialState":"Data","input":"&straightphi","inputUtf16":[38,115,116,114,97,105,103,104,116,112,104,105],"output":[{"Character":{"data":"&straightphi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3686() {
    tokenize(
        r##"{"description":"Named entity: straightphi; with a semi-colon","initialState":"Data","input":"&straightphi;","inputUtf16":[38,115,116,114,97,105,103,104,116,112,104,105,59],"output":[{"Character":{"data":"œï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3687() {
    tokenize(
        r##"{"description":"Bad named entity: strns without a semi-colon","initialState":"Data","input":"&strns","inputUtf16":[38,115,116,114,110,115],"output":[{"Character":{"data":"&strns"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3688() {
    tokenize(
        r##"{"description":"Named entity: strns; with a semi-colon","initialState":"Data","input":"&strns;","inputUtf16":[38,115,116,114,110,115,59],"output":[{"Character":{"data":"¬Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3689() {
    tokenize(
        r##"{"description":"Bad named entity: sub without a semi-colon","initialState":"Data","input":"&sub","inputUtf16":[38,115,117,98],"output":[{"Character":{"data":"&sub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3690() {
    tokenize(
        r##"{"description":"Named entity: sub; with a semi-colon","initialState":"Data","input":"&sub;","inputUtf16":[38,115,117,98,59],"output":[{"Character":{"data":"‚äÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3691() {
    tokenize(
        r##"{"description":"Bad named entity: subE without a semi-colon","initialState":"Data","input":"&subE","inputUtf16":[38,115,117,98,69],"output":[{"Character":{"data":"&subE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3692() {
    tokenize(
        r##"{"description":"Named entity: subE; with a semi-colon","initialState":"Data","input":"&subE;","inputUtf16":[38,115,117,98,69,59],"output":[{"Character":{"data":"‚´Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3693() {
    tokenize(
        r##"{"description":"Bad named entity: subdot without a semi-colon","initialState":"Data","input":"&subdot","inputUtf16":[38,115,117,98,100,111,116],"output":[{"Character":{"data":"&subdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3694() {
    tokenize(
        r##"{"description":"Named entity: subdot; with a semi-colon","initialState":"Data","input":"&subdot;","inputUtf16":[38,115,117,98,100,111,116,59],"output":[{"Character":{"data":"‚™Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3695() {
    tokenize(
        r##"{"description":"Bad named entity: sube without a semi-colon","initialState":"Data","input":"&sube","inputUtf16":[38,115,117,98,101],"output":[{"Character":{"data":"&sube"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3696() {
    tokenize(
        r##"{"description":"Named entity: sube; with a semi-colon","initialState":"Data","input":"&sube;","inputUtf16":[38,115,117,98,101,59],"output":[{"Character":{"data":"‚äÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3697() {
    tokenize(
        r##"{"description":"Bad named entity: subedot without a semi-colon","initialState":"Data","input":"&subedot","inputUtf16":[38,115,117,98,101,100,111,116],"output":[{"Character":{"data":"&subedot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3698() {
    tokenize(
        r##"{"description":"Named entity: subedot; with a semi-colon","initialState":"Data","input":"&subedot;","inputUtf16":[38,115,117,98,101,100,111,116,59],"output":[{"Character":{"data":"‚´É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3699() {
    tokenize(
        r##"{"description":"Bad named entity: submult without a semi-colon","initialState":"Data","input":"&submult","inputUtf16":[38,115,117,98,109,117,108,116],"output":[{"Character":{"data":"&submult"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3700() {
    tokenize(
        r##"{"description":"Named entity: submult; with a semi-colon","initialState":"Data","input":"&submult;","inputUtf16":[38,115,117,98,109,117,108,116,59],"output":[{"Character":{"data":"‚´Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3701() {
    tokenize(
        r##"{"description":"Bad named entity: subnE without a semi-colon","initialState":"Data","input":"&subnE","inputUtf16":[38,115,117,98,110,69],"output":[{"Character":{"data":"&subnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3702() {
    tokenize(
        r##"{"description":"Named entity: subnE; with a semi-colon","initialState":"Data","input":"&subnE;","inputUtf16":[38,115,117,98,110,69,59],"output":[{"Character":{"data":"‚´ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3703() {
    tokenize(
        r##"{"description":"Bad named entity: subne without a semi-colon","initialState":"Data","input":"&subne","inputUtf16":[38,115,117,98,110,101],"output":[{"Character":{"data":"&subne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3704() {
    tokenize(
        r##"{"description":"Named entity: subne; with a semi-colon","initialState":"Data","input":"&subne;","inputUtf16":[38,115,117,98,110,101,59],"output":[{"Character":{"data":"‚ää"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3705() {
    tokenize(
        r##"{"description":"Bad named entity: subplus without a semi-colon","initialState":"Data","input":"&subplus","inputUtf16":[38,115,117,98,112,108,117,115],"output":[{"Character":{"data":"&subplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3706() {
    tokenize(
        r##"{"description":"Named entity: subplus; with a semi-colon","initialState":"Data","input":"&subplus;","inputUtf16":[38,115,117,98,112,108,117,115,59],"output":[{"Character":{"data":"‚™ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3707() {
    tokenize(
        r##"{"description":"Bad named entity: subrarr without a semi-colon","initialState":"Data","input":"&subrarr","inputUtf16":[38,115,117,98,114,97,114,114],"output":[{"Character":{"data":"&subrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3708() {
    tokenize(
        r##"{"description":"Named entity: subrarr; with a semi-colon","initialState":"Data","input":"&subrarr;","inputUtf16":[38,115,117,98,114,97,114,114,59],"output":[{"Character":{"data":"‚•π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3709() {
    tokenize(
        r##"{"description":"Bad named entity: subset without a semi-colon","initialState":"Data","input":"&subset","inputUtf16":[38,115,117,98,115,101,116],"output":[{"Character":{"data":"&subset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3710() {
    tokenize(
        r##"{"description":"Named entity: subset; with a semi-colon","initialState":"Data","input":"&subset;","inputUtf16":[38,115,117,98,115,101,116,59],"output":[{"Character":{"data":"‚äÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3711() {
    tokenize(
        r##"{"description":"Bad named entity: subseteq without a semi-colon","initialState":"Data","input":"&subseteq","inputUtf16":[38,115,117,98,115,101,116,101,113],"output":[{"Character":{"data":"&subseteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3712() {
    tokenize(
        r##"{"description":"Named entity: subseteq; with a semi-colon","initialState":"Data","input":"&subseteq;","inputUtf16":[38,115,117,98,115,101,116,101,113,59],"output":[{"Character":{"data":"‚äÜ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3713() {
    tokenize(
        r##"{"description":"Bad named entity: subseteqq without a semi-colon","initialState":"Data","input":"&subseteqq","inputUtf16":[38,115,117,98,115,101,116,101,113,113],"output":[{"Character":{"data":"&subseteqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3714() {
    tokenize(
        r##"{"description":"Named entity: subseteqq; with a semi-colon","initialState":"Data","input":"&subseteqq;","inputUtf16":[38,115,117,98,115,101,116,101,113,113,59],"output":[{"Character":{"data":"‚´Ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3715() {
    tokenize(
        r##"{"description":"Bad named entity: subsetneq without a semi-colon","initialState":"Data","input":"&subsetneq","inputUtf16":[38,115,117,98,115,101,116,110,101,113],"output":[{"Character":{"data":"&subsetneq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3716() {
    tokenize(
        r##"{"description":"Named entity: subsetneq; with a semi-colon","initialState":"Data","input":"&subsetneq;","inputUtf16":[38,115,117,98,115,101,116,110,101,113,59],"output":[{"Character":{"data":"‚ää"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3717() {
    tokenize(
        r##"{"description":"Bad named entity: subsetneqq without a semi-colon","initialState":"Data","input":"&subsetneqq","inputUtf16":[38,115,117,98,115,101,116,110,101,113,113],"output":[{"Character":{"data":"&subsetneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3718() {
    tokenize(
        r##"{"description":"Named entity: subsetneqq; with a semi-colon","initialState":"Data","input":"&subsetneqq;","inputUtf16":[38,115,117,98,115,101,116,110,101,113,113,59],"output":[{"Character":{"data":"‚´ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3719() {
    tokenize(
        r##"{"description":"Bad named entity: subsim without a semi-colon","initialState":"Data","input":"&subsim","inputUtf16":[38,115,117,98,115,105,109],"output":[{"Character":{"data":"&subsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3720() {
    tokenize(
        r##"{"description":"Named entity: subsim; with a semi-colon","initialState":"Data","input":"&subsim;","inputUtf16":[38,115,117,98,115,105,109,59],"output":[{"Character":{"data":"‚´á"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3721() {
    tokenize(
        r##"{"description":"Bad named entity: subsub without a semi-colon","initialState":"Data","input":"&subsub","inputUtf16":[38,115,117,98,115,117,98],"output":[{"Character":{"data":"&subsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3722() {
    tokenize(
        r##"{"description":"Named entity: subsub; with a semi-colon","initialState":"Data","input":"&subsub;","inputUtf16":[38,115,117,98,115,117,98,59],"output":[{"Character":{"data":"‚´ï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3723() {
    tokenize(
        r##"{"description":"Bad named entity: subsup without a semi-colon","initialState":"Data","input":"&subsup","inputUtf16":[38,115,117,98,115,117,112],"output":[{"Character":{"data":"&subsup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3724() {
    tokenize(
        r##"{"description":"Named entity: subsup; with a semi-colon","initialState":"Data","input":"&subsup;","inputUtf16":[38,115,117,98,115,117,112,59],"output":[{"Character":{"data":"‚´ì"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3725() {
    tokenize(
        r##"{"description":"Bad named entity: succ without a semi-colon","initialState":"Data","input":"&succ","inputUtf16":[38,115,117,99,99],"output":[{"Character":{"data":"&succ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3726() {
    tokenize(
        r##"{"description":"Named entity: succ; with a semi-colon","initialState":"Data","input":"&succ;","inputUtf16":[38,115,117,99,99,59],"output":[{"Character":{"data":"‚âª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3727() {
    tokenize(
        r##"{"description":"Bad named entity: succapprox without a semi-colon","initialState":"Data","input":"&succapprox","inputUtf16":[38,115,117,99,99,97,112,112,114,111,120],"output":[{"Character":{"data":"&succapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3728() {
    tokenize(
        r##"{"description":"Named entity: succapprox; with a semi-colon","initialState":"Data","input":"&succapprox;","inputUtf16":[38,115,117,99,99,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3729() {
    tokenize(
        r##"{"description":"Bad named entity: succcurlyeq without a semi-colon","initialState":"Data","input":"&succcurlyeq","inputUtf16":[38,115,117,99,99,99,117,114,108,121,101,113],"output":[{"Character":{"data":"&succcurlyeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3730() {
    tokenize(
        r##"{"description":"Named entity: succcurlyeq; with a semi-colon","initialState":"Data","input":"&succcurlyeq;","inputUtf16":[38,115,117,99,99,99,117,114,108,121,101,113,59],"output":[{"Character":{"data":"‚âΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3731() {
    tokenize(
        r##"{"description":"Bad named entity: succeq without a semi-colon","initialState":"Data","input":"&succeq","inputUtf16":[38,115,117,99,99,101,113],"output":[{"Character":{"data":"&succeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3732() {
    tokenize(
        r##"{"description":"Named entity: succeq; with a semi-colon","initialState":"Data","input":"&succeq;","inputUtf16":[38,115,117,99,99,101,113,59],"output":[{"Character":{"data":"‚™∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3733() {
    tokenize(
        r##"{"description":"Bad named entity: succnapprox without a semi-colon","initialState":"Data","input":"&succnapprox","inputUtf16":[38,115,117,99,99,110,97,112,112,114,111,120],"output":[{"Character":{"data":"&succnapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3734() {
    tokenize(
        r##"{"description":"Named entity: succnapprox; with a semi-colon","initialState":"Data","input":"&succnapprox;","inputUtf16":[38,115,117,99,99,110,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚™∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3735() {
    tokenize(
        r##"{"description":"Bad named entity: succneqq without a semi-colon","initialState":"Data","input":"&succneqq","inputUtf16":[38,115,117,99,99,110,101,113,113],"output":[{"Character":{"data":"&succneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3736() {
    tokenize(
        r##"{"description":"Named entity: succneqq; with a semi-colon","initialState":"Data","input":"&succneqq;","inputUtf16":[38,115,117,99,99,110,101,113,113,59],"output":[{"Character":{"data":"‚™∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3737() {
    tokenize(
        r##"{"description":"Bad named entity: succnsim without a semi-colon","initialState":"Data","input":"&succnsim","inputUtf16":[38,115,117,99,99,110,115,105,109],"output":[{"Character":{"data":"&succnsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3738() {
    tokenize(
        r##"{"description":"Named entity: succnsim; with a semi-colon","initialState":"Data","input":"&succnsim;","inputUtf16":[38,115,117,99,99,110,115,105,109,59],"output":[{"Character":{"data":"‚ã©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3739() {
    tokenize(
        r##"{"description":"Bad named entity: succsim without a semi-colon","initialState":"Data","input":"&succsim","inputUtf16":[38,115,117,99,99,115,105,109],"output":[{"Character":{"data":"&succsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3740() {
    tokenize(
        r##"{"description":"Named entity: succsim; with a semi-colon","initialState":"Data","input":"&succsim;","inputUtf16":[38,115,117,99,99,115,105,109,59],"output":[{"Character":{"data":"‚âø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3741() {
    tokenize(
        r##"{"description":"Bad named entity: sum without a semi-colon","initialState":"Data","input":"&sum","inputUtf16":[38,115,117,109],"output":[{"Character":{"data":"&sum"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3742() {
    tokenize(
        r##"{"description":"Named entity: sum; with a semi-colon","initialState":"Data","input":"&sum;","inputUtf16":[38,115,117,109,59],"output":[{"Character":{"data":"‚àë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3743() {
    tokenize(
        r##"{"description":"Bad named entity: sung without a semi-colon","initialState":"Data","input":"&sung","inputUtf16":[38,115,117,110,103],"output":[{"Character":{"data":"&sung"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3744() {
    tokenize(
        r##"{"description":"Named entity: sung; with a semi-colon","initialState":"Data","input":"&sung;","inputUtf16":[38,115,117,110,103,59],"output":[{"Character":{"data":"‚ô™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3745() {
    tokenize(
        r##"{"description":"Bad named entity: sup without a semi-colon","initialState":"Data","input":"&sup","inputUtf16":[38,115,117,112],"output":[{"Character":{"data":"&sup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3746() {
    tokenize(
        r##"{"description":"Named entity: sup1 without a semi-colon","initialState":"Data","input":"&sup1","inputUtf16":[38,115,117,112,49],"output":[{"Character":{"data":"¬π"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3747() {
    tokenize(
        r##"{"description":"Named entity: sup1; with a semi-colon","initialState":"Data","input":"&sup1;","inputUtf16":[38,115,117,112,49,59],"output":[{"Character":{"data":"¬π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3748() {
    tokenize(
        r##"{"description":"Named entity: sup2 without a semi-colon","initialState":"Data","input":"&sup2","inputUtf16":[38,115,117,112,50],"output":[{"Character":{"data":"¬≤"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3749() {
    tokenize(
        r##"{"description":"Named entity: sup2; with a semi-colon","initialState":"Data","input":"&sup2;","inputUtf16":[38,115,117,112,50,59],"output":[{"Character":{"data":"¬≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3750() {
    tokenize(
        r##"{"description":"Named entity: sup3 without a semi-colon","initialState":"Data","input":"&sup3","inputUtf16":[38,115,117,112,51],"output":[{"Character":{"data":"¬≥"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_3751() {
    tokenize(
        r##"{"description":"Named entity: sup3; with a semi-colon","initialState":"Data","input":"&sup3;","inputUtf16":[38,115,117,112,51,59],"output":[{"Character":{"data":"¬≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3752() {
    tokenize(
        r##"{"description":"Named entity: sup; with a semi-colon","initialState":"Data","input":"&sup;","inputUtf16":[38,115,117,112,59],"output":[{"Character":{"data":"‚äÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3753() {
    tokenize(
        r##"{"description":"Bad named entity: supE without a semi-colon","initialState":"Data","input":"&supE","inputUtf16":[38,115,117,112,69],"output":[{"Character":{"data":"&supE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3754() {
    tokenize(
        r##"{"description":"Named entity: supE; with a semi-colon","initialState":"Data","input":"&supE;","inputUtf16":[38,115,117,112,69,59],"output":[{"Character":{"data":"‚´Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3755() {
    tokenize(
        r##"{"description":"Bad named entity: supdot without a semi-colon","initialState":"Data","input":"&supdot","inputUtf16":[38,115,117,112,100,111,116],"output":[{"Character":{"data":"&supdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3756() {
    tokenize(
        r##"{"description":"Named entity: supdot; with a semi-colon","initialState":"Data","input":"&supdot;","inputUtf16":[38,115,117,112,100,111,116,59],"output":[{"Character":{"data":"‚™æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3757() {
    tokenize(
        r##"{"description":"Bad named entity: supdsub without a semi-colon","initialState":"Data","input":"&supdsub","inputUtf16":[38,115,117,112,100,115,117,98],"output":[{"Character":{"data":"&supdsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3758() {
    tokenize(
        r##"{"description":"Named entity: supdsub; with a semi-colon","initialState":"Data","input":"&supdsub;","inputUtf16":[38,115,117,112,100,115,117,98,59],"output":[{"Character":{"data":"‚´ò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3759() {
    tokenize(
        r##"{"description":"Bad named entity: supe without a semi-colon","initialState":"Data","input":"&supe","inputUtf16":[38,115,117,112,101],"output":[{"Character":{"data":"&supe"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3760() {
    tokenize(
        r##"{"description":"Named entity: supe; with a semi-colon","initialState":"Data","input":"&supe;","inputUtf16":[38,115,117,112,101,59],"output":[{"Character":{"data":"‚äá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3761() {
    tokenize(
        r##"{"description":"Bad named entity: supedot without a semi-colon","initialState":"Data","input":"&supedot","inputUtf16":[38,115,117,112,101,100,111,116],"output":[{"Character":{"data":"&supedot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3762() {
    tokenize(
        r##"{"description":"Named entity: supedot; with a semi-colon","initialState":"Data","input":"&supedot;","inputUtf16":[38,115,117,112,101,100,111,116,59],"output":[{"Character":{"data":"‚´Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3763() {
    tokenize(
        r##"{"description":"Bad named entity: suphsol without a semi-colon","initialState":"Data","input":"&suphsol","inputUtf16":[38,115,117,112,104,115,111,108],"output":[{"Character":{"data":"&suphsol"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3764() {
    tokenize(
        r##"{"description":"Named entity: suphsol; with a semi-colon","initialState":"Data","input":"&suphsol;","inputUtf16":[38,115,117,112,104,115,111,108,59],"output":[{"Character":{"data":"‚üâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3765() {
    tokenize(
        r##"{"description":"Bad named entity: suphsub without a semi-colon","initialState":"Data","input":"&suphsub","inputUtf16":[38,115,117,112,104,115,117,98],"output":[{"Character":{"data":"&suphsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3766() {
    tokenize(
        r##"{"description":"Named entity: suphsub; with a semi-colon","initialState":"Data","input":"&suphsub;","inputUtf16":[38,115,117,112,104,115,117,98,59],"output":[{"Character":{"data":"‚´ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3767() {
    tokenize(
        r##"{"description":"Bad named entity: suplarr without a semi-colon","initialState":"Data","input":"&suplarr","inputUtf16":[38,115,117,112,108,97,114,114],"output":[{"Character":{"data":"&suplarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3768() {
    tokenize(
        r##"{"description":"Named entity: suplarr; with a semi-colon","initialState":"Data","input":"&suplarr;","inputUtf16":[38,115,117,112,108,97,114,114,59],"output":[{"Character":{"data":"‚•ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3769() {
    tokenize(
        r##"{"description":"Bad named entity: supmult without a semi-colon","initialState":"Data","input":"&supmult","inputUtf16":[38,115,117,112,109,117,108,116],"output":[{"Character":{"data":"&supmult"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3770() {
    tokenize(
        r##"{"description":"Named entity: supmult; with a semi-colon","initialState":"Data","input":"&supmult;","inputUtf16":[38,115,117,112,109,117,108,116,59],"output":[{"Character":{"data":"‚´Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3771() {
    tokenize(
        r##"{"description":"Bad named entity: supnE without a semi-colon","initialState":"Data","input":"&supnE","inputUtf16":[38,115,117,112,110,69],"output":[{"Character":{"data":"&supnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3772() {
    tokenize(
        r##"{"description":"Named entity: supnE; with a semi-colon","initialState":"Data","input":"&supnE;","inputUtf16":[38,115,117,112,110,69,59],"output":[{"Character":{"data":"‚´å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3773() {
    tokenize(
        r##"{"description":"Bad named entity: supne without a semi-colon","initialState":"Data","input":"&supne","inputUtf16":[38,115,117,112,110,101],"output":[{"Character":{"data":"&supne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3774() {
    tokenize(
        r##"{"description":"Named entity: supne; with a semi-colon","initialState":"Data","input":"&supne;","inputUtf16":[38,115,117,112,110,101,59],"output":[{"Character":{"data":"‚äã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3775() {
    tokenize(
        r##"{"description":"Bad named entity: supplus without a semi-colon","initialState":"Data","input":"&supplus","inputUtf16":[38,115,117,112,112,108,117,115],"output":[{"Character":{"data":"&supplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3776() {
    tokenize(
        r##"{"description":"Named entity: supplus; with a semi-colon","initialState":"Data","input":"&supplus;","inputUtf16":[38,115,117,112,112,108,117,115,59],"output":[{"Character":{"data":"‚´Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3777() {
    tokenize(
        r##"{"description":"Bad named entity: supset without a semi-colon","initialState":"Data","input":"&supset","inputUtf16":[38,115,117,112,115,101,116],"output":[{"Character":{"data":"&supset"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3778() {
    tokenize(
        r##"{"description":"Named entity: supset; with a semi-colon","initialState":"Data","input":"&supset;","inputUtf16":[38,115,117,112,115,101,116,59],"output":[{"Character":{"data":"‚äÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3779() {
    tokenize(
        r##"{"description":"Bad named entity: supseteq without a semi-colon","initialState":"Data","input":"&supseteq","inputUtf16":[38,115,117,112,115,101,116,101,113],"output":[{"Character":{"data":"&supseteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3780() {
    tokenize(
        r##"{"description":"Named entity: supseteq; with a semi-colon","initialState":"Data","input":"&supseteq;","inputUtf16":[38,115,117,112,115,101,116,101,113,59],"output":[{"Character":{"data":"‚äá"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3781() {
    tokenize(
        r##"{"description":"Bad named entity: supseteqq without a semi-colon","initialState":"Data","input":"&supseteqq","inputUtf16":[38,115,117,112,115,101,116,101,113,113],"output":[{"Character":{"data":"&supseteqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3782() {
    tokenize(
        r##"{"description":"Named entity: supseteqq; with a semi-colon","initialState":"Data","input":"&supseteqq;","inputUtf16":[38,115,117,112,115,101,116,101,113,113,59],"output":[{"Character":{"data":"‚´Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3783() {
    tokenize(
        r##"{"description":"Bad named entity: supsetneq without a semi-colon","initialState":"Data","input":"&supsetneq","inputUtf16":[38,115,117,112,115,101,116,110,101,113],"output":[{"Character":{"data":"&supsetneq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3784() {
    tokenize(
        r##"{"description":"Named entity: supsetneq; with a semi-colon","initialState":"Data","input":"&supsetneq;","inputUtf16":[38,115,117,112,115,101,116,110,101,113,59],"output":[{"Character":{"data":"‚äã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3785() {
    tokenize(
        r##"{"description":"Bad named entity: supsetneqq without a semi-colon","initialState":"Data","input":"&supsetneqq","inputUtf16":[38,115,117,112,115,101,116,110,101,113,113],"output":[{"Character":{"data":"&supsetneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3786() {
    tokenize(
        r##"{"description":"Named entity: supsetneqq; with a semi-colon","initialState":"Data","input":"&supsetneqq;","inputUtf16":[38,115,117,112,115,101,116,110,101,113,113,59],"output":[{"Character":{"data":"‚´å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3787() {
    tokenize(
        r##"{"description":"Bad named entity: supsim without a semi-colon","initialState":"Data","input":"&supsim","inputUtf16":[38,115,117,112,115,105,109],"output":[{"Character":{"data":"&supsim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3788() {
    tokenize(
        r##"{"description":"Named entity: supsim; with a semi-colon","initialState":"Data","input":"&supsim;","inputUtf16":[38,115,117,112,115,105,109,59],"output":[{"Character":{"data":"‚´à"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3789() {
    tokenize(
        r##"{"description":"Bad named entity: supsub without a semi-colon","initialState":"Data","input":"&supsub","inputUtf16":[38,115,117,112,115,117,98],"output":[{"Character":{"data":"&supsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3790() {
    tokenize(
        r##"{"description":"Named entity: supsub; with a semi-colon","initialState":"Data","input":"&supsub;","inputUtf16":[38,115,117,112,115,117,98,59],"output":[{"Character":{"data":"‚´î"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3791() {
    tokenize(
        r##"{"description":"Bad named entity: supsup without a semi-colon","initialState":"Data","input":"&supsup","inputUtf16":[38,115,117,112,115,117,112],"output":[{"Character":{"data":"&supsup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3792() {
    tokenize(
        r##"{"description":"Named entity: supsup; with a semi-colon","initialState":"Data","input":"&supsup;","inputUtf16":[38,115,117,112,115,117,112,59],"output":[{"Character":{"data":"‚´ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3793() {
    tokenize(
        r##"{"description":"Bad named entity: swArr without a semi-colon","initialState":"Data","input":"&swArr","inputUtf16":[38,115,119,65,114,114],"output":[{"Character":{"data":"&swArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3794() {
    tokenize(
        r##"{"description":"Named entity: swArr; with a semi-colon","initialState":"Data","input":"&swArr;","inputUtf16":[38,115,119,65,114,114,59],"output":[{"Character":{"data":"‚áô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3795() {
    tokenize(
        r##"{"description":"Bad named entity: swarhk without a semi-colon","initialState":"Data","input":"&swarhk","inputUtf16":[38,115,119,97,114,104,107],"output":[{"Character":{"data":"&swarhk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3796() {
    tokenize(
        r##"{"description":"Named entity: swarhk; with a semi-colon","initialState":"Data","input":"&swarhk;","inputUtf16":[38,115,119,97,114,104,107,59],"output":[{"Character":{"data":"‚§¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3797() {
    tokenize(
        r##"{"description":"Bad named entity: swarr without a semi-colon","initialState":"Data","input":"&swarr","inputUtf16":[38,115,119,97,114,114],"output":[{"Character":{"data":"&swarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3798() {
    tokenize(
        r##"{"description":"Named entity: swarr; with a semi-colon","initialState":"Data","input":"&swarr;","inputUtf16":[38,115,119,97,114,114,59],"output":[{"Character":{"data":"‚Üô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3799() {
    tokenize(
        r##"{"description":"Bad named entity: swarrow without a semi-colon","initialState":"Data","input":"&swarrow","inputUtf16":[38,115,119,97,114,114,111,119],"output":[{"Character":{"data":"&swarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3800() {
    tokenize(
        r##"{"description":"Named entity: swarrow; with a semi-colon","initialState":"Data","input":"&swarrow;","inputUtf16":[38,115,119,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3801() {
    tokenize(
        r##"{"description":"Bad named entity: swnwar without a semi-colon","initialState":"Data","input":"&swnwar","inputUtf16":[38,115,119,110,119,97,114],"output":[{"Character":{"data":"&swnwar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3802() {
    tokenize(
        r##"{"description":"Named entity: swnwar; with a semi-colon","initialState":"Data","input":"&swnwar;","inputUtf16":[38,115,119,110,119,97,114,59],"output":[{"Character":{"data":"‚§™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3803() {
    tokenize(
        r##"{"description":"Named entity: szlig without a semi-colon","initialState":"Data","input":"&szlig","inputUtf16":[38,115,122,108,105,103],"output":[{"Character":{"data":"√ü"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_3804() {
    tokenize(
        r##"{"description":"Named entity: szlig; with a semi-colon","initialState":"Data","input":"&szlig;","inputUtf16":[38,115,122,108,105,103,59],"output":[{"Character":{"data":"√ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3805() {
    tokenize(
        r##"{"description":"Bad named entity: target without a semi-colon","initialState":"Data","input":"&target","inputUtf16":[38,116,97,114,103,101,116],"output":[{"Character":{"data":"&target"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3806() {
    tokenize(
        r##"{"description":"Named entity: target; with a semi-colon","initialState":"Data","input":"&target;","inputUtf16":[38,116,97,114,103,101,116,59],"output":[{"Character":{"data":"‚åñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3807() {
    tokenize(
        r##"{"description":"Bad named entity: tau without a semi-colon","initialState":"Data","input":"&tau","inputUtf16":[38,116,97,117],"output":[{"Character":{"data":"&tau"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3808() {
    tokenize(
        r##"{"description":"Named entity: tau; with a semi-colon","initialState":"Data","input":"&tau;","inputUtf16":[38,116,97,117,59],"output":[{"Character":{"data":"œÑ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3809() {
    tokenize(
        r##"{"description":"Bad named entity: tbrk without a semi-colon","initialState":"Data","input":"&tbrk","inputUtf16":[38,116,98,114,107],"output":[{"Character":{"data":"&tbrk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3810() {
    tokenize(
        r##"{"description":"Named entity: tbrk; with a semi-colon","initialState":"Data","input":"&tbrk;","inputUtf16":[38,116,98,114,107,59],"output":[{"Character":{"data":"‚é¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3811() {
    tokenize(
        r##"{"description":"Bad named entity: tcaron without a semi-colon","initialState":"Data","input":"&tcaron","inputUtf16":[38,116,99,97,114,111,110],"output":[{"Character":{"data":"&tcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3812() {
    tokenize(
        r##"{"description":"Named entity: tcaron; with a semi-colon","initialState":"Data","input":"&tcaron;","inputUtf16":[38,116,99,97,114,111,110,59],"output":[{"Character":{"data":"≈•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3813() {
    tokenize(
        r##"{"description":"Bad named entity: tcedil without a semi-colon","initialState":"Data","input":"&tcedil","inputUtf16":[38,116,99,101,100,105,108],"output":[{"Character":{"data":"&tcedil"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3814() {
    tokenize(
        r##"{"description":"Named entity: tcedil; with a semi-colon","initialState":"Data","input":"&tcedil;","inputUtf16":[38,116,99,101,100,105,108,59],"output":[{"Character":{"data":"≈£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3815() {
    tokenize(
        r##"{"description":"Bad named entity: tcy without a semi-colon","initialState":"Data","input":"&tcy","inputUtf16":[38,116,99,121],"output":[{"Character":{"data":"&tcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3816() {
    tokenize(
        r##"{"description":"Named entity: tcy; with a semi-colon","initialState":"Data","input":"&tcy;","inputUtf16":[38,116,99,121,59],"output":[{"Character":{"data":"—Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3817() {
    tokenize(
        r##"{"description":"Bad named entity: tdot without a semi-colon","initialState":"Data","input":"&tdot","inputUtf16":[38,116,100,111,116],"output":[{"Character":{"data":"&tdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3818() {
    tokenize(
        r##"{"description":"Named entity: tdot; with a semi-colon","initialState":"Data","input":"&tdot;","inputUtf16":[38,116,100,111,116,59],"output":[{"Character":{"data":"‚Éõ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3819() {
    tokenize(
        r##"{"description":"Bad named entity: telrec without a semi-colon","initialState":"Data","input":"&telrec","inputUtf16":[38,116,101,108,114,101,99],"output":[{"Character":{"data":"&telrec"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3820() {
    tokenize(
        r##"{"description":"Named entity: telrec; with a semi-colon","initialState":"Data","input":"&telrec;","inputUtf16":[38,116,101,108,114,101,99,59],"output":[{"Character":{"data":"‚åï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3821() {
    tokenize(
        r##"{"description":"Bad named entity: tfr without a semi-colon","initialState":"Data","input":"&tfr","inputUtf16":[38,116,102,114],"output":[{"Character":{"data":"&tfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3822() {
    tokenize(
        r##"{"description":"Named entity: tfr; with a semi-colon","initialState":"Data","input":"&tfr;","inputUtf16":[38,116,102,114,59],"output":[{"Character":{"data":"ùî±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3823() {
    tokenize(
        r##"{"description":"Bad named entity: there4 without a semi-colon","initialState":"Data","input":"&there4","inputUtf16":[38,116,104,101,114,101,52],"output":[{"Character":{"data":"&there4"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3824() {
    tokenize(
        r##"{"description":"Named entity: there4; with a semi-colon","initialState":"Data","input":"&there4;","inputUtf16":[38,116,104,101,114,101,52,59],"output":[{"Character":{"data":"‚à¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3825() {
    tokenize(
        r##"{"description":"Bad named entity: therefore without a semi-colon","initialState":"Data","input":"&therefore","inputUtf16":[38,116,104,101,114,101,102,111,114,101],"output":[{"Character":{"data":"&therefore"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3826() {
    tokenize(
        r##"{"description":"Named entity: therefore; with a semi-colon","initialState":"Data","input":"&therefore;","inputUtf16":[38,116,104,101,114,101,102,111,114,101,59],"output":[{"Character":{"data":"‚à¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3827() {
    tokenize(
        r##"{"description":"Bad named entity: theta without a semi-colon","initialState":"Data","input":"&theta","inputUtf16":[38,116,104,101,116,97],"output":[{"Character":{"data":"&theta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3828() {
    tokenize(
        r##"{"description":"Named entity: theta; with a semi-colon","initialState":"Data","input":"&theta;","inputUtf16":[38,116,104,101,116,97,59],"output":[{"Character":{"data":"Œ∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3829() {
    tokenize(
        r##"{"description":"Bad named entity: thetasym without a semi-colon","initialState":"Data","input":"&thetasym","inputUtf16":[38,116,104,101,116,97,115,121,109],"output":[{"Character":{"data":"&thetasym"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3830() {
    tokenize(
        r##"{"description":"Named entity: thetasym; with a semi-colon","initialState":"Data","input":"&thetasym;","inputUtf16":[38,116,104,101,116,97,115,121,109,59],"output":[{"Character":{"data":"œë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3831() {
    tokenize(
        r##"{"description":"Bad named entity: thetav without a semi-colon","initialState":"Data","input":"&thetav","inputUtf16":[38,116,104,101,116,97,118],"output":[{"Character":{"data":"&thetav"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3832() {
    tokenize(
        r##"{"description":"Named entity: thetav; with a semi-colon","initialState":"Data","input":"&thetav;","inputUtf16":[38,116,104,101,116,97,118,59],"output":[{"Character":{"data":"œë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3833() {
    tokenize(
        r##"{"description":"Bad named entity: thickapprox without a semi-colon","initialState":"Data","input":"&thickapprox","inputUtf16":[38,116,104,105,99,107,97,112,112,114,111,120],"output":[{"Character":{"data":"&thickapprox"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3834() {
    tokenize(
        r##"{"description":"Named entity: thickapprox; with a semi-colon","initialState":"Data","input":"&thickapprox;","inputUtf16":[38,116,104,105,99,107,97,112,112,114,111,120,59],"output":[{"Character":{"data":"‚âà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3835() {
    tokenize(
        r##"{"description":"Bad named entity: thicksim without a semi-colon","initialState":"Data","input":"&thicksim","inputUtf16":[38,116,104,105,99,107,115,105,109],"output":[{"Character":{"data":"&thicksim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3836() {
    tokenize(
        r##"{"description":"Named entity: thicksim; with a semi-colon","initialState":"Data","input":"&thicksim;","inputUtf16":[38,116,104,105,99,107,115,105,109,59],"output":[{"Character":{"data":"‚àº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3837() {
    tokenize(
        r##"{"description":"Bad named entity: thinsp without a semi-colon","initialState":"Data","input":"&thinsp","inputUtf16":[38,116,104,105,110,115,112],"output":[{"Character":{"data":"&thinsp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3838() {
    tokenize(
        r##"{"description":"Named entity: thinsp; with a semi-colon","initialState":"Data","input":"&thinsp;","inputUtf16":[38,116,104,105,110,115,112,59],"output":[{"Character":{"data":"‚Äâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3839() {
    tokenize(
        r##"{"description":"Bad named entity: thkap without a semi-colon","initialState":"Data","input":"&thkap","inputUtf16":[38,116,104,107,97,112],"output":[{"Character":{"data":"&thkap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3840() {
    tokenize(
        r##"{"description":"Named entity: thkap; with a semi-colon","initialState":"Data","input":"&thkap;","inputUtf16":[38,116,104,107,97,112,59],"output":[{"Character":{"data":"‚âà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3841() {
    tokenize(
        r##"{"description":"Bad named entity: thksim without a semi-colon","initialState":"Data","input":"&thksim","inputUtf16":[38,116,104,107,115,105,109],"output":[{"Character":{"data":"&thksim"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3842() {
    tokenize(
        r##"{"description":"Named entity: thksim; with a semi-colon","initialState":"Data","input":"&thksim;","inputUtf16":[38,116,104,107,115,105,109,59],"output":[{"Character":{"data":"‚àº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3843() {
    tokenize(
        r##"{"description":"Named entity: thorn without a semi-colon","initialState":"Data","input":"&thorn","inputUtf16":[38,116,104,111,114,110],"output":[{"Character":{"data":"√æ"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_3844() {
    tokenize(
        r##"{"description":"Named entity: thorn; with a semi-colon","initialState":"Data","input":"&thorn;","inputUtf16":[38,116,104,111,114,110,59],"output":[{"Character":{"data":"√æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3845() {
    tokenize(
        r##"{"description":"Bad named entity: tilde without a semi-colon","initialState":"Data","input":"&tilde","inputUtf16":[38,116,105,108,100,101],"output":[{"Character":{"data":"&tilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3846() {
    tokenize(
        r##"{"description":"Named entity: tilde; with a semi-colon","initialState":"Data","input":"&tilde;","inputUtf16":[38,116,105,108,100,101,59],"output":[{"Character":{"data":"Àú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3847() {
    tokenize(
        r##"{"description":"Named entity: times without a semi-colon","initialState":"Data","input":"&times","inputUtf16":[38,116,105,109,101,115],"output":[{"Character":{"data":"√ó"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_3848() {
    tokenize(
        r##"{"description":"Named entity: times; with a semi-colon","initialState":"Data","input":"&times;","inputUtf16":[38,116,105,109,101,115,59],"output":[{"Character":{"data":"√ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3849() {
    tokenize(
        r##"{"description":"Named entity: timesb; with a semi-colon","initialState":"Data","input":"&timesb;","inputUtf16":[38,116,105,109,101,115,98,59],"output":[{"Character":{"data":"‚ä†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3850() {
    tokenize(
        r##"{"description":"Named entity: timesbar; with a semi-colon","initialState":"Data","input":"&timesbar;","inputUtf16":[38,116,105,109,101,115,98,97,114,59],"output":[{"Character":{"data":"‚®±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3851() {
    tokenize(
        r##"{"description":"Named entity: timesd; with a semi-colon","initialState":"Data","input":"&timesd;","inputUtf16":[38,116,105,109,101,115,100,59],"output":[{"Character":{"data":"‚®∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3852() {
    tokenize(
        r##"{"description":"Bad named entity: tint without a semi-colon","initialState":"Data","input":"&tint","inputUtf16":[38,116,105,110,116],"output":[{"Character":{"data":"&tint"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3853() {
    tokenize(
        r##"{"description":"Named entity: tint; with a semi-colon","initialState":"Data","input":"&tint;","inputUtf16":[38,116,105,110,116,59],"output":[{"Character":{"data":"‚à≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3854() {
    tokenize(
        r##"{"description":"Bad named entity: toea without a semi-colon","initialState":"Data","input":"&toea","inputUtf16":[38,116,111,101,97],"output":[{"Character":{"data":"&toea"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3855() {
    tokenize(
        r##"{"description":"Named entity: toea; with a semi-colon","initialState":"Data","input":"&toea;","inputUtf16":[38,116,111,101,97,59],"output":[{"Character":{"data":"‚§®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3856() {
    tokenize(
        r##"{"description":"Bad named entity: top without a semi-colon","initialState":"Data","input":"&top","inputUtf16":[38,116,111,112],"output":[{"Character":{"data":"&top"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3857() {
    tokenize(
        r##"{"description":"Named entity: top; with a semi-colon","initialState":"Data","input":"&top;","inputUtf16":[38,116,111,112,59],"output":[{"Character":{"data":"‚ä§"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3858() {
    tokenize(
        r##"{"description":"Bad named entity: topbot without a semi-colon","initialState":"Data","input":"&topbot","inputUtf16":[38,116,111,112,98,111,116],"output":[{"Character":{"data":"&topbot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3859() {
    tokenize(
        r##"{"description":"Named entity: topbot; with a semi-colon","initialState":"Data","input":"&topbot;","inputUtf16":[38,116,111,112,98,111,116,59],"output":[{"Character":{"data":"‚å∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3860() {
    tokenize(
        r##"{"description":"Bad named entity: topcir without a semi-colon","initialState":"Data","input":"&topcir","inputUtf16":[38,116,111,112,99,105,114],"output":[{"Character":{"data":"&topcir"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3861() {
    tokenize(
        r##"{"description":"Named entity: topcir; with a semi-colon","initialState":"Data","input":"&topcir;","inputUtf16":[38,116,111,112,99,105,114,59],"output":[{"Character":{"data":"‚´±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3862() {
    tokenize(
        r##"{"description":"Bad named entity: topf without a semi-colon","initialState":"Data","input":"&topf","inputUtf16":[38,116,111,112,102],"output":[{"Character":{"data":"&topf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3863() {
    tokenize(
        r##"{"description":"Named entity: topf; with a semi-colon","initialState":"Data","input":"&topf;","inputUtf16":[38,116,111,112,102,59],"output":[{"Character":{"data":"ùï•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3864() {
    tokenize(
        r##"{"description":"Bad named entity: topfork without a semi-colon","initialState":"Data","input":"&topfork","inputUtf16":[38,116,111,112,102,111,114,107],"output":[{"Character":{"data":"&topfork"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3865() {
    tokenize(
        r##"{"description":"Named entity: topfork; with a semi-colon","initialState":"Data","input":"&topfork;","inputUtf16":[38,116,111,112,102,111,114,107,59],"output":[{"Character":{"data":"‚´ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3866() {
    tokenize(
        r##"{"description":"Bad named entity: tosa without a semi-colon","initialState":"Data","input":"&tosa","inputUtf16":[38,116,111,115,97],"output":[{"Character":{"data":"&tosa"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3867() {
    tokenize(
        r##"{"description":"Named entity: tosa; with a semi-colon","initialState":"Data","input":"&tosa;","inputUtf16":[38,116,111,115,97,59],"output":[{"Character":{"data":"‚§©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3868() {
    tokenize(
        r##"{"description":"Bad named entity: tprime without a semi-colon","initialState":"Data","input":"&tprime","inputUtf16":[38,116,112,114,105,109,101],"output":[{"Character":{"data":"&tprime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3869() {
    tokenize(
        r##"{"description":"Named entity: tprime; with a semi-colon","initialState":"Data","input":"&tprime;","inputUtf16":[38,116,112,114,105,109,101,59],"output":[{"Character":{"data":"‚Ä¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3870() {
    tokenize(
        r##"{"description":"Bad named entity: trade without a semi-colon","initialState":"Data","input":"&trade","inputUtf16":[38,116,114,97,100,101],"output":[{"Character":{"data":"&trade"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3871() {
    tokenize(
        r##"{"description":"Named entity: trade; with a semi-colon","initialState":"Data","input":"&trade;","inputUtf16":[38,116,114,97,100,101,59],"output":[{"Character":{"data":"‚Ñ¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3872() {
    tokenize(
        r##"{"description":"Bad named entity: triangle without a semi-colon","initialState":"Data","input":"&triangle","inputUtf16":[38,116,114,105,97,110,103,108,101],"output":[{"Character":{"data":"&triangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3873() {
    tokenize(
        r##"{"description":"Named entity: triangle; with a semi-colon","initialState":"Data","input":"&triangle;","inputUtf16":[38,116,114,105,97,110,103,108,101,59],"output":[{"Character":{"data":"‚ñµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3874() {
    tokenize(
        r##"{"description":"Bad named entity: triangledown without a semi-colon","initialState":"Data","input":"&triangledown","inputUtf16":[38,116,114,105,97,110,103,108,101,100,111,119,110],"output":[{"Character":{"data":"&triangledown"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3875() {
    tokenize(
        r##"{"description":"Named entity: triangledown; with a semi-colon","initialState":"Data","input":"&triangledown;","inputUtf16":[38,116,114,105,97,110,103,108,101,100,111,119,110,59],"output":[{"Character":{"data":"‚ñø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3876() {
    tokenize(
        r##"{"description":"Bad named entity: triangleleft without a semi-colon","initialState":"Data","input":"&triangleleft","inputUtf16":[38,116,114,105,97,110,103,108,101,108,101,102,116],"output":[{"Character":{"data":"&triangleleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3877() {
    tokenize(
        r##"{"description":"Named entity: triangleleft; with a semi-colon","initialState":"Data","input":"&triangleleft;","inputUtf16":[38,116,114,105,97,110,103,108,101,108,101,102,116,59],"output":[{"Character":{"data":"‚óÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3878() {
    tokenize(
        r##"{"description":"Bad named entity: trianglelefteq without a semi-colon","initialState":"Data","input":"&trianglelefteq","inputUtf16":[38,116,114,105,97,110,103,108,101,108,101,102,116,101,113],"output":[{"Character":{"data":"&trianglelefteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3879() {
    tokenize(
        r##"{"description":"Named entity: trianglelefteq; with a semi-colon","initialState":"Data","input":"&trianglelefteq;","inputUtf16":[38,116,114,105,97,110,103,108,101,108,101,102,116,101,113,59],"output":[{"Character":{"data":"‚ä¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3880() {
    tokenize(
        r##"{"description":"Bad named entity: triangleq without a semi-colon","initialState":"Data","input":"&triangleq","inputUtf16":[38,116,114,105,97,110,103,108,101,113],"output":[{"Character":{"data":"&triangleq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3881() {
    tokenize(
        r##"{"description":"Named entity: triangleq; with a semi-colon","initialState":"Data","input":"&triangleq;","inputUtf16":[38,116,114,105,97,110,103,108,101,113,59],"output":[{"Character":{"data":"‚âú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3882() {
    tokenize(
        r##"{"description":"Bad named entity: triangleright without a semi-colon","initialState":"Data","input":"&triangleright","inputUtf16":[38,116,114,105,97,110,103,108,101,114,105,103,104,116],"output":[{"Character":{"data":"&triangleright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3883() {
    tokenize(
        r##"{"description":"Named entity: triangleright; with a semi-colon","initialState":"Data","input":"&triangleright;","inputUtf16":[38,116,114,105,97,110,103,108,101,114,105,103,104,116,59],"output":[{"Character":{"data":"‚ñπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3884() {
    tokenize(
        r##"{"description":"Bad named entity: trianglerighteq without a semi-colon","initialState":"Data","input":"&trianglerighteq","inputUtf16":[38,116,114,105,97,110,103,108,101,114,105,103,104,116,101,113],"output":[{"Character":{"data":"&trianglerighteq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3885() {
    tokenize(
        r##"{"description":"Named entity: trianglerighteq; with a semi-colon","initialState":"Data","input":"&trianglerighteq;","inputUtf16":[38,116,114,105,97,110,103,108,101,114,105,103,104,116,101,113,59],"output":[{"Character":{"data":"‚äµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3886() {
    tokenize(
        r##"{"description":"Bad named entity: tridot without a semi-colon","initialState":"Data","input":"&tridot","inputUtf16":[38,116,114,105,100,111,116],"output":[{"Character":{"data":"&tridot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3887() {
    tokenize(
        r##"{"description":"Named entity: tridot; with a semi-colon","initialState":"Data","input":"&tridot;","inputUtf16":[38,116,114,105,100,111,116,59],"output":[{"Character":{"data":"‚ó¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3888() {
    tokenize(
        r##"{"description":"Bad named entity: trie without a semi-colon","initialState":"Data","input":"&trie","inputUtf16":[38,116,114,105,101],"output":[{"Character":{"data":"&trie"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3889() {
    tokenize(
        r##"{"description":"Named entity: trie; with a semi-colon","initialState":"Data","input":"&trie;","inputUtf16":[38,116,114,105,101,59],"output":[{"Character":{"data":"‚âú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3890() {
    tokenize(
        r##"{"description":"Bad named entity: triminus without a semi-colon","initialState":"Data","input":"&triminus","inputUtf16":[38,116,114,105,109,105,110,117,115],"output":[{"Character":{"data":"&triminus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3891() {
    tokenize(
        r##"{"description":"Named entity: triminus; with a semi-colon","initialState":"Data","input":"&triminus;","inputUtf16":[38,116,114,105,109,105,110,117,115,59],"output":[{"Character":{"data":"‚®∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3892() {
    tokenize(
        r##"{"description":"Bad named entity: triplus without a semi-colon","initialState":"Data","input":"&triplus","inputUtf16":[38,116,114,105,112,108,117,115],"output":[{"Character":{"data":"&triplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3893() {
    tokenize(
        r##"{"description":"Named entity: triplus; with a semi-colon","initialState":"Data","input":"&triplus;","inputUtf16":[38,116,114,105,112,108,117,115,59],"output":[{"Character":{"data":"‚®π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3894() {
    tokenize(
        r##"{"description":"Bad named entity: trisb without a semi-colon","initialState":"Data","input":"&trisb","inputUtf16":[38,116,114,105,115,98],"output":[{"Character":{"data":"&trisb"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3895() {
    tokenize(
        r##"{"description":"Named entity: trisb; with a semi-colon","initialState":"Data","input":"&trisb;","inputUtf16":[38,116,114,105,115,98,59],"output":[{"Character":{"data":"‚ßç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3896() {
    tokenize(
        r##"{"description":"Bad named entity: tritime without a semi-colon","initialState":"Data","input":"&tritime","inputUtf16":[38,116,114,105,116,105,109,101],"output":[{"Character":{"data":"&tritime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3897() {
    tokenize(
        r##"{"description":"Named entity: tritime; with a semi-colon","initialState":"Data","input":"&tritime;","inputUtf16":[38,116,114,105,116,105,109,101,59],"output":[{"Character":{"data":"‚®ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3898() {
    tokenize(
        r##"{"description":"Bad named entity: trpezium without a semi-colon","initialState":"Data","input":"&trpezium","inputUtf16":[38,116,114,112,101,122,105,117,109],"output":[{"Character":{"data":"&trpezium"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3899() {
    tokenize(
        r##"{"description":"Named entity: trpezium; with a semi-colon","initialState":"Data","input":"&trpezium;","inputUtf16":[38,116,114,112,101,122,105,117,109,59],"output":[{"Character":{"data":"‚è¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3900() {
    tokenize(
        r##"{"description":"Bad named entity: tscr without a semi-colon","initialState":"Data","input":"&tscr","inputUtf16":[38,116,115,99,114],"output":[{"Character":{"data":"&tscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3901() {
    tokenize(
        r##"{"description":"Named entity: tscr; with a semi-colon","initialState":"Data","input":"&tscr;","inputUtf16":[38,116,115,99,114,59],"output":[{"Character":{"data":"ùìâ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3902() {
    tokenize(
        r##"{"description":"Bad named entity: tscy without a semi-colon","initialState":"Data","input":"&tscy","inputUtf16":[38,116,115,99,121],"output":[{"Character":{"data":"&tscy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3903() {
    tokenize(
        r##"{"description":"Named entity: tscy; with a semi-colon","initialState":"Data","input":"&tscy;","inputUtf16":[38,116,115,99,121,59],"output":[{"Character":{"data":"—Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3904() {
    tokenize(
        r##"{"description":"Bad named entity: tshcy without a semi-colon","initialState":"Data","input":"&tshcy","inputUtf16":[38,116,115,104,99,121],"output":[{"Character":{"data":"&tshcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3905() {
    tokenize(
        r##"{"description":"Named entity: tshcy; with a semi-colon","initialState":"Data","input":"&tshcy;","inputUtf16":[38,116,115,104,99,121,59],"output":[{"Character":{"data":"—õ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3906() {
    tokenize(
        r##"{"description":"Bad named entity: tstrok without a semi-colon","initialState":"Data","input":"&tstrok","inputUtf16":[38,116,115,116,114,111,107],"output":[{"Character":{"data":"&tstrok"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3907() {
    tokenize(
        r##"{"description":"Named entity: tstrok; with a semi-colon","initialState":"Data","input":"&tstrok;","inputUtf16":[38,116,115,116,114,111,107,59],"output":[{"Character":{"data":"≈ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3908() {
    tokenize(
        r##"{"description":"Bad named entity: twixt without a semi-colon","initialState":"Data","input":"&twixt","inputUtf16":[38,116,119,105,120,116],"output":[{"Character":{"data":"&twixt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3909() {
    tokenize(
        r##"{"description":"Named entity: twixt; with a semi-colon","initialState":"Data","input":"&twixt;","inputUtf16":[38,116,119,105,120,116,59],"output":[{"Character":{"data":"‚â¨"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3910() {
    tokenize(
        r##"{"description":"Bad named entity: twoheadleftarrow without a semi-colon","initialState":"Data","input":"&twoheadleftarrow","inputUtf16":[38,116,119,111,104,101,97,100,108,101,102,116,97,114,114,111,119],"output":[{"Character":{"data":"&twoheadleftarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3911() {
    tokenize(
        r##"{"description":"Named entity: twoheadleftarrow; with a semi-colon","initialState":"Data","input":"&twoheadleftarrow;","inputUtf16":[38,116,119,111,104,101,97,100,108,101,102,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üû"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3912() {
    tokenize(
        r##"{"description":"Bad named entity: twoheadrightarrow without a semi-colon","initialState":"Data","input":"&twoheadrightarrow","inputUtf16":[38,116,119,111,104,101,97,100,114,105,103,104,116,97,114,114,111,119],"output":[{"Character":{"data":"&twoheadrightarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3913() {
    tokenize(
        r##"{"description":"Named entity: twoheadrightarrow; with a semi-colon","initialState":"Data","input":"&twoheadrightarrow;","inputUtf16":[38,116,119,111,104,101,97,100,114,105,103,104,116,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Ü†"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3914() {
    tokenize(
        r##"{"description":"Bad named entity: uArr without a semi-colon","initialState":"Data","input":"&uArr","inputUtf16":[38,117,65,114,114],"output":[{"Character":{"data":"&uArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3915() {
    tokenize(
        r##"{"description":"Named entity: uArr; with a semi-colon","initialState":"Data","input":"&uArr;","inputUtf16":[38,117,65,114,114,59],"output":[{"Character":{"data":"‚áë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3916() {
    tokenize(
        r##"{"description":"Bad named entity: uHar without a semi-colon","initialState":"Data","input":"&uHar","inputUtf16":[38,117,72,97,114],"output":[{"Character":{"data":"&uHar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3917() {
    tokenize(
        r##"{"description":"Named entity: uHar; with a semi-colon","initialState":"Data","input":"&uHar;","inputUtf16":[38,117,72,97,114,59],"output":[{"Character":{"data":"‚•£"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3918() {
    tokenize(
        r##"{"description":"Named entity: uacute without a semi-colon","initialState":"Data","input":"&uacute","inputUtf16":[38,117,97,99,117,116,101],"output":[{"Character":{"data":"√∫"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_3919() {
    tokenize(
        r##"{"description":"Named entity: uacute; with a semi-colon","initialState":"Data","input":"&uacute;","inputUtf16":[38,117,97,99,117,116,101,59],"output":[{"Character":{"data":"√∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3920() {
    tokenize(
        r##"{"description":"Bad named entity: uarr without a semi-colon","initialState":"Data","input":"&uarr","inputUtf16":[38,117,97,114,114],"output":[{"Character":{"data":"&uarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3921() {
    tokenize(
        r##"{"description":"Named entity: uarr; with a semi-colon","initialState":"Data","input":"&uarr;","inputUtf16":[38,117,97,114,114,59],"output":[{"Character":{"data":"‚Üë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3922() {
    tokenize(
        r##"{"description":"Bad named entity: ubrcy without a semi-colon","initialState":"Data","input":"&ubrcy","inputUtf16":[38,117,98,114,99,121],"output":[{"Character":{"data":"&ubrcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3923() {
    tokenize(
        r##"{"description":"Named entity: ubrcy; with a semi-colon","initialState":"Data","input":"&ubrcy;","inputUtf16":[38,117,98,114,99,121,59],"output":[{"Character":{"data":"—û"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3924() {
    tokenize(
        r##"{"description":"Bad named entity: ubreve without a semi-colon","initialState":"Data","input":"&ubreve","inputUtf16":[38,117,98,114,101,118,101],"output":[{"Character":{"data":"&ubreve"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3925() {
    tokenize(
        r##"{"description":"Named entity: ubreve; with a semi-colon","initialState":"Data","input":"&ubreve;","inputUtf16":[38,117,98,114,101,118,101,59],"output":[{"Character":{"data":"≈≠"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3926() {
    tokenize(
        r##"{"description":"Named entity: ucirc without a semi-colon","initialState":"Data","input":"&ucirc","inputUtf16":[38,117,99,105,114,99],"output":[{"Character":{"data":"√ª"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":7}}]}"##,
    );
}

#[test]
fn test_3927() {
    tokenize(
        r##"{"description":"Named entity: ucirc; with a semi-colon","initialState":"Data","input":"&ucirc;","inputUtf16":[38,117,99,105,114,99,59],"output":[{"Character":{"data":"√ª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3928() {
    tokenize(
        r##"{"description":"Bad named entity: ucy without a semi-colon","initialState":"Data","input":"&ucy","inputUtf16":[38,117,99,121],"output":[{"Character":{"data":"&ucy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3929() {
    tokenize(
        r##"{"description":"Named entity: ucy; with a semi-colon","initialState":"Data","input":"&ucy;","inputUtf16":[38,117,99,121,59],"output":[{"Character":{"data":"—É"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3930() {
    tokenize(
        r##"{"description":"Bad named entity: udarr without a semi-colon","initialState":"Data","input":"&udarr","inputUtf16":[38,117,100,97,114,114],"output":[{"Character":{"data":"&udarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3931() {
    tokenize(
        r##"{"description":"Named entity: udarr; with a semi-colon","initialState":"Data","input":"&udarr;","inputUtf16":[38,117,100,97,114,114,59],"output":[{"Character":{"data":"‚áÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3932() {
    tokenize(
        r##"{"description":"Bad named entity: udblac without a semi-colon","initialState":"Data","input":"&udblac","inputUtf16":[38,117,100,98,108,97,99],"output":[{"Character":{"data":"&udblac"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3933() {
    tokenize(
        r##"{"description":"Named entity: udblac; with a semi-colon","initialState":"Data","input":"&udblac;","inputUtf16":[38,117,100,98,108,97,99,59],"output":[{"Character":{"data":"≈±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3934() {
    tokenize(
        r##"{"description":"Bad named entity: udhar without a semi-colon","initialState":"Data","input":"&udhar","inputUtf16":[38,117,100,104,97,114],"output":[{"Character":{"data":"&udhar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3935() {
    tokenize(
        r##"{"description":"Named entity: udhar; with a semi-colon","initialState":"Data","input":"&udhar;","inputUtf16":[38,117,100,104,97,114,59],"output":[{"Character":{"data":"‚•Æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3936() {
    tokenize(
        r##"{"description":"Bad named entity: ufisht without a semi-colon","initialState":"Data","input":"&ufisht","inputUtf16":[38,117,102,105,115,104,116],"output":[{"Character":{"data":"&ufisht"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3937() {
    tokenize(
        r##"{"description":"Named entity: ufisht; with a semi-colon","initialState":"Data","input":"&ufisht;","inputUtf16":[38,117,102,105,115,104,116,59],"output":[{"Character":{"data":"‚•æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3938() {
    tokenize(
        r##"{"description":"Bad named entity: ufr without a semi-colon","initialState":"Data","input":"&ufr","inputUtf16":[38,117,102,114],"output":[{"Character":{"data":"&ufr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3939() {
    tokenize(
        r##"{"description":"Named entity: ufr; with a semi-colon","initialState":"Data","input":"&ufr;","inputUtf16":[38,117,102,114,59],"output":[{"Character":{"data":"ùî≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3940() {
    tokenize(
        r##"{"description":"Named entity: ugrave without a semi-colon","initialState":"Data","input":"&ugrave","inputUtf16":[38,117,103,114,97,118,101],"output":[{"Character":{"data":"√π"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_3941() {
    tokenize(
        r##"{"description":"Named entity: ugrave; with a semi-colon","initialState":"Data","input":"&ugrave;","inputUtf16":[38,117,103,114,97,118,101,59],"output":[{"Character":{"data":"√π"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3942() {
    tokenize(
        r##"{"description":"Bad named entity: uharl without a semi-colon","initialState":"Data","input":"&uharl","inputUtf16":[38,117,104,97,114,108],"output":[{"Character":{"data":"&uharl"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3943() {
    tokenize(
        r##"{"description":"Named entity: uharl; with a semi-colon","initialState":"Data","input":"&uharl;","inputUtf16":[38,117,104,97,114,108,59],"output":[{"Character":{"data":"‚Üø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3944() {
    tokenize(
        r##"{"description":"Bad named entity: uharr without a semi-colon","initialState":"Data","input":"&uharr","inputUtf16":[38,117,104,97,114,114],"output":[{"Character":{"data":"&uharr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3945() {
    tokenize(
        r##"{"description":"Named entity: uharr; with a semi-colon","initialState":"Data","input":"&uharr;","inputUtf16":[38,117,104,97,114,114,59],"output":[{"Character":{"data":"‚Üæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3946() {
    tokenize(
        r##"{"description":"Bad named entity: uhblk without a semi-colon","initialState":"Data","input":"&uhblk","inputUtf16":[38,117,104,98,108,107],"output":[{"Character":{"data":"&uhblk"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3947() {
    tokenize(
        r##"{"description":"Named entity: uhblk; with a semi-colon","initialState":"Data","input":"&uhblk;","inputUtf16":[38,117,104,98,108,107,59],"output":[{"Character":{"data":"‚ñÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3948() {
    tokenize(
        r##"{"description":"Bad named entity: ulcorn without a semi-colon","initialState":"Data","input":"&ulcorn","inputUtf16":[38,117,108,99,111,114,110],"output":[{"Character":{"data":"&ulcorn"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3949() {
    tokenize(
        r##"{"description":"Named entity: ulcorn; with a semi-colon","initialState":"Data","input":"&ulcorn;","inputUtf16":[38,117,108,99,111,114,110,59],"output":[{"Character":{"data":"‚åú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3950() {
    tokenize(
        r##"{"description":"Bad named entity: ulcorner without a semi-colon","initialState":"Data","input":"&ulcorner","inputUtf16":[38,117,108,99,111,114,110,101,114],"output":[{"Character":{"data":"&ulcorner"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3951() {
    tokenize(
        r##"{"description":"Named entity: ulcorner; with a semi-colon","initialState":"Data","input":"&ulcorner;","inputUtf16":[38,117,108,99,111,114,110,101,114,59],"output":[{"Character":{"data":"‚åú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3952() {
    tokenize(
        r##"{"description":"Bad named entity: ulcrop without a semi-colon","initialState":"Data","input":"&ulcrop","inputUtf16":[38,117,108,99,114,111,112],"output":[{"Character":{"data":"&ulcrop"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3953() {
    tokenize(
        r##"{"description":"Named entity: ulcrop; with a semi-colon","initialState":"Data","input":"&ulcrop;","inputUtf16":[38,117,108,99,114,111,112,59],"output":[{"Character":{"data":"‚åè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3954() {
    tokenize(
        r##"{"description":"Bad named entity: ultri without a semi-colon","initialState":"Data","input":"&ultri","inputUtf16":[38,117,108,116,114,105],"output":[{"Character":{"data":"&ultri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3955() {
    tokenize(
        r##"{"description":"Named entity: ultri; with a semi-colon","initialState":"Data","input":"&ultri;","inputUtf16":[38,117,108,116,114,105,59],"output":[{"Character":{"data":"‚ó∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3956() {
    tokenize(
        r##"{"description":"Bad named entity: umacr without a semi-colon","initialState":"Data","input":"&umacr","inputUtf16":[38,117,109,97,99,114],"output":[{"Character":{"data":"&umacr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3957() {
    tokenize(
        r##"{"description":"Named entity: umacr; with a semi-colon","initialState":"Data","input":"&umacr;","inputUtf16":[38,117,109,97,99,114,59],"output":[{"Character":{"data":"≈´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3958() {
    tokenize(
        r##"{"description":"Named entity: uml without a semi-colon","initialState":"Data","input":"&uml","inputUtf16":[38,117,109,108],"output":[{"Character":{"data":"¬®"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_3959() {
    tokenize(
        r##"{"description":"Named entity: uml; with a semi-colon","initialState":"Data","input":"&uml;","inputUtf16":[38,117,109,108,59],"output":[{"Character":{"data":"¬®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3960() {
    tokenize(
        r##"{"description":"Bad named entity: uogon without a semi-colon","initialState":"Data","input":"&uogon","inputUtf16":[38,117,111,103,111,110],"output":[{"Character":{"data":"&uogon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3961() {
    tokenize(
        r##"{"description":"Named entity: uogon; with a semi-colon","initialState":"Data","input":"&uogon;","inputUtf16":[38,117,111,103,111,110,59],"output":[{"Character":{"data":"≈≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3962() {
    tokenize(
        r##"{"description":"Bad named entity: uopf without a semi-colon","initialState":"Data","input":"&uopf","inputUtf16":[38,117,111,112,102],"output":[{"Character":{"data":"&uopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3963() {
    tokenize(
        r##"{"description":"Named entity: uopf; with a semi-colon","initialState":"Data","input":"&uopf;","inputUtf16":[38,117,111,112,102,59],"output":[{"Character":{"data":"ùï¶"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3964() {
    tokenize(
        r##"{"description":"Bad named entity: uparrow without a semi-colon","initialState":"Data","input":"&uparrow","inputUtf16":[38,117,112,97,114,114,111,119],"output":[{"Character":{"data":"&uparrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3965() {
    tokenize(
        r##"{"description":"Named entity: uparrow; with a semi-colon","initialState":"Data","input":"&uparrow;","inputUtf16":[38,117,112,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3966() {
    tokenize(
        r##"{"description":"Bad named entity: updownarrow without a semi-colon","initialState":"Data","input":"&updownarrow","inputUtf16":[38,117,112,100,111,119,110,97,114,114,111,119],"output":[{"Character":{"data":"&updownarrow"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3967() {
    tokenize(
        r##"{"description":"Named entity: updownarrow; with a semi-colon","initialState":"Data","input":"&updownarrow;","inputUtf16":[38,117,112,100,111,119,110,97,114,114,111,119,59],"output":[{"Character":{"data":"‚Üï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3968() {
    tokenize(
        r##"{"description":"Bad named entity: upharpoonleft without a semi-colon","initialState":"Data","input":"&upharpoonleft","inputUtf16":[38,117,112,104,97,114,112,111,111,110,108,101,102,116],"output":[{"Character":{"data":"&upharpoonleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3969() {
    tokenize(
        r##"{"description":"Named entity: upharpoonleft; with a semi-colon","initialState":"Data","input":"&upharpoonleft;","inputUtf16":[38,117,112,104,97,114,112,111,111,110,108,101,102,116,59],"output":[{"Character":{"data":"‚Üø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3970() {
    tokenize(
        r##"{"description":"Bad named entity: upharpoonright without a semi-colon","initialState":"Data","input":"&upharpoonright","inputUtf16":[38,117,112,104,97,114,112,111,111,110,114,105,103,104,116],"output":[{"Character":{"data":"&upharpoonright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3971() {
    tokenize(
        r##"{"description":"Named entity: upharpoonright; with a semi-colon","initialState":"Data","input":"&upharpoonright;","inputUtf16":[38,117,112,104,97,114,112,111,111,110,114,105,103,104,116,59],"output":[{"Character":{"data":"‚Üæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3972() {
    tokenize(
        r##"{"description":"Bad named entity: uplus without a semi-colon","initialState":"Data","input":"&uplus","inputUtf16":[38,117,112,108,117,115],"output":[{"Character":{"data":"&uplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3973() {
    tokenize(
        r##"{"description":"Named entity: uplus; with a semi-colon","initialState":"Data","input":"&uplus;","inputUtf16":[38,117,112,108,117,115,59],"output":[{"Character":{"data":"‚äé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3974() {
    tokenize(
        r##"{"description":"Bad named entity: upsi without a semi-colon","initialState":"Data","input":"&upsi","inputUtf16":[38,117,112,115,105],"output":[{"Character":{"data":"&upsi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3975() {
    tokenize(
        r##"{"description":"Named entity: upsi; with a semi-colon","initialState":"Data","input":"&upsi;","inputUtf16":[38,117,112,115,105,59],"output":[{"Character":{"data":"œÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3976() {
    tokenize(
        r##"{"description":"Bad named entity: upsih without a semi-colon","initialState":"Data","input":"&upsih","inputUtf16":[38,117,112,115,105,104],"output":[{"Character":{"data":"&upsih"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3977() {
    tokenize(
        r##"{"description":"Named entity: upsih; with a semi-colon","initialState":"Data","input":"&upsih;","inputUtf16":[38,117,112,115,105,104,59],"output":[{"Character":{"data":"œí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3978() {
    tokenize(
        r##"{"description":"Bad named entity: upsilon without a semi-colon","initialState":"Data","input":"&upsilon","inputUtf16":[38,117,112,115,105,108,111,110],"output":[{"Character":{"data":"&upsilon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3979() {
    tokenize(
        r##"{"description":"Named entity: upsilon; with a semi-colon","initialState":"Data","input":"&upsilon;","inputUtf16":[38,117,112,115,105,108,111,110,59],"output":[{"Character":{"data":"œÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3980() {
    tokenize(
        r##"{"description":"Bad named entity: upuparrows without a semi-colon","initialState":"Data","input":"&upuparrows","inputUtf16":[38,117,112,117,112,97,114,114,111,119,115],"output":[{"Character":{"data":"&upuparrows"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3981() {
    tokenize(
        r##"{"description":"Named entity: upuparrows; with a semi-colon","initialState":"Data","input":"&upuparrows;","inputUtf16":[38,117,112,117,112,97,114,114,111,119,115,59],"output":[{"Character":{"data":"‚áà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3982() {
    tokenize(
        r##"{"description":"Bad named entity: urcorn without a semi-colon","initialState":"Data","input":"&urcorn","inputUtf16":[38,117,114,99,111,114,110],"output":[{"Character":{"data":"&urcorn"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3983() {
    tokenize(
        r##"{"description":"Named entity: urcorn; with a semi-colon","initialState":"Data","input":"&urcorn;","inputUtf16":[38,117,114,99,111,114,110,59],"output":[{"Character":{"data":"‚åù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3984() {
    tokenize(
        r##"{"description":"Bad named entity: urcorner without a semi-colon","initialState":"Data","input":"&urcorner","inputUtf16":[38,117,114,99,111,114,110,101,114],"output":[{"Character":{"data":"&urcorner"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3985() {
    tokenize(
        r##"{"description":"Named entity: urcorner; with a semi-colon","initialState":"Data","input":"&urcorner;","inputUtf16":[38,117,114,99,111,114,110,101,114,59],"output":[{"Character":{"data":"‚åù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3986() {
    tokenize(
        r##"{"description":"Bad named entity: urcrop without a semi-colon","initialState":"Data","input":"&urcrop","inputUtf16":[38,117,114,99,114,111,112],"output":[{"Character":{"data":"&urcrop"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3987() {
    tokenize(
        r##"{"description":"Named entity: urcrop; with a semi-colon","initialState":"Data","input":"&urcrop;","inputUtf16":[38,117,114,99,114,111,112,59],"output":[{"Character":{"data":"‚åé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3988() {
    tokenize(
        r##"{"description":"Bad named entity: uring without a semi-colon","initialState":"Data","input":"&uring","inputUtf16":[38,117,114,105,110,103],"output":[{"Character":{"data":"&uring"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3989() {
    tokenize(
        r##"{"description":"Named entity: uring; with a semi-colon","initialState":"Data","input":"&uring;","inputUtf16":[38,117,114,105,110,103,59],"output":[{"Character":{"data":"≈Ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3990() {
    tokenize(
        r##"{"description":"Bad named entity: urtri without a semi-colon","initialState":"Data","input":"&urtri","inputUtf16":[38,117,114,116,114,105],"output":[{"Character":{"data":"&urtri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3991() {
    tokenize(
        r##"{"description":"Named entity: urtri; with a semi-colon","initialState":"Data","input":"&urtri;","inputUtf16":[38,117,114,116,114,105,59],"output":[{"Character":{"data":"‚óπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3992() {
    tokenize(
        r##"{"description":"Bad named entity: uscr without a semi-colon","initialState":"Data","input":"&uscr","inputUtf16":[38,117,115,99,114],"output":[{"Character":{"data":"&uscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3993() {
    tokenize(
        r##"{"description":"Named entity: uscr; with a semi-colon","initialState":"Data","input":"&uscr;","inputUtf16":[38,117,115,99,114,59],"output":[{"Character":{"data":"ùìä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3994() {
    tokenize(
        r##"{"description":"Bad named entity: utdot without a semi-colon","initialState":"Data","input":"&utdot","inputUtf16":[38,117,116,100,111,116],"output":[{"Character":{"data":"&utdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3995() {
    tokenize(
        r##"{"description":"Named entity: utdot; with a semi-colon","initialState":"Data","input":"&utdot;","inputUtf16":[38,117,116,100,111,116,59],"output":[{"Character":{"data":"‚ã∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3996() {
    tokenize(
        r##"{"description":"Bad named entity: utilde without a semi-colon","initialState":"Data","input":"&utilde","inputUtf16":[38,117,116,105,108,100,101],"output":[{"Character":{"data":"&utilde"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3997() {
    tokenize(
        r##"{"description":"Named entity: utilde; with a semi-colon","initialState":"Data","input":"&utilde;","inputUtf16":[38,117,116,105,108,100,101,59],"output":[{"Character":{"data":"≈©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3998() {
    tokenize(
        r##"{"description":"Bad named entity: utri without a semi-colon","initialState":"Data","input":"&utri","inputUtf16":[38,117,116,114,105],"output":[{"Character":{"data":"&utri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_3999() {
    tokenize(
        r##"{"description":"Named entity: utri; with a semi-colon","initialState":"Data","input":"&utri;","inputUtf16":[38,117,116,114,105,59],"output":[{"Character":{"data":"‚ñµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4000() {
    tokenize(
        r##"{"description":"Bad named entity: utrif without a semi-colon","initialState":"Data","input":"&utrif","inputUtf16":[38,117,116,114,105,102],"output":[{"Character":{"data":"&utrif"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4001() {
    tokenize(
        r##"{"description":"Named entity: utrif; with a semi-colon","initialState":"Data","input":"&utrif;","inputUtf16":[38,117,116,114,105,102,59],"output":[{"Character":{"data":"‚ñ¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4002() {
    tokenize(
        r##"{"description":"Bad named entity: uuarr without a semi-colon","initialState":"Data","input":"&uuarr","inputUtf16":[38,117,117,97,114,114],"output":[{"Character":{"data":"&uuarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4003() {
    tokenize(
        r##"{"description":"Named entity: uuarr; with a semi-colon","initialState":"Data","input":"&uuarr;","inputUtf16":[38,117,117,97,114,114,59],"output":[{"Character":{"data":"‚áà"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4004() {
    tokenize(
        r##"{"description":"Named entity: uuml without a semi-colon","initialState":"Data","input":"&uuml","inputUtf16":[38,117,117,109,108],"output":[{"Character":{"data":"√º"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_4005() {
    tokenize(
        r##"{"description":"Named entity: uuml; with a semi-colon","initialState":"Data","input":"&uuml;","inputUtf16":[38,117,117,109,108,59],"output":[{"Character":{"data":"√º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4006() {
    tokenize(
        r##"{"description":"Bad named entity: uwangle without a semi-colon","initialState":"Data","input":"&uwangle","inputUtf16":[38,117,119,97,110,103,108,101],"output":[{"Character":{"data":"&uwangle"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4007() {
    tokenize(
        r##"{"description":"Named entity: uwangle; with a semi-colon","initialState":"Data","input":"&uwangle;","inputUtf16":[38,117,119,97,110,103,108,101,59],"output":[{"Character":{"data":"‚¶ß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4008() {
    tokenize(
        r##"{"description":"Bad named entity: vArr without a semi-colon","initialState":"Data","input":"&vArr","inputUtf16":[38,118,65,114,114],"output":[{"Character":{"data":"&vArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4009() {
    tokenize(
        r##"{"description":"Named entity: vArr; with a semi-colon","initialState":"Data","input":"&vArr;","inputUtf16":[38,118,65,114,114,59],"output":[{"Character":{"data":"‚áï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4010() {
    tokenize(
        r##"{"description":"Bad named entity: vBar without a semi-colon","initialState":"Data","input":"&vBar","inputUtf16":[38,118,66,97,114],"output":[{"Character":{"data":"&vBar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4011() {
    tokenize(
        r##"{"description":"Named entity: vBar; with a semi-colon","initialState":"Data","input":"&vBar;","inputUtf16":[38,118,66,97,114,59],"output":[{"Character":{"data":"‚´®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4012() {
    tokenize(
        r##"{"description":"Bad named entity: vBarv without a semi-colon","initialState":"Data","input":"&vBarv","inputUtf16":[38,118,66,97,114,118],"output":[{"Character":{"data":"&vBarv"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4013() {
    tokenize(
        r##"{"description":"Named entity: vBarv; with a semi-colon","initialState":"Data","input":"&vBarv;","inputUtf16":[38,118,66,97,114,118,59],"output":[{"Character":{"data":"‚´©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4014() {
    tokenize(
        r##"{"description":"Bad named entity: vDash without a semi-colon","initialState":"Data","input":"&vDash","inputUtf16":[38,118,68,97,115,104],"output":[{"Character":{"data":"&vDash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4015() {
    tokenize(
        r##"{"description":"Named entity: vDash; with a semi-colon","initialState":"Data","input":"&vDash;","inputUtf16":[38,118,68,97,115,104,59],"output":[{"Character":{"data":"‚ä®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4016() {
    tokenize(
        r##"{"description":"Bad named entity: vangrt without a semi-colon","initialState":"Data","input":"&vangrt","inputUtf16":[38,118,97,110,103,114,116],"output":[{"Character":{"data":"&vangrt"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4017() {
    tokenize(
        r##"{"description":"Named entity: vangrt; with a semi-colon","initialState":"Data","input":"&vangrt;","inputUtf16":[38,118,97,110,103,114,116,59],"output":[{"Character":{"data":"‚¶ú"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4018() {
    tokenize(
        r##"{"description":"Bad named entity: varepsilon without a semi-colon","initialState":"Data","input":"&varepsilon","inputUtf16":[38,118,97,114,101,112,115,105,108,111,110],"output":[{"Character":{"data":"&varepsilon"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4019() {
    tokenize(
        r##"{"description":"Named entity: varepsilon; with a semi-colon","initialState":"Data","input":"&varepsilon;","inputUtf16":[38,118,97,114,101,112,115,105,108,111,110,59],"output":[{"Character":{"data":"œµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4020() {
    tokenize(
        r##"{"description":"Bad named entity: varkappa without a semi-colon","initialState":"Data","input":"&varkappa","inputUtf16":[38,118,97,114,107,97,112,112,97],"output":[{"Character":{"data":"&varkappa"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4021() {
    tokenize(
        r##"{"description":"Named entity: varkappa; with a semi-colon","initialState":"Data","input":"&varkappa;","inputUtf16":[38,118,97,114,107,97,112,112,97,59],"output":[{"Character":{"data":"œ∞"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4022() {
    tokenize(
        r##"{"description":"Bad named entity: varnothing without a semi-colon","initialState":"Data","input":"&varnothing","inputUtf16":[38,118,97,114,110,111,116,104,105,110,103],"output":[{"Character":{"data":"&varnothing"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4023() {
    tokenize(
        r##"{"description":"Named entity: varnothing; with a semi-colon","initialState":"Data","input":"&varnothing;","inputUtf16":[38,118,97,114,110,111,116,104,105,110,103,59],"output":[{"Character":{"data":"‚àÖ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4024() {
    tokenize(
        r##"{"description":"Bad named entity: varphi without a semi-colon","initialState":"Data","input":"&varphi","inputUtf16":[38,118,97,114,112,104,105],"output":[{"Character":{"data":"&varphi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4025() {
    tokenize(
        r##"{"description":"Named entity: varphi; with a semi-colon","initialState":"Data","input":"&varphi;","inputUtf16":[38,118,97,114,112,104,105,59],"output":[{"Character":{"data":"œï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4026() {
    tokenize(
        r##"{"description":"Bad named entity: varpi without a semi-colon","initialState":"Data","input":"&varpi","inputUtf16":[38,118,97,114,112,105],"output":[{"Character":{"data":"&varpi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4027() {
    tokenize(
        r##"{"description":"Named entity: varpi; with a semi-colon","initialState":"Data","input":"&varpi;","inputUtf16":[38,118,97,114,112,105,59],"output":[{"Character":{"data":"œñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4028() {
    tokenize(
        r##"{"description":"Bad named entity: varpropto without a semi-colon","initialState":"Data","input":"&varpropto","inputUtf16":[38,118,97,114,112,114,111,112,116,111],"output":[{"Character":{"data":"&varpropto"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4029() {
    tokenize(
        r##"{"description":"Named entity: varpropto; with a semi-colon","initialState":"Data","input":"&varpropto;","inputUtf16":[38,118,97,114,112,114,111,112,116,111,59],"output":[{"Character":{"data":"‚àù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4030() {
    tokenize(
        r##"{"description":"Bad named entity: varr without a semi-colon","initialState":"Data","input":"&varr","inputUtf16":[38,118,97,114,114],"output":[{"Character":{"data":"&varr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4031() {
    tokenize(
        r##"{"description":"Named entity: varr; with a semi-colon","initialState":"Data","input":"&varr;","inputUtf16":[38,118,97,114,114,59],"output":[{"Character":{"data":"‚Üï"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4032() {
    tokenize(
        r##"{"description":"Bad named entity: varrho without a semi-colon","initialState":"Data","input":"&varrho","inputUtf16":[38,118,97,114,114,104,111],"output":[{"Character":{"data":"&varrho"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4033() {
    tokenize(
        r##"{"description":"Named entity: varrho; with a semi-colon","initialState":"Data","input":"&varrho;","inputUtf16":[38,118,97,114,114,104,111,59],"output":[{"Character":{"data":"œ±"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4034() {
    tokenize(
        r##"{"description":"Bad named entity: varsigma without a semi-colon","initialState":"Data","input":"&varsigma","inputUtf16":[38,118,97,114,115,105,103,109,97],"output":[{"Character":{"data":"&varsigma"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4035() {
    tokenize(
        r##"{"description":"Named entity: varsigma; with a semi-colon","initialState":"Data","input":"&varsigma;","inputUtf16":[38,118,97,114,115,105,103,109,97,59],"output":[{"Character":{"data":"œÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4036() {
    tokenize(
        r##"{"description":"Bad named entity: varsubsetneq without a semi-colon","initialState":"Data","input":"&varsubsetneq","inputUtf16":[38,118,97,114,115,117,98,115,101,116,110,101,113],"output":[{"Character":{"data":"&varsubsetneq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4037() {
    tokenize(
        r##"{"description":"Named entity: varsubsetneq; with a semi-colon","initialState":"Data","input":"&varsubsetneq;","inputUtf16":[38,118,97,114,115,117,98,115,101,116,110,101,113,59],"output":[{"Character":{"data":"‚ääÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4038() {
    tokenize(
        r##"{"description":"Bad named entity: varsubsetneqq without a semi-colon","initialState":"Data","input":"&varsubsetneqq","inputUtf16":[38,118,97,114,115,117,98,115,101,116,110,101,113,113],"output":[{"Character":{"data":"&varsubsetneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4039() {
    tokenize(
        r##"{"description":"Named entity: varsubsetneqq; with a semi-colon","initialState":"Data","input":"&varsubsetneqq;","inputUtf16":[38,118,97,114,115,117,98,115,101,116,110,101,113,113,59],"output":[{"Character":{"data":"‚´ãÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4040() {
    tokenize(
        r##"{"description":"Bad named entity: varsupsetneq without a semi-colon","initialState":"Data","input":"&varsupsetneq","inputUtf16":[38,118,97,114,115,117,112,115,101,116,110,101,113],"output":[{"Character":{"data":"&varsupsetneq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4041() {
    tokenize(
        r##"{"description":"Named entity: varsupsetneq; with a semi-colon","initialState":"Data","input":"&varsupsetneq;","inputUtf16":[38,118,97,114,115,117,112,115,101,116,110,101,113,59],"output":[{"Character":{"data":"‚äãÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4042() {
    tokenize(
        r##"{"description":"Bad named entity: varsupsetneqq without a semi-colon","initialState":"Data","input":"&varsupsetneqq","inputUtf16":[38,118,97,114,115,117,112,115,101,116,110,101,113,113],"output":[{"Character":{"data":"&varsupsetneqq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4043() {
    tokenize(
        r##"{"description":"Named entity: varsupsetneqq; with a semi-colon","initialState":"Data","input":"&varsupsetneqq;","inputUtf16":[38,118,97,114,115,117,112,115,101,116,110,101,113,113,59],"output":[{"Character":{"data":"‚´åÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4044() {
    tokenize(
        r##"{"description":"Bad named entity: vartheta without a semi-colon","initialState":"Data","input":"&vartheta","inputUtf16":[38,118,97,114,116,104,101,116,97],"output":[{"Character":{"data":"&vartheta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4045() {
    tokenize(
        r##"{"description":"Named entity: vartheta; with a semi-colon","initialState":"Data","input":"&vartheta;","inputUtf16":[38,118,97,114,116,104,101,116,97,59],"output":[{"Character":{"data":"œë"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4046() {
    tokenize(
        r##"{"description":"Bad named entity: vartriangleleft without a semi-colon","initialState":"Data","input":"&vartriangleleft","inputUtf16":[38,118,97,114,116,114,105,97,110,103,108,101,108,101,102,116],"output":[{"Character":{"data":"&vartriangleleft"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4047() {
    tokenize(
        r##"{"description":"Named entity: vartriangleleft; with a semi-colon","initialState":"Data","input":"&vartriangleleft;","inputUtf16":[38,118,97,114,116,114,105,97,110,103,108,101,108,101,102,116,59],"output":[{"Character":{"data":"‚ä≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4048() {
    tokenize(
        r##"{"description":"Bad named entity: vartriangleright without a semi-colon","initialState":"Data","input":"&vartriangleright","inputUtf16":[38,118,97,114,116,114,105,97,110,103,108,101,114,105,103,104,116],"output":[{"Character":{"data":"&vartriangleright"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4049() {
    tokenize(
        r##"{"description":"Named entity: vartriangleright; with a semi-colon","initialState":"Data","input":"&vartriangleright;","inputUtf16":[38,118,97,114,116,114,105,97,110,103,108,101,114,105,103,104,116,59],"output":[{"Character":{"data":"‚ä≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4050() {
    tokenize(
        r##"{"description":"Bad named entity: vcy without a semi-colon","initialState":"Data","input":"&vcy","inputUtf16":[38,118,99,121],"output":[{"Character":{"data":"&vcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4051() {
    tokenize(
        r##"{"description":"Named entity: vcy; with a semi-colon","initialState":"Data","input":"&vcy;","inputUtf16":[38,118,99,121,59],"output":[{"Character":{"data":"–≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4052() {
    tokenize(
        r##"{"description":"Bad named entity: vdash without a semi-colon","initialState":"Data","input":"&vdash","inputUtf16":[38,118,100,97,115,104],"output":[{"Character":{"data":"&vdash"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4053() {
    tokenize(
        r##"{"description":"Named entity: vdash; with a semi-colon","initialState":"Data","input":"&vdash;","inputUtf16":[38,118,100,97,115,104,59],"output":[{"Character":{"data":"‚ä¢"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4054() {
    tokenize(
        r##"{"description":"Bad named entity: vee without a semi-colon","initialState":"Data","input":"&vee","inputUtf16":[38,118,101,101],"output":[{"Character":{"data":"&vee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4055() {
    tokenize(
        r##"{"description":"Named entity: vee; with a semi-colon","initialState":"Data","input":"&vee;","inputUtf16":[38,118,101,101,59],"output":[{"Character":{"data":"‚à®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4056() {
    tokenize(
        r##"{"description":"Bad named entity: veebar without a semi-colon","initialState":"Data","input":"&veebar","inputUtf16":[38,118,101,101,98,97,114],"output":[{"Character":{"data":"&veebar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4057() {
    tokenize(
        r##"{"description":"Named entity: veebar; with a semi-colon","initialState":"Data","input":"&veebar;","inputUtf16":[38,118,101,101,98,97,114,59],"output":[{"Character":{"data":"‚äª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4058() {
    tokenize(
        r##"{"description":"Bad named entity: veeeq without a semi-colon","initialState":"Data","input":"&veeeq","inputUtf16":[38,118,101,101,101,113],"output":[{"Character":{"data":"&veeeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4059() {
    tokenize(
        r##"{"description":"Named entity: veeeq; with a semi-colon","initialState":"Data","input":"&veeeq;","inputUtf16":[38,118,101,101,101,113,59],"output":[{"Character":{"data":"‚âö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4060() {
    tokenize(
        r##"{"description":"Bad named entity: vellip without a semi-colon","initialState":"Data","input":"&vellip","inputUtf16":[38,118,101,108,108,105,112],"output":[{"Character":{"data":"&vellip"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4061() {
    tokenize(
        r##"{"description":"Named entity: vellip; with a semi-colon","initialState":"Data","input":"&vellip;","inputUtf16":[38,118,101,108,108,105,112,59],"output":[{"Character":{"data":"‚ãÆ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4062() {
    tokenize(
        r##"{"description":"Bad named entity: verbar without a semi-colon","initialState":"Data","input":"&verbar","inputUtf16":[38,118,101,114,98,97,114],"output":[{"Character":{"data":"&verbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4063() {
    tokenize(
        r##"{"description":"Named entity: verbar; with a semi-colon","initialState":"Data","input":"&verbar;","inputUtf16":[38,118,101,114,98,97,114,59],"output":[{"Character":{"data":"|"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4064() {
    tokenize(
        r##"{"description":"Bad named entity: vert without a semi-colon","initialState":"Data","input":"&vert","inputUtf16":[38,118,101,114,116],"output":[{"Character":{"data":"&vert"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4065() {
    tokenize(
        r##"{"description":"Named entity: vert; with a semi-colon","initialState":"Data","input":"&vert;","inputUtf16":[38,118,101,114,116,59],"output":[{"Character":{"data":"|"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4066() {
    tokenize(
        r##"{"description":"Bad named entity: vfr without a semi-colon","initialState":"Data","input":"&vfr","inputUtf16":[38,118,102,114],"output":[{"Character":{"data":"&vfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4067() {
    tokenize(
        r##"{"description":"Named entity: vfr; with a semi-colon","initialState":"Data","input":"&vfr;","inputUtf16":[38,118,102,114,59],"output":[{"Character":{"data":"ùî≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4068() {
    tokenize(
        r##"{"description":"Bad named entity: vltri without a semi-colon","initialState":"Data","input":"&vltri","inputUtf16":[38,118,108,116,114,105],"output":[{"Character":{"data":"&vltri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4069() {
    tokenize(
        r##"{"description":"Named entity: vltri; with a semi-colon","initialState":"Data","input":"&vltri;","inputUtf16":[38,118,108,116,114,105,59],"output":[{"Character":{"data":"‚ä≤"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4070() {
    tokenize(
        r##"{"description":"Bad named entity: vnsub without a semi-colon","initialState":"Data","input":"&vnsub","inputUtf16":[38,118,110,115,117,98],"output":[{"Character":{"data":"&vnsub"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4071() {
    tokenize(
        r##"{"description":"Named entity: vnsub; with a semi-colon","initialState":"Data","input":"&vnsub;","inputUtf16":[38,118,110,115,117,98,59],"output":[{"Character":{"data":"‚äÇ‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4072() {
    tokenize(
        r##"{"description":"Bad named entity: vnsup without a semi-colon","initialState":"Data","input":"&vnsup","inputUtf16":[38,118,110,115,117,112],"output":[{"Character":{"data":"&vnsup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4073() {
    tokenize(
        r##"{"description":"Named entity: vnsup; with a semi-colon","initialState":"Data","input":"&vnsup;","inputUtf16":[38,118,110,115,117,112,59],"output":[{"Character":{"data":"‚äÉ‚Éí"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4074() {
    tokenize(
        r##"{"description":"Bad named entity: vopf without a semi-colon","initialState":"Data","input":"&vopf","inputUtf16":[38,118,111,112,102],"output":[{"Character":{"data":"&vopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4075() {
    tokenize(
        r##"{"description":"Named entity: vopf; with a semi-colon","initialState":"Data","input":"&vopf;","inputUtf16":[38,118,111,112,102,59],"output":[{"Character":{"data":"ùïß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4076() {
    tokenize(
        r##"{"description":"Bad named entity: vprop without a semi-colon","initialState":"Data","input":"&vprop","inputUtf16":[38,118,112,114,111,112],"output":[{"Character":{"data":"&vprop"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4077() {
    tokenize(
        r##"{"description":"Named entity: vprop; with a semi-colon","initialState":"Data","input":"&vprop;","inputUtf16":[38,118,112,114,111,112,59],"output":[{"Character":{"data":"‚àù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4078() {
    tokenize(
        r##"{"description":"Bad named entity: vrtri without a semi-colon","initialState":"Data","input":"&vrtri","inputUtf16":[38,118,114,116,114,105],"output":[{"Character":{"data":"&vrtri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4079() {
    tokenize(
        r##"{"description":"Named entity: vrtri; with a semi-colon","initialState":"Data","input":"&vrtri;","inputUtf16":[38,118,114,116,114,105,59],"output":[{"Character":{"data":"‚ä≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4080() {
    tokenize(
        r##"{"description":"Bad named entity: vscr without a semi-colon","initialState":"Data","input":"&vscr","inputUtf16":[38,118,115,99,114],"output":[{"Character":{"data":"&vscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4081() {
    tokenize(
        r##"{"description":"Named entity: vscr; with a semi-colon","initialState":"Data","input":"&vscr;","inputUtf16":[38,118,115,99,114,59],"output":[{"Character":{"data":"ùìã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4082() {
    tokenize(
        r##"{"description":"Bad named entity: vsubnE without a semi-colon","initialState":"Data","input":"&vsubnE","inputUtf16":[38,118,115,117,98,110,69],"output":[{"Character":{"data":"&vsubnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4083() {
    tokenize(
        r##"{"description":"Named entity: vsubnE; with a semi-colon","initialState":"Data","input":"&vsubnE;","inputUtf16":[38,118,115,117,98,110,69,59],"output":[{"Character":{"data":"‚´ãÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4084() {
    tokenize(
        r##"{"description":"Bad named entity: vsubne without a semi-colon","initialState":"Data","input":"&vsubne","inputUtf16":[38,118,115,117,98,110,101],"output":[{"Character":{"data":"&vsubne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4085() {
    tokenize(
        r##"{"description":"Named entity: vsubne; with a semi-colon","initialState":"Data","input":"&vsubne;","inputUtf16":[38,118,115,117,98,110,101,59],"output":[{"Character":{"data":"‚ääÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4086() {
    tokenize(
        r##"{"description":"Bad named entity: vsupnE without a semi-colon","initialState":"Data","input":"&vsupnE","inputUtf16":[38,118,115,117,112,110,69],"output":[{"Character":{"data":"&vsupnE"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4087() {
    tokenize(
        r##"{"description":"Named entity: vsupnE; with a semi-colon","initialState":"Data","input":"&vsupnE;","inputUtf16":[38,118,115,117,112,110,69,59],"output":[{"Character":{"data":"‚´åÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4088() {
    tokenize(
        r##"{"description":"Bad named entity: vsupne without a semi-colon","initialState":"Data","input":"&vsupne","inputUtf16":[38,118,115,117,112,110,101],"output":[{"Character":{"data":"&vsupne"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4089() {
    tokenize(
        r##"{"description":"Named entity: vsupne; with a semi-colon","initialState":"Data","input":"&vsupne;","inputUtf16":[38,118,115,117,112,110,101,59],"output":[{"Character":{"data":"‚äãÔ∏Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4090() {
    tokenize(
        r##"{"description":"Bad named entity: vzigzag without a semi-colon","initialState":"Data","input":"&vzigzag","inputUtf16":[38,118,122,105,103,122,97,103],"output":[{"Character":{"data":"&vzigzag"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4091() {
    tokenize(
        r##"{"description":"Named entity: vzigzag; with a semi-colon","initialState":"Data","input":"&vzigzag;","inputUtf16":[38,118,122,105,103,122,97,103,59],"output":[{"Character":{"data":"‚¶ö"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4092() {
    tokenize(
        r##"{"description":"Bad named entity: wcirc without a semi-colon","initialState":"Data","input":"&wcirc","inputUtf16":[38,119,99,105,114,99],"output":[{"Character":{"data":"&wcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4093() {
    tokenize(
        r##"{"description":"Named entity: wcirc; with a semi-colon","initialState":"Data","input":"&wcirc;","inputUtf16":[38,119,99,105,114,99,59],"output":[{"Character":{"data":"≈µ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4094() {
    tokenize(
        r##"{"description":"Bad named entity: wedbar without a semi-colon","initialState":"Data","input":"&wedbar","inputUtf16":[38,119,101,100,98,97,114],"output":[{"Character":{"data":"&wedbar"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4095() {
    tokenize(
        r##"{"description":"Named entity: wedbar; with a semi-colon","initialState":"Data","input":"&wedbar;","inputUtf16":[38,119,101,100,98,97,114,59],"output":[{"Character":{"data":"‚©ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4096() {
    tokenize(
        r##"{"description":"Bad named entity: wedge without a semi-colon","initialState":"Data","input":"&wedge","inputUtf16":[38,119,101,100,103,101],"output":[{"Character":{"data":"&wedge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4097() {
    tokenize(
        r##"{"description":"Named entity: wedge; with a semi-colon","initialState":"Data","input":"&wedge;","inputUtf16":[38,119,101,100,103,101,59],"output":[{"Character":{"data":"‚àß"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4098() {
    tokenize(
        r##"{"description":"Bad named entity: wedgeq without a semi-colon","initialState":"Data","input":"&wedgeq","inputUtf16":[38,119,101,100,103,101,113],"output":[{"Character":{"data":"&wedgeq"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4099() {
    tokenize(
        r##"{"description":"Named entity: wedgeq; with a semi-colon","initialState":"Data","input":"&wedgeq;","inputUtf16":[38,119,101,100,103,101,113,59],"output":[{"Character":{"data":"‚âô"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4100() {
    tokenize(
        r##"{"description":"Bad named entity: weierp without a semi-colon","initialState":"Data","input":"&weierp","inputUtf16":[38,119,101,105,101,114,112],"output":[{"Character":{"data":"&weierp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4101() {
    tokenize(
        r##"{"description":"Named entity: weierp; with a semi-colon","initialState":"Data","input":"&weierp;","inputUtf16":[38,119,101,105,101,114,112,59],"output":[{"Character":{"data":"‚Ñò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4102() {
    tokenize(
        r##"{"description":"Bad named entity: wfr without a semi-colon","initialState":"Data","input":"&wfr","inputUtf16":[38,119,102,114],"output":[{"Character":{"data":"&wfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4103() {
    tokenize(
        r##"{"description":"Named entity: wfr; with a semi-colon","initialState":"Data","input":"&wfr;","inputUtf16":[38,119,102,114,59],"output":[{"Character":{"data":"ùî¥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4104() {
    tokenize(
        r##"{"description":"Bad named entity: wopf without a semi-colon","initialState":"Data","input":"&wopf","inputUtf16":[38,119,111,112,102],"output":[{"Character":{"data":"&wopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4105() {
    tokenize(
        r##"{"description":"Named entity: wopf; with a semi-colon","initialState":"Data","input":"&wopf;","inputUtf16":[38,119,111,112,102,59],"output":[{"Character":{"data":"ùï®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4106() {
    tokenize(
        r##"{"description":"Bad named entity: wp without a semi-colon","initialState":"Data","input":"&wp","inputUtf16":[38,119,112],"output":[{"Character":{"data":"&wp"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4107() {
    tokenize(
        r##"{"description":"Named entity: wp; with a semi-colon","initialState":"Data","input":"&wp;","inputUtf16":[38,119,112,59],"output":[{"Character":{"data":"‚Ñò"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4108() {
    tokenize(
        r##"{"description":"Bad named entity: wr without a semi-colon","initialState":"Data","input":"&wr","inputUtf16":[38,119,114],"output":[{"Character":{"data":"&wr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4109() {
    tokenize(
        r##"{"description":"Named entity: wr; with a semi-colon","initialState":"Data","input":"&wr;","inputUtf16":[38,119,114,59],"output":[{"Character":{"data":"‚âÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4110() {
    tokenize(
        r##"{"description":"Bad named entity: wreath without a semi-colon","initialState":"Data","input":"&wreath","inputUtf16":[38,119,114,101,97,116,104],"output":[{"Character":{"data":"&wreath"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4111() {
    tokenize(
        r##"{"description":"Named entity: wreath; with a semi-colon","initialState":"Data","input":"&wreath;","inputUtf16":[38,119,114,101,97,116,104,59],"output":[{"Character":{"data":"‚âÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4112() {
    tokenize(
        r##"{"description":"Bad named entity: wscr without a semi-colon","initialState":"Data","input":"&wscr","inputUtf16":[38,119,115,99,114],"output":[{"Character":{"data":"&wscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4113() {
    tokenize(
        r##"{"description":"Named entity: wscr; with a semi-colon","initialState":"Data","input":"&wscr;","inputUtf16":[38,119,115,99,114,59],"output":[{"Character":{"data":"ùìå"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4114() {
    tokenize(
        r##"{"description":"Bad named entity: xcap without a semi-colon","initialState":"Data","input":"&xcap","inputUtf16":[38,120,99,97,112],"output":[{"Character":{"data":"&xcap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4115() {
    tokenize(
        r##"{"description":"Named entity: xcap; with a semi-colon","initialState":"Data","input":"&xcap;","inputUtf16":[38,120,99,97,112,59],"output":[{"Character":{"data":"‚ãÇ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4116() {
    tokenize(
        r##"{"description":"Bad named entity: xcirc without a semi-colon","initialState":"Data","input":"&xcirc","inputUtf16":[38,120,99,105,114,99],"output":[{"Character":{"data":"&xcirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4117() {
    tokenize(
        r##"{"description":"Named entity: xcirc; with a semi-colon","initialState":"Data","input":"&xcirc;","inputUtf16":[38,120,99,105,114,99,59],"output":[{"Character":{"data":"‚óØ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4118() {
    tokenize(
        r##"{"description":"Bad named entity: xcup without a semi-colon","initialState":"Data","input":"&xcup","inputUtf16":[38,120,99,117,112],"output":[{"Character":{"data":"&xcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4119() {
    tokenize(
        r##"{"description":"Named entity: xcup; with a semi-colon","initialState":"Data","input":"&xcup;","inputUtf16":[38,120,99,117,112,59],"output":[{"Character":{"data":"‚ãÉ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4120() {
    tokenize(
        r##"{"description":"Bad named entity: xdtri without a semi-colon","initialState":"Data","input":"&xdtri","inputUtf16":[38,120,100,116,114,105],"output":[{"Character":{"data":"&xdtri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4121() {
    tokenize(
        r##"{"description":"Named entity: xdtri; with a semi-colon","initialState":"Data","input":"&xdtri;","inputUtf16":[38,120,100,116,114,105,59],"output":[{"Character":{"data":"‚ñΩ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4122() {
    tokenize(
        r##"{"description":"Bad named entity: xfr without a semi-colon","initialState":"Data","input":"&xfr","inputUtf16":[38,120,102,114],"output":[{"Character":{"data":"&xfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4123() {
    tokenize(
        r##"{"description":"Named entity: xfr; with a semi-colon","initialState":"Data","input":"&xfr;","inputUtf16":[38,120,102,114,59],"output":[{"Character":{"data":"ùîµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4124() {
    tokenize(
        r##"{"description":"Bad named entity: xhArr without a semi-colon","initialState":"Data","input":"&xhArr","inputUtf16":[38,120,104,65,114,114],"output":[{"Character":{"data":"&xhArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4125() {
    tokenize(
        r##"{"description":"Named entity: xhArr; with a semi-colon","initialState":"Data","input":"&xhArr;","inputUtf16":[38,120,104,65,114,114,59],"output":[{"Character":{"data":"‚ü∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4126() {
    tokenize(
        r##"{"description":"Bad named entity: xharr without a semi-colon","initialState":"Data","input":"&xharr","inputUtf16":[38,120,104,97,114,114],"output":[{"Character":{"data":"&xharr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4127() {
    tokenize(
        r##"{"description":"Named entity: xharr; with a semi-colon","initialState":"Data","input":"&xharr;","inputUtf16":[38,120,104,97,114,114,59],"output":[{"Character":{"data":"‚ü∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4128() {
    tokenize(
        r##"{"description":"Bad named entity: xi without a semi-colon","initialState":"Data","input":"&xi","inputUtf16":[38,120,105],"output":[{"Character":{"data":"&xi"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4129() {
    tokenize(
        r##"{"description":"Named entity: xi; with a semi-colon","initialState":"Data","input":"&xi;","inputUtf16":[38,120,105,59],"output":[{"Character":{"data":"Œæ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4130() {
    tokenize(
        r##"{"description":"Bad named entity: xlArr without a semi-colon","initialState":"Data","input":"&xlArr","inputUtf16":[38,120,108,65,114,114],"output":[{"Character":{"data":"&xlArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4131() {
    tokenize(
        r##"{"description":"Named entity: xlArr; with a semi-colon","initialState":"Data","input":"&xlArr;","inputUtf16":[38,120,108,65,114,114,59],"output":[{"Character":{"data":"‚ü∏"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4132() {
    tokenize(
        r##"{"description":"Bad named entity: xlarr without a semi-colon","initialState":"Data","input":"&xlarr","inputUtf16":[38,120,108,97,114,114],"output":[{"Character":{"data":"&xlarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4133() {
    tokenize(
        r##"{"description":"Named entity: xlarr; with a semi-colon","initialState":"Data","input":"&xlarr;","inputUtf16":[38,120,108,97,114,114,59],"output":[{"Character":{"data":"‚üµ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4134() {
    tokenize(
        r##"{"description":"Bad named entity: xmap without a semi-colon","initialState":"Data","input":"&xmap","inputUtf16":[38,120,109,97,112],"output":[{"Character":{"data":"&xmap"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4135() {
    tokenize(
        r##"{"description":"Named entity: xmap; with a semi-colon","initialState":"Data","input":"&xmap;","inputUtf16":[38,120,109,97,112,59],"output":[{"Character":{"data":"‚üº"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4136() {
    tokenize(
        r##"{"description":"Bad named entity: xnis without a semi-colon","initialState":"Data","input":"&xnis","inputUtf16":[38,120,110,105,115],"output":[{"Character":{"data":"&xnis"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4137() {
    tokenize(
        r##"{"description":"Named entity: xnis; with a semi-colon","initialState":"Data","input":"&xnis;","inputUtf16":[38,120,110,105,115,59],"output":[{"Character":{"data":"‚ãª"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4138() {
    tokenize(
        r##"{"description":"Bad named entity: xodot without a semi-colon","initialState":"Data","input":"&xodot","inputUtf16":[38,120,111,100,111,116],"output":[{"Character":{"data":"&xodot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4139() {
    tokenize(
        r##"{"description":"Named entity: xodot; with a semi-colon","initialState":"Data","input":"&xodot;","inputUtf16":[38,120,111,100,111,116,59],"output":[{"Character":{"data":"‚®Ä"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4140() {
    tokenize(
        r##"{"description":"Bad named entity: xopf without a semi-colon","initialState":"Data","input":"&xopf","inputUtf16":[38,120,111,112,102],"output":[{"Character":{"data":"&xopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4141() {
    tokenize(
        r##"{"description":"Named entity: xopf; with a semi-colon","initialState":"Data","input":"&xopf;","inputUtf16":[38,120,111,112,102,59],"output":[{"Character":{"data":"ùï©"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4142() {
    tokenize(
        r##"{"description":"Bad named entity: xoplus without a semi-colon","initialState":"Data","input":"&xoplus","inputUtf16":[38,120,111,112,108,117,115],"output":[{"Character":{"data":"&xoplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4143() {
    tokenize(
        r##"{"description":"Named entity: xoplus; with a semi-colon","initialState":"Data","input":"&xoplus;","inputUtf16":[38,120,111,112,108,117,115,59],"output":[{"Character":{"data":"‚®Å"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4144() {
    tokenize(
        r##"{"description":"Bad named entity: xotime without a semi-colon","initialState":"Data","input":"&xotime","inputUtf16":[38,120,111,116,105,109,101],"output":[{"Character":{"data":"&xotime"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4145() {
    tokenize(
        r##"{"description":"Named entity: xotime; with a semi-colon","initialState":"Data","input":"&xotime;","inputUtf16":[38,120,111,116,105,109,101,59],"output":[{"Character":{"data":"‚®Ç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4146() {
    tokenize(
        r##"{"description":"Bad named entity: xrArr without a semi-colon","initialState":"Data","input":"&xrArr","inputUtf16":[38,120,114,65,114,114],"output":[{"Character":{"data":"&xrArr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4147() {
    tokenize(
        r##"{"description":"Named entity: xrArr; with a semi-colon","initialState":"Data","input":"&xrArr;","inputUtf16":[38,120,114,65,114,114,59],"output":[{"Character":{"data":"‚üπ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4148() {
    tokenize(
        r##"{"description":"Bad named entity: xrarr without a semi-colon","initialState":"Data","input":"&xrarr","inputUtf16":[38,120,114,97,114,114],"output":[{"Character":{"data":"&xrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4149() {
    tokenize(
        r##"{"description":"Named entity: xrarr; with a semi-colon","initialState":"Data","input":"&xrarr;","inputUtf16":[38,120,114,97,114,114,59],"output":[{"Character":{"data":"‚ü∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4150() {
    tokenize(
        r##"{"description":"Bad named entity: xscr without a semi-colon","initialState":"Data","input":"&xscr","inputUtf16":[38,120,115,99,114],"output":[{"Character":{"data":"&xscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4151() {
    tokenize(
        r##"{"description":"Named entity: xscr; with a semi-colon","initialState":"Data","input":"&xscr;","inputUtf16":[38,120,115,99,114,59],"output":[{"Character":{"data":"ùìç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4152() {
    tokenize(
        r##"{"description":"Bad named entity: xsqcup without a semi-colon","initialState":"Data","input":"&xsqcup","inputUtf16":[38,120,115,113,99,117,112],"output":[{"Character":{"data":"&xsqcup"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4153() {
    tokenize(
        r##"{"description":"Named entity: xsqcup; with a semi-colon","initialState":"Data","input":"&xsqcup;","inputUtf16":[38,120,115,113,99,117,112,59],"output":[{"Character":{"data":"‚®Ü"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4154() {
    tokenize(
        r##"{"description":"Bad named entity: xuplus without a semi-colon","initialState":"Data","input":"&xuplus","inputUtf16":[38,120,117,112,108,117,115],"output":[{"Character":{"data":"&xuplus"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4155() {
    tokenize(
        r##"{"description":"Named entity: xuplus; with a semi-colon","initialState":"Data","input":"&xuplus;","inputUtf16":[38,120,117,112,108,117,115,59],"output":[{"Character":{"data":"‚®Ñ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4156() {
    tokenize(
        r##"{"description":"Bad named entity: xutri without a semi-colon","initialState":"Data","input":"&xutri","inputUtf16":[38,120,117,116,114,105],"output":[{"Character":{"data":"&xutri"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4157() {
    tokenize(
        r##"{"description":"Named entity: xutri; with a semi-colon","initialState":"Data","input":"&xutri;","inputUtf16":[38,120,117,116,114,105,59],"output":[{"Character":{"data":"‚ñ≥"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4158() {
    tokenize(
        r##"{"description":"Bad named entity: xvee without a semi-colon","initialState":"Data","input":"&xvee","inputUtf16":[38,120,118,101,101],"output":[{"Character":{"data":"&xvee"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4159() {
    tokenize(
        r##"{"description":"Named entity: xvee; with a semi-colon","initialState":"Data","input":"&xvee;","inputUtf16":[38,120,118,101,101,59],"output":[{"Character":{"data":"‚ãÅ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4160() {
    tokenize(
        r##"{"description":"Bad named entity: xwedge without a semi-colon","initialState":"Data","input":"&xwedge","inputUtf16":[38,120,119,101,100,103,101],"output":[{"Character":{"data":"&xwedge"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4161() {
    tokenize(
        r##"{"description":"Named entity: xwedge; with a semi-colon","initialState":"Data","input":"&xwedge;","inputUtf16":[38,120,119,101,100,103,101,59],"output":[{"Character":{"data":"‚ãÄ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4162() {
    tokenize(
        r##"{"description":"Named entity: yacute without a semi-colon","initialState":"Data","input":"&yacute","inputUtf16":[38,121,97,99,117,116,101],"output":[{"Character":{"data":"√Ω"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":8}}]}"##,
    );
}

#[test]
fn test_4163() {
    tokenize(
        r##"{"description":"Named entity: yacute; with a semi-colon","initialState":"Data","input":"&yacute;","inputUtf16":[38,121,97,99,117,116,101,59],"output":[{"Character":{"data":"√Ω"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4164() {
    tokenize(
        r##"{"description":"Bad named entity: yacy without a semi-colon","initialState":"Data","input":"&yacy","inputUtf16":[38,121,97,99,121],"output":[{"Character":{"data":"&yacy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4165() {
    tokenize(
        r##"{"description":"Named entity: yacy; with a semi-colon","initialState":"Data","input":"&yacy;","inputUtf16":[38,121,97,99,121,59],"output":[{"Character":{"data":"—è"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4166() {
    tokenize(
        r##"{"description":"Bad named entity: ycirc without a semi-colon","initialState":"Data","input":"&ycirc","inputUtf16":[38,121,99,105,114,99],"output":[{"Character":{"data":"&ycirc"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4167() {
    tokenize(
        r##"{"description":"Named entity: ycirc; with a semi-colon","initialState":"Data","input":"&ycirc;","inputUtf16":[38,121,99,105,114,99,59],"output":[{"Character":{"data":"≈∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4168() {
    tokenize(
        r##"{"description":"Bad named entity: ycy without a semi-colon","initialState":"Data","input":"&ycy","inputUtf16":[38,121,99,121],"output":[{"Character":{"data":"&ycy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4169() {
    tokenize(
        r##"{"description":"Named entity: ycy; with a semi-colon","initialState":"Data","input":"&ycy;","inputUtf16":[38,121,99,121,59],"output":[{"Character":{"data":"—ã"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4170() {
    tokenize(
        r##"{"description":"Named entity: yen without a semi-colon","initialState":"Data","input":"&yen","inputUtf16":[38,121,101,110],"output":[{"Character":{"data":"¬•"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":5}}]}"##,
    );
}

#[test]
fn test_4171() {
    tokenize(
        r##"{"description":"Named entity: yen; with a semi-colon","initialState":"Data","input":"&yen;","inputUtf16":[38,121,101,110,59],"output":[{"Character":{"data":"¬•"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4172() {
    tokenize(
        r##"{"description":"Bad named entity: yfr without a semi-colon","initialState":"Data","input":"&yfr","inputUtf16":[38,121,102,114],"output":[{"Character":{"data":"&yfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4173() {
    tokenize(
        r##"{"description":"Named entity: yfr; with a semi-colon","initialState":"Data","input":"&yfr;","inputUtf16":[38,121,102,114,59],"output":[{"Character":{"data":"ùî∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4174() {
    tokenize(
        r##"{"description":"Bad named entity: yicy without a semi-colon","initialState":"Data","input":"&yicy","inputUtf16":[38,121,105,99,121],"output":[{"Character":{"data":"&yicy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4175() {
    tokenize(
        r##"{"description":"Named entity: yicy; with a semi-colon","initialState":"Data","input":"&yicy;","inputUtf16":[38,121,105,99,121,59],"output":[{"Character":{"data":"—ó"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4176() {
    tokenize(
        r##"{"description":"Bad named entity: yopf without a semi-colon","initialState":"Data","input":"&yopf","inputUtf16":[38,121,111,112,102],"output":[{"Character":{"data":"&yopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4177() {
    tokenize(
        r##"{"description":"Named entity: yopf; with a semi-colon","initialState":"Data","input":"&yopf;","inputUtf16":[38,121,111,112,102,59],"output":[{"Character":{"data":"ùï™"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4178() {
    tokenize(
        r##"{"description":"Bad named entity: yscr without a semi-colon","initialState":"Data","input":"&yscr","inputUtf16":[38,121,115,99,114],"output":[{"Character":{"data":"&yscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4179() {
    tokenize(
        r##"{"description":"Named entity: yscr; with a semi-colon","initialState":"Data","input":"&yscr;","inputUtf16":[38,121,115,99,114,59],"output":[{"Character":{"data":"ùìé"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4180() {
    tokenize(
        r##"{"description":"Bad named entity: yucy without a semi-colon","initialState":"Data","input":"&yucy","inputUtf16":[38,121,117,99,121],"output":[{"Character":{"data":"&yucy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4181() {
    tokenize(
        r##"{"description":"Named entity: yucy; with a semi-colon","initialState":"Data","input":"&yucy;","inputUtf16":[38,121,117,99,121,59],"output":[{"Character":{"data":"—é"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4182() {
    tokenize(
        r##"{"description":"Named entity: yuml without a semi-colon","initialState":"Data","input":"&yuml","inputUtf16":[38,121,117,109,108],"output":[{"Character":{"data":"√ø"}}],"errors":[{"code":"MissingSemicolonAfterCharacterReference","location":{"line":1,"column":6}}]}"##,
    );
}

#[test]
fn test_4183() {
    tokenize(
        r##"{"description":"Named entity: yuml; with a semi-colon","initialState":"Data","input":"&yuml;","inputUtf16":[38,121,117,109,108,59],"output":[{"Character":{"data":"√ø"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4184() {
    tokenize(
        r##"{"description":"Bad named entity: zacute without a semi-colon","initialState":"Data","input":"&zacute","inputUtf16":[38,122,97,99,117,116,101],"output":[{"Character":{"data":"&zacute"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4185() {
    tokenize(
        r##"{"description":"Named entity: zacute; with a semi-colon","initialState":"Data","input":"&zacute;","inputUtf16":[38,122,97,99,117,116,101,59],"output":[{"Character":{"data":"≈∫"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4186() {
    tokenize(
        r##"{"description":"Bad named entity: zcaron without a semi-colon","initialState":"Data","input":"&zcaron","inputUtf16":[38,122,99,97,114,111,110],"output":[{"Character":{"data":"&zcaron"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4187() {
    tokenize(
        r##"{"description":"Named entity: zcaron; with a semi-colon","initialState":"Data","input":"&zcaron;","inputUtf16":[38,122,99,97,114,111,110,59],"output":[{"Character":{"data":"≈æ"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4188() {
    tokenize(
        r##"{"description":"Bad named entity: zcy without a semi-colon","initialState":"Data","input":"&zcy","inputUtf16":[38,122,99,121],"output":[{"Character":{"data":"&zcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4189() {
    tokenize(
        r##"{"description":"Named entity: zcy; with a semi-colon","initialState":"Data","input":"&zcy;","inputUtf16":[38,122,99,121,59],"output":[{"Character":{"data":"–∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4190() {
    tokenize(
        r##"{"description":"Bad named entity: zdot without a semi-colon","initialState":"Data","input":"&zdot","inputUtf16":[38,122,100,111,116],"output":[{"Character":{"data":"&zdot"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4191() {
    tokenize(
        r##"{"description":"Named entity: zdot; with a semi-colon","initialState":"Data","input":"&zdot;","inputUtf16":[38,122,100,111,116,59],"output":[{"Character":{"data":"≈º"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4192() {
    tokenize(
        r##"{"description":"Bad named entity: zeetrf without a semi-colon","initialState":"Data","input":"&zeetrf","inputUtf16":[38,122,101,101,116,114,102],"output":[{"Character":{"data":"&zeetrf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4193() {
    tokenize(
        r##"{"description":"Named entity: zeetrf; with a semi-colon","initialState":"Data","input":"&zeetrf;","inputUtf16":[38,122,101,101,116,114,102,59],"output":[{"Character":{"data":"‚Ñ®"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4194() {
    tokenize(
        r##"{"description":"Bad named entity: zeta without a semi-colon","initialState":"Data","input":"&zeta","inputUtf16":[38,122,101,116,97],"output":[{"Character":{"data":"&zeta"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4195() {
    tokenize(
        r##"{"description":"Named entity: zeta; with a semi-colon","initialState":"Data","input":"&zeta;","inputUtf16":[38,122,101,116,97,59],"output":[{"Character":{"data":"Œ∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4196() {
    tokenize(
        r##"{"description":"Bad named entity: zfr without a semi-colon","initialState":"Data","input":"&zfr","inputUtf16":[38,122,102,114],"output":[{"Character":{"data":"&zfr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4197() {
    tokenize(
        r##"{"description":"Named entity: zfr; with a semi-colon","initialState":"Data","input":"&zfr;","inputUtf16":[38,122,102,114,59],"output":[{"Character":{"data":"ùî∑"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4198() {
    tokenize(
        r##"{"description":"Bad named entity: zhcy without a semi-colon","initialState":"Data","input":"&zhcy","inputUtf16":[38,122,104,99,121],"output":[{"Character":{"data":"&zhcy"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4199() {
    tokenize(
        r##"{"description":"Named entity: zhcy; with a semi-colon","initialState":"Data","input":"&zhcy;","inputUtf16":[38,122,104,99,121,59],"output":[{"Character":{"data":"–∂"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4200() {
    tokenize(
        r##"{"description":"Bad named entity: zigrarr without a semi-colon","initialState":"Data","input":"&zigrarr","inputUtf16":[38,122,105,103,114,97,114,114],"output":[{"Character":{"data":"&zigrarr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4201() {
    tokenize(
        r##"{"description":"Named entity: zigrarr; with a semi-colon","initialState":"Data","input":"&zigrarr;","inputUtf16":[38,122,105,103,114,97,114,114,59],"output":[{"Character":{"data":"‚áù"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4202() {
    tokenize(
        r##"{"description":"Bad named entity: zopf without a semi-colon","initialState":"Data","input":"&zopf","inputUtf16":[38,122,111,112,102],"output":[{"Character":{"data":"&zopf"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4203() {
    tokenize(
        r##"{"description":"Named entity: zopf; with a semi-colon","initialState":"Data","input":"&zopf;","inputUtf16":[38,122,111,112,102,59],"output":[{"Character":{"data":"ùï´"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4204() {
    tokenize(
        r##"{"description":"Bad named entity: zscr without a semi-colon","initialState":"Data","input":"&zscr","inputUtf16":[38,122,115,99,114],"output":[{"Character":{"data":"&zscr"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4205() {
    tokenize(
        r##"{"description":"Named entity: zscr; with a semi-colon","initialState":"Data","input":"&zscr;","inputUtf16":[38,122,115,99,114,59],"output":[{"Character":{"data":"ùìè"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4206() {
    tokenize(
        r##"{"description":"Bad named entity: zwj without a semi-colon","initialState":"Data","input":"&zwj","inputUtf16":[38,122,119,106],"output":[{"Character":{"data":"&zwj"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4207() {
    tokenize(
        r##"{"description":"Named entity: zwj; with a semi-colon","initialState":"Data","input":"&zwj;","inputUtf16":[38,122,119,106,59],"output":[{"Character":{"data":"‚Äç"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4208() {
    tokenize(
        r##"{"description":"Bad named entity: zwnj without a semi-colon","initialState":"Data","input":"&zwnj","inputUtf16":[38,122,119,110,106],"output":[{"Character":{"data":"&zwnj"}}],"errors":[]}"##,
    );
}

#[test]
fn test_4209() {
    tokenize(
        r##"{"description":"Named entity: zwnj; with a semi-colon","initialState":"Data","input":"&zwnj;","inputUtf16":[38,122,119,110,106,59],"output":[{"Character":{"data":"‚Äå"}}],"errors":[]}"##,
    );
}
//</coverage:exclude>
